; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\programovani\WoW Editor\Test\src\bzlib2\compress.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG81845 DB	'      %d in block, %d after MTF & 1-2 coding, %d+2 syms '
	DB	'in use', 0aH, 00H
$SG81875 DB	'      initial group %d, [%d .. %d], has %d syms (%4.1f%%'
	DB	')', 0aH, 00H
	ORG $+1
$SG81929 DB	'      pass %d: size is %d, grp uses are ', 00H
	ORG $+3
$SG81933 DB	'%d ', 00H
$SG81934 DB	0aH, 00H
	ORG $+2
$SG81989 DB	'      bytes: mapping %d, ', 00H
	ORG $+2
$SG81997 DB	'selectors %d, ', 00H
	ORG $+1
$SG82012 DB	'code lengths %d, ', 00H
	ORG $+2
$SG82030 DB	'codes %d', 0aH, 00H
	ORG $+2
$SG82039 DB	'    block %d: crc = 0x%08x, combined CRC = 0x%08x, size '
	DB	'= %d', 0aH, 00H
	ORG $+2
$SG82047 DB	'    final combined CRC = 0x%08x', 0aH, '   ', 00H
_DATA	ENDS
PUBLIC	_BZ2_bsInitWrite
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_s$ = 8							; size = 4
_BZ2_bsInitWrite PROC
; File c:\programovani\wow editor\test\src\bzlib2\compress.c
; Line 38
	push	ebp
	mov	ebp, esp
; Line 39
	mov	eax, DWORD PTR _s$[ebp]
	xor	ecx, ecx
	mov	DWORD PTR [eax+604], ecx
; Line 40
	mov	DWORD PTR [eax+600], ecx
; Line 41
	pop	ebp
	ret	0
_BZ2_bsInitWrite ENDP
; Function compile flags: /Ogtp
_bsFinishWrite PROC
; _s$ = eax
; Line 48
	cmp	DWORD PTR [eax+604], 0
	jle	SHORT $LN1@bsFinishWr
	push	ebx
	mov	ecx, -8					; fffffff8H
	push	edi
$LL2@bsFinishWr:
; Line 49
	mov	edi, DWORD PTR [eax+76]
	mov	bl, BYTE PTR [eax+603]
	mov	edx, DWORD PTR [eax+44]
	mov	BYTE PTR [edx+edi], bl
; Line 50
	inc	DWORD PTR [eax+76]
; Line 51
	shl	DWORD PTR [eax+600], 8
; Line 52
	add	DWORD PTR [eax+604], ecx
	cmp	DWORD PTR [eax+604], 0
	jg	SHORT $LL2@bsFinishWr
	pop	edi
	pop	ebx
$LN1@bsFinishWr:
; Line 54
	ret	0
_bsFinishWrite ENDP
; Function compile flags: /Ogtp
_n$ = 8						; size = 4
_bsW	PROC
; _s$ = eax
; _v$ = ecx
; Line 74
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
; Line 75
	mov	ecx, 8
	push	edi
	cmp	DWORD PTR [eax+604], ecx
	jl	SHORT $LN1@bsW
	push	ebx
	npad	11
$LL2@bsW:
	mov	edi, DWORD PTR [eax+76]
	mov	bl, BYTE PTR [eax+603]
	mov	edx, DWORD PTR [eax+44]
	mov	BYTE PTR [edx+edi], bl
	inc	DWORD PTR [eax+76]
	shl	DWORD PTR [eax+600], 8
	add	DWORD PTR [eax+604], -8			; fffffff8H
	cmp	DWORD PTR [eax+604], ecx
	jge	SHORT $LL2@bsW
	pop	ebx
$LN1@bsW:
; Line 76
	mov	edx, DWORD PTR [eax+604]
	mov	edi, DWORD PTR _n$[ebp]
	mov	ecx, 32					; 00000020H
	sub	ecx, edx
	sub	ecx, edi
	shl	esi, cl
	or	DWORD PTR [eax+600], esi
; Line 77
	add	edx, edi
	pop	edi
	mov	DWORD PTR [eax+604], edx
	pop	esi
; Line 78
	pop	ebp
	ret	0
_bsW	ENDP
; Function compile flags: /Ogtp
_bsPutUInt32 PROC
; _s$ = eax
; _u$ = ebx
; Line 85
	mov	ecx, ebx
	shr	ecx, 24					; 00000018H
	push	8
	call	_bsW
; Line 86
	mov	ecx, ebx
	shr	ecx, 16					; 00000010H
	and	ecx, 255				; 000000ffH
	push	8
	call	_bsW
; Line 87
	mov	ecx, ebx
	shr	ecx, 8
	and	ecx, 255				; 000000ffH
	push	8
	call	_bsW
; Line 88
	movzx	ecx, bl
	push	8
	call	_bsW
	add	esp, 16					; 00000010H
; Line 89
	ret	0
_bsPutUInt32 ENDP
; Function compile flags: /Ogtp
_bsPutUChar PROC
; _s$ = eax
; _c$ = ecx
; Line 96
	movzx	ecx, cl
	push	8
	call	_bsW
	pop	ecx
; Line 97
	ret	0
_bsPutUChar ENDP
; Function compile flags: /Ogtp
_makeMaps_e PROC
; _s$ = eax
; Line 110
	xor	ecx, ecx
	push	esi
	mov	DWORD PTR [eax+84], 0
	lea	esi, DWORD PTR [ecx+1]
	npad	3
$LL4@makeMaps_e:
; Line 111
	cmp	BYTE PTR [eax+ecx+88], 0
	je	SHORT $LN3@makeMaps_e
; Line 112
	mov	dl, BYTE PTR [eax+84]
	mov	BYTE PTR [ecx+eax+344], dl
; Line 113
	add	DWORD PTR [eax+84], esi
$LN3@makeMaps_e:
; Line 111
	cmp	BYTE PTR [eax+ecx+89], 0
	je	SHORT $LN10@makeMaps_e
; Line 112
	mov	dl, BYTE PTR [eax+84]
	mov	BYTE PTR [ecx+eax+345], dl
; Line 113
	add	DWORD PTR [eax+84], esi
$LN10@makeMaps_e:
; Line 111
	cmp	BYTE PTR [eax+ecx+90], 0
	je	SHORT $LN11@makeMaps_e
; Line 112
	mov	dl, BYTE PTR [eax+84]
	mov	BYTE PTR [ecx+eax+346], dl
; Line 113
	add	DWORD PTR [eax+84], esi
$LN11@makeMaps_e:
; Line 111
	cmp	BYTE PTR [eax+ecx+91], 0
	je	SHORT $LN12@makeMaps_e
; Line 112
	mov	dl, BYTE PTR [eax+84]
	mov	BYTE PTR [ecx+eax+347], dl
; Line 113
	add	DWORD PTR [eax+84], esi
$LN12@makeMaps_e:
; Line 110
	add	ecx, 4
	cmp	ecx, 256				; 00000100H
	jl	SHORT $LL4@makeMaps_e
	pop	esi
; Line 115
	ret	0
_makeMaps_e ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_block$ = -284						; size = 4
_EOB$ = -280						; size = 4
_ptr$ = -276						; size = 4
_i$ = -272						; size = 4
_mtfv$ = -268						; size = 4
_zPend$ = -264						; size = 4
_yy$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_generateMTFValues PROC
; _s$ = esi
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 284				; 0000011cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 150
	mov	eax, DWORD PTR [esi+32]
; Line 151
	mov	ecx, DWORD PTR [esi+36]
; Line 152
	mov	edx, DWORD PTR [esi+40]
	push	ebx
	mov	DWORD PTR _ptr$[ebp], eax
	push	edi
; Line 154
	mov	eax, esi
	mov	DWORD PTR _block$[ebp], ecx
	mov	DWORD PTR _mtfv$[ebp], edx
	call	_makeMaps_e
; Line 155
	mov	ebx, DWORD PTR [esi+84]
	inc	ebx
	mov	DWORD PTR _EOB$[ebp], ebx
; Line 157
	js	SHORT $LN26@generateMT
	lea	edi, DWORD PTR [esi+632]
	lea	ecx, DWORD PTR [ebx+1]
	xor	eax, eax
	rep stosd
$LN26@generateMT:
; Line 160
	xor	edx, edx
; Line 161
	xor	eax, eax
	xor	edi, edi
	mov	DWORD PTR _zPend$[ebp], edx
	cmp	DWORD PTR [esi+84], eax
	jle	SHORT $LN21@generateMT
	mov	ecx, DWORD PTR [esi+84]
$LL23@generateMT:
	mov	BYTE PTR _yy$[ebp+eax], al
	inc	eax
	cmp	eax, ecx
	jl	SHORT $LL23@generateMT
$LN21@generateMT:
; Line 163
	xor	ecx, ecx
	mov	DWORD PTR _i$[ebp], ecx
	cmp	DWORD PTR [esi+68], ecx
	jle	$LN36@generateMT
$LL41@generateMT:
; Line 166
	mov	eax, DWORD PTR _ptr$[ebp]
	mov	eax, DWORD PTR [eax+ecx*4]
	dec	eax
	jns	SHORT $LN17@generateMT
	add	eax, DWORD PTR [esi+68]
$LN17@generateMT:
; Line 167
	mov	ebx, DWORD PTR _block$[ebp]
	movzx	eax, BYTE PTR [eax+ebx]
	mov	bl, BYTE PTR [eax+esi+344]
; Line 170
	cmp	BYTE PTR _yy$[ebp], bl
	jne	SHORT $LN16@generateMT
; Line 171
	inc	edx
	mov	DWORD PTR _zPend$[ebp], edx
; Line 172
	jmp	$LN19@generateMT
$LN16@generateMT:
; Line 174
	test	edx, edx
	jle	SHORT $LN14@generateMT
; Line 175
	dec	edx
	npad	6
$LL13@generateMT:
; Line 178
	mov	eax, DWORD PTR _mtfv$[ebp]
	test	dl, 1
	je	SHORT $LN11@generateMT
	mov	ecx, 1
	mov	WORD PTR [eax+edi*2], cx
	inc	edi
; Line 179
	inc	DWORD PTR [esi+636]
; Line 180
	jmp	SHORT $LN10@generateMT
$LN11@generateMT:
; Line 181
	xor	ecx, ecx
	mov	WORD PTR [eax+edi*2], cx
	inc	edi
; Line 182
	inc	DWORD PTR [esi+632]
$LN10@generateMT:
; Line 184
	cmp	edx, 2
	jl	SHORT $LN35@generateMT
; Line 185
	lea	eax, DWORD PTR [edx-2]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _zPend$[ebp], eax
; Line 186
	mov	edx, eax
	jmp	SHORT $LL13@generateMT
$LN35@generateMT:
; Line 187
	mov	DWORD PTR _zPend$[ebp], 0
	mov	edx, DWORD PTR _zPend$[ebp]
$LN14@generateMT:
; Line 193
	mov	cl, BYTE PTR _yy$[ebp+1]
; Line 194
	mov	al, BYTE PTR _yy$[ebp]
	mov	BYTE PTR _yy$[ebp+1], al
; Line 195
	lea	eax, DWORD PTR _yy$[ebp+1]
; Line 197
	cmp	bl, cl
	je	SHORT $LN7@generateMT
	npad	3
$LL8@generateMT:
; Line 199
	inc	eax
; Line 200
	mov	dl, cl
; Line 201
	mov	cl, BYTE PTR [eax]
; Line 202
	mov	BYTE PTR [eax], dl
	cmp	bl, cl
	jne	SHORT $LL8@generateMT
; Line 197
	mov	edx, DWORD PTR _zPend$[ebp]
$LN7@generateMT:
; Line 206
	mov	ebx, DWORD PTR _mtfv$[ebp]
	mov	BYTE PTR _yy$[ebp], cl
	lea	ecx, DWORD PTR _yy$[ebp]
	sub	eax, ecx
	lea	ecx, DWORD PTR [eax+1]
	mov	WORD PTR [ebx+edi*2], cx
	mov	ecx, DWORD PTR _i$[ebp]
	inc	edi
	inc	DWORD PTR [esi+eax*4+636]
$LN19@generateMT:
; Line 163
	inc	ecx
	mov	DWORD PTR _i$[ebp], ecx
	cmp	ecx, DWORD PTR [esi+68]
	jl	$LL41@generateMT
; Line 212
	test	edx, edx
	jle	SHORT $LN43@generateMT
; Line 213
	mov	eax, 1
	sub	edx, eax
$LL5@generateMT:
; Line 216
	mov	ebx, DWORD PTR _mtfv$[ebp]
	test	dl, 1
	je	SHORT $LN3@generateMT
	mov	ecx, eax
	mov	WORD PTR [ebx+edi*2], cx
	add	edi, eax
; Line 217
	add	DWORD PTR [esi+636], eax
; Line 218
	jmp	SHORT $LN2@generateMT
$LN3@generateMT:
; Line 219
	xor	ecx, ecx
	mov	WORD PTR [ebx+edi*2], cx
	add	edi, eax
; Line 220
	add	DWORD PTR [esi+632], eax
$LN2@generateMT:
; Line 222
	cmp	edx, 2
	jl	SHORT $LN43@generateMT
; Line 223
	lea	eax, DWORD PTR [edx-2]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _zPend$[ebp], eax
; Line 224
	mov	edx, eax
	mov	eax, 1
	jmp	SHORT $LL5@generateMT
$LN43@generateMT:
	mov	ebx, DWORD PTR _EOB$[ebp]
$LN36@generateMT:
; Line 228
	mov	edx, DWORD PTR _mtfv$[ebp]
; Line 231
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	mov	WORD PTR [edx+edi*2], bx
	inc	DWORD PTR [esi+ebx*4+632]
	inc	edi
	mov	DWORD PTR [esi+628], edi
	pop	edi
	xor	ecx, ebp
	pop	ebx
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_generateMTFValues ENDP
_TEXT	ENDS
PUBLIC	__real@4059000000000000
PUBLIC	__$ArrayPad$
EXTRN	_BZ2_hbAssignCodes:PROC
EXTRN	_BZ2_hbMakeCodeLengths:PROC
EXTRN	_BZ2_bz__AssertH__fail:PROC
EXTRN	__imp__fprintf:PROC
EXTRN	__imp____iob_func:PROC
EXTRN	__fltused:DWORD
EXTRN	_memset:PROC
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
; Function compile flags: /Ogtp
CONST	ENDS
_TEXT	SEGMENT
_ll_i$81942 = -93					; size = 1
_nSelectors$ = -92					; size = 4
_aFreq$81864 = -92					; size = 4
_selCtr$ = -88						; size = 4
_alphaSize$ = -88					; size = 4
tv7344 = -84						; size = 4
tv3061 = -84						; size = 4
tv2830 = -84						; size = 4
tv675 = -84						; size = 4
_remF$81862 = -84					; size = 4
_t$ = -84						; size = 4
tv7614 = -80						; size = 4
tv7540 = -80						; size = 4
tv7508 = -80						; size = 4
tv3729 = -80						; size = 4
tv3401 = -80						; size = 4
_totc$ = -80						; size = 4
_tFreq$81863 = -80					; size = 4
tv7616 = -76						; size = 4
_nBytes$ = -76						; size = 4
_bc$ = -76						; size = 4
_nPart$81861 = -76					; size = 4
tv7699 = -72						; size = 4
tv4966 = -72						; size = 4
tv3566 = -72						; size = 4
tv2600 = -72						; size = 4
tv2495 = -72						; size = 4
_minLen$ = -72						; size = 4
_j$ = -72						; size = 4
_iter$ = -72						; size = 4
_nGroups$ = -68						; size = 4
tv7774 = -64						; size = 4
tv7709 = -64						; size = 4
_ge$ = -64						; size = 4
_gs$ = -60						; size = 4
tv7008 = -56						; size = 4
tv5075 = -56						; size = 4
_s_code_sel_selCtr$82023 = -56				; size = 4
_i$ = -56						; size = 4
_fave$ = -52						; size = 24
_inUse16$81964 = -28					; size = 16
_cost$ = -24						; size = 12
tv6998 = -12						; size = 4
tv6919 = -12						; size = 4
tv5062 = -12						; size = 4
_pos$81941 = -12					; size = 6
__$ArrayPad$ = -4					; size = 4
_sendMTFValues PROC
; _s$ = esi
; Line 240
	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 261
	cmp	DWORD PTR [esi+616], 3
	push	ebx
	mov	ebx, DWORD PTR [esi+40]
	push	edi
	jl	SHORT $LN147@sendMTFVal
; Line 264
	mov	eax, DWORD PTR [esi+84]
	mov	ecx, DWORD PTR [esi+628]
	mov	edx, DWORD PTR [esi+68]
	push	eax
	push	ecx
	push	edx
	push	OFFSET $SG81845
	call	DWORD PTR __imp____iob_func
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 20					; 00000014H
$LN147@sendMTFVal:
; Line 266
	mov	edi, DWORD PTR [esi+84]
	add	edi, 2
	lea	eax, DWORD PTR [esi+37668]
	mov	DWORD PTR _alphaSize$[ebp], edi
	mov	DWORD PTR tv6919[ebp], eax
	mov	DWORD PTR tv3566[ebp], 6
	npad	2
$LL247@sendMTFVal:
; Line 268
	test	edi, edi
	jle	SHORT $LN145@sendMTFVal
	mov	eax, DWORD PTR tv6919[ebp]
	push	edi
	push	15					; 0000000fH
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
$LN145@sendMTFVal:
; Line 267
	add	DWORD PTR tv6919[ebp], 258		; 00000102H
	dec	DWORD PTR tv3566[ebp]
	jne	SHORT $LL247@sendMTFVal
; Line 272
	cmp	DWORD PTR [esi+628], 0
	jg	SHORT $LN140@sendMTFVal
	push	3001					; 00000bb9H
	call	_BZ2_bz__AssertH__fail
	add	esp, 4
$LN140@sendMTFVal:
; Line 273
	mov	eax, DWORD PTR [esi+628]
	cmp	eax, 200				; 000000c8H
	jge	SHORT $LN139@sendMTFVal
	mov	ecx, 2
	jmp	SHORT $LN251@sendMTFVal
$LN139@sendMTFVal:
; Line 274
	cmp	eax, 600				; 00000258H
	jge	SHORT $LN137@sendMTFVal
	mov	ecx, 3
	jmp	SHORT $LN251@sendMTFVal
$LN137@sendMTFVal:
; Line 275
	cmp	eax, 1200				; 000004b0H
	jge	SHORT $LN135@sendMTFVal
	mov	ecx, 4
	jmp	SHORT $LN251@sendMTFVal
$LN135@sendMTFVal:
; Line 276
	xor	ecx, ecx
	cmp	eax, 2400				; 00000960H
	setge	cl
	add	ecx, 5
$LN251@sendMTFVal:
	mov	DWORD PTR _nGroups$[ebp], ecx
; Line 283
	mov	DWORD PTR _nPart$81861[ebp], ecx
; Line 284
	mov	DWORD PTR _remF$81862[ebp], eax
; Line 285
	mov	DWORD PTR _gs$[ebp], 0
; Line 286
	test	ecx, ecx
	jle	$LN130@sendMTFVal
; Line 283
	mov	eax, ecx
	add	eax, 145				; 00000091H
	imul	eax, 258				; 00000102H
	add	eax, esi
	mov	DWORD PTR tv6998[ebp], 0
	mov	DWORD PTR tv7008[ebp], eax
$LL131@sendMTFVal:
; Line 287
	mov	eax, DWORD PTR _remF$81862[ebp]
	cdq
	idiv	ecx
; Line 288
	mov	edx, DWORD PTR _gs$[ebp]
	dec	edx
; Line 289
	xor	edi, edi
	mov	DWORD PTR _ge$[ebp], edx
	mov	DWORD PTR _aFreq$81864[ebp], edi
	mov	DWORD PTR _tFreq$81863[ebp], eax
; Line 290
	test	eax, eax
	jle	SHORT $LN244@sendMTFVal
	mov	ecx, DWORD PTR _alphaSize$[ebp]
; Line 390
	dec	ecx
	lea	eax, DWORD PTR [esi+edx*4+632]
$LL129@sendMTFVal:
; Line 290
	cmp	edx, ecx
	jge	SHORT $LN249@sendMTFVal
; Line 292
	add	edi, DWORD PTR [eax+4]
	add	eax, 4
	inc	edx
	cmp	edi, DWORD PTR _tFreq$81863[ebp]
	jl	SHORT $LL129@sendMTFVal
$LN249@sendMTFVal:
; Line 290
	mov	ecx, DWORD PTR _nPart$81861[ebp]
; Line 291
	mov	DWORD PTR _ge$[ebp], edx
; Line 292
	mov	DWORD PTR _aFreq$81864[ebp], edi
$LN244@sendMTFVal:
; Line 297
	cmp	edx, DWORD PTR _gs$[ebp]
	jle	SHORT $LN127@sendMTFVal
	cmp	ecx, DWORD PTR _nGroups$[ebp]
	je	SHORT $LN127@sendMTFVal
	cmp	ecx, 1
	je	SHORT $LN127@sendMTFVal
	mov	eax, DWORD PTR tv6998[ebp]
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN250@sendMTFVal
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN250@sendMTFVal:
	cmp	eax, 1
	jne	SHORT $LN127@sendMTFVal
; Line 298
	sub	edi, DWORD PTR [esi+edx*4+632]
; Line 299
	dec	edx
	mov	DWORD PTR _aFreq$81864[ebp], edi
	mov	DWORD PTR _ge$[ebp], edx
$LN127@sendMTFVal:
; Line 302
	cmp	DWORD PTR [esi+616], 3
	jl	SHORT $LN126@sendMTFVal
; Line 306
	fild	DWORD PTR _aFreq$81864[ebp]
	mov	ecx, DWORD PTR _ge$[ebp]
	mov	edx, DWORD PTR _gs$[ebp]
	mov	eax, DWORD PTR _nPart$81861[ebp]
	fmul	QWORD PTR __real@4059000000000000
	sub	esp, 8
	fidiv	DWORD PTR [esi+628]
	fstp	QWORD PTR [esp]
	push	edi
	push	ecx
	push	edx
	push	eax
	push	OFFSET $SG81875
	call	DWORD PTR __imp____iob_func
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	mov	ecx, DWORD PTR _nPart$81861[ebp]
	mov	edx, DWORD PTR _ge$[ebp]
	add	esp, 32					; 00000020H
$LN126@sendMTFVal:
; Line 308
	xor	eax, eax
	cmp	DWORD PTR _alphaSize$[ebp], eax
	jle	SHORT $LN239@sendMTFVal
$LL238@sendMTFVal:
; Line 309
	cmp	eax, DWORD PTR _gs$[ebp]
	jl	SHORT $LN122@sendMTFVal
	cmp	eax, edx
	jg	SHORT $LN122@sendMTFVal
; Line 310
	mov	ecx, DWORD PTR tv7008[ebp]
	mov	BYTE PTR [ecx+eax], 0
	jmp	SHORT $LN124@sendMTFVal
$LN122@sendMTFVal:
; Line 311
	mov	ecx, DWORD PTR tv7008[ebp]
	mov	BYTE PTR [ecx+eax], 15			; 0000000fH
$LN124@sendMTFVal:
; Line 308
	inc	eax
	cmp	eax, DWORD PTR _alphaSize$[ebp]
	jl	SHORT $LL238@sendMTFVal
	mov	ecx, DWORD PTR _nPart$81861[ebp]
$LN239@sendMTFVal:
; Line 313
	sub	DWORD PTR tv7008[ebp], 258		; 00000102H
	inc	DWORD PTR tv6998[ebp]
; Line 315
	sub	DWORD PTR _remF$81862[ebp], edi
	dec	ecx
	inc	edx
	mov	DWORD PTR _nPart$81861[ebp], ecx
	mov	DWORD PTR _gs$[ebp], edx
	test	ecx, ecx
	jg	$LL131@sendMTFVal
$LN130@sendMTFVal:
; Line 322
	mov	DWORD PTR _iter$[ebp], 0
$LL120@sendMTFVal:
; Line 324
	cmp	DWORD PTR _nGroups$[ebp], 0
	jle	SHORT $LN225@sendMTFVal
	mov	ecx, DWORD PTR _nGroups$[ebp]
	xor	eax, eax
	lea	edi, DWORD PTR _fave$[ebp]
	rep stosd
; Line 326
	mov	eax, DWORD PTR _nGroups$[ebp]
	lea	edx, DWORD PTR [esi+45408]
	mov	DWORD PTR tv3401[ebp], eax
$LL114@sendMTFVal:
; Line 327
	cmp	DWORD PTR _alphaSize$[ebp], 0
	jle	SHORT $LN113@sendMTFVal
	mov	ecx, DWORD PTR _alphaSize$[ebp]
	xor	eax, eax
	mov	edi, edx
	rep stosd
$LN113@sendMTFVal:
; Line 326
	add	edx, 1032				; 00000408H
	dec	DWORD PTR tv3401[ebp]
	jne	SHORT $LL114@sendMTFVal
$LN225@sendMTFVal:
; Line 334
	cmp	DWORD PTR _nGroups$[ebp], 6
	jne	SHORT $LN105@sendMTFVal
; Line 335
	mov	edx, DWORD PTR _alphaSize$[ebp]
	test	edx, edx
	jle	SHORT $LN105@sendMTFVal
	lea	eax, DWORD PTR [esi+37668]
	lea	ecx, DWORD PTR [esi+51604]
	mov	DWORD PTR tv3729[ebp], edx
	npad	7
$LL107@sendMTFVal:
; Line 336
	movzx	edx, BYTE PTR [eax+258]
	movzx	edi, BYTE PTR [eax]
	shl	edx, 16					; 00000010H
	or	edx, edi
	mov	DWORD PTR [ecx-4], edx
; Line 337
	movzx	edx, BYTE PTR [eax+774]
	movzx	edi, BYTE PTR [eax+516]
	shl	edx, 16					; 00000010H
	or	edx, edi
	mov	DWORD PTR [ecx], edx
; Line 338
	movzx	edx, BYTE PTR [eax+1290]
	movzx	edi, BYTE PTR [eax+1032]
	shl	edx, 16					; 00000010H
	or	edx, edi
	mov	DWORD PTR [ecx+4], edx
	inc	eax
	add	ecx, 16					; 00000010H
	dec	DWORD PTR tv3729[ebp]
	jne	SHORT $LL107@sendMTFVal
$LN105@sendMTFVal:
; Line 348
	mov	eax, DWORD PTR [esi+628]
	xor	ecx, ecx
	mov	DWORD PTR _nSelectors$[ebp], ecx
	mov	DWORD PTR _totc$[ebp], ecx
	mov	DWORD PTR _gs$[ebp], ecx
	cmp	eax, ecx
	jle	$LN188@sendMTFVal
	npad	1
$LL104@sendMTFVal:
; Line 349
	lea	edx, DWORD PTR [ecx+49]
	mov	DWORD PTR tv5062[ebp], edx
	mov	DWORD PTR _ge$[ebp], edx
; Line 350
	cmp	edx, eax
	jl	SHORT $LN101@sendMTFVal
	dec	eax
	mov	DWORD PTR _ge$[ebp], eax
	mov	edx, eax
$LN101@sendMTFVal:
; Line 356
	cmp	DWORD PTR _nGroups$[ebp], 0
	jle	SHORT $LN100@sendMTFVal
	mov	ecx, DWORD PTR _nGroups$[ebp]
	xor	eax, eax
	movzx	edx, ax
	mov	eax, edx
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	edx, DWORD PTR _ge$[ebp]
	shr	ecx, 1
	lea	edi, DWORD PTR _cost$[ebp]
	rep stosd
	adc	ecx, ecx
	rep stosw
	mov	ecx, DWORD PTR _gs$[ebp]
$LN100@sendMTFVal:
; Line 358
	cmp	DWORD PTR _nGroups$[ebp], 6
	jne	$LN97@sendMTFVal
	mov	eax, edx
	sub	eax, ecx
	inc	eax
	cmp	eax, 50					; 00000032H
	jne	$LN97@sendMTFVal
; Line 370
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	ecx, WORD PTR [ebx+edi*2]
	movzx	edi, WORD PTR [ebx+edi*2+2]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	lea	edx, DWORD PTR [ecx+3225]
	add	edx, edx
	mov	eax, DWORD PTR [esi+edx*8]
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, ecx
	lea	edx, DWORD PTR [esi+ecx*8]
	mov	ecx, DWORD PTR [edx+51604]
	add	ecx, DWORD PTR [esi+edi*8+51604]
	mov	edx, DWORD PTR [edx+51608]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+4]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+6]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+8]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
; Line 371
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+10]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+12]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+14]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+16]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+18]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
; Line 372
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+20]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+22]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+24]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+26]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+28]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
; Line 373
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+30]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+32]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+34]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+36]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+38]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
; Line 374
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+40]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+42]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+44]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+46]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+48]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
; Line 375
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+50]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+52]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+54]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+56]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+58]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
; Line 376
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+60]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+62]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+64]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+66]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+68]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
; Line 377
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+70]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+72]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+74]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+76]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+78]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
; Line 378
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+80]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+82]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+84]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+86]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+88]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
; Line 379
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+90]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+92]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+94]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR _gs$[ebp]
	movzx	edi, WORD PTR [ebx+edi*2+96]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
	mov	edi, DWORD PTR tv5062[ebp]
	movzx	edi, WORD PTR [ebx+edi*2]
	mov	DWORD PTR tv5075[ebp], edi
	add	edi, 3225				; 00000c99H
	add	edi, edi
	add	eax, DWORD PTR [esi+edi*8]
	mov	edi, DWORD PTR tv5075[ebp]
	add	edi, edi
	add	ecx, DWORD PTR [esi+edi*8+51604]
	add	edx, DWORD PTR [esi+edi*8+51608]
; Line 384
	mov	WORD PTR _cost$[ebp+4], cx
	shr	ecx, 16					; 00000010H
	mov	WORD PTR _cost$[ebp], ax
	shr	eax, 16					; 00000010H
; Line 385
	mov	WORD PTR _cost$[ebp+8], dx
	shr	edx, 16					; 00000010H
	mov	WORD PTR _cost$[ebp+6], cx
; Line 387
	mov	ecx, DWORD PTR _gs$[ebp]
	mov	WORD PTR _cost$[ebp+2], ax
	mov	WORD PTR _cost$[ebp+10], dx
	jmp	SHORT $LN243@sendMTFVal
$LN97@sendMTFVal:
; Line 389
	mov	edi, ecx
	mov	DWORD PTR _i$[ebp], edi
	cmp	ecx, edx
	jg	SHORT $LN243@sendMTFVal
	npad	7
$LL95@sendMTFVal:
; Line 390
	movzx	edx, WORD PTR [ebx+edi*2]
; Line 391
	xor	eax, eax
	cmp	DWORD PTR _nGroups$[ebp], eax
	jle	SHORT $LN94@sendMTFVal
; Line 390
	lea	edx, DWORD PTR [edx+esi+37668]
	mov	DWORD PTR tv7344[ebp], edx
$LL92@sendMTFVal:
; Line 391
	mov	edx, DWORD PTR tv7344[ebp]
	movzx	edx, BYTE PTR [edx]
	add	WORD PTR _cost$[ebp+eax*2], dx
	add	DWORD PTR tv7344[ebp], 258		; 00000102H
	inc	eax
	cmp	eax, DWORD PTR _nGroups$[ebp]
	jl	SHORT $LL92@sendMTFVal
	mov	edi, DWORD PTR _i$[ebp]
$LN94@sendMTFVal:
; Line 389
	inc	edi
	mov	DWORD PTR _i$[ebp], edi
	cmp	edi, DWORD PTR _ge$[ebp]
	jle	SHORT $LL95@sendMTFVal
$LN243@sendMTFVal:
; Line 400
	xor	edx, edx
	or	eax, -1
	mov	DWORD PTR _bc$[ebp], 999999999		; 3b9ac9ffH
	mov	DWORD PTR _t$[ebp], edx
	cmp	DWORD PTR _nGroups$[ebp], edx
	jle	SHORT $LN237@sendMTFVal
	npad	3
$LL230@sendMTFVal:
; Line 401
	movzx	edx, WORD PTR _cost$[ebp+edx*2]
	cmp	edx, DWORD PTR _bc$[ebp]
	jge	SHORT $LN231@sendMTFVal
	mov	DWORD PTR _bc$[ebp], edx
	mov	edx, DWORD PTR _t$[ebp]
	mov	eax, edx
	jmp	SHORT $LN88@sendMTFVal
$LN231@sendMTFVal:
	mov	edx, DWORD PTR _t$[ebp]
$LN88@sendMTFVal:
; Line 400
	inc	edx
	mov	DWORD PTR _t$[ebp], edx
	cmp	edx, DWORD PTR _nGroups$[ebp]
	jl	SHORT $LL230@sendMTFVal
$LN237@sendMTFVal:
; Line 402
	mov	edx, DWORD PTR _bc$[ebp]
	add	DWORD PTR _totc$[ebp], edx
; Line 404
	mov	edx, DWORD PTR _nSelectors$[ebp]
	inc	DWORD PTR _fave$[ebp+eax*4]
	mov	BYTE PTR [esi+edx+1664], al
; Line 405
	inc	edx
; Line 410
	cmp	DWORD PTR _nGroups$[ebp], 6
	mov	DWORD PTR _nSelectors$[ebp], edx
	jne	$LN232@sendMTFVal
	mov	edx, DWORD PTR _ge$[ebp]
	mov	edi, edx
	sub	edi, ecx
	inc	edi
	cmp	edi, 50					; 00000032H
	jne	$LN232@sendMTFVal
; Line 415
	movzx	edi, WORD PTR [ebx+ecx*2]
	add	eax, 44					; 0000002cH
	imul	eax, 258				; 00000102H
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+2]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+4]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+6]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+8]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
; Line 416
	movzx	edi, WORD PTR [ebx+ecx*2+10]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+12]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+14]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+16]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+18]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
; Line 417
	movzx	edi, WORD PTR [ebx+ecx*2+20]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+22]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+24]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+26]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+28]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
; Line 418
	movzx	edi, WORD PTR [ebx+ecx*2+30]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+32]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+34]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+36]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+38]
	add	edi, eax
	lea	edi, DWORD PTR [esi+edi*4]
	inc	DWORD PTR [edi]
; Line 419
	movzx	edi, WORD PTR [ebx+ecx*2+40]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+42]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+44]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+46]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+48]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
; Line 420
	movzx	edi, WORD PTR [ebx+ecx*2+50]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+52]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+54]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+56]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+58]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
; Line 421
	movzx	edi, WORD PTR [ebx+ecx*2+60]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+62]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+64]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+66]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+68]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
; Line 422
	movzx	edi, WORD PTR [ebx+ecx*2+70]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+72]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+74]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+76]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+78]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
; Line 423
	movzx	edi, WORD PTR [ebx+ecx*2+80]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+82]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+84]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+86]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+88]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
; Line 424
	movzx	edi, WORD PTR [ebx+ecx*2+90]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+92]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	movzx	edi, WORD PTR [ebx+ecx*2+94]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	movzx	ecx, WORD PTR [ebx+ecx*2+96]
	lea	edi, DWORD PTR [esi+edi*4]
	add	ecx, eax
	inc	DWORD PTR [esi+ecx*4]
	lea	ecx, DWORD PTR [esi+ecx*4]
	mov	ecx, DWORD PTR tv5062[ebp]
	movzx	ecx, WORD PTR [ebx+ecx*2]
	add	ecx, eax
	inc	DWORD PTR [esi+ecx*4]
	lea	eax, DWORD PTR [esi+ecx*4]
; Line 428
	jmp	SHORT $LN81@sendMTFVal
$LN232@sendMTFVal:
; Line 430
	mov	edx, DWORD PTR _ge$[ebp]
	cmp	ecx, edx
	jg	SHORT $LN81@sendMTFVal
	add	eax, 44					; 0000002cH
	imul	eax, 258				; 00000102H
	npad	8
$LL83@sendMTFVal:
; Line 431
	movzx	edi, WORD PTR [ebx+ecx*2]
	add	edi, eax
	inc	DWORD PTR [esi+edi*4]
	lea	edi, DWORD PTR [esi+edi*4]
	inc	ecx
	cmp	ecx, edx
	jle	SHORT $LL83@sendMTFVal
$LN81@sendMTFVal:
; Line 348
	mov	eax, DWORD PTR [esi+628]
; Line 434
	lea	ecx, DWORD PTR [edx+1]
	mov	DWORD PTR _gs$[ebp], ecx
	cmp	ecx, eax
	jl	$LL104@sendMTFVal
$LN188@sendMTFVal:
; Line 436
	cmp	DWORD PTR [esi+616], 3
	jl	SHORT $LN80@sendMTFVal
; Line 438
	mov	eax, DWORD PTR _totc$[ebp]
	cdq
	and	edx, 7
	add	eax, edx
	mov	edx, DWORD PTR _iter$[ebp]
	sar	eax, 3
	push	eax
	inc	edx
	push	edx
	push	OFFSET $SG81929
	call	DWORD PTR __imp____iob_func
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
; Line 439
	xor	edi, edi
	add	esp, 16					; 00000010H
	cmp	DWORD PTR _nGroups$[ebp], edi
	jle	SHORT $LN77@sendMTFVal
	npad	1
$LL79@sendMTFVal:
; Line 440
	mov	eax, DWORD PTR _fave$[ebp+edi*4]
	push	eax
	push	OFFSET $SG81933
	call	DWORD PTR __imp____iob_func
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	inc	edi
	add	esp, 12					; 0000000cH
	cmp	edi, DWORD PTR _nGroups$[ebp]
	jl	SHORT $LL79@sendMTFVal
$LN77@sendMTFVal:
; Line 441
	push	OFFSET $SG81934
	call	DWORD PTR __imp____iob_func
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
$LN80@sendMTFVal:
; Line 449
	cmp	DWORD PTR _nGroups$[ebp], 0
	jle	SHORT $LN119@sendMTFVal
	mov	ecx, DWORD PTR _nGroups$[ebp]
	lea	eax, DWORD PTR [esi+37668]
	mov	DWORD PTR tv7508[ebp], eax
	lea	edi, DWORD PTR [esi+45408]
	mov	DWORD PTR tv3061[ebp], ecx
$LL76@sendMTFVal:
; Line 451
	mov	edx, DWORD PTR _alphaSize$[ebp]
	mov	eax, DWORD PTR tv7508[ebp]
	push	17					; 00000011H
	push	edx
	push	edi
	push	eax
	call	_BZ2_hbMakeCodeLengths
	add	DWORD PTR tv7508[ebp], 258		; 00000102H
	add	esp, 16					; 00000010H
	add	edi, 1032				; 00000408H
	dec	DWORD PTR tv3061[ebp]
	jne	SHORT $LL76@sendMTFVal
$LN119@sendMTFVal:
; Line 322
	mov	eax, DWORD PTR _iter$[ebp]
	inc	eax
	mov	DWORD PTR _iter$[ebp], eax
	cmp	eax, 4
	jl	$LL120@sendMTFVal
; Line 455
	mov	edi, DWORD PTR _nGroups$[ebp]
	cmp	edi, 8
	jl	SHORT $LN73@sendMTFVal
	push	3002					; 00000bbaH
	call	_BZ2_bz__AssertH__fail
	add	esp, 4
$LN73@sendMTFVal:
; Line 458
	mov	ecx, DWORD PTR _nSelectors$[ebp]
	cmp	ecx, 32768				; 00008000H
	jge	SHORT $LN71@sendMTFVal
	cmp	ecx, 18002				; 00004652H
	jle	SHORT $LN72@sendMTFVal
$LN71@sendMTFVal:
	push	3003					; 00000bbbH
	call	_BZ2_bz__AssertH__fail
	mov	ecx, DWORD PTR _nSelectors$[ebp]
	add	esp, 4
$LN72@sendMTFVal:
; Line 464
	xor	eax, eax
	test	edi, edi
	jle	SHORT $LN226@sendMTFVal
	npad	7
$LL70@sendMTFVal:
	mov	BYTE PTR _pos$81941[ebp+eax], al
	inc	eax
	cmp	eax, edi
	jl	SHORT $LL70@sendMTFVal
$LN226@sendMTFVal:
; Line 465
	test	ecx, ecx
	jle	SHORT $LN245@sendMTFVal
	mov	ecx, DWORD PTR _nSelectors$[ebp]
	mov	al, BYTE PTR _pos$81941[ebp]
	lea	edi, DWORD PTR [esi+19666]
	mov	DWORD PTR tv7540[ebp], edi
	mov	DWORD PTR tv675[ebp], ecx
	npad	1
$LL67@sendMTFVal:
; Line 466
	mov	cl, BYTE PTR [edi-18002]
; Line 467
	mov	DWORD PTR _j$[ebp], 0
	mov	BYTE PTR _ll_i$81942[ebp], cl
; Line 469
	cmp	cl, al
	mov	ecx, DWORD PTR _j$[ebp]
	je	SHORT $LN63@sendMTFVal
$LL64@sendMTFVal:
; Line 470
	inc	ecx
; Line 471
	mov	dl, al
; Line 472
	mov	al, BYTE PTR _pos$81941[ebp+ecx]
; Line 473
	mov	BYTE PTR _pos$81941[ebp+ecx], dl
	cmp	BYTE PTR _ll_i$81942[ebp], al
	jne	SHORT $LL64@sendMTFVal
; Line 469
	mov	edi, DWORD PTR tv7540[ebp]
$LN63@sendMTFVal:
; Line 476
	mov	BYTE PTR [edi], cl
	inc	edi
	dec	DWORD PTR tv675[ebp]
	mov	BYTE PTR _pos$81941[ebp], al
	mov	DWORD PTR tv7540[ebp], edi
	jne	SHORT $LL67@sendMTFVal
$LN245@sendMTFVal:
; Line 481
	mov	ecx, DWORD PTR _nGroups$[ebp]
	test	ecx, ecx
	jle	$LN227@sendMTFVal
	lea	edx, DWORD PTR [esi+39216]
	lea	eax, DWORD PTR [esi+37668]
	mov	DWORD PTR tv7614[ebp], edx
	mov	DWORD PTR tv7616[ebp], eax
	mov	DWORD PTR tv2830[ebp], ecx
	npad	8
$LL62@sendMTFVal:
; Line 484
	xor	ecx, ecx
	mov	edx, 32					; 00000020H
	xor	edi, edi
	mov	DWORD PTR _minLen$[ebp], edx
	cmp	DWORD PTR _alphaSize$[ebp], ecx
	jle	SHORT $LN53@sendMTFVal
$LL59@sendMTFVal:
; Line 485
	mov	eax, DWORD PTR tv7616[ebp]
	movzx	eax, BYTE PTR [eax+ecx]
	cmp	eax, edi
	jle	SHORT $LN56@sendMTFVal
	mov	edi, eax
$LN56@sendMTFVal:
; Line 486
	cmp	eax, edx
	jge	SHORT $LN58@sendMTFVal
	mov	edx, eax
$LN58@sendMTFVal:
; Line 484
	inc	ecx
	cmp	ecx, DWORD PTR _alphaSize$[ebp]
	jl	SHORT $LL59@sendMTFVal
; Line 486
	mov	DWORD PTR _minLen$[ebp], edx
; Line 488
	cmp	edi, 17					; 00000011H
	jle	SHORT $LN54@sendMTFVal
	push	3004					; 00000bbcH
	call	_BZ2_bz__AssertH__fail
	mov	edx, DWORD PTR _minLen$[ebp]
	add	esp, 4
$LN54@sendMTFVal:
; Line 489
	cmp	edx, 1
	jge	SHORT $LN53@sendMTFVal
	push	3005					; 00000bbdH
	call	_BZ2_bz__AssertH__fail
	add	esp, 4
$LN53@sendMTFVal:
; Line 491
	mov	ecx, DWORD PTR _alphaSize$[ebp]
	mov	edx, DWORD PTR _minLen$[ebp]
	mov	eax, DWORD PTR tv7616[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv7614[ebp]
	push	edi
	push	edx
	push	eax
	push	ecx
	call	_BZ2_hbAssignCodes
	add	DWORD PTR tv7616[ebp], 258		; 00000102H
	add	DWORD PTR tv7614[ebp], 1032		; 00000408H
	add	esp, 20					; 00000014H
	dec	DWORD PTR tv2830[ebp]
	jne	SHORT $LL62@sendMTFVal
$LN227@sendMTFVal:
; Line 497
	xor	ecx, ecx
	lea	edx, DWORD PTR [esi+88]
$LL52@sendMTFVal:
; Line 498
	mov	BYTE PTR _inUse16$81964[ebp+ecx], 0
; Line 499
	xor	eax, eax
	npad	4
$LL49@sendMTFVal:
; Line 500
	cmp	BYTE PTR [eax+edx], 0
	je	SHORT $LN48@sendMTFVal
	mov	BYTE PTR _inUse16$81964[ebp+ecx], 1
$LN48@sendMTFVal:
; Line 499
	inc	eax
	cmp	eax, 16					; 00000010H
	jl	SHORT $LL49@sendMTFVal
; Line 497
	inc	ecx
	add	edx, 16					; 00000010H
	cmp	ecx, 16					; 00000010H
	jl	SHORT $LL52@sendMTFVal
; Line 503
	mov	edx, DWORD PTR [esi+76]
	mov	DWORD PTR _nBytes$[ebp], edx
; Line 504
	xor	edi, edi
$LL45@sendMTFVal:
; Line 505
	cmp	BYTE PTR _inUse16$81964[ebp+edi], 0
	push	1
	mov	eax, esi
	je	SHORT $LN42@sendMTFVal
	mov	ecx, 1
	jmp	SHORT $LN252@sendMTFVal
$LN42@sendMTFVal:
	xor	ecx, ecx
$LN252@sendMTFVal:
	call	_bsW
	inc	edi
	add	esp, 4
	cmp	edi, 16					; 00000010H
	jl	SHORT $LL45@sendMTFVal
; Line 507
	lea	eax, DWORD PTR [esi+88]
	mov	DWORD PTR _i$[ebp], 0
	mov	DWORD PTR tv7699[ebp], eax
$LL40@sendMTFVal:
; Line 508
	mov	eax, DWORD PTR _i$[ebp]
	cmp	BYTE PTR _inUse16$81964[ebp+eax], 0
	je	SHORT $LN39@sendMTFVal
; Line 509
	xor	edi, edi
	npad	3
$LL36@sendMTFVal:
; Line 510
	mov	ecx, DWORD PTR tv7699[ebp]
	cmp	BYTE PTR [edi+ecx], 0
	push	1
	mov	eax, esi
	je	SHORT $LN33@sendMTFVal
	mov	ecx, 1
	jmp	SHORT $LN253@sendMTFVal
$LN33@sendMTFVal:
	xor	ecx, ecx
$LN253@sendMTFVal:
	call	_bsW
	inc	edi
	add	esp, 4
	cmp	edi, 16					; 00000010H
	jl	SHORT $LL36@sendMTFVal
$LN39@sendMTFVal:
; Line 507
	mov	eax, DWORD PTR _i$[ebp]
	add	DWORD PTR tv7699[ebp], 16		; 00000010H
	inc	eax
	mov	DWORD PTR _i$[ebp], eax
	cmp	eax, 16					; 00000010H
	jl	SHORT $LL40@sendMTFVal
; Line 513
	cmp	DWORD PTR [esi+616], 3
	jl	SHORT $LN228@sendMTFVal
; Line 514
	mov	edx, DWORD PTR [esi+76]
	sub	edx, DWORD PTR _nBytes$[ebp]
	push	edx
	push	OFFSET $SG81989
	call	DWORD PTR __imp____iob_func
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
$LN228@sendMTFVal:
; Line 518
	mov	eax, DWORD PTR [esi+76]
; Line 519
	mov	ecx, DWORD PTR _nGroups$[ebp]
	mov	DWORD PTR _nBytes$[ebp], eax
	push	3
	mov	eax, esi
	call	_bsW
; Line 520
	mov	edi, DWORD PTR _nSelectors$[ebp]
	push	15					; 0000000fH
	mov	ecx, edi
	call	_bsW
	add	esp, 8
; Line 521
	test	edi, edi
	jle	SHORT $LN28@sendMTFVal
; Line 518
	lea	ecx, DWORD PTR [esi+19666]
	mov	DWORD PTR tv7709[ebp], ecx
	mov	DWORD PTR tv2600[ebp], edi
	npad	3
$LL30@sendMTFVal:
; Line 522
	mov	edx, DWORD PTR tv7709[ebp]
	xor	edi, edi
	cmp	BYTE PTR [edx], 0
	jbe	SHORT $LN25@sendMTFVal
	npad	6
$LL27@sendMTFVal:
	push	1
	mov	ecx, 1
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR tv7709[ebp]
	movzx	ecx, BYTE PTR [eax]
	inc	edi
	add	esp, 4
	cmp	edi, ecx
	jl	SHORT $LL27@sendMTFVal
$LN25@sendMTFVal:
; Line 523
	mov	edi, 1
	push	edi
	xor	ecx, ecx
	mov	eax, esi
	call	_bsW
	add	DWORD PTR tv7709[ebp], edi
	add	esp, 4
	sub	DWORD PTR tv2600[ebp], edi
	jne	SHORT $LL30@sendMTFVal
$LN28@sendMTFVal:
; Line 525
	cmp	DWORD PTR [esi+616], 3
	jl	SHORT $LN24@sendMTFVal
; Line 526
	mov	edx, DWORD PTR [esi+76]
	sub	edx, DWORD PTR _nBytes$[ebp]
	push	edx
	push	OFFSET $SG81997
	call	DWORD PTR __imp____iob_func
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
$LN24@sendMTFVal:
; Line 531
	cmp	DWORD PTR _nGroups$[ebp], 0
	mov	eax, DWORD PTR [esi+76]
	mov	DWORD PTR _nBytes$[ebp], eax
	jle	$LN21@sendMTFVal
; Line 529
	mov	ecx, DWORD PTR _nGroups$[ebp]
	lea	eax, DWORD PTR [esi+37668]
	mov	DWORD PTR tv7774[ebp], eax
	mov	DWORD PTR tv2495[ebp], ecx
	npad	3
$LL23@sendMTFVal:
; Line 532
	mov	edx, DWORD PTR tv7774[ebp]
	movzx	edi, BYTE PTR [edx]
; Line 533
	push	5
	mov	ecx, edi
	mov	eax, esi
	call	_bsW
	add	esp, 4
; Line 534
	cmp	DWORD PTR _alphaSize$[ebp], 0
	mov	DWORD PTR _i$[ebp], 0
	jle	$LN22@sendMTFVal
$LL20@sendMTFVal:
; Line 535
	mov	eax, DWORD PTR tv7774[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	movzx	edx, BYTE PTR [eax+ecx]
	cmp	edi, edx
	jge	SHORT $LN184@sendMTFVal
$LL17@sendMTFVal:
	push	2
	mov	ecx, 2
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR tv7774[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	movzx	edx, BYTE PTR [eax+ecx]
	inc	edi
	add	esp, 4
	cmp	edi, edx
	jl	SHORT $LL17@sendMTFVal
$LN184@sendMTFVal:
; Line 536
	mov	eax, DWORD PTR tv7774[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	movzx	edx, BYTE PTR [eax+ecx]
	cmp	edi, edx
	jle	SHORT $LN14@sendMTFVal
$LL15@sendMTFVal:
	push	2
	mov	ecx, 3
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR tv7774[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	movzx	edx, BYTE PTR [eax+ecx]
	dec	edi
	add	esp, 4
	cmp	edi, edx
	jg	SHORT $LL15@sendMTFVal
$LN14@sendMTFVal:
; Line 537
	push	1
	xor	ecx, ecx
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _i$[ebp]
	inc	eax
	add	esp, 4
	mov	DWORD PTR _i$[ebp], eax
	cmp	eax, DWORD PTR _alphaSize$[ebp]
	jl	SHORT $LL20@sendMTFVal
$LN22@sendMTFVal:
; Line 531
	add	DWORD PTR tv7774[ebp], 258		; 00000102H
	dec	DWORD PTR tv2495[ebp]
	jne	$LL23@sendMTFVal
$LN21@sendMTFVal:
; Line 541
	cmp	DWORD PTR [esi+616], 3
	jl	SHORT $LN233@sendMTFVal
; Line 542
	mov	eax, DWORD PTR [esi+76]
	sub	eax, DWORD PTR _nBytes$[ebp]
	push	eax
	push	OFFSET $SG82012
	call	DWORD PTR __imp____iob_func
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
$LN233@sendMTFVal:
; Line 549
	mov	eax, DWORD PTR [esi+628]
	mov	ecx, DWORD PTR [esi+76]
	xor	edi, edi
	mov	DWORD PTR _nBytes$[ebp], ecx
	mov	DWORD PTR _selCtr$[ebp], edi
	mov	DWORD PTR _gs$[ebp], edi
	cmp	eax, edi
	jle	$LN189@sendMTFVal
	npad	1
$LL12@sendMTFVal:
; Line 550
	lea	ecx, DWORD PTR [edi+49]
	mov	DWORD PTR tv5062[ebp], ecx
	mov	DWORD PTR _ge$[ebp], ecx
; Line 551
	cmp	ecx, eax
	jl	SHORT $LN9@sendMTFVal
	dec	eax
	mov	DWORD PTR _ge$[ebp], eax
$LN9@sendMTFVal:
; Line 552
	mov	edx, DWORD PTR _selCtr$[ebp]
	movzx	eax, BYTE PTR [esi+edx+1664]
	cmp	eax, DWORD PTR _nGroups$[ebp]
	jl	SHORT $LN8@sendMTFVal
	push	3006					; 00000bbeH
	call	_BZ2_bz__AssertH__fail
	add	esp, 4
$LN8@sendMTFVal:
; Line 554
	cmp	DWORD PTR _nGroups$[ebp], 6
	jne	$LN7@sendMTFVal
	mov	ecx, DWORD PTR _ge$[ebp]
	sub	ecx, edi
	inc	ecx
	cmp	ecx, 50					; 00000032H
	jne	$LN7@sendMTFVal
; Line 558
	mov	edx, DWORD PTR _selCtr$[ebp]
	movzx	eax, BYTE PTR [esi+edx+1664]
; Line 568
	mov	ecx, DWORD PTR _gs$[ebp]
	movzx	ecx, WORD PTR [ebx+ecx*2]
	lea	edi, DWORD PTR [eax+146]
	add	eax, 38					; 00000026H
	imul	edi, 258				; 00000102H
	imul	eax, 1032				; 00000408H
	add	edi, esi
	movzx	edx, BYTE PTR [edi+ecx]
	add	eax, esi
	mov	ecx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR _s_code_sel_selCtr$82023[ebp], eax
	push	edx
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+2]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+4]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+6]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+8]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
; Line 569
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+10]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+12]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+14]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+16]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+18]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
; Line 570
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+20]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+22]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+24]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+26]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+28]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
; Line 571
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+30]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+32]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	add	esp, 64					; 00000040H
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+34]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+36]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+38]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
; Line 572
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+40]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+42]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+44]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+46]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+48]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
; Line 573
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+50]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+52]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+54]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+56]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+58]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
; Line 574
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+60]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+62]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+64]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	add	esp, 64					; 00000040H
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+66]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+68]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
; Line 575
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+70]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+72]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+74]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+76]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+78]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
; Line 576
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+80]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+82]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+84]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+86]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+88]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
; Line 577
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+90]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+92]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+94]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR _gs$[ebp]
	movzx	eax, WORD PTR [ebx+eax*2+96]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	add	esp, 64					; 00000040H
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	mov	eax, DWORD PTR tv5062[ebp]
	movzx	eax, WORD PTR [ebx+eax*2]
	movzx	ecx, BYTE PTR [edi+eax]
	mov	edx, DWORD PTR _s_code_sel_selCtr$82023[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+eax*4]
	mov	eax, esi
	call	_bsW
	add	esp, 8
; Line 581
	jmp	SHORT $LN3@sendMTFVal
$LN7@sendMTFVal:
; Line 583
	cmp	edi, DWORD PTR _ge$[ebp]
	jg	SHORT $LN3@sendMTFVal
$LL5@sendMTFVal:
; Line 586
	mov	eax, DWORD PTR _selCtr$[ebp]
	movzx	eax, BYTE PTR [esi+eax+1664]
	movzx	ecx, WORD PTR [ebx+edi*2]
	lea	edx, DWORD PTR [eax+38]
	add	eax, 146				; 00000092H
	imul	edx, 258				; 00000102H
	imul	eax, 258				; 00000102H
	add	eax, esi
	movzx	eax, BYTE PTR [eax+ecx]
	add	edx, ecx
	mov	ecx, DWORD PTR [esi+edx*4]
	push	eax
	mov	eax, esi
	call	_bsW
	inc	edi
	add	esp, 4
	cmp	edi, DWORD PTR _ge$[ebp]
	jle	SHORT $LL5@sendMTFVal
$LN3@sendMTFVal:
; Line 591
	mov	edi, DWORD PTR _ge$[ebp]
	mov	eax, DWORD PTR [esi+628]
; Line 592
	inc	DWORD PTR _selCtr$[ebp]
	inc	edi
	mov	DWORD PTR _gs$[ebp], edi
	cmp	edi, eax
	jl	$LL12@sendMTFVal
$LN189@sendMTFVal:
; Line 594
	mov	ecx, DWORD PTR _selCtr$[ebp]
	pop	edi
	pop	ebx
	cmp	ecx, DWORD PTR _nSelectors$[ebp]
	je	SHORT $LN2@sendMTFVal
	push	3007					; 00000bbfH
	call	_BZ2_bz__AssertH__fail
	add	esp, 4
$LN2@sendMTFVal:
; Line 596
	cmp	DWORD PTR [esi+616], 3
	jl	SHORT $LN1@sendMTFVal
; Line 597
	mov	edx, DWORD PTR [esi+76]
	sub	edx, DWORD PTR _nBytes$[ebp]
	push	edx
	push	OFFSET $SG82030
	call	DWORD PTR __imp____iob_func
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
$LN1@sendMTFVal:
; Line 598
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_sendMTFValues ENDP
_TEXT	ENDS
PUBLIC	_BZ2_compressBlock
EXTRN	_BZ2_blockSort:PROC
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_s$ = 8							; size = 4
_is_last_block$ = 12					; size = 1
_BZ2_compressBlock PROC
; Line 603
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
; Line 604
	mov	esi, DWORD PTR _s$[ebp]
	mov	edx, DWORD PTR [esi+68]
	push	edi
	mov	edi, DWORD PTR __imp__fprintf
	test	edx, edx
	jle	SHORT $LN7@BZ2_compre
; Line 606
	mov	ecx, DWORD PTR [esi+608]
; Line 607
	mov	eax, DWORD PTR [esi+612]
; Line 609
	mov	ebx, DWORD PTR [esi+620]
	not	ecx
	rol	eax, 1
	xor	eax, ecx
	mov	DWORD PTR [esi+608], ecx
	mov	DWORD PTR [esi+612], eax
	cmp	ebx, 1
	jle	SHORT $LN6@BZ2_compre
	mov	DWORD PTR [esi+76], 0
$LN6@BZ2_compre:
; Line 611
	cmp	DWORD PTR [esi+616], 2
	jl	SHORT $LN5@BZ2_compre
; Line 614
	push	edx
	push	eax
	push	ecx
	push	ebx
	push	OFFSET $SG82039
	call	DWORD PTR __imp____iob_func
	add	eax, 64					; 00000040H
	push	eax
	call	edi
	add	esp, 24					; 00000018H
$LN5@BZ2_compre:
; Line 616
	push	esi
	call	_BZ2_blockSort
	add	esp, 4
$LN7@BZ2_compre:
; Line 619
	mov	eax, DWORD PTR [esi+20]
	add	eax, DWORD PTR [esi+68]
; Line 622
	cmp	DWORD PTR [esi+620], 1
	mov	DWORD PTR [esi+44], eax
	jne	SHORT $LN48@BZ2_compre
; Line 623
	xor	eax, eax
	mov	DWORD PTR [esi+604], eax
	mov	DWORD PTR [esi+600], eax
; Line 624
	lea	ecx, DWORD PTR [eax+66]
	push	8
	mov	eax, esi
	call	_bsW
; Line 625
	push	8
	mov	ecx, 90					; 0000005aH
	call	_bsW
; Line 626
	push	8
	mov	ecx, 104				; 00000068H
	call	_bsW
; Line 627
	mov	cl, BYTE PTR [esi+624]
	add	cl, 48					; 00000030H
	movzx	ecx, cl
	push	8
	call	_bsW
	add	esp, 16					; 00000010H
$LN48@BZ2_compre:
; Line 630
	cmp	DWORD PTR [esi+68], 0
	jle	$LN3@BZ2_compre
; Line 632
	push	8
	mov	ecx, 49					; 00000031H
	mov	eax, esi
	call	_bsW
	push	8
	mov	ecx, 65					; 00000041H
	call	_bsW
; Line 633
	push	8
	mov	ecx, 89					; 00000059H
	call	_bsW
	push	8
	mov	ecx, 38					; 00000026H
	call	_bsW
; Line 634
	push	8
	mov	ecx, 83					; 00000053H
	call	_bsW
	push	8
	mov	ecx, 89					; 00000059H
	call	_bsW
; Line 637
	mov	ebx, DWORD PTR [esi+608]
	mov	ecx, ebx
	shr	ecx, 24					; 00000018H
	push	8
	call	_bsW
	mov	ecx, ebx
	shr	ecx, 16					; 00000010H
	and	ecx, 255				; 000000ffH
	push	8
	call	_bsW
	mov	ecx, ebx
	shr	ecx, 8
	and	ecx, 255				; 000000ffH
	push	8
	call	_bsW
	movzx	ecx, bl
	push	8
	call	_bsW
; Line 648
	push	1
	xor	ecx, ecx
	call	_bsW
; Line 650
	mov	ecx, DWORD PTR [esi+28]
	push	24					; 00000018H
	call	_bsW
	add	esp, 48					; 00000030H
; Line 651
	call	_generateMTFValues
; Line 652
	call	_sendMTFValues
$LN3@BZ2_compre:
; Line 657
	cmp	BYTE PTR _is_last_block$[ebp], 0
	je	$LN2@BZ2_compre
; Line 659
	push	8
	mov	ecx, 23					; 00000017H
	mov	eax, esi
	call	_bsW
	push	8
	mov	ecx, 114				; 00000072H
	call	_bsW
; Line 660
	push	8
	mov	ecx, 69					; 00000045H
	call	_bsW
	push	8
	mov	ecx, 56					; 00000038H
	call	_bsW
; Line 661
	push	8
	mov	ecx, 80					; 00000050H
	call	_bsW
	push	8
	mov	ecx, 144				; 00000090H
	call	_bsW
; Line 662
	mov	ebx, DWORD PTR [esi+612]
	mov	ecx, ebx
	shr	ecx, 24					; 00000018H
	push	8
	call	_bsW
	mov	ecx, ebx
	shr	ecx, 16					; 00000010H
	and	ecx, 255				; 000000ffH
	push	8
	call	_bsW
	mov	ecx, ebx
	shr	ecx, 8
	and	ecx, 255				; 000000ffH
	push	8
	call	_bsW
	movzx	ecx, bl
	push	8
	call	_bsW
	add	esp, 40					; 00000028H
; Line 663
	cmp	DWORD PTR [esi+616], 2
	jl	SHORT $LN1@BZ2_compre
; Line 664
	mov	edx, DWORD PTR [esi+612]
	push	edx
	push	OFFSET $SG82047
	call	DWORD PTR __imp____iob_func
	add	eax, 64					; 00000040H
	push	eax
	call	edi
	add	esp, 12					; 0000000cH
$LN1@BZ2_compre:
; Line 665
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 667
	pop	ebp
; Line 665
	jmp	_bsFinishWrite
$LN2@BZ2_compre:
	pop	edi
	pop	esi
	pop	ebx
; Line 667
	pop	ebp
	ret	0
_BZ2_compressBlock ENDP
_TEXT	ENDS
END
