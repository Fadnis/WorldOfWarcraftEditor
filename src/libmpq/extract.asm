; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\programovani\WoW Editor\Test\src\libmpq\extract.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_libmpq__decompress_wave_stereo
PUBLIC	_libmpq__decompress_wave_mono
PUBLIC	_libmpq__decompress_bzip2
PUBLIC	_libmpq__decompress_pkzip
PUBLIC	_libmpq__decompress_zlib
PUBLIC	_libmpq__decompress_huffman
_DATA	SEGMENT
_dcmp_table DD	01H
	DD	FLAT:_libmpq__decompress_huffman
	DD	02H
	DD	FLAT:_libmpq__decompress_zlib
	DD	08H
	DD	FLAT:_libmpq__decompress_pkzip
	DD	010H
	DD	FLAT:_libmpq__decompress_bzip2
	DD	040H
	DD	FLAT:_libmpq__decompress_wave_mono
	DD	080H
	DD	FLAT:_libmpq__decompress_wave_stereo
$SG82445 DB	'1.2.5', 00H
_DATA	ENDS
EXTRN	__imp__free:PROC
EXTRN	_libmpq__do_decompress_huffman:PROC
EXTRN	_libmpq__huffman_tree_init:PROC
EXTRN	__imp__malloc:PROC
EXTRN	_memset:PROC
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_in_buf$ = 8						; size = 4
_in_size$ = 12						; size = 4
_out_buf$ = 16						; size = 4
_out_size$ = 20						; size = 4
_libmpq__decompress_huffman PROC
; File c:\programovani\wow editor\test\src\libmpq\extract.c
; Line 30
	push	ebp
	mov	ebp, esp
	push	esi
; Line 39
	mov	esi, DWORD PTR __imp__malloc
	push	edi
	push	14964					; 00003a74H
	call	esi
	mov	edi, eax
	add	esp, 4
	test	edi, edi
	je	SHORT $LN1@libmpq__de
	push	12					; 0000000cH
	call	esi
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	je	SHORT $LN1@libmpq__de
; Line 46
	push	ebx
	push	14964					; 00003a74H
	push	0
	push	edi
	call	_memset
; Line 47
	xor	eax, eax
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], eax
; Line 50
	mov	eax, DWORD PTR _in_buf$[ebp]
	mov	ecx, DWORD PTR [eax]
; Line 51
	add	eax, 4
; Line 63
	push	0
	push	edi
	mov	DWORD PTR [esi+4], ecx
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+8], 32			; 00000020H
	call	_libmpq__huffman_tree_init
; Line 66
	mov	edx, DWORD PTR _out_size$[ebp]
	mov	eax, DWORD PTR _out_buf$[ebp]
	push	edx
	push	eax
	push	esi
	push	edi
	call	_libmpq__do_decompress_huffman
; Line 69
	push	esi
	mov	esi, DWORD PTR __imp__free
	mov	ebx, eax
	call	esi
; Line 70
	push	edi
	call	esi
	add	esp, 44					; 0000002cH
; Line 73
	mov	eax, ebx
	pop	ebx
	pop	edi
	pop	esi
; Line 74
	pop	ebp
	ret	0
$LN1@libmpq__de:
	pop	edi
; Line 42
	mov	eax, -6					; fffffffaH
	pop	esi
; Line 74
	pop	ebp
	ret	0
_libmpq__decompress_huffman ENDP
_TEXT	ENDS
EXTRN	_inflateEnd:PROC
EXTRN	_inflate:PROC
EXTRN	_inflateInit_:PROC
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_z$ = -56						; size = 56
_in_buf$ = 8						; size = 4
_in_size$ = 12						; size = 4
_out_buf$ = 16						; size = 4
_out_size$ = 20						; size = 4
_libmpq__decompress_zlib PROC
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
; Line 85
	mov	eax, DWORD PTR _in_buf$[ebp]
; Line 88
	mov	ecx, DWORD PTR _out_buf$[ebp]
; Line 89
	mov	edx, DWORD PTR _out_size$[ebp]
	mov	DWORD PTR _z$[ebp], eax
	mov	eax, DWORD PTR _in_size$[ebp]
; Line 95
	push	56					; 00000038H
	mov	DWORD PTR _z$[ebp+4], eax
	mov	DWORD PTR _z$[ebp+8], eax
	lea	eax, DWORD PTR _z$[ebp]
	push	OFFSET $SG82445
	push	eax
	mov	DWORD PTR _z$[ebp+12], ecx
	mov	DWORD PTR _z$[ebp+16], edx
	mov	DWORD PTR _z$[ebp+20], 0
	mov	DWORD PTR _z$[ebp+32], 0
	mov	DWORD PTR _z$[ebp+36], 0
	call	_inflateInit_
	add	esp, 12					; 0000000cH
	test	eax, eax
; Line 98
	jne	SHORT $LN4@libmpq__de@2
; Line 102
	lea	ecx, DWORD PTR _z$[ebp]
	push	4
	push	ecx
	call	_inflate
	add	esp, 8
	cmp	eax, 1
; Line 105
	jne	SHORT $LN4@libmpq__de@2
; Line 109
	push	esi
	mov	esi, DWORD PTR _z$[ebp+20]
; Line 112
	lea	edx, DWORD PTR _z$[ebp]
	push	edx
	call	_inflateEnd
	add	esp, 4
	test	eax, eax
; Line 115
	jne	SHORT $LN6@libmpq__de@2
; Line 119
	mov	eax, esi
$LN6@libmpq__de@2:
	pop	esi
$LN4@libmpq__de@2:
; Line 120
	mov	esp, ebp
	pop	ebp
	ret	0
_libmpq__decompress_zlib ENDP
_TEXT	ENDS
EXTRN	_libmpq__do_decompress_pkzip:PROC
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_info$ = -24						; size = 24
_in_buf$ = 8						; size = 4
_in_size$ = 12						; size = 4
_out_buf$ = 16						; size = 4
_out_size$ = 20						; size = 4
_libmpq__decompress_pkzip PROC
; Line 124
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
; Line 131
	push	12596					; 00003134H
	call	DWORD PTR __imp__malloc
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	jne	SHORT $LN2@libmpq__de@3
; Line 134
	lea	eax, DWORD PTR [esi-6]
	pop	esi
; Line 166
	mov	esp, ebp
	pop	ebp
	ret	0
$LN2@libmpq__de@3:
	push	edi
; Line 138
	push	12596					; 00003134H
	push	0
	push	esi
	call	_memset
; Line 143
	mov	ecx, DWORD PTR _in_size$[ebp]
	mov	eax, DWORD PTR _in_buf$[ebp]
; Line 144
	mov	edx, DWORD PTR _out_buf$[ebp]
	mov	DWORD PTR _info$[ebp+8], ecx
; Line 149
	lea	ecx, DWORD PTR _info$[ebp]
	mov	DWORD PTR _info$[ebp], eax
	mov	eax, DWORD PTR _out_size$[ebp]
	push	ecx
	push	esi
	mov	DWORD PTR _info$[ebp+4], 0
	mov	DWORD PTR _info$[ebp+12], edx
	mov	DWORD PTR _info$[ebp+16], 0
	mov	DWORD PTR _info$[ebp+20], eax
	call	_libmpq__do_decompress_pkzip
	add	esp, 20					; 00000014H
	mov	edi, eax
; Line 152
	push	esi
	test	edi, edi
; Line 155
	js	SHORT $LN6@libmpq__de@3
; Line 159
	mov	edi, DWORD PTR _info$[ebp+16]
$LN6@libmpq__de@3:
; Line 162
	call	DWORD PTR __imp__free
	add	esp, 4
; Line 165
	mov	eax, edi
	pop	edi
	pop	esi
; Line 166
	mov	esp, ebp
	pop	ebp
	ret	0
_libmpq__decompress_pkzip ENDP
_TEXT	ENDS
EXTRN	_BZ2_bzDecompressEnd@4:PROC
EXTRN	_BZ2_bzDecompress@4:PROC
EXTRN	_BZ2_bzDecompressInit@12:PROC
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_strm$ = -48						; size = 48
_in_buf$ = 8						; size = 4
_in_size$ = 12						; size = 4
_out_buf$ = 16						; size = 4
_out_size$ = 20						; size = 4
_libmpq__decompress_bzip2 PROC
; Line 170
	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	push	esi
; Line 177
	xor	esi, esi
; Line 181
	push	esi
	push	esi
	lea	eax, DWORD PTR _strm$[ebp]
	push	eax
	mov	DWORD PTR _strm$[ebp+36], esi
	mov	DWORD PTR _strm$[ebp+40], esi
	call	_BZ2_bzDecompressInit@12
	cmp	eax, esi
; Line 184
	jne	SHORT $LN4@libmpq__de@4
; Line 188
	mov	ecx, DWORD PTR _in_buf$[ebp]
; Line 189
	mov	edx, DWORD PTR _in_size$[ebp]
; Line 190
	mov	eax, DWORD PTR _out_buf$[ebp]
	mov	DWORD PTR _strm$[ebp], ecx
; Line 191
	mov	ecx, DWORD PTR _out_size$[ebp]
	mov	DWORD PTR _strm$[ebp+4], edx
	mov	DWORD PTR _strm$[ebp+16], eax
	mov	DWORD PTR _strm$[ebp+20], ecx
$LL2@libmpq__de@4:
; Line 194
	lea	edx, DWORD PTR _strm$[ebp]
	push	edx
	call	_BZ2_bzDecompress@4
	cmp	eax, 4
	jne	SHORT $LL2@libmpq__de@4
; Line 197
	mov	esi, DWORD PTR _strm$[ebp+24]
; Line 200
	lea	eax, DWORD PTR _strm$[ebp]
	push	eax
	call	_BZ2_bzDecompressEnd@4
; Line 203
	mov	eax, esi
$LN4@libmpq__de@4:
	pop	esi
; Line 204
	mov	esp, ebp
	pop	ebp
	ret	0
_libmpq__decompress_bzip2 ENDP
_TEXT	ENDS
EXTRN	_libmpq__do_decompress_wave:PROC
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_in_buf$ = 8						; size = 4
_in_size$ = 12						; size = 4
_out_buf$ = 16						; size = 4
_out_size$ = 20						; size = 4
_libmpq__decompress_wave_mono PROC
; Line 208
	push	ebp
	mov	ebp, esp
; Line 213
	mov	eax, DWORD PTR _in_size$[ebp]
	mov	ecx, DWORD PTR _in_buf$[ebp]
	mov	edx, DWORD PTR _out_size$[ebp]
	push	1
	push	eax
	mov	eax, DWORD PTR _out_buf$[ebp]
	push	ecx
	push	edx
	push	eax
	call	_libmpq__do_decompress_wave
	add	esp, 20					; 00000014H
; Line 221
	pop	ebp
	ret	0
_libmpq__decompress_wave_mono ENDP
; Function compile flags: /Ogtp
_in_buf$ = 8						; size = 4
_in_size$ = 12						; size = 4
_out_buf$ = 16						; size = 4
_out_size$ = 20						; size = 4
_libmpq__decompress_wave_stereo PROC
; Line 225
	push	ebp
	mov	ebp, esp
; Line 230
	mov	eax, DWORD PTR _in_size$[ebp]
	mov	ecx, DWORD PTR _in_buf$[ebp]
	mov	edx, DWORD PTR _out_size$[ebp]
	push	2
	push	eax
	mov	eax, DWORD PTR _out_buf$[ebp]
	push	ecx
	push	edx
	push	eax
	call	_libmpq__do_decompress_wave
	add	esp, 20					; 00000014H
; Line 238
	pop	ebp
	ret	0
_libmpq__decompress_wave_stereo ENDP
_TEXT	ENDS
PUBLIC	_libmpq__decompress_multi
EXTRN	_memcpy:PROC
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_tb$ = -16						; size = 4
_count$ = -12						; size = 4
_temp_buf$ = -8						; size = 4
tv410 = -4						; size = 4
_in_buf$ = 8						; size = 4
_in_size$ = 12						; size = 4
_out_buf$ = 16						; size = 4
_out_size$ = 20						; size = 4
_libmpq__decompress_multi PROC
; Line 242
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 253
	mov	edx, DWORD PTR _in_buf$[ebp]
	mov	al, BYTE PTR [edx]
; Line 256
	dec	DWORD PTR _in_size$[ebp]
	push	ebx
	inc	edx
	push	esi
; Line 262
	movzx	esi, al
	xor	ecx, ecx
	mov	DWORD PTR _in_buf$[ebp], edx
	mov	edx, DWORD PTR _dcmp_table
	xor	ebx, ebx
	mov	DWORD PTR _tb$[ebp], ecx
	mov	DWORD PTR _temp_buf$[ebp], ecx
	mov	DWORD PTR tv410[ebp], esi
	test	esi, edx
	je	SHORT $LN14@libmpq__de@5
; Line 267
	not	dl
	lea	ecx, DWORD PTR [ebx+1]
	and	al, dl
$LN14@libmpq__de@5:
; Line 262
	mov	edx, DWORD PTR _dcmp_table+8
	test	esi, edx
	je	SHORT $LN27@libmpq__de@5
; Line 267
	not	dl
	inc	ecx
	and	al, dl
$LN27@libmpq__de@5:
; Line 262
	mov	edx, DWORD PTR _dcmp_table+16
	test	esi, edx
	je	SHORT $LN29@libmpq__de@5
; Line 267
	not	dl
	inc	ecx
	and	al, dl
$LN29@libmpq__de@5:
; Line 262
	mov	edx, DWORD PTR _dcmp_table+24
	test	esi, edx
	je	SHORT $LN31@libmpq__de@5
; Line 267
	not	dl
	inc	ecx
	and	al, dl
$LN31@libmpq__de@5:
; Line 262
	mov	edx, DWORD PTR _dcmp_table+32
	test	esi, edx
	je	SHORT $LN33@libmpq__de@5
; Line 267
	not	dl
	inc	ecx
	and	al, dl
$LN33@libmpq__de@5:
; Line 262
	mov	edx, DWORD PTR _dcmp_table+40
	test	esi, edx
	je	SHORT $LN35@libmpq__de@5
; Line 267
	not	dl
	inc	ecx
	and	al, dl
$LN35@libmpq__de@5:
; Line 272
	test	al, al
	je	SHORT $LN11@libmpq__de@5
; Line 275
	pop	esi
	mov	eax, -12				; fffffff4H
	pop	ebx
; Line 342
	mov	esp, ebp
	pop	ebp
	ret	0
$LN11@libmpq__de@5:
; Line 279
	mov	esi, DWORD PTR _out_size$[ebp]
	cmp	ecx, 1
	jbe	SHORT $LN36@libmpq__de@5
; Line 282
	push	esi
	call	DWORD PTR __imp__malloc
	add	esp, 4
	mov	DWORD PTR _temp_buf$[ebp], eax
	test	eax, eax
	jne	SHORT $LN9@libmpq__de@5
; Line 285
	pop	esi
	mov	eax, -6					; fffffffaH
	pop	ebx
; Line 342
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@libmpq__de@5:
; Line 289
	push	esi
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
$LN36@libmpq__de@5:
; Line 293
	push	edi
	xor	edi, edi
	mov	DWORD PTR _count$[ebp], edi
$LL37@libmpq__de@5:
; Line 296
	mov	eax, DWORD PTR tv410[ebp]
	test	DWORD PTR _dcmp_table[edi], eax
	je	SHORT $LN7@libmpq__de@5
; Line 300
	cmp	DWORD PTR _count$[ebp], 0
; Line 303
	mov	ebx, DWORD PTR _out_buf$[ebp]
	je	SHORT $LN3@libmpq__de@5
; Line 308
	mov	ebx, DWORD PTR _temp_buf$[ebp]
$LN3@libmpq__de@5:
; Line 312
	mov	ecx, DWORD PTR _in_size$[ebp]
	mov	edx, DWORD PTR _in_buf$[ebp]
	mov	eax, DWORD PTR _dcmp_table[edi+4]
	push	esi
	push	ebx
	push	ecx
	push	edx
	call	eax
	add	esp, 16					; 00000010H
	mov	DWORD PTR _tb$[ebp], eax
	test	eax, eax
	js	SHORT $LN20@libmpq__de@5
; Line 326
	inc	DWORD PTR _count$[ebp]
	mov	DWORD PTR _in_size$[ebp], esi
	mov	DWORD PTR _in_buf$[ebp], ebx
$LN7@libmpq__de@5:
; Line 293
	add	edi, 8
	cmp	edi, 48					; 00000030H
	jb	SHORT $LL37@libmpq__de@5
; Line 331
	mov	eax, DWORD PTR _out_buf$[ebp]
	cmp	ebx, eax
	je	SHORT $LN1@libmpq__de@5
; Line 334
	mov	edx, DWORD PTR _in_buf$[ebp]
	push	esi
	push	edx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@libmpq__de@5:
; Line 338
	mov	eax, DWORD PTR _temp_buf$[ebp]
	push	eax
	call	DWORD PTR __imp__free
; Line 341
	mov	eax, DWORD PTR _tb$[ebp]
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
; Line 342
	mov	esp, ebp
	pop	ebp
	ret	0
$LN20@libmpq__de@5:
; Line 315
	mov	ecx, DWORD PTR _temp_buf$[ebp]
	push	ecx
; Line 338
	call	DWORD PTR __imp__free
; Line 341
	mov	eax, DWORD PTR _tb$[ebp]
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
; Line 342
	mov	esp, ebp
	pop	ebp
	ret	0
_libmpq__decompress_multi ENDP
_TEXT	ENDS
END
