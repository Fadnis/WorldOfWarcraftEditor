; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\programovani\WoW Editor\Test\src\libmpq\wave.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

CONST	SEGMENT
_wave_table_1503f120 DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	04H
	DD	0ffffffffH
	DD	02H
	DD	0ffffffffH
	DD	06H
	DD	0ffffffffH
	DD	01H
	DD	0ffffffffH
	DD	05H
	DD	0ffffffffH
	DD	03H
	DD	0ffffffffH
	DD	07H
	DD	0ffffffffH
	DD	01H
	DD	0ffffffffH
	DD	05H
	DD	0ffffffffH
	DD	03H
	DD	0ffffffffH
	DD	07H
	DD	0ffffffffH
	DD	02H
	DD	0ffffffffH
	DD	04H
	DD	0ffffffffH
	DD	06H
	DD	0ffffffffH
	DD	08H
_wave_table_1503f1a0 DD 07H
	DD	08H
	DD	09H
	DD	0aH
	DD	0bH
	DD	0cH
	DD	0dH
	DD	0eH
	DD	010H
	DD	011H
	DD	013H
	DD	015H
	DD	017H
	DD	019H
	DD	01cH
	DD	01fH
	DD	022H
	DD	025H
	DD	029H
	DD	02dH
	DD	032H
	DD	037H
	DD	03cH
	DD	042H
	DD	049H
	DD	050H
	DD	058H
	DD	061H
	DD	06bH
	DD	076H
	DD	082H
	DD	08fH
	DD	09dH
	DD	0adH
	DD	0beH
	DD	0d1H
	DD	0e6H
	DD	0fdH
	DD	0117H
	DD	0133H
	DD	0151H
	DD	0173H
	DD	0198H
	DD	01c1H
	DD	01eeH
	DD	0220H
	DD	0256H
	DD	0292H
	DD	02d4H
	DD	031cH
	DD	036cH
	DD	03c3H
	DD	0424H
	DD	048eH
	DD	0502H
	DD	0583H
	DD	0610H
	DD	06abH
	DD	0756H
	DD	0812H
	DD	08e0H
	DD	09c3H
	DD	0abdH
	DD	0bd0H
	DD	0cffH
	DD	0e4cH
	DD	0fbaH
	DD	0114cH
	DD	01307H
	DD	014eeH
	DD	01706H
	DD	01954H
	DD	01bdcH
	DD	01ea5H
	DD	021b6H
	DD	02515H
	DD	028caH
	DD	02cdfH
	DD	0315bH
	DD	0364bH
	DD	03bb9H
	DD	041b2H
	DD	04844H
	DD	04f7eH
	DD	05771H
	DD	0602fH
	DD	069ceH
	DD	07462H
	DD	07fffH
CONST	ENDS
PUBLIC	_libmpq__do_decompress_wave
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_nr_array2$ = -24					; size = 8
_nr_array1$ = -16					; size = 8
_in_end$ = -8						; size = 4
_in$ = -4						; size = 4
_out_buf$ = 8						; size = 4
_out_length$ = 12					; size = 4
_in_buf$ = 16						; size = 4
_out$ = 20						; size = 4
_in_length$ = 20					; size = 4
_channels$ = 24						; size = 4
_libmpq__do_decompress_wave PROC
; File c:\programovani\wow editor\test\src\libmpq\wave.c
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
; Line 45
	mov	ecx, DWORD PTR _in_length$[ebp]
	mov	eax, DWORD PTR _in_buf$[ebp]
	push	ebx
	lea	ebx, DWORD PTR [eax+ecx]
; Line 50
	mov	ecx, 44					; 0000002cH
	push	esi
; Line 54
	lea	esi, DWORD PTR [eax+2]
; Line 57
	mov	eax, DWORD PTR _channels$[ebp]
	push	edi
	mov	edi, DWORD PTR _out_buf$[ebp]
	mov	DWORD PTR _nr_array1$[ebp], ecx
	mov	DWORD PTR _nr_array1$[ebp+4], ecx
	xor	ecx, ecx
	mov	DWORD PTR _in_end$[ebp], ebx
	mov	DWORD PTR _out$[ebp], edi
	test	eax, eax
	jle	SHORT $LN48@libmpq__do
$LL35@libmpq__do:
; Line 63
	movsx	edx, WORD PTR [esi]
	add	esi, 2
; Line 67
	cmp	DWORD PTR _out_length$[ebp], 2
	mov	DWORD PTR _nr_array2$[ebp+ecx*4], edx
	jl	$LN50@libmpq__do
; Line 74
	sub	DWORD PTR _out_length$[ebp], 2
	mov	WORD PTR [edi], dx
	inc	ecx
	add	edi, 2
	cmp	ecx, eax
	jl	SHORT $LL35@libmpq__do
; Line 73
	mov	DWORD PTR _out$[ebp], edi
$LN48@libmpq__do:
; Line 78
	dec	eax
; Line 81
	cmp	esi, ebx
	jae	$LN50@libmpq__do
$LL31@libmpq__do:
; Line 84
	mov	bl, BYTE PTR [esi]
; Line 87
	mov	edx, DWORD PTR _channels$[ebp]
	inc	esi
	mov	DWORD PTR _in$[ebp], esi
	cmp	edx, 2
	jne	SHORT $LN51@libmpq__do
; Line 89
	xor	ecx, ecx
	test	eax, eax
	sete	cl
	mov	eax, ecx
$LN51@libmpq__do:
; Line 93
	test	bl, bl
	jns	$LN28@libmpq__do
; Line 96
	movzx	ecx, bl
	and	ecx, 127				; 0000007fH
	sub	ecx, 0
	je	SHORT $LN25@libmpq__do
	dec	ecx
	je	SHORT $LN22@libmpq__do
	dec	ecx
	je	$LN1@libmpq__do
; Line 143
	add	DWORD PTR _nr_array1$[ebp+eax*4], -8	; fffffff8H
; Line 146
	jns	SHORT $LN17@libmpq__do
; Line 148
	mov	DWORD PTR _nr_array1$[ebp+eax*4], 0
$LN17@libmpq__do:
; Line 152
	cmp	edx, 2
	jne	$LN1@libmpq__do
; Line 156
	xor	edx, edx
	test	eax, eax
	sete	dl
	mov	eax, edx
; Line 159
	jmp	$LN1@libmpq__do
$LN22@libmpq__do:
; Line 120
	add	DWORD PTR _nr_array1$[ebp+eax*4], 8
; Line 123
	mov	ecx, 88					; 00000058H
	cmp	DWORD PTR _nr_array1$[ebp+eax*4], ecx
	jle	SHORT $LN21@libmpq__do
; Line 125
	mov	DWORD PTR _nr_array1$[ebp+eax*4], ecx
$LN21@libmpq__do:
; Line 129
	cmp	edx, 2
	jne	$LN1@libmpq__do
; Line 131
	xor	ecx, ecx
	test	eax, eax
	sete	cl
	mov	eax, ecx
; Line 135
	jmp	$LN1@libmpq__do
$LN25@libmpq__do:
; Line 101
	mov	ecx, DWORD PTR _nr_array1$[ebp+eax*4]
	test	ecx, ecx
	je	SHORT $LN24@libmpq__do
; Line 103
	dec	ecx
	mov	DWORD PTR _nr_array1$[ebp+eax*4], ecx
$LN24@libmpq__do:
; Line 107
	mov	ecx, 2
	cmp	DWORD PTR _out_length$[ebp], ecx
	jl	$LN1@libmpq__do
; Line 113
	mov	dx, WORD PTR _nr_array2$[ebp+eax*4]
	mov	WORD PTR [edi], dx
	add	edi, ecx
; Line 114
	sub	DWORD PTR _out_length$[ebp], ecx
	mov	DWORD PTR _out$[ebp], edi
; Line 117
	jmp	$LN1@libmpq__do
$LN28@libmpq__do:
; Line 165
	mov	ecx, DWORD PTR _nr_array1$[ebp+eax*4]
	mov	esi, DWORD PTR _wave_table_1503f1a0[ecx*4]
; Line 168
	mov	ecx, DWORD PTR _in_buf$[ebp]
	mov	cl, BYTE PTR [ecx+1]
	mov	edx, esi
	shr	edx, cl
; Line 171
	mov	ecx, DWORD PTR _nr_array2$[ebp+eax*4]
; Line 174
	test	bl, 1
	je	SHORT $LN14@libmpq__do
; Line 176
	add	edx, esi
$LN14@libmpq__do:
; Line 178
	test	bl, 2
	je	SHORT $LN13@libmpq__do
; Line 180
	mov	edi, esi
	shr	edi, 1
	add	edx, edi
	mov	edi, DWORD PTR _out$[ebp]
$LN13@libmpq__do:
; Line 182
	test	bl, 4
	je	SHORT $LN12@libmpq__do
; Line 184
	mov	edi, esi
	shr	edi, 2
	add	edx, edi
	mov	edi, DWORD PTR _out$[ebp]
$LN12@libmpq__do:
; Line 186
	test	bl, 8
	je	SHORT $LN11@libmpq__do
; Line 188
	mov	edi, esi
	shr	edi, 3
	add	edx, edi
	mov	edi, DWORD PTR _out$[ebp]
$LN11@libmpq__do:
; Line 190
	test	bl, 16					; 00000010H
	je	SHORT $LN10@libmpq__do
; Line 192
	mov	edi, esi
	shr	edi, 4
	add	edx, edi
	mov	edi, DWORD PTR _out$[ebp]
$LN10@libmpq__do:
; Line 194
	test	bl, 32					; 00000020H
	je	SHORT $LN9@libmpq__do
; Line 196
	shr	esi, 5
	add	edx, esi
$LN9@libmpq__do:
; Line 198
	test	bl, 64					; 00000040H
	je	SHORT $LN8@libmpq__do
; Line 200
	sub	ecx, edx
; Line 201
	cmp	ecx, -32768				; ffff8000H
	jg	SHORT $LN5@libmpq__do
; Line 203
	mov	ecx, -32768				; ffff8000H
; Line 206
	jmp	SHORT $LN5@libmpq__do
$LN8@libmpq__do:
; Line 208
	add	ecx, edx
; Line 209
	cmp	ecx, 32767				; 00007fffH
	jl	SHORT $LN5@libmpq__do
; Line 211
	mov	ecx, 32767				; 00007fffH
$LN5@libmpq__do:
; Line 219
	mov	edx, 2
	mov	DWORD PTR _nr_array2$[ebp+eax*4], ecx
	cmp	DWORD PTR _out_length$[ebp], edx
	jl	SHORT $LN50@libmpq__do
; Line 228
	sub	DWORD PTR _out_length$[ebp], edx
	mov	WORD PTR [edi], cx
	add	edi, edx
; Line 230
	movzx	edx, bl
	and	edx, 31					; 0000001fH
	mov	ecx, DWORD PTR _wave_table_1503f120[edx*4]
	add	DWORD PTR _nr_array1$[ebp+eax*4], ecx
	mov	ecx, DWORD PTR _nr_array1$[ebp+eax*4]
	mov	DWORD PTR _out$[ebp], edi
; Line 233
	jns	SHORT $LN3@libmpq__do
; Line 235
	mov	DWORD PTR _nr_array1$[ebp+eax*4], 0
; Line 237
	jmp	SHORT $LN49@libmpq__do
$LN3@libmpq__do:
; Line 241
	cmp	ecx, 88					; 00000058H
	jle	SHORT $LN49@libmpq__do
; Line 243
	mov	DWORD PTR _nr_array1$[ebp+eax*4], 88	; 00000058H
$LN49@libmpq__do:
	mov	esi, DWORD PTR _in$[ebp]
$LN1@libmpq__do:
; Line 81
	cmp	esi, DWORD PTR _in_end$[ebp]
	jb	$LL31@libmpq__do
$LN50@libmpq__do:
; Line 250
	mov	eax, edi
	sub	eax, DWORD PTR _out_buf$[ebp]
	pop	edi
	pop	esi
	pop	ebx
; Line 251
	mov	esp, ebp
	pop	ebp
	ret	0
_libmpq__do_decompress_wave ENDP
_TEXT	ENDS
END
