; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\programovani\WoW Editor\Test\src\Editor\Menu.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
CONST	SEGMENT
$SG119186 DB	'DBFilesClient\Map.dbc', 00H
$SG119780 DB	00H
	ORG $+1
$SG119240 DB	'Azeroth', 00H
$SG119241 DB	'Kalimdor', 00H
	ORG $+3
$SG119242 DB	'Outland', 00H
$SG119243 DB	'Northrend', 00H
	ORG $+2
$SG119265 DB	'MainMenu', 00H
	ORG $+3
$SG119278 DB	'Interface\Glues\Models\UI_%s\UI_%s.mdx', 00H
	ORG $+1
$SG119279 DB	'Test Menu.cpp 1 - Start', 00H
$SG119285 DB	'Test Menu.cpp 1 - Success', 00H
	ORG $+2
$SG119286 DB	'Test Menu.cpp 2 - Start', 00H
$SG119287 DB	'Test Menu.cpp 2 - Success', 00H
	ORG $+2
$SG119288 DB	'Test Menu.cpp 3 - Start', 00H
$SG119289 DB	'Test Menu.cpp 3 - Success', 00H
	ORG $+2
$SG119346 DB	'Loading...', 00H
	ORG $+1
$SG119362 DB	'Click to enter', 00H
	ORG $+1
$SG119364 DB	'Select your starting point', 00H
	ORG $+1
$SG119367 DB	'World of Warcraft Editor', 00H
	ORG $+3
$SG119368 DB	' ', 00H
	ORG $+2
$SG119369 DB	'World of Warcraft Editor', 00H
	ORG $+3
$SG119370 DB	'0.0.2', 00H
	ORG $+2
$SG119371 DB	'0.0.2', 00H
	ORG $+2
$SG119372 DB	'Controls', 00H
	ORG $+3
$SG119373 DB	'F1 - Toggle Models', 0aH, 'F2 - Toggle Doodads', 0aH, 'F'
	DB	'3 - Toggle Terrain', 0aH, 'F4 - Toggle Stats', 0aH, 'Shift + '
	DB	'F4 - Toggle Selecting', 0aH, 'F5 - Save Bookmark', 0aH, 'F6 -'
	DB	' Toggle Map objects', 0aH, 'F7 - Toggle Chunk lines', 0aH, 'F'
	DB	'8 - Toggle Detailed info', 0aH, 'F9 - Toggle Map contour', 0aH
	DB	'F10 - Reload Textures', 0aH, 'F11 - Reload Models', 0aH, 'F12'
	DB	' - Reload WMOs', 0aH, 'H - Disable highres terrain', 0aH, 'I '
	DB	'- Toggle invert mouse', 0aH, 'J - Reload ADT Tile', 0aH, 'K -'
	DB	' Save ADT Tile', 0aH, 'T - Changes Terrain Mode', 0aH, 'Y - C'
	DB	'hanges Brush Type', 0aH, 'M - Minimap', 0aH, 'U - New minimap'
	DB	0aH, 'Ctrl + Shift + P - Save Map to RAW', 0aH, 'Esc - Back/Ex'
	DB	'it', 0aH, 'WASD - Move', 0aH, 'R - Quick 180 degree turn', 0aH
	DB	'F - Toggle Fog', 0aH, 'G - Toggle Drawing of Chunk flag info', 0aH
	DB	'+,- - Adjust Fog distance', 0aH, 'O,P - Slower/Faster Movemen'
	DB	't', 0aH, 'B,N - Slower/Faster Time', 0aH, 0aH, 'Terrain Mode '
	DB	'- Raise/Lower', 0aH, '  Left Click + Shift - Raise Terrain', 0aH
	DB	'  Left Click + Alt - Lower Terrain', 0aH, 'Terrain Mode - Fla'
	DB	'tten/Blur', 0aH, '  Left Click + Shift - Flatten Terrain', 0aH
	DB	'  Left Click + Alt - Blur Terrain', 0aH, 00H
	ORG $+2
$SG119374 DB	'World of Warcraft is (C) Blizzard Entertainment', 00H
$SG119375 DB	'Bookmarks', 00H
	ORG $+2
$SG119697 DB	'bookmarks.txt', 00H
	ORG $+2
$SG119803 DB	'(%s) %s', 00H
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
; Line 345
	push	ebp
	mov	ebp, esp
	push	esi
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
; Line 346
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Ogtp
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx
; Line 354
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
; Line 355
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN6@scalar
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogtp
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
; Line 56
	push	ebp
	mov	ebp, esp
; Line 57
	mov	eax, DWORD PTR __Where$[ebp]
; Line 58
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; Line 62
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?compare@?$char_traits@D@std@@SAHPBD0I@Z	; std::char_traits<char>::compare
; Function compile flags: /Ogtp
;	COMDAT ?compare@?$char_traits@D@std@@SAHPBD0I@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?compare@?$char_traits@D@std@@SAHPBD0I@Z PROC		; std::char_traits<char>::compare, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 485
	push	ebp
	mov	ebp, esp
; Line 486
	mov	ecx, DWORD PTR __First2$[ebp]
	mov	edx, DWORD PTR __First1$[ebp]
	push	esi
	mov	esi, DWORD PTR __Count$[ebp]
	push	edi
	cmp	esi, 4
	jb	SHORT $LN11@compare
$LL4@compare:
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR [ecx]
	jne	SHORT $LN5@compare
	sub	esi, 4
	add	ecx, 4
	add	edx, 4
	cmp	esi, 4
	jae	SHORT $LL4@compare
$LN11@compare:
	test	esi, esi
	je	SHORT $LN6@compare
$LN5@compare:
	movzx	eax, BYTE PTR [edx]
	movzx	edi, BYTE PTR [ecx]
	sub	eax, edi
	jne	SHORT $LN7@compare
	cmp	esi, 1
	jbe	SHORT $LN6@compare
	movzx	eax, BYTE PTR [edx+1]
	movzx	edi, BYTE PTR [ecx+1]
	sub	eax, edi
	jne	SHORT $LN7@compare
	cmp	esi, 2
	jbe	SHORT $LN6@compare
	movzx	eax, BYTE PTR [edx+2]
	movzx	edi, BYTE PTR [ecx+2]
	sub	eax, edi
	jne	SHORT $LN7@compare
	cmp	esi, 3
	jbe	SHORT $LN6@compare
	movzx	eax, BYTE PTR [edx+3]
	movzx	ecx, BYTE PTR [ecx+3]
	sub	eax, ecx
$LN7@compare:
	sar	eax, 31					; 0000001fH
	pop	edi
	or	eax, 1
	pop	esi
; Line 487
	pop	ebp
	ret	0
$LN6@compare:
	pop	edi
; Line 486
	xor	eax, eax
	pop	esi
; Line 487
	pop	ebp
	ret	0
?compare@?$char_traits@D@std@@SAHPBD0I@Z ENDP		; std::char_traits<char>::compare
_TEXT	ENDS
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
; Function compile flags: /Ogtp
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT
; Line 490
	push	ebp
	mov	ebp, esp
; Line 491
	mov	eax, DWORD PTR __First$[ebp]
	lea	edx, DWORD PTR [eax+1]
	npad	7
$LL3@length:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL3@length
	sub	eax, edx
; Line 492
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
EXTRN	_memcpy:PROC
; Function compile flags: /Ogtp
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT
; Line 496
	push	ebp
	mov	ebp, esp
; Line 498
	pop	ebp
; Line 497
	jmp	_memcpy
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
EXTRN	__imp__memmove:PROC
; Function compile flags: /Ogtp
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT
; Line 516
	push	ebp
	mov	ebp, esp
; Line 518
	pop	ebp
; Line 517
	jmp	DWORD PTR __imp__memmove
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
PUBLIC	?assign@?$char_traits@D@std@@SAPADPADID@Z	; std::char_traits<char>::assign
EXTRN	_memset:PROC
; Function compile flags: /Ogtp
;	COMDAT ?assign@?$char_traits@D@std@@SAPADPADID@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ch$ = 16						; size = 1
?assign@?$char_traits@D@std@@SAPADPADID@Z PROC		; std::char_traits<char>::assign, COMDAT
; Line 521
	push	ebp
	mov	ebp, esp
; Line 522
	mov	eax, DWORD PTR __Count$[ebp]
	movsx	ecx, BYTE PTR __Ch$[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	push	eax
	push	ecx
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 523
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAPADPADID@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
; Function compile flags: /Ogtp
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT
; Line 526
	push	ebp
	mov	ebp, esp
; Line 527
	mov	eax, DWORD PTR __Right$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	edx, DWORD PTR __Left$[ebp]
	mov	BYTE PTR [edx], cl
; Line 528
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
PUBLIC	?to_char_type@?$char_traits@D@std@@SADABH@Z	; std::char_traits<char>::to_char_type
; Function compile flags: /Ogtp
;	COMDAT ?to_char_type@?$char_traits@D@std@@SADABH@Z
_TEXT	SEGMENT
__Meta$ = 8						; size = 4
?to_char_type@?$char_traits@D@std@@SADABH@Z PROC	; std::char_traits<char>::to_char_type, COMDAT
; Line 541
	push	ebp
	mov	ebp, esp
; Line 542
	mov	eax, DWORD PTR __Meta$[ebp]
	mov	al, BYTE PTR [eax]
; Line 543
	pop	ebp
	ret	0
?to_char_type@?$char_traits@D@std@@SADABH@Z ENDP	; std::char_traits<char>::to_char_type
_TEXT	ENDS
PUBLIC	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z	; std::char_traits<char>::eq_int_type
; Function compile flags: /Ogtp
;	COMDAT ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z PROC	; std::char_traits<char>::eq_int_type, COMDAT
; Line 552
	push	ebp
	mov	ebp, esp
; Line 553
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Right$[ebp]
	xor	eax, eax
	cmp	ecx, DWORD PTR [edx]
	sete	al
; Line 554
	pop	ebp
	ret	0
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ENDP	; std::char_traits<char>::eq_int_type
_TEXT	ENDS
PUBLIC	?eof@?$char_traits@D@std@@SAHXZ			; std::char_traits<char>::eof
; Function compile flags: /Ogtp
;	COMDAT ?eof@?$char_traits@D@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$char_traits@D@std@@SAHXZ PROC			; std::char_traits<char>::eof, COMDAT
; Line 563
	or	eax, -1
; Line 564
	ret	0
?eof@?$char_traits@D@std@@SAHXZ ENDP			; std::char_traits<char>::eof
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
; Function compile flags: /Ogtp
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 49
	ret	4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
PUBLIC	??_7AppState@@6B@				; AppState::`vftable'
PUBLIC	??0AppState@@QAE@XZ				; AppState::AppState
PUBLIC	??_R4AppState@@6B@				; AppState::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVAppState@@@8				; AppState `RTTI Type Descriptor'
PUBLIC	??_R3AppState@@8				; AppState::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2AppState@@8				; AppState::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@AppState@@8			; AppState::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?tick@AppState@@UAEXMM@Z			; AppState::tick
PUBLIC	?display@AppState@@UAEXMM@Z			; AppState::display
PUBLIC	?mousemove@AppState@@UAEXPAUSDL_MouseMotionEvent@@@Z ; AppState::mousemove
PUBLIC	?mouseclick@AppState@@UAEXPAUSDL_MouseButtonEvent@@@Z ; AppState::mouseclick
PUBLIC	?keypressed@AppState@@UAEXPAUSDL_KeyboardEvent@@@Z ; AppState::keypressed
EXTRN	??_EAppState@@UAEPAXI@Z:PROC			; AppState::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@AppState@@8
; File c:\programovani\wow editor\test\src\editor\appstate.h
rdata$r	SEGMENT
??_R1A@?0A@EA@AppState@@8 DD FLAT:??_R0?AVAppState@@@8	; AppState::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3AppState@@8
rdata$r	ENDS
;	COMDAT ??_R2AppState@@8
rdata$r	SEGMENT
??_R2AppState@@8 DD FLAT:??_R1A@?0A@EA@AppState@@8	; AppState::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3AppState@@8
rdata$r	SEGMENT
??_R3AppState@@8 DD 00H					; AppState::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2AppState@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVAppState@@@8
_DATA	SEGMENT
??_R0?AVAppState@@@8 DD FLAT:??_7type_info@@6B@		; AppState `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVAppState@@', 00H
_DATA	ENDS
;	COMDAT ??_R4AppState@@6B@
rdata$r	SEGMENT
??_R4AppState@@6B@ DD 00H				; AppState::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVAppState@@@8
	DD	FLAT:??_R3AppState@@8
rdata$r	ENDS
;	COMDAT ??_7AppState@@6B@
CONST	SEGMENT
??_7AppState@@6B@ DD FLAT:??_R4AppState@@6B@		; AppState::`vftable'
	DD	FLAT:??_EAppState@@UAEPAXI@Z
	DD	FLAT:?tick@AppState@@UAEXMM@Z
	DD	FLAT:?display@AppState@@UAEXMM@Z
	DD	FLAT:?mousemove@AppState@@UAEXPAUSDL_MouseMotionEvent@@@Z
	DD	FLAT:?mouseclick@AppState@@UAEXPAUSDL_MouseButtonEvent@@@Z
	DD	FLAT:?keypressed@AppState@@UAEXPAUSDL_KeyboardEvent@@@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??0AppState@@QAE@XZ
_TEXT	SEGMENT
??0AppState@@QAE@XZ PROC				; AppState::AppState, COMDAT
; _this$ = ecx
; Line 10
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7AppState@@6B@
	ret	0
??0AppState@@QAE@XZ ENDP				; AppState::AppState
_TEXT	ENDS
PUBLIC	??1AppState@@UAE@XZ				; AppState::~AppState
; Function compile flags: /Ogtp
;	COMDAT ??1AppState@@UAE@XZ
_TEXT	SEGMENT
??1AppState@@UAE@XZ PROC				; AppState::~AppState, COMDAT
; _this$ = ecx
; Line 11
	mov	DWORD PTR [ecx], OFFSET ??_7AppState@@6B@
	ret	0
??1AppState@@UAE@XZ ENDP				; AppState::~AppState
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?tick@AppState@@UAEXMM@Z
_TEXT	SEGMENT
_t$ = 8							; size = 4
_dt$ = 12						; size = 4
?tick@AppState@@UAEXMM@Z PROC				; AppState::tick, COMDAT
; _this$ = ecx
; Line 13
	ret	8
?tick@AppState@@UAEXMM@Z ENDP				; AppState::tick
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?display@AppState@@UAEXMM@Z
_TEXT	SEGMENT
_t$ = 8							; size = 4
_dt$ = 12						; size = 4
?display@AppState@@UAEXMM@Z PROC			; AppState::display, COMDAT
; _this$ = ecx
; Line 14
	ret	8
?display@AppState@@UAEXMM@Z ENDP			; AppState::display
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?mousemove@AppState@@UAEXPAUSDL_MouseMotionEvent@@@Z
_TEXT	SEGMENT
_e$ = 8							; size = 4
?mousemove@AppState@@UAEXPAUSDL_MouseMotionEvent@@@Z PROC ; AppState::mousemove, COMDAT
; _this$ = ecx
; Line 16
	ret	4
?mousemove@AppState@@UAEXPAUSDL_MouseMotionEvent@@@Z ENDP ; AppState::mousemove
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?mouseclick@AppState@@UAEXPAUSDL_MouseButtonEvent@@@Z
_TEXT	SEGMENT
_e$ = 8							; size = 4
?mouseclick@AppState@@UAEXPAUSDL_MouseButtonEvent@@@Z PROC ; AppState::mouseclick, COMDAT
; _this$ = ecx
; Line 17
	ret	4
?mouseclick@AppState@@UAEXPAUSDL_MouseButtonEvent@@@Z ENDP ; AppState::mouseclick
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?keypressed@AppState@@UAEXPAUSDL_KeyboardEvent@@@Z
_TEXT	SEGMENT
_e$ = 8							; size = 4
?keypressed@AppState@@UAEXPAUSDL_KeyboardEvent@@@Z PROC	; AppState::keypressed, COMDAT
; _this$ = ecx
; Line 18
	ret	4
?keypressed@AppState@@UAEXPAUSDL_KeyboardEvent@@@Z ENDP	; AppState::keypressed
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_GAppState@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GAppState@@UAEPAXI@Z PROC				; AppState::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	test	BYTE PTR ___flags$[ebp], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7AppState@@6B@
	je	SHORT $LN6@scalar@2
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar@2:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_GAppState@@UAEPAXI@Z ENDP				; AppState::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?_Register@facet@locale@std@@QAEXXZ		; std::locale::facet::_Register
EXTRN	?_Facet_Register@facet@locale@std@@CAXPAV123@@Z:PROC ; std::locale::facet::_Facet_Register
; Function compile flags: /Ogtp
;	COMDAT ?_Register@facet@locale@std@@QAEXXZ
_TEXT	SEGMENT
?_Register@facet@locale@std@@QAEXXZ PROC		; std::locale::facet::_Register, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xlocale
; Line 133
	push	ecx
	call	?_Facet_Register@facet@locale@std@@CAXPAV123@@Z ; std::locale::facet::_Facet_Register
	pop	ecx
; Line 135
	ret	0
?_Register@facet@locale@std@@QAEXXZ ENDP		; std::locale::facet::_Register
_TEXT	ENDS
PUBLIC	??1locale@std@@QAE@XZ				; std::locale::~locale
EXTRN	__imp_?_Decref@facet@locale@std@@QAEPAV123@XZ:PROC
; Function compile flags: /Ogtp
;	COMDAT ??1locale@std@@QAE@XZ
_TEXT	SEGMENT
??1locale@std@@QAE@XZ PROC				; std::locale::~locale, COMDAT
; _this$ = ecx
; Line 410
	mov	ecx, DWORD PTR [ecx]
	test	ecx, ecx
	je	SHORT $LN4@locale
; Line 411
	call	DWORD PTR __imp_?_Decref@facet@locale@std@@QAEPAV123@XZ
	test	eax, eax
	je	SHORT $LN4@locale
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx]
	push	1
	call	eax
$LN4@locale:
; Line 412
	ret	0
??1locale@std@@QAE@XZ ENDP				; std::locale::~locale
_TEXT	ENDS
PUBLIC	?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z	; std::locale::_Getfacet
EXTRN	__imp_?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ:PROC
; Function compile flags: /Ogtp
;	COMDAT ?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z
_TEXT	SEGMENT
__Id$ = 8						; size = 4
?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z PROC		; std::locale::_Getfacet, COMDAT
; _this$ = ecx
; Line 436
	push	ebp
	mov	ebp, esp
; Line 438
	mov	ecx, DWORD PTR [ecx]
	push	esi
	mov	esi, DWORD PTR __Id$[ebp]
	cmp	esi, DWORD PTR [ecx+12]
	jae	SHORT $LN6@Getfacet
	mov	eax, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax+esi*4]
; Line 439
	test	eax, eax
	jne	SHORT $LN1@Getfacet
$LN10@Getfacet:
	cmp	BYTE PTR [ecx+20], 0
	je	SHORT $LN1@Getfacet
; Line 443
	call	DWORD PTR __imp_?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ
; Line 446
	cmp	esi, DWORD PTR [eax+12]
	jae	SHORT $LN8@Getfacet
	mov	ecx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [ecx+esi*4]
	pop	esi
; Line 448
	pop	ebp
	ret	4
$LN6@Getfacet:
; Line 438
	xor	eax, eax
; Line 439
	jmp	SHORT $LN10@Getfacet
$LN8@Getfacet:
; Line 446
	xor	eax, eax
$LN1@Getfacet:
	pop	esi
; Line 448
	pop	ebp
	ret	4
?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z ENDP		; std::locale::_Getfacet
_TEXT	ENDS
PUBLIC	??0Vec3D@@QAE@MMM@Z				; Vec3D::Vec3D
EXTRN	__fltused:DWORD
; Function compile flags: /Ogtp
;	COMDAT ??0Vec3D@@QAE@MMM@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_z0$ = 16						; size = 4
??0Vec3D@@QAE@MMM@Z PROC				; Vec3D::Vec3D, COMDAT
; _this$ = ecx
; File c:\programovani\wow editor\test\src\editor\vec3d.h
; Line 12
	push	ebp
	mov	ebp, esp
	mov	edx, DWORD PTR _y0$[ebp]
	mov	eax, ecx
	mov	ecx, DWORD PTR _x0$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _z0$[ebp]
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], ecx
	pop	ebp
	ret	12					; 0000000cH
??0Vec3D@@QAE@MMM@Z ENDP				; Vec3D::Vec3D
_TEXT	ENDS
PUBLIC	??0Vec3D@@QAE@ABV0@@Z				; Vec3D::Vec3D
; Function compile flags: /Ogtp
;	COMDAT ??0Vec3D@@QAE@ABV0@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
??0Vec3D@@QAE@ABV0@@Z PROC				; Vec3D::Vec3D, COMDAT
; _this$ = ecx
; Line 14
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], ecx
	pop	ebp
	ret	4
??0Vec3D@@QAE@ABV0@@Z ENDP				; Vec3D::Vec3D
_TEXT	ENDS
PUBLIC	??4Vec3D@@QAEAAV0@ABV0@@Z			; Vec3D::operator=
; Function compile flags: /Ogtp
;	COMDAT ??4Vec3D@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
??4Vec3D@@QAEAAV0@ABV0@@Z PROC				; Vec3D::operator=, COMDAT
; _this$ = ecx
; Line 17
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
; Line 18
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 19
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 20
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], ecx
; Line 22
	pop	ebp
	ret	4
??4Vec3D@@QAEAAV0@ABV0@@Z ENDP				; Vec3D::operator=
_TEXT	ENDS
PUBLIC	??HVec3D@@QBE?AV0@ABV0@@Z			; Vec3D::operator+
; Function compile flags: /Ogtp
;	COMDAT ??HVec3D@@QBE?AV0@ABV0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??HVec3D@@QBE?AV0@ABV0@@Z PROC				; Vec3D::operator+, COMDAT
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
; Line 26
	mov	edx, DWORD PTR _v$[ebp]
	fld	DWORD PTR [edx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	fadd	DWORD PTR [ecx]
	fstp	DWORD PTR [eax]
	fld	DWORD PTR [edx+4]
	fadd	DWORD PTR [ecx+4]
	fstp	DWORD PTR [eax+4]
	fld	DWORD PTR [edx+8]
	fadd	DWORD PTR [ecx+8]
	fstp	DWORD PTR [eax+8]
; Line 28
	pop	ebp
	ret	8
??HVec3D@@QBE?AV0@ABV0@@Z ENDP				; Vec3D::operator+
_TEXT	ENDS
PUBLIC	??0Vec4D@@QAE@MMMM@Z				; Vec4D::Vec4D
; Function compile flags: /Ogtp
;	COMDAT ??0Vec4D@@QAE@MMMM@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_z0$ = 16						; size = 4
_w0$ = 20						; size = 4
??0Vec4D@@QAE@MMMM@Z PROC				; Vec4D::Vec4D, COMDAT
; _this$ = ecx
; File c:\programovani\wow editor\test\src\editor\quaternion.h
; Line 12
	push	ebp
	mov	ebp, esp
	mov	edx, DWORD PTR _y0$[ebp]
	mov	eax, ecx
	mov	ecx, DWORD PTR _x0$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _z0$[ebp]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _w0$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	pop	ebp
	ret	16					; 00000010H
??0Vec4D@@QAE@MMMM@Z ENDP				; Vec4D::Vec4D
_TEXT	ENDS
PUBLIC	??BVec4D@@QAEPAMXZ				; Vec4D::operator float *
; Function compile flags: /Ogtp
;	COMDAT ??BVec4D@@QAEPAMXZ
_TEXT	SEGMENT
??BVec4D@@QAEPAMXZ PROC					; Vec4D::operator float *, COMDAT
; _this$ = ecx
; Line 99
	mov	eax, ecx
; Line 101
	ret	0
??BVec4D@@QAEPAMXZ ENDP					; Vec4D::operator float *
_TEXT	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	push	edi
	mov	edi, DWORD PTR ___n$[ebp]
	dec	edi
	js	SHORT $LN1@vector
	push	ebx
	mov	ebx, DWORD PTR ___f$[ebp]
	push	esi
	mov	esi, DWORD PTR ___t$[ebp]
$LL2@vector:
	mov	ecx, esi
	call	ebx
	add	esi, DWORD PTR ___s$[ebp]
	dec	edi
	jns	SHORT $LL2@vector
	pop	esi
	pop	ebx
$LN1@vector:
	pop	edi
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?getUInt@Record@DBCFile@@QBEII@Z		; DBCFile::Record::getUInt
; Function compile flags: /Ogtp
;	COMDAT ?getUInt@Record@DBCFile@@QBEII@Z
_TEXT	SEGMENT
_field$ = 8						; size = 4
?getUInt@Record@DBCFile@@QBEII@Z PROC			; DBCFile::Record::getUInt, COMDAT
; _this$ = ecx
; File c:\programovani\wow editor\test\src\editor\dbcfile.h
; Line 44
	push	ebp
	mov	ebp, esp
; Line 46
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _field$[ebp]
	mov	eax, DWORD PTR [eax+ecx*4]
; Line 47
	pop	ebp
	ret	4
?getUInt@Record@DBCFile@@QBEII@Z ENDP			; DBCFile::Record::getUInt
_TEXT	ENDS
PUBLIC	?getString@Record@DBCFile@@QBEPBDI@Z		; DBCFile::Record::getString
; Function compile flags: /Ogtp
;	COMDAT ?getString@Record@DBCFile@@QBEPBDI@Z
_TEXT	SEGMENT
_field$ = 8						; size = 4
?getString@Record@DBCFile@@QBEPBDI@Z PROC		; DBCFile::Record::getString, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
; Line 58
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _field$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [eax+edx*4]
	add	eax, DWORD PTR [ecx+48]
; Line 59
	pop	ebp
	ret	4
?getString@Record@DBCFile@@QBEPBDI@Z ENDP		; DBCFile::Record::getString
_TEXT	ENDS
PUBLIC	??EIterator@DBCFile@@QAEAAV01@XZ		; DBCFile::Iterator::operator++
; Function compile flags: /Ogtp
;	COMDAT ??EIterator@DBCFile@@QAEAAV01@XZ
_TEXT	SEGMENT
??EIterator@DBCFile@@QAEAAV01@XZ PROC			; DBCFile::Iterator::operator++, COMDAT
; _this$ = ecx
; Line 77
	mov	eax, ecx
; Line 78
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+28]
	add	DWORD PTR [eax], edx
; Line 80
	ret	0
??EIterator@DBCFile@@QAEAAV01@XZ ENDP			; DBCFile::Iterator::operator++
_TEXT	ENDS
PUBLIC	??CIterator@DBCFile@@QBEPBVRecord@1@XZ		; DBCFile::Iterator::operator->
; Function compile flags: /Ogtp
;	COMDAT ??CIterator@DBCFile@@QBEPBVRecord@1@XZ
_TEXT	SEGMENT
??CIterator@DBCFile@@QBEPBVRecord@1@XZ PROC		; DBCFile::Iterator::operator->, COMDAT
; _this$ = ecx
; Line 83
	mov	eax, ecx
; Line 85
	ret	0
??CIterator@DBCFile@@QBEPBVRecord@1@XZ ENDP		; DBCFile::Iterator::operator->
_TEXT	ENDS
PUBLIC	??9Iterator@DBCFile@@QBE_NABV01@@Z		; DBCFile::Iterator::operator!=
; Function compile flags: /Ogtp
;	COMDAT ??9Iterator@DBCFile@@QBE_NABV01@@Z
_TEXT	SEGMENT
_b$ = 8							; size = 4
??9Iterator@DBCFile@@QBE_NABV01@@Z PROC			; DBCFile::Iterator::operator!=, COMDAT
; _this$ = ecx
; Line 92
	push	ebp
	mov	ebp, esp
; Line 93
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _b$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	al
; Line 94
	pop	ebp
	ret	4
??9Iterator@DBCFile@@QBE_NABV01@@Z ENDP			; DBCFile::Iterator::operator!=
_TEXT	ENDS
PUBLIC	?keypressed@Menu@@UAEXPAUSDL_KeyboardEvent@@@Z	; Menu::keypressed
EXTRN	?gPop@@3_NA:BYTE				; gPop
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_e$ = 8							; size = 4
?keypressed@Menu@@UAEXPAUSDL_KeyboardEvent@@@Z PROC	; Menu::keypressed
; _this$ = ecx
; File c:\programovani\wow editor\test\src\editor\menu.cpp
; Line 382
	push	ebp
	mov	ebp, esp
; Line 383
	mov	eax, DWORD PTR _e$[ebp]
	cmp	BYTE PTR [eax], 2
	jne	SHORT $LN1@keypressed
; Line 385
	cmp	DWORD PTR [eax+8], 27			; 0000001bH
	jne	SHORT $LN1@keypressed
; Line 387
	mov	BYTE PTR ?gPop@@3_NA, 1			; gPop
$LN1@keypressed:
; Line 390
	pop	ebp
	ret	4
?keypressed@Menu@@UAEXPAUSDL_KeyboardEvent@@@Z ENDP	; Menu::keypressed
_TEXT	ENDS
PUBLIC	?mousemove@Menu@@UAEXPAUSDL_MouseMotionEvent@@@Z ; Menu::mousemove
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_e$ = 8							; size = 4
?mousemove@Menu@@UAEXPAUSDL_MouseMotionEvent@@@Z PROC	; Menu::mousemove
; _this$ = ecx
; Line 395
	ret	4
?mousemove@Menu@@UAEXPAUSDL_MouseMotionEvent@@@Z ENDP	; Menu::mousemove
_TEXT	ENDS
PUBLIC	?hit@Clickable@@QAE_NHH@Z			; Clickable::hit
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?hit@Clickable@@QAE_NHH@Z PROC				; Clickable::hit
; _this$ = ecx
; Line 398
	push	ebp
	mov	ebp, esp
; Line 399
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR [ecx+4]
	jl	SHORT $LN3@hit
	cmp	eax, DWORD PTR [ecx+12]
	jge	SHORT $LN3@hit
	mov	eax, DWORD PTR _x$[ebp]
	cmp	eax, DWORD PTR [ecx]
	jl	SHORT $LN3@hit
	cmp	eax, DWORD PTR [ecx+8]
	jge	SHORT $LN3@hit
	mov	eax, 1
; Line 400
	pop	ebp
	ret	8
$LN3@hit:
; Line 399
	xor	eax, eax
; Line 400
	pop	ebp
	ret	8
?hit@Clickable@@QAE_NHH@Z ENDP				; Clickable::hit
_TEXT	ENDS
PUBLIC	??_GWorld@@QAEPAXI@Z				; World::`scalar deleting destructor'
EXTRN	??1World@@QAE@XZ:PROC				; World::~World
; Function compile flags: /Ogtp
;	COMDAT ??_GWorld@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GWorld@@QAEPAXI@Z PROC				; World::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	call	??1World@@QAE@XZ			; World::~World
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN4@scalar@3
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@scalar@3:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_GWorld@@QAEPAXI@Z ENDP				; World::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Ogtp
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1511
	mov	eax, DWORD PTR [ecx+16]
; Line 1512
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
PUBLIC	??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ ; std::basic_istream<char,std::char_traits<char> >::sentry::operator int std::_Bool_struct::*
; Function compile flags: /Ogtp
;	COMDAT ??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ
_TEXT	SEGMENT
??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ PROC ; std::basic_istream<char,std::char_traits<char> >::sentry::operator int std::_Bool_struct::*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\istream
; Line 105
	xor	eax, eax
	cmp	BYTE PTR [ecx+4], al
	setne	al
	dec	eax
; Line 106
	ret	0
??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ ENDP ; std::basic_istream<char,std::char_traits<char> >::sentry::operator int std::_Bool_struct::*
_TEXT	ENDS
PUBLIC	??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
; Function compile flags: /Ogtp
;	COMDAT ??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT
; _this$ = ecx
; Line 83
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax+56]
	test	eax, eax
	je	SHORT $LN1@Sentry_bas
; Line 84
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+8]
	jmp	eax
$LN1@Sentry_bas:
; Line 85
	ret	0
??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
PUBLIC	?size@?$vector@VWMOInstance@@V?$allocator@VWMOInstance@@@std@@@std@@QBEIXZ ; std::vector<WMOInstance,std::allocator<WMOInstance> >::size
; Function compile flags: /Ogtp
;	COMDAT ?size@?$vector@VWMOInstance@@V?$allocator@VWMOInstance@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@VWMOInstance@@V?$allocator@VWMOInstance@@@std@@@std@@QBEIXZ PROC ; std::vector<WMOInstance,std::allocator<WMOInstance> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 879
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, DWORD PTR [ecx]
	mov	eax, 954437177				; 38e38e39H
	imul	edx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
; Line 880
	ret	0
?size@?$vector@VWMOInstance@@V?$allocator@VWMOInstance@@@std@@@std@@QBEIXZ ENDP ; std::vector<WMOInstance,std::allocator<WMOInstance> >::size
_TEXT	ENDS
PUBLIC	??A?$vector@VWMOInstance@@V?$allocator@VWMOInstance@@@std@@@std@@QAEAAVWMOInstance@@I@Z ; std::vector<WMOInstance,std::allocator<WMOInstance> >::operator[]
; Function compile flags: /Ogtp
;	COMDAT ??A?$vector@VWMOInstance@@V?$allocator@VWMOInstance@@@std@@@std@@QAEAAVWMOInstance@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@VWMOInstance@@V?$allocator@VWMOInstance@@@std@@@std@@QAEAAVWMOInstance@@I@Z PROC ; std::vector<WMOInstance,std::allocator<WMOInstance> >::operator[], COMDAT
; _this$ = ecx
; Line 928
	push	ebp
	mov	ebp, esp
; Line 940
	mov	eax, DWORD PTR __Pos$[ebp]
	mov	ecx, DWORD PTR [ecx]
	lea	eax, DWORD PTR [eax+eax*8]
	lea	eax, DWORD PTR [ecx+eax*8]
; Line 941
	pop	ebp
	ret	4
??A?$vector@VWMOInstance@@V?$allocator@VWMOInstance@@@std@@@std@@QAEAAVWMOInstance@@I@Z ENDP ; std::vector<WMOInstance,std::allocator<WMOInstance> >::operator[]
_TEXT	ENDS
PUBLIC	?size@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QBEIXZ ; std::vector<MapEntry,std::allocator<MapEntry> >::size
; Function compile flags: /Ogtp
;	COMDAT ?size@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QBEIXZ PROC ; std::vector<MapEntry,std::allocator<MapEntry> >::size, COMDAT
; _this$ = ecx
; Line 879
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, DWORD PTR [ecx]
	mov	eax, 1808407283				; 6bca1af3H
	imul	edx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
; Line 880
	ret	0
?size@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QBEIXZ ENDP ; std::vector<MapEntry,std::allocator<MapEntry> >::size
_TEXT	ENDS
PUBLIC	??A?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEAAUMapEntry@@I@Z ; std::vector<MapEntry,std::allocator<MapEntry> >::operator[]
; Function compile flags: /Ogtp
;	COMDAT ??A?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEAAUMapEntry@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEAAUMapEntry@@I@Z PROC ; std::vector<MapEntry,std::allocator<MapEntry> >::operator[], COMDAT
; _this$ = ecx
; Line 928
	push	ebp
	mov	ebp, esp
; Line 940
	mov	eax, DWORD PTR __Pos$[ebp]
	imul	eax, 76					; 0000004cH
	add	eax, DWORD PTR [ecx]
; Line 941
	pop	ebp
	ret	4
??A?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEAAUMapEntry@@I@Z ENDP ; std::vector<MapEntry,std::allocator<MapEntry> >::operator[]
_TEXT	ENDS
PUBLIC	?size@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QBEIXZ ; std::vector<Bookmark,std::allocator<Bookmark> >::size
; Function compile flags: /Ogtp
;	COMDAT ?size@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QBEIXZ PROC ; std::vector<Bookmark,std::allocator<Bookmark> >::size, COMDAT
; _this$ = ecx
; Line 878
	push	esi
; Line 879
	mov	esi, DWORD PTR [ecx+4]
	sub	esi, DWORD PTR [ecx]
	mov	eax, -2004318071			; 88888889H
	imul	esi
	add	edx, esi
	sar	edx, 6
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	pop	esi
; Line 880
	ret	0
?size@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QBEIXZ ENDP ; std::vector<Bookmark,std::allocator<Bookmark> >::size
_TEXT	ENDS
PUBLIC	??A?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEAAUBookmark@@I@Z ; std::vector<Bookmark,std::allocator<Bookmark> >::operator[]
; Function compile flags: /Ogtp
;	COMDAT ??A?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEAAUBookmark@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEAAUBookmark@@I@Z PROC ; std::vector<Bookmark,std::allocator<Bookmark> >::operator[], COMDAT
; _this$ = ecx
; Line 928
	push	ebp
	mov	ebp, esp
; Line 940
	mov	eax, DWORD PTR __Pos$[ebp]
	mov	edx, eax
	shl	edx, 4
	sub	edx, eax
	mov	eax, DWORD PTR [ecx]
	lea	eax, DWORD PTR [eax+edx*8]
; Line 941
	pop	ebp
	ret	4
??A?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEAAUBookmark@@I@Z ENDP ; std::vector<Bookmark,std::allocator<Bookmark> >::operator[]
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogtp
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 2008
	mov	eax, ecx
; Line 2010
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN4@Myptr
	mov	eax, DWORD PTR [eax]
$LN4@Myptr:
; Line 2011
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 459
	ret	0
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
; Function compile flags: /Ogtp
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 161
	mov	eax, ecx
; Line 163
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
; Function compile flags: /Ogtp
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; Line 165
	mov	eax, ecx
; Line 167
	ret	4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
; Function compile flags: /Ogtp
;	COMDAT ??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
__Istr$ = 8						; size = 4
??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\istream
; Line 76
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Istr$[ebp]
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], eax
; Line 77
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx+eax+56]
	test	ecx, ecx
	je	SHORT $LN8@Sentry_bas@2
; Line 78
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+4]
	call	edx
$LN8@Sentry_bas@2:
; Line 79
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBE_NPBQAVAppState@@@Z ; std::vector<AppState *,std::allocator<AppState *> >::_Inside
; Function compile flags: /Ogtp
;	COMDAT ?_Inside@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBE_NPBQAVAppState@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBE_NPBQAVAppState@@@Z PROC ; std::vector<AppState *,std::allocator<AppState *> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1285
	push	ebp
	mov	ebp, esp
; Line 1286
	mov	eax, DWORD PTR __Ptr$[ebp]
	cmp	eax, DWORD PTR [ecx+4]
	jae	SHORT $LN3@Inside
	cmp	DWORD PTR [ecx], eax
	ja	SHORT $LN3@Inside
	mov	eax, 1
; Line 1287
	pop	ebp
	ret	4
$LN3@Inside:
; Line 1286
	xor	eax, eax
; Line 1287
	pop	ebp
	ret	4
?_Inside@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBE_NPBQAVAppState@@@Z ENDP ; std::vector<AppState *,std::allocator<AppState *> >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBEXPAPAVAppState@@0@Z ; std::vector<AppState *,std::allocator<AppState *> >::_Orphan_range
; Function compile flags: /Ogtp
;	COMDAT ?_Orphan_range@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBEXPAPAVAppState@@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBEXPAPAVAppState@@0@Z PROC ; std::vector<AppState *,std::allocator<AppState *> >::_Orphan_range, COMDAT
; _this$ = ecx
; Line 1454
	ret	8
?_Orphan_range@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBEXPAPAVAppState@@0@Z ENDP ; std::vector<AppState *,std::allocator<AppState *> >::_Orphan_range
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IBE_NPBUMapEntry@@@Z ; std::vector<MapEntry,std::allocator<MapEntry> >::_Inside
; Function compile flags: /Ogtp
;	COMDAT ?_Inside@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IBE_NPBUMapEntry@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IBE_NPBUMapEntry@@@Z PROC ; std::vector<MapEntry,std::allocator<MapEntry> >::_Inside, COMDAT
; _this$ = ecx
; Line 1285
	push	ebp
	mov	ebp, esp
; Line 1286
	mov	eax, DWORD PTR __Ptr$[ebp]
	cmp	eax, DWORD PTR [ecx+4]
	jae	SHORT $LN3@Inside@2
	cmp	DWORD PTR [ecx], eax
	ja	SHORT $LN3@Inside@2
	mov	eax, 1
; Line 1287
	pop	ebp
	ret	4
$LN3@Inside@2:
; Line 1286
	xor	eax, eax
; Line 1287
	pop	ebp
	ret	4
?_Inside@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IBE_NPBUMapEntry@@@Z ENDP ; std::vector<MapEntry,std::allocator<MapEntry> >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IBEXPAUMapEntry@@0@Z ; std::vector<MapEntry,std::allocator<MapEntry> >::_Orphan_range
; Function compile flags: /Ogtp
;	COMDAT ?_Orphan_range@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IBEXPAUMapEntry@@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IBEXPAUMapEntry@@0@Z PROC ; std::vector<MapEntry,std::allocator<MapEntry> >::_Orphan_range, COMDAT
; _this$ = ecx
; Line 1454
	ret	8
?_Orphan_range@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IBEXPAUMapEntry@@0@Z ENDP ; std::vector<MapEntry,std::allocator<MapEntry> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAE@XZ ; std::_Vector_val<MapEntry,std::allocator<MapEntry> >::~_Vector_val<MapEntry,std::allocator<MapEntry> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Vector_val@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<MapEntry,std::allocator<MapEntry> >::~_Vector_val<MapEntry,std::allocator<MapEntry> >, COMDAT
; _this$ = ecx
; Line 434
	ret	0
??1?$_Vector_val@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<MapEntry,std::allocator<MapEntry> >::~_Vector_val<MapEntry,std::allocator<MapEntry> >
_TEXT	ENDS
PUBLIC	??0?$allocator@UMapEntry@@@std@@QAE@XZ		; std::allocator<MapEntry>::allocator<MapEntry>
; Function compile flags: /Ogtp
;	COMDAT ??0?$allocator@UMapEntry@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@UMapEntry@@@std@@QAE@XZ PROC		; std::allocator<MapEntry>::allocator<MapEntry>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 161
	mov	eax, ecx
; Line 163
	ret	0
??0?$allocator@UMapEntry@@@std@@QAE@XZ ENDP		; std::allocator<MapEntry>::allocator<MapEntry>
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IBE_NPBUBookmark@@@Z ; std::vector<Bookmark,std::allocator<Bookmark> >::_Inside
; Function compile flags: /Ogtp
;	COMDAT ?_Inside@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IBE_NPBUBookmark@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IBE_NPBUBookmark@@@Z PROC ; std::vector<Bookmark,std::allocator<Bookmark> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1285
	push	ebp
	mov	ebp, esp
; Line 1286
	mov	eax, DWORD PTR __Ptr$[ebp]
	cmp	eax, DWORD PTR [ecx+4]
	jae	SHORT $LN3@Inside@3
	cmp	DWORD PTR [ecx], eax
	ja	SHORT $LN3@Inside@3
	mov	eax, 1
; Line 1287
	pop	ebp
	ret	4
$LN3@Inside@3:
; Line 1286
	xor	eax, eax
; Line 1287
	pop	ebp
	ret	4
?_Inside@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IBE_NPBUBookmark@@@Z ENDP ; std::vector<Bookmark,std::allocator<Bookmark> >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IBEXPAUBookmark@@0@Z ; std::vector<Bookmark,std::allocator<Bookmark> >::_Orphan_range
; Function compile flags: /Ogtp
;	COMDAT ?_Orphan_range@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IBEXPAUBookmark@@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IBEXPAUBookmark@@0@Z PROC ; std::vector<Bookmark,std::allocator<Bookmark> >::_Orphan_range, COMDAT
; _this$ = ecx
; Line 1454
	ret	8
?_Orphan_range@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IBEXPAUBookmark@@0@Z ENDP ; std::vector<Bookmark,std::allocator<Bookmark> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE@XZ ; std::_Vector_val<Bookmark,std::allocator<Bookmark> >::~_Vector_val<Bookmark,std::allocator<Bookmark> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<Bookmark,std::allocator<Bookmark> >::~_Vector_val<Bookmark,std::allocator<Bookmark> >, COMDAT
; _this$ = ecx
; Line 434
	ret	0
??1?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<Bookmark,std::allocator<Bookmark> >::~_Vector_val<Bookmark,std::allocator<Bookmark> >
_TEXT	ENDS
PUBLIC	??0?$allocator@UBookmark@@@std@@QAE@XZ		; std::allocator<Bookmark>::allocator<Bookmark>
; Function compile flags: /Ogtp
;	COMDAT ??0?$allocator@UBookmark@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@UBookmark@@@std@@QAE@XZ PROC		; std::allocator<Bookmark>::allocator<Bookmark>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 161
	mov	eax, ecx
; Line 163
	ret	0
??0?$allocator@UBookmark@@@std@@QAE@XZ ENDP		; std::allocator<Bookmark>::allocator<Bookmark>
_TEXT	ENDS
PUBLIC	?is_open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::is_open
; Function compile flags: /Ogtp
;	COMDAT ?is_open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?is_open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QBE_NXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::is_open, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\fstream
; Line 212
	xor	eax, eax
	cmp	DWORD PTR [ecx+84], eax
	setne	al
; Line 213
	ret	0
?is_open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QBE_NXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::is_open
_TEXT	ENDS
PUBLIC	?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
PUBLIC	?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init
EXTRN	__imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ:PROC
;	COMDAT ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\streambuf
_BSS	SEGMENT
?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA DD 01H DUP (?) ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
; Function compile flags: /Ogtp
_BSS	ENDS
;	COMDAT ?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z
_TEXT	SEGMENT
__File$ = 8						; size = 4
__Which$ = 12						; size = 4
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Init, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\fstream
; Line 555
	push	ebp
	mov	ebp, esp
; Line 558
	cmp	DWORD PTR __Which$[ebp], 1
	push	esi
	mov	esi, ecx
	sete	al
	mov	BYTE PTR [esi+80], al
; Line 559
	mov	BYTE PTR [esi+73], 0
; Line 561
	call	DWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ
; Line 570
	mov	eax, DWORD PTR __File$[ebp]
	test	eax, eax
	je	SHORT $LN10@Init
; Line 574
	lea	ecx, DWORD PTR [eax+8]
; Line 578
	mov	DWORD PTR [esi+16], ecx
	mov	DWORD PTR [esi+20], ecx
	lea	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+32], eax
	mov	DWORD PTR [esi+36], eax
	mov	DWORD PTR [esi+48], ecx
	mov	DWORD PTR [esi+52], ecx
$LN10@Init:
; Line 581
	mov	DWORD PTR [esi+84], eax
; Line 582
	mov	ecx, DWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
	mov	DWORD PTR [esi+76], ecx
; Line 583
	mov	DWORD PTR [esi+68], 0
	pop	esi
; Line 584
	pop	ebp
	ret	8
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@12@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Init
_TEXT	ENDS
PUBLIC	?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPBV?$codecvt@DDH@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
EXTRN	__imp_?always_noconv@codecvt_base@std@@QBE_NXZ:PROC
; Function compile flags: /Ogtp
;	COMDAT ?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPBV?$codecvt@DDH@2@@Z
_TEXT	SEGMENT
__Newpcvt$ = 8						; size = 4
?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPBV?$codecvt@DDH@2@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt, COMDAT
; _this$ = ecx
; Line 628
	push	ebp
	mov	ebp, esp
	push	esi
	push	edi
; Line 629
	mov	edi, DWORD PTR __Newpcvt$[ebp]
	mov	esi, ecx
	mov	ecx, edi
	call	DWORD PTR __imp_?always_noconv@codecvt_base@std@@QBE_NXZ
	test	al, al
	je	SHORT $LN2@Initcvt
; Line 630
	pop	edi
	mov	DWORD PTR [esi+68], 0
	pop	esi
; Line 636
	pop	ebp
	ret	4
$LN2@Initcvt:
; Line 634
	mov	ecx, esi
	mov	DWORD PTR [esi+68], edi
	call	DWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ
	pop	edi
	pop	esi
; Line 636
	pop	ebp
	ret	4
?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPBV?$codecvt@DDH@2@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
_TEXT	ENDS
PUBLIC	?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
; Function compile flags: /Ogtp
;	COMDAT ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ
_TEXT	SEGMENT
?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back, COMDAT
; _this$ = ecx
; Line 641
	mov	edx, DWORD PTR [ecx+16]
	lea	eax, DWORD PTR [ecx+72]
	cmp	DWORD PTR [edx], eax
	jne	SHORT $LN6@Reset_back
; Line 642
	mov	eax, DWORD PTR [ecx+64]
	push	esi
	mov	esi, DWORD PTR [ecx+60]
	mov	DWORD PTR [edx], esi
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR [ecx+48]
	sub	eax, eax
	mov	DWORD PTR [ecx], eax
	pop	esi
$LN6@Reset_back:
; Line 643
	ret	0
?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogtp
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 2002
	mov	eax, ecx
; Line 2004
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN4@Myptr@2
	mov	eax, DWORD PTR [eax]
$LN4@Myptr@2:
; Line 2005
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx
; Line 2015
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen:
$LN3@Xlen:
	int	3
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx
; Line 2020
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN4@Xran:
$LN3@Xran:
	int	3
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
; Function compile flags: /Ogtp
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 181
	push	ebp
	mov	ebp, esp
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
PUBLIC	?capacity@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QBEIXZ ; std::vector<AppState *,std::allocator<AppState *> >::capacity
; Function compile flags: /Ogtp
;	COMDAT ?capacity@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QBEIXZ PROC ; std::vector<AppState *,std::allocator<AppState *> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 777
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2
; Line 778
	ret	0
?capacity@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QBEIXZ ENDP ; std::vector<AppState *,std::allocator<AppState *> >::capacity
_TEXT	ENDS
PUBLIC	?size@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QBEIXZ ; std::vector<AppState *,std::allocator<AppState *> >::size
; Function compile flags: /Ogtp
;	COMDAT ?size@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QBEIXZ PROC ; std::vector<AppState *,std::allocator<AppState *> >::size, COMDAT
; _this$ = ecx
; Line 879
	mov	eax, DWORD PTR [ecx+4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2
; Line 880
	ret	0
?size@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QBEIXZ ENDP ; std::vector<AppState *,std::allocator<AppState *> >::size
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBEXXZ ; std::vector<AppState *,std::allocator<AppState *> >::_Xlen
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?_Xlen@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBEXXZ PROC ; std::vector<AppState *,std::allocator<AppState *> >::_Xlen, COMDAT
; _this$ = ecx
; Line 1427
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen@2:
$LN3@Xlen@2:
	int	3
?_Xlen@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBEXXZ ENDP ; std::vector<AppState *,std::allocator<AppState *> >::_Xlen
_TEXT	ENDS
PUBLIC	?capacity@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QBEIXZ ; std::vector<MapEntry,std::allocator<MapEntry> >::capacity
; Function compile flags: /Ogtp
;	COMDAT ?capacity@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QBEIXZ PROC ; std::vector<MapEntry,std::allocator<MapEntry> >::capacity, COMDAT
; _this$ = ecx
; Line 777
	mov	edx, DWORD PTR [ecx+8]
	sub	edx, DWORD PTR [ecx]
	mov	eax, 1808407283				; 6bca1af3H
	imul	edx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
; Line 778
	ret	0
?capacity@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QBEIXZ ENDP ; std::vector<MapEntry,std::allocator<MapEntry> >::capacity
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IBEXXZ ; std::vector<MapEntry,std::allocator<MapEntry> >::_Xlen
; Function compile flags: /Ogtp
;	COMDAT ?_Xlen@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IBEXXZ PROC ; std::vector<MapEntry,std::allocator<MapEntry> >::_Xlen, COMDAT
; _this$ = ecx
; Line 1427
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen@3:
$LN3@Xlen@3:
	int	3
?_Xlen@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IBEXXZ ENDP ; std::vector<MapEntry,std::allocator<MapEntry> >::_Xlen
_TEXT	ENDS
PUBLIC	??0?$allocator@UMapEntry@@@std@@QAE@ABV01@@Z	; std::allocator<MapEntry>::allocator<MapEntry>
; Function compile flags: /Ogtp
;	COMDAT ??0?$allocator@UMapEntry@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@UMapEntry@@@std@@QAE@ABV01@@Z PROC	; std::allocator<MapEntry>::allocator<MapEntry>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 165
	mov	eax, ecx
; Line 167
	ret	4
??0?$allocator@UMapEntry@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<MapEntry>::allocator<MapEntry>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@I@Z ; std::allocator<MapEntry>::deallocate
; Function compile flags: /Ogtp
;	COMDAT ?deallocate@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@I@Z PROC ; std::allocator<MapEntry>::deallocate, COMDAT
; _this$ = ecx
; Line 181
	push	ebp
	mov	ebp, esp
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	pop	ebp
	ret	8
?deallocate@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@I@Z ENDP ; std::allocator<MapEntry>::deallocate
_TEXT	ENDS
PUBLIC	?capacity@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QBEIXZ ; std::vector<Bookmark,std::allocator<Bookmark> >::capacity
; Function compile flags: /Ogtp
;	COMDAT ?capacity@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QBEIXZ PROC ; std::vector<Bookmark,std::allocator<Bookmark> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 776
	push	esi
; Line 777
	mov	esi, DWORD PTR [ecx+8]
	sub	esi, DWORD PTR [ecx]
	mov	eax, -2004318071			; 88888889H
	imul	esi
	add	edx, esi
	sar	edx, 6
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	pop	esi
; Line 778
	ret	0
?capacity@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QBEIXZ ENDP ; std::vector<Bookmark,std::allocator<Bookmark> >::capacity
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IBEXXZ ; std::vector<Bookmark,std::allocator<Bookmark> >::_Xlen
; Function compile flags: /Ogtp
;	COMDAT ?_Xlen@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IBEXXZ PROC ; std::vector<Bookmark,std::allocator<Bookmark> >::_Xlen, COMDAT
; _this$ = ecx
; Line 1427
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen@4:
$LN3@Xlen@4:
	int	3
?_Xlen@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IBEXXZ ENDP ; std::vector<Bookmark,std::allocator<Bookmark> >::_Xlen
_TEXT	ENDS
PUBLIC	??0?$allocator@UBookmark@@@std@@QAE@ABV01@@Z	; std::allocator<Bookmark>::allocator<Bookmark>
; Function compile flags: /Ogtp
;	COMDAT ??0?$allocator@UBookmark@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@UBookmark@@@std@@QAE@ABV01@@Z PROC	; std::allocator<Bookmark>::allocator<Bookmark>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 165
	mov	eax, ecx
; Line 167
	ret	4
??0?$allocator@UBookmark@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<Bookmark>::allocator<Bookmark>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@I@Z ; std::allocator<Bookmark>::deallocate
; Function compile flags: /Ogtp
;	COMDAT ?deallocate@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@I@Z PROC ; std::allocator<Bookmark>::deallocate, COMDAT
; _this$ = ecx
; Line 181
	push	ebp
	mov	ebp, esp
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	pop	ebp
	ret	8
?deallocate@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@I@Z ENDP ; std::allocator<Bookmark>::deallocate
_TEXT	ENDS
PUBLIC	??D?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDXZ ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator*
; Function compile flags: /Ogtp
;	COMDAT ??D?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDXZ
_TEXT	SEGMENT
??D?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDXZ PROC ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 92
	mov	eax, DWORD PTR [ecx]
; Line 93
	ret	0
??D?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDXZ ENDP ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator*
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAVAppState@@@std@@QAEXPAPAVAppState@@I@Z ; std::allocator<AppState *>::deallocate
; Function compile flags: /Ogtp
;	COMDAT ?deallocate@?$allocator@PAVAppState@@@std@@QAEXPAPAVAppState@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAVAppState@@@std@@QAEXPAPAVAppState@@I@Z PROC ; std::allocator<AppState *>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 181
	push	ebp
	mov	ebp, esp
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	pop	ebp
	ret	8
?deallocate@?$allocator@PAVAppState@@@std@@QAEXPAPAVAppState@@I@Z ENDP ; std::allocator<AppState *>::deallocate
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAVAppState@@@std@@QBEIXZ	; std::allocator<AppState *>::max_size
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$allocator@PAVAppState@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@PAVAppState@@@std@@QBEIXZ PROC	; std::allocator<AppState *>::max_size, COMDAT
; _this$ = ecx
; Line 219
	mov	eax, 1073741823				; 3fffffffH
; Line 220
	ret	0
?max_size@?$allocator@PAVAppState@@@std@@QBEIXZ ENDP	; std::allocator<AppState *>::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@UMapEntry@@@std@@QBEIXZ	; std::allocator<MapEntry>::max_size
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$allocator@UMapEntry@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@UMapEntry@@@std@@QBEIXZ PROC	; std::allocator<MapEntry>::max_size, COMDAT
; _this$ = ecx
; Line 219
	mov	eax, 56512727				; 035e50d7H
; Line 220
	ret	0
?max_size@?$allocator@UMapEntry@@@std@@QBEIXZ ENDP	; std::allocator<MapEntry>::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@UBookmark@@@std@@QBEIXZ	; std::allocator<Bookmark>::max_size
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$allocator@UBookmark@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@UBookmark@@@std@@QBEIXZ PROC	; std::allocator<Bookmark>::max_size, COMDAT
; _this$ = ecx
; Line 219
	mov	eax, 35791394				; 02222222H
; Line 220
	ret	0
?max_size@?$allocator@UBookmark@@@std@@QBEIXZ ENDP	; std::allocator<Bookmark>::max_size
_TEXT	ENDS
PUBLIC	??0?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDPBU_Container_base0@1@@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDPBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pstring$ = 12						; size = 4
??0?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDPBU_Container_base0@1@@Z PROC ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 50
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
; Line 53
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 54
	pop	ebp
	ret	8
??0?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDPBU_Container_base0@1@@Z ENDP ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@std@@QAE@PAUBookmark@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<Bookmark,std::allocator<Bookmark> > >::_Vector_const_iterator<std::_Vector_val<Bookmark,std::allocator<Bookmark> > >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@std@@QAE@PAUBookmark@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@std@@QAE@PAUBookmark@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<Bookmark,std::allocator<Bookmark> > >::_Vector_const_iterator<std::_Vector_val<Bookmark,std::allocator<Bookmark> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 45
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 47
	pop	ebp
	ret	8
??0?$_Vector_const_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@std@@QAE@PAUBookmark@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<Bookmark,std::allocator<Bookmark> > >::_Vector_const_iterator<std::_Vector_val<Bookmark,std::allocator<Bookmark> > >
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 219
	or	eax, -1
; Line 220
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<Bookmark,std::allocator<Bookmark> > >::_Compat
; Function compile flags: /Ogtp
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<Bookmark,std::allocator<Bookmark> > >::_Compat, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 253
	ret	4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<Bookmark,std::allocator<Bookmark> > >::_Compat
_TEXT	ENDS
PUBLIC	__TI2?AVbad_cast@std@@
PUBLIC	??_C@_08EPJLHIJG@bad?5cast?$AA@			; `string'
PUBLIC	?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::ctype<char> >::_Psave
PUBLIC	??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<char> >
PUBLIC	__CTA2?AVbad_cast@std@@
PUBLIC	__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_cast@std@@@8			; std::bad_cast `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	__imp_?_Incref@facet@locale@std@@QAEXXZ:PROC
EXTRN	__imp_??0bad_cast@std@@QAE@PBD@Z:PROC
EXTRN	__imp_?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QAE@XZ:PROC
EXTRN	__imp_?_Id_cnt@id@locale@std@@0HA:DWORD
EXTRN	__imp_?id@?$ctype@D@std@@2V0locale@2@A:DWORD
EXTRN	__imp_??0_Lockit@std@@QAE@H@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	??1bad_cast@std@@UAE@XZ:PROC			; std::bad_cast::~bad_cast
EXTRN	??0bad_cast@std@@QAE@ABV01@@Z:PROC		; std::bad_cast::bad_cast
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xlocale
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B DD 01H DUP (?) ; std::_Facetptr<std::ctype<char> >::_Psave
_BSS	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
_DATA	SEGMENT
??_R0?AVbad_cast@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_cast `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_cast@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_cast@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_cast@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_cast@std@@
xdata$x	SEGMENT
__CTA2?AVbad_cast@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_cast@std@@
xdata$x	SEGMENT
__TI2?AVbad_cast@std@@ DD 00H
	DD	FLAT:??1bad_cast@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_cast@std@@
xdata$x	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast?$AA@
CONST	SEGMENT
??_C@_08EPJLHIJG@bad?5cast?$AA@ DB 'bad cast', 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z$0
__ehfuncinfo$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
_TEXT	SEGMENT
$T134903 = -36						; size = 12
__Lock$126911 = -24					; size = 4
__Lock$134911 = -20					; size = 4
__Psave$126912 = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Loc$ = 8						; size = 4
??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z PROC ; std::use_facet<std::ctype<char> >, COMDAT
; Line 504
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 505
	mov	edi, DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	push	0
	lea	ecx, DWORD PTR __Lock$126911[ebp]
	call	edi
; Line 507
	mov	eax, DWORD PTR ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::ctype<char> >::_Psave
; Line 509
	mov	esi, DWORD PTR __imp_?id@?$ctype@D@std@@2V0locale@2@A
	mov	DWORD PTR __Psave$126912[ebp], eax
	cmp	DWORD PTR [esi], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	jne	SHORT $LN11@use_facet
	push	0
	lea	ecx, DWORD PTR __Lock$134911[ebp]
	call	edi
	cmp	DWORD PTR [esi], 0
	jne	SHORT $LN10@use_facet
	mov	eax, DWORD PTR __imp_?_Id_cnt@id@locale@std@@0HA
	inc	DWORD PTR [eax]
	mov	ecx, DWORD PTR __imp_?_Id_cnt@id@locale@std@@0HA
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [esi], edx
$LN10@use_facet:
	lea	ecx, DWORD PTR __Lock$134911[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
$LN11@use_facet:
; Line 510
	mov	ebx, DWORD PTR __Loc$[ebp]
	mov	edi, DWORD PTR [esi]
	mov	eax, DWORD PTR [ebx]
	cmp	edi, DWORD PTR [eax+12]
	jae	SHORT $LN20@use_facet
	mov	ecx, DWORD PTR [eax+8]
	mov	esi, DWORD PTR [ecx+edi*4]
	test	esi, esi
	jne	SHORT $LN28@use_facet
$LN30@use_facet:
	cmp	BYTE PTR [eax+20], 0
	je	SHORT $LN16@use_facet
	call	DWORD PTR __imp_?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ
	cmp	edi, DWORD PTR [eax+12]
	jae	SHORT $LN31@use_facet
	mov	edx, DWORD PTR [eax+8]
	mov	esi, DWORD PTR [edx+edi*4]
$LN16@use_facet:
; Line 512
	test	esi, esi
	jne	SHORT $LN28@use_facet
$LN31@use_facet:
; Line 514
	mov	esi, DWORD PTR __Psave$126912[ebp]
	test	esi, esi
; Line 515
	jne	SHORT $LN28@use_facet
; Line 516
	lea	eax, DWORD PTR __Psave$126912[ebp]
	push	ebx
	push	eax
	call	DWORD PTR __imp_?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	add	esp, 8
	cmp	eax, -1
	jne	SHORT $LN2@use_facet
; Line 520
	push	OFFSET ??_C@_08EPJLHIJG@bad?5cast?$AA@
	lea	ecx, DWORD PTR $T134903[ebp]
	call	DWORD PTR __imp_??0bad_cast@std@@QAE@PBD@Z
	push	OFFSET __TI2?AVbad_cast@std@@
	lea	ecx, DWORD PTR $T134903[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN38@use_facet:
; Line 510
$LN20@use_facet:
	xor	esi, esi
	jmp	SHORT $LN30@use_facet
$LN2@use_facet:
; Line 528
	mov	ecx, DWORD PTR __Psave$126912[ebp]
	mov	esi, ecx
; Line 529
	mov	DWORD PTR ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B, ecx ; std::_Facetptr<std::ctype<char> >::_Psave
; Line 531
	mov	edi, ecx
; Line 532
	call	DWORD PTR __imp_?_Incref@facet@locale@std@@QAEXXZ
; Line 533
	push	edi
	call	?_Facet_Register@facet@locale@std@@CAXPAV123@@Z ; std::locale::facet::_Facet_Register
	add	esp, 4
$LN28@use_facet:
; Line 536
	lea	ecx, DWORD PTR __Lock$126911[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	mov	eax, esi
; Line 538
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN36@use_facet:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z$0:
	lea	ecx, DWORD PTR __Lock$126911[ebp]
	jmp	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
__ehhandler$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ENDP ; std::use_facet<std::ctype<char> >
PUBLIC	??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ		; sprintf_s<256>
EXTRN	__imp__vsprintf_s:PROC
; Function compile flags: /Ogtp
;	COMDAT ??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Format$ = 12						; size = 4
??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ PROC		; sprintf_s<256>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\stdio.h
; Line 323
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR __Format$[ebp]
	mov	edx, DWORD PTR __Dest$[ebp]
	lea	eax, DWORD PTR __Format$[ebp+4]
	push	eax
	push	ecx
	push	256					; 00000100H
	push	edx
	call	DWORD PTR __imp__vsprintf_s
	add	esp, 16					; 00000010H
	pop	ebp
	ret	0
??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ ENDP		; sprintf_s<256>
_TEXT	ENDS
PUBLIC	??$addressof@QAVAppState@@@std@@YAPBQAVAppState@@ABQAV1@@Z ; std::addressof<AppState * const>
; Function compile flags: /Ogtp
;	COMDAT ??$addressof@QAVAppState@@@std@@YAPBQAVAppState@@ABQAV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@QAVAppState@@@std@@YAPBQAVAppState@@ABQAV1@@Z PROC ; std::addressof<AppState * const>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 110
	push	ebp
	mov	ebp, esp
; Line 111
	mov	eax, DWORD PTR __Val$[ebp]
; Line 112
	pop	ebp
	ret	0
??$addressof@QAVAppState@@@std@@YAPBQAVAppState@@ABQAV1@@Z ENDP ; std::addressof<AppState * const>
_TEXT	ENDS
PUBLIC	??$addressof@$$CBUMapEntry@@@std@@YAPBUMapEntry@@ABU1@@Z ; std::addressof<MapEntry const >
; Function compile flags: /Ogtp
;	COMDAT ??$addressof@$$CBUMapEntry@@@std@@YAPBUMapEntry@@ABU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBUMapEntry@@@std@@YAPBUMapEntry@@ABU1@@Z PROC ; std::addressof<MapEntry const >, COMDAT
; Line 110
	push	ebp
	mov	ebp, esp
; Line 111
	mov	eax, DWORD PTR __Val$[ebp]
; Line 112
	pop	ebp
	ret	0
??$addressof@$$CBUMapEntry@@@std@@YAPBUMapEntry@@ABU1@@Z ENDP ; std::addressof<MapEntry const >
_TEXT	ENDS
PUBLIC	??$addressof@$$CBUBookmark@@@std@@YAPBUBookmark@@ABU1@@Z ; std::addressof<Bookmark const >
; Function compile flags: /Ogtp
;	COMDAT ??$addressof@$$CBUBookmark@@@std@@YAPBUBookmark@@ABU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBUBookmark@@@std@@YAPBUBookmark@@ABU1@@Z PROC ; std::addressof<Bookmark const >, COMDAT
; Line 110
	push	ebp
	mov	ebp, esp
; Line 111
	mov	eax, DWORD PTR __Val$[ebp]
; Line 112
	pop	ebp
	ret	0
??$addressof@$$CBUBookmark@@@std@@YAPBUBookmark@@ABU1@@Z ENDP ; std::addressof<Bookmark const >
_TEXT	ENDS
PUBLIC	?_Psave@?$_Facetptr@V?$codecvt@DDH@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::codecvt<char,char,int> >::_Psave
PUBLIC	??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,int> >
EXTRN	__imp_?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z:PROC
EXTRN	__imp_?id@?$codecvt@DDH@std@@2V0locale@2@A:DWORD
;	COMDAT ?_Psave@?$_Facetptr@V?$codecvt@DDH@std@@@std@@2PBVfacet@locale@2@B
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xlocale
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$codecvt@DDH@std@@@std@@2PBVfacet@locale@2@B DD 01H DUP (?) ; std::_Facetptr<std::codecvt<char,char,int> >::_Psave
_BSS	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z$0
__ehfuncinfo$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z
_TEXT	SEGMENT
$T134966 = -36						; size = 12
__Lock$127446 = -24					; size = 4
__Lock$134973 = -20					; size = 4
__Psave$127447 = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Loc$ = 8						; size = 4
??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z PROC ; std::use_facet<std::codecvt<char,char,int> >, COMDAT
; Line 504
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 505
	mov	edi, DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	push	0
	lea	ecx, DWORD PTR __Lock$127446[ebp]
	call	edi
; Line 507
	mov	eax, DWORD PTR ?_Psave@?$_Facetptr@V?$codecvt@DDH@std@@@std@@2PBVfacet@locale@2@B ; std::_Facetptr<std::codecvt<char,char,int> >::_Psave
; Line 509
	mov	esi, DWORD PTR __imp_?id@?$codecvt@DDH@std@@2V0locale@2@A
	mov	DWORD PTR __Psave$127447[ebp], eax
	cmp	DWORD PTR [esi], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	jne	SHORT $LN11@use_facet@2
	push	0
	lea	ecx, DWORD PTR __Lock$134973[ebp]
	call	edi
	cmp	DWORD PTR [esi], 0
	jne	SHORT $LN10@use_facet@2
	mov	eax, DWORD PTR __imp_?_Id_cnt@id@locale@std@@0HA
	inc	DWORD PTR [eax]
	mov	ecx, DWORD PTR __imp_?_Id_cnt@id@locale@std@@0HA
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [esi], edx
$LN10@use_facet@2:
	lea	ecx, DWORD PTR __Lock$134973[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
$LN11@use_facet@2:
; Line 510
	mov	ebx, DWORD PTR __Loc$[ebp]
	mov	edi, DWORD PTR [esi]
	mov	eax, DWORD PTR [ebx]
	cmp	edi, DWORD PTR [eax+12]
	jae	SHORT $LN20@use_facet@2
	mov	ecx, DWORD PTR [eax+8]
	mov	esi, DWORD PTR [ecx+edi*4]
	test	esi, esi
	jne	SHORT $LN28@use_facet@2
$LN30@use_facet@2:
	cmp	BYTE PTR [eax+20], 0
	je	SHORT $LN16@use_facet@2
	call	DWORD PTR __imp_?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ
	cmp	edi, DWORD PTR [eax+12]
	jae	SHORT $LN31@use_facet@2
	mov	edx, DWORD PTR [eax+8]
	mov	esi, DWORD PTR [edx+edi*4]
$LN16@use_facet@2:
; Line 512
	test	esi, esi
	jne	SHORT $LN28@use_facet@2
$LN31@use_facet@2:
; Line 514
	mov	esi, DWORD PTR __Psave$127447[ebp]
	test	esi, esi
; Line 515
	jne	SHORT $LN28@use_facet@2
; Line 516
	lea	eax, DWORD PTR __Psave$127447[ebp]
	push	ebx
	push	eax
	call	DWORD PTR __imp_?_Getcat@?$codecvt@DDH@std@@SAIPAPBVfacet@locale@2@PBV42@@Z
	add	esp, 8
	cmp	eax, -1
	jne	SHORT $LN2@use_facet@2
; Line 520
	push	OFFSET ??_C@_08EPJLHIJG@bad?5cast?$AA@
	lea	ecx, DWORD PTR $T134966[ebp]
	call	DWORD PTR __imp_??0bad_cast@std@@QAE@PBD@Z
	push	OFFSET __TI2?AVbad_cast@std@@
	lea	ecx, DWORD PTR $T134966[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN38@use_facet@2:
; Line 510
$LN20@use_facet@2:
	xor	esi, esi
	jmp	SHORT $LN30@use_facet@2
$LN2@use_facet@2:
; Line 528
	mov	ecx, DWORD PTR __Psave$127447[ebp]
	mov	esi, ecx
; Line 529
	mov	DWORD PTR ?_Psave@?$_Facetptr@V?$codecvt@DDH@std@@@std@@2PBVfacet@locale@2@B, ecx ; std::_Facetptr<std::codecvt<char,char,int> >::_Psave
; Line 531
	mov	edi, ecx
; Line 532
	call	DWORD PTR __imp_?_Incref@facet@locale@std@@QAEXXZ
; Line 533
	push	edi
	call	?_Facet_Register@facet@locale@std@@CAXPAV123@@Z ; std::locale::facet::_Facet_Register
	add	esp, 4
$LN28@use_facet@2:
; Line 536
	lea	ecx, DWORD PTR __Lock$127446[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	mov	eax, esi
; Line 538
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN36@use_facet@2:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z$0:
	lea	ecx, DWORD PTR __Lock$127446[ebp]
	jmp	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
__ehhandler$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z ENDP ; std::use_facet<std::codecvt<char,char,int> >
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@PAVAppState@@@std@@YAPAPAVAppState@@IPAPAV1@@Z ; std::_Allocate<AppState *>
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$_Allocate@PAVAppState@@@std@@YAPAPAVAppState@@IPAPAV1@@Z
_TEXT	SEGMENT
$T135015 = -12						; size = 12
$T135019 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAVAppState@@@std@@YAPAPAVAppState@@IPAPAV1@@Z PROC ; std::_Allocate<AppState *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 30
	push	ebp
	mov	ebp, esp
; Line 33
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
; Line 35
	je	SHORT $LN5@Allocate
; Line 36
	cmp	ecx, 1073741823				; 3fffffffH
	ja	SHORT $LN1@Allocate
	lea	eax, DWORD PTR [ecx*4]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
; Line 39
	jne	SHORT $LN5@Allocate
$LN1@Allocate:
; Line 37
	lea	ecx, DWORD PTR $T135019[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T135015[ebp]
	mov	DWORD PTR $T135019[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T135015[ebp]
	push	edx
	mov	DWORD PTR $T135015[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN10@Allocate:
$LN5@Allocate:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@Allocate:
??$_Allocate@PAVAppState@@@std@@YAPAPAVAppState@@IPAPAV1@@Z ENDP ; std::_Allocate<AppState *>
_TEXT	ENDS
PUBLIC	??$_Allocate@UMapEntry@@@std@@YAPAUMapEntry@@IPAU1@@Z ; std::_Allocate<MapEntry>
; Function compile flags: /Ogtp
;	COMDAT ??$_Allocate@UMapEntry@@@std@@YAPAUMapEntry@@IPAU1@@Z
_TEXT	SEGMENT
$T135024 = -12						; size = 12
$T135028 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UMapEntry@@@std@@YAPAUMapEntry@@IPAU1@@Z PROC ; std::_Allocate<MapEntry>, COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
; Line 33
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
; Line 35
	je	SHORT $LN5@Allocate@2
; Line 36
	cmp	ecx, 56512727				; 035e50d7H
	ja	SHORT $LN1@Allocate@2
	imul	ecx, 76					; 0000004cH
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
; Line 39
	jne	SHORT $LN5@Allocate@2
$LN1@Allocate@2:
; Line 37
	lea	eax, DWORD PTR $T135028[ebp]
	push	eax
	lea	ecx, DWORD PTR $T135024[ebp]
	mov	DWORD PTR $T135028[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T135024[ebp]
	push	ecx
	mov	DWORD PTR $T135024[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN10@Allocate@2:
$LN5@Allocate@2:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@Allocate@2:
??$_Allocate@UMapEntry@@@std@@YAPAUMapEntry@@IPAU1@@Z ENDP ; std::_Allocate<MapEntry>
_TEXT	ENDS
PUBLIC	??$_Allocate@UBookmark@@@std@@YAPAUBookmark@@IPAU1@@Z ; std::_Allocate<Bookmark>
; Function compile flags: /Ogtp
;	COMDAT ??$_Allocate@UBookmark@@@std@@YAPAUBookmark@@IPAU1@@Z
_TEXT	SEGMENT
$T135033 = -12						; size = 12
$T135037 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UBookmark@@@std@@YAPAUBookmark@@IPAU1@@Z PROC ; std::_Allocate<Bookmark>, COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
; Line 33
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
; Line 35
	je	SHORT $LN5@Allocate@3
; Line 36
	cmp	ecx, 35791394				; 02222222H
	ja	SHORT $LN1@Allocate@3
	mov	eax, ecx
	shl	eax, 4
	sub	eax, ecx
	add	eax, eax
	add	eax, eax
	add	eax, eax
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
; Line 39
	jne	SHORT $LN5@Allocate@3
$LN1@Allocate@3:
; Line 37
	lea	ecx, DWORD PTR $T135037[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T135033[ebp]
	mov	DWORD PTR $T135037[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T135033[ebp]
	push	edx
	mov	DWORD PTR $T135033[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN10@Allocate@3:
$LN5@Allocate@3:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@Allocate@3:
??$_Allocate@UBookmark@@@std@@YAPAUBookmark@@IPAU1@@Z ENDP ; std::_Allocate<Bookmark>
_TEXT	ENDS
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
; Function compile flags: /Ogtp
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
$T135042 = -12						; size = 12
$T135046 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
; Line 33
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
; Line 35
	je	SHORT $LN5@Allocate@4
; Line 36
	cmp	ecx, -1
	ja	SHORT $LN1@Allocate@4
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
; Line 39
	jne	SHORT $LN5@Allocate@4
$LN1@Allocate@4:
; Line 37
	lea	eax, DWORD PTR $T135046[ebp]
	push	eax
	lea	ecx, DWORD PTR $T135042[ebp]
	mov	DWORD PTR $T135046[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T135042[ebp]
	push	ecx
	mov	DWORD PTR $T135042[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN10@Allocate@4:
$LN5@Allocate@4:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@Allocate@4:
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
; Function compile flags: /Ogtp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	esi
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??$move@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@@std@@YA$$QAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::move<std::basic_istream<char,std::char_traits<char> > &>
; Function compile flags: /Ogtp
;	COMDAT ??$move@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@@std@@YA$$QAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@@std@@YA$$QAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@@Z PROC ; std::move<std::basic_istream<char,std::char_traits<char> > &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 86
	push	ebp
	mov	ebp, esp
; Line 87
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 88
	pop	ebp
	ret	0
??$move@AAV?$basic_istream@DU?$char_traits@D@std@@@std@@@std@@YA$$QAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@@Z ENDP ; std::move<std::basic_istream<char,std::char_traits<char> > &>
_TEXT	ENDS
PUBLIC	??$forward@AAPAVAppState@@@std@@YAAAPAVAppState@@AAPAV1@@Z ; std::forward<AppState * &>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@AAPAVAppState@@@std@@YAAAPAVAppState@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAVAppState@@@std@@YAAAPAVAppState@@AAPAV1@@Z PROC ; std::forward<AppState * &>, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@AAPAVAppState@@@std@@YAAAPAVAppState@@AAPAV1@@Z ENDP ; std::forward<AppState * &>
_TEXT	ENDS
PUBLIC	??$construct@AAPAVAppState@@@?$allocator@PAVAppState@@@std@@QAEXPAPAVAppState@@AAPAV2@@Z ; std::allocator<AppState *>::construct<AppState * &>
; Function compile flags: /Ogtp
;	COMDAT ??$construct@AAPAVAppState@@@?$allocator@PAVAppState@@@std@@QAEXPAPAVAppState@@AAPAV2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAPAVAppState@@@?$allocator@PAVAppState@@@std@@QAEXPAPAVAppState@@AAPAV2@@Z PROC ; std::allocator<AppState *>::construct<AppState * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 206
	push	ebp
	mov	ebp, esp
; Line 208
	mov	eax, DWORD PTR __Ptr$[ebp]
	test	eax, eax
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN3@construct:
; Line 209
	pop	ebp
	ret	8
??$construct@AAPAVAppState@@@?$allocator@PAVAppState@@@std@@QAEXPAPAVAppState@@AAPAV2@@Z ENDP ; std::allocator<AppState *>::construct<AppState * &>
_TEXT	ENDS
PUBLIC	??$forward@ABQAVAppState@@@std@@YAABQAVAppState@@ABQAV1@@Z ; std::forward<AppState * const &>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@ABQAVAppState@@@std@@YAABQAVAppState@@ABQAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAVAppState@@@std@@YAABQAVAppState@@ABQAV1@@Z PROC ; std::forward<AppState * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@ABQAVAppState@@@std@@YAABQAVAppState@@ABQAV1@@Z ENDP ; std::forward<AppState * const &>
_TEXT	ENDS
PUBLIC	??$forward@AAUMapEntry@@@std@@YAAAUMapEntry@@AAU1@@Z ; std::forward<MapEntry &>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@AAUMapEntry@@@std@@YAAAUMapEntry@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUMapEntry@@@std@@YAAAUMapEntry@@AAU1@@Z PROC ; std::forward<MapEntry &>, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@AAUMapEntry@@@std@@YAAAUMapEntry@@AAU1@@Z ENDP ; std::forward<MapEntry &>
_TEXT	ENDS
PUBLIC	??$forward@ABUMapEntry@@@std@@YAABUMapEntry@@ABU1@@Z ; std::forward<MapEntry const &>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@ABUMapEntry@@@std@@YAABUMapEntry@@ABU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUMapEntry@@@std@@YAABUMapEntry@@ABU1@@Z PROC ; std::forward<MapEntry const &>, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@ABUMapEntry@@@std@@YAABUMapEntry@@ABU1@@Z ENDP ; std::forward<MapEntry const &>
_TEXT	ENDS
PUBLIC	??$forward@AAUBookmark@@@std@@YAAAUBookmark@@AAU1@@Z ; std::forward<Bookmark &>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@AAUBookmark@@@std@@YAAAUBookmark@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUBookmark@@@std@@YAAAUBookmark@@AAU1@@Z PROC ; std::forward<Bookmark &>, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@AAUBookmark@@@std@@YAAAUBookmark@@AAU1@@Z ENDP ; std::forward<Bookmark &>
_TEXT	ENDS
PUBLIC	??$forward@ABUBookmark@@@std@@YAABUBookmark@@ABU1@@Z ; std::forward<Bookmark const &>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@ABUBookmark@@@std@@YAABUBookmark@@ABU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUBookmark@@@std@@YAABUBookmark@@ABU1@@Z PROC ; std::forward<Bookmark const &>, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@ABUBookmark@@@std@@YAABUBookmark@@ABU1@@Z ENDP ; std::forward<Bookmark const &>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@UBookmark@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUBookmark@@0@Z ; std::_Ptr_cat<Bookmark,Bookmark>
; Function compile flags: /Ogtp
;	COMDAT ??$_Ptr_cat@UBookmark@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUBookmark@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UBookmark@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUBookmark@@0@Z PROC ; std::_Ptr_cat<Bookmark,Bookmark>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 528
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 530
	mov	al, BYTE PTR __Cat$[ebp]
; Line 531
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@UBookmark@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUBookmark@@0@Z ENDP ; std::_Ptr_cat<Bookmark,Bookmark>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@UMapEntry@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUMapEntry@@0@Z ; std::_Ptr_cat<MapEntry,MapEntry>
; Function compile flags: /Ogtp
;	COMDAT ??$_Ptr_cat@UMapEntry@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUMapEntry@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UMapEntry@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUMapEntry@@0@Z PROC ; std::_Ptr_cat<MapEntry,MapEntry>, COMDAT
; Line 528
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 530
	mov	al, BYTE PTR __Cat$[ebp]
; Line 531
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@UMapEntry@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUMapEntry@@0@Z ENDP ; std::_Ptr_cat<MapEntry,MapEntry>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAVAppState@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVAppState@@0@Z ; std::_Ptr_cat<AppState *,AppState *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Ptr_cat@PAVAppState@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVAppState@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAVAppState@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVAppState@@0@Z PROC ; std::_Ptr_cat<AppState *,AppState *>, COMDAT
; Line 528
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 530
	mov	al, BYTE PTR __Cat$[ebp]
; Line 531
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@PAVAppState@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVAppState@@0@Z ENDP ; std::_Ptr_cat<AppState *,AppState *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVAppState@@@std@@@std@@YAXPAPAVAppState@@0AAV?$allocator@PAVAppState@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<AppState *> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy_range@V?$allocator@PAVAppState@@@std@@@std@@YAXPAPAVAppState@@0AAV?$allocator@PAVAppState@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@PAVAppState@@@std@@@std@@YAXPAPAVAppState@@0AAV?$allocator@PAVAppState@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<AppState *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 105
	ret	0
??$_Destroy_range@V?$allocator@PAVAppState@@@std@@@std@@YAXPAPAVAppState@@0AAV?$allocator@PAVAppState@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<AppState *> >
_TEXT	ENDS
PUBLIC	??$_Construct@PAVAppState@@ABQAV1@@std@@YAXPAPAVAppState@@ABQAV1@@Z ; std::_Construct<AppState *,AppState * const &>
; Function compile flags: /Ogtp
;	COMDAT ??$_Construct@PAVAppState@@ABQAV1@@std@@YAXPAPAVAppState@@ABQAV1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAVAppState@@ABQAV1@@std@@YAXPAPAVAppState@@ABQAV1@@Z PROC ; std::_Construct<AppState *,AppState * const &>, COMDAT
; Line 46
	push	ebp
	mov	ebp, esp
; Line 48
	mov	eax, DWORD PTR __Ptr$[ebp]
	test	eax, eax
	je	SHORT $LN3@Construct
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN3@Construct:
; Line 49
	pop	ebp
	ret	0
??$_Construct@PAVAppState@@ABQAV1@@std@@YAXPAPAVAppState@@ABQAV1@@Z ENDP ; std::_Construct<AppState *,AppState * const &>
_TEXT	ENDS
PUBLIC	??$move@AAUBookmark@@@std@@YA$$QAUBookmark@@AAU1@@Z ; std::move<Bookmark &>
; Function compile flags: /Ogtp
;	COMDAT ??$move@AAUBookmark@@@std@@YA$$QAUBookmark@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAUBookmark@@@std@@YA$$QAUBookmark@@AAU1@@Z PROC ; std::move<Bookmark &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 86
	push	ebp
	mov	ebp, esp
; Line 87
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 88
	pop	ebp
	ret	0
??$move@AAUBookmark@@@std@@YA$$QAUBookmark@@AAU1@@Z ENDP ; std::move<Bookmark &>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAPAVAppState@@@std@@YAPAPAVAppState@@PAPAV1@@Z ; std::_Val_type<AppState * *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Val_type@PAPAVAppState@@@std@@YAPAPAVAppState@@PAPAV1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAVAppState@@@std@@YAPAPAVAppState@@PAPAV1@@Z PROC ; std::_Val_type<AppState * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 802
	xor	eax, eax
; Line 803
	ret	0
??$_Val_type@PAPAVAppState@@@std@@YAPAPAVAppState@@PAPAV1@@Z ENDP ; std::_Val_type<AppState * *>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAVAppState@@PAV1@PAV1@@std@@YAPAPAVAppState@@PAPAV1@00AAV?$allocator@PAVAppState@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<AppState *,AppState *,AppState *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Uninit_move@PAVAppState@@PAV1@PAV1@@std@@YAPAPAVAppState@@PAPAV1@00AAV?$allocator@PAVAppState@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAVAppState@@PAV1@PAV1@@std@@YAPAPAVAppState@@PAPAV1@00AAV?$allocator@PAVAppState@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<AppState *,AppState *,AppState *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
; Line 456
	push	ebp
	mov	ebp, esp
; Line 459
	mov	ecx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, ecx
	push	esi
	sar	eax, 2
; Line 461
	lea	esi, DWORD PTR [eax*4]
	mov	eax, DWORD PTR __Dest$[ebp]
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
	pop	esi
; Line 462
	pop	ebp
	ret	0
??$_Uninit_move@PAVAppState@@PAV1@PAV1@@std@@YAPAPAVAppState@@PAPAV1@00AAV?$allocator@PAVAppState@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<AppState *,AppState *,AppState *>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAUMapEntry@@@std@@YAPAUMapEntry@@PAU1@@Z ; std::_Val_type<MapEntry *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Val_type@PAUMapEntry@@@std@@YAPAUMapEntry@@PAU1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUMapEntry@@@std@@YAPAUMapEntry@@PAU1@@Z PROC ; std::_Val_type<MapEntry *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 802
	xor	eax, eax
; Line 803
	ret	0
??$_Val_type@PAUMapEntry@@@std@@YAPAUMapEntry@@PAU1@@Z ENDP ; std::_Val_type<MapEntry *>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAUBookmark@@@std@@YAPAUBookmark@@PAU1@@Z ; std::_Val_type<Bookmark *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Val_type@PAUBookmark@@@std@@YAPAUBookmark@@PAU1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUBookmark@@@std@@YAPAUBookmark@@PAU1@@Z PROC ; std::_Val_type<Bookmark *>, COMDAT
; Line 802
	xor	eax, eax
; Line 803
	ret	0
??$_Val_type@PAUBookmark@@@std@@YAPAUBookmark@@PAU1@@Z ENDP ; std::_Val_type<Bookmark *>
_TEXT	ENDS
PUBLIC	??$forward@UMapEntry@@@std@@YA$$QAUMapEntry@@AAU1@@Z ; std::forward<MapEntry>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@UMapEntry@@@std@@YA$$QAUMapEntry@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UMapEntry@@@std@@YA$$QAUMapEntry@@AAU1@@Z PROC ; std::forward<MapEntry>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@UMapEntry@@@std@@YA$$QAUMapEntry@@AAU1@@Z ENDP ; std::forward<MapEntry>
_TEXT	ENDS
PUBLIC	??$forward@UBookmark@@@std@@YA$$QAUBookmark@@AAU1@@Z ; std::forward<Bookmark>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@UBookmark@@@std@@YA$$QAUBookmark@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UBookmark@@@std@@YA$$QAUBookmark@@AAU1@@Z PROC ; std::forward<Bookmark>, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@UBookmark@@@std@@YA$$QAUBookmark@@AAU1@@Z ENDP ; std::forward<Bookmark>
_TEXT	ENDS
PUBLIC	??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_istream<char,std::char_traits<char> >::sentry::~sentry
; Function compile flags: /Ogtp
;	COMDAT ??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_istream<char,std::char_traits<char> >::sentry::~sentry, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax+56]
	test	eax, eax
	je	SHORT $LN4@sentry
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+8]
	jmp	eax
$LN4@sentry:
	ret	0
??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_istream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Ogtp
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1495
	mov	eax, ecx
; Line 1496
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN6@c_str
	mov	eax, DWORD PTR [eax]
$LN6@c_str:
; Line 1497
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
PUBLIC	??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry
EXTRN	__imp_?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\ios
xdata$x	SEGMENT
__unwindtable$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z$0
__ehfuncinfo$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Istr$ = 8						; size = 4
__Noskip$ = 12						; size = 1
??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z PROC ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\istream
; Line 99
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	mov	eax, DWORD PTR __Istr$[ebp]
	mov	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+eax+56]
	test	eax, eax
	je	SHORT $LN4@sentry@2
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN4@sentry@2:
; Line 100
	mov	ecx, DWORD PTR __Noskip$[ebp]
	push	ecx
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	DWORD PTR __imp_?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z
	mov	BYTE PTR [esi+4], al
; Line 101
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__ehhandler$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z ENDP ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	?is_open@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ifstream<char,std::char_traits<char> >::is_open
; Function compile flags: /Ogtp
;	COMDAT ?is_open@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?is_open@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QBE_NXZ PROC ; std::basic_ifstream<char,std::char_traits<char> >::is_open, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\fstream
; Line 855
	xor	eax, eax
	cmp	DWORD PTR [ecx+100], eax
	setne	al
; Line 856
	ret	0
?is_open@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QBE_NXZ ENDP ; std::basic_ifstream<char,std::char_traits<char> >::is_open
_TEXT	ENDS
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
; Function compile flags: /Ogtp
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__N0$ = 12						; size = 4
__Ptr$ = 16						; size = 4
__Count$ = 20						; size = 4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1887
	push	ebp
	mov	ebp, esp
; Line 1893
	mov	eax, DWORD PTR [ecx+16]
	push	ebx
	push	esi
	push	edi
	mov	edi, DWORD PTR __Off$[ebp]
	cmp	eax, edi
	jae	SHORT $LN2@compare@2
; Line 1894
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN19@compare@2:
$LN2@compare@2:
; Line 1895
	mov	esi, DWORD PTR __N0$[ebp]
	sub	eax, edi
	cmp	eax, esi
	jae	SHORT $LN1@compare@2
; Line 1896
	mov	esi, eax
$LN1@compare@2:
; Line 1899
	mov	ebx, DWORD PTR __Count$[ebp]
	mov	edx, esi
	cmp	esi, ebx
	jb	SHORT $LN6@compare@2
	mov	edx, ebx
$LN6@compare@2:
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN16@compare@2
	mov	eax, DWORD PTR [ecx]
	jmp	SHORT $LN17@compare@2
$LN16@compare@2:
	mov	eax, ecx
$LN17@compare@2:
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	edx
	push	ecx
	add	eax, edi
	push	eax
	call	?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
	add	esp, 12					; 0000000cH
; Line 1901
	test	eax, eax
	jne	SHORT $LN8@compare@2
	cmp	esi, ebx
	jae	SHORT $LN7@compare@2
	pop	edi
	pop	esi
	or	eax, -1
	pop	ebx
; Line 1902
	pop	ebp
	ret	16					; 00000010H
$LN7@compare@2:
; Line 1901
	xor	eax, eax
	cmp	esi, ebx
	setne	al
$LN8@compare@2:
	pop	edi
	pop	esi
	pop	ebx
; Line 1902
	pop	ebp
	ret	16					; 00000010H
$LN18@compare@2:
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
_TEXT	ENDS
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z PROC ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 454
	mov	eax, ecx
; Line 455
	ret	4
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAE@V?$allocator@UMapEntry@@@1@@Z ; std::_Vector_val<MapEntry,std::allocator<MapEntry> >::_Vector_val<MapEntry,std::allocator<MapEntry> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Vector_val@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAE@V?$allocator@UMapEntry@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAE@V?$allocator@UMapEntry@@@1@@Z PROC ; std::_Vector_val<MapEntry,std::allocator<MapEntry> >::_Vector_val<MapEntry,std::allocator<MapEntry> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 426
	mov	eax, ecx
; Line 427
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
; Line 428
	mov	DWORD PTR [eax+4], ecx
; Line 429
	mov	DWORD PTR [eax+8], ecx
; Line 430
	ret	4
??0?$_Vector_val@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAE@V?$allocator@UMapEntry@@@1@@Z ENDP ; std::_Vector_val<MapEntry,std::allocator<MapEntry> >::_Vector_val<MapEntry,std::allocator<MapEntry> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE@V?$allocator@UBookmark@@@1@@Z ; std::_Vector_val<Bookmark,std::allocator<Bookmark> >::_Vector_val<Bookmark,std::allocator<Bookmark> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE@V?$allocator@UBookmark@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE@V?$allocator@UBookmark@@@1@@Z PROC ; std::_Vector_val<Bookmark,std::allocator<Bookmark> >::_Vector_val<Bookmark,std::allocator<Bookmark> >, COMDAT
; _this$ = ecx
; Line 426
	mov	eax, ecx
; Line 427
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
; Line 428
	mov	DWORD PTR [eax+4], ecx
; Line 429
	mov	DWORD PTR [eax+8], ecx
; Line 430
	ret	4
??0?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE@V?$allocator@UBookmark@@@1@@Z ENDP ; std::_Vector_val<Bookmark,std::allocator<Bookmark> >::_Vector_val<Bookmark,std::allocator<Bookmark> >
_TEXT	ENDS
PUBLIC	??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`vftable'
PUBLIC	??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
PUBLIC	??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_filebuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Lock
PUBLIC	?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Unlock
PUBLIC	?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::overflow
PUBLIC	?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail
PUBLIC	?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_filebuf<char,std::char_traits<char> >::underflow
PUBLIC	?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_filebuf<char,std::char_traits<char> >::uflow
PUBLIC	?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@_JHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::seekoff
PUBLIC	?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z ; std::basic_filebuf<char,std::char_traits<char> >::seekpos
PUBLIC	?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z ; std::basic_filebuf<char,std::char_traits<char> >::setbuf
PUBLIC	?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ; std::basic_filebuf<char,std::char_traits<char> >::sync
PUBLIC	?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::imbue
EXTRN	__imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ:PROC
EXTRN	??_E?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:PROC ; std::basic_filebuf<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::showmanyc
EXTRN	?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsgetn
EXTRN	?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsputn
;	COMDAT ??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\streambuf
rdata$r	SEGMENT
??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_filebuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ DD 00H ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8
	DD	FLAT:??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`vftable'
	DD	FLAT:??_E?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
	DD	FLAT:?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	DD	FLAT:?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ
	DD	FLAT:?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z
	DD	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z
	DD	FLAT:?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@_JHH@Z
	DD	FLAT:?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z
	DD	FLAT:?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z
	DD	FLAT:?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z$0
__ehfuncinfo$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__File$ = 8						; size = 4
??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\fstream
; Line 152
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	call	DWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
	xor	ebx, ebx
; Line 153
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+8], ebx
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
	mov	BYTE PTR [esi+80], bl
	mov	BYTE PTR [esi+73], bl
	call	DWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ
	mov	eax, DWORD PTR __File$[ebp]
	cmp	eax, ebx
	je	SHORT $LN13@basic_file
	lea	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [esi+16], ecx
	mov	DWORD PTR [esi+20], ecx
	lea	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+32], eax
	mov	DWORD PTR [esi+36], eax
	mov	DWORD PTR [esi+48], ecx
	mov	DWORD PTR [esi+52], ecx
$LN13@basic_file:
	mov	DWORD PTR [esi+84], eax
	mov	eax, DWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA
	mov	DWORD PTR [esi+76], eax
	mov	DWORD PTR [esi+68], ebx
; Line 154
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
__ehhandler$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAE@PAU_iobuf@@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
PUBLIC	?to_int_type@?$char_traits@D@std@@SAHABD@Z	; std::char_traits<char>::to_int_type
; Function compile flags: /Ogtp
;	COMDAT ?to_int_type@?$char_traits@D@std@@SAHABD@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 4
?to_int_type@?$char_traits@D@std@@SAHABD@Z PROC		; std::char_traits<char>::to_int_type, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 546
	push	ebp
	mov	ebp, esp
; Line 547
	mov	eax, DWORD PTR __Ch$[ebp]
	movzx	eax, BYTE PTR [eax]
; Line 548
	pop	ebp
	ret	0
?to_int_type@?$char_traits@D@std@@SAHABD@Z ENDP		; std::char_traits<char>::to_int_type
_TEXT	ENDS
PUBLIC	??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z		; std::_Fgetc<char>
EXTRN	__imp__fgetc:PROC
; Function compile flags: /Ogtp
;	COMDAT ??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z
_TEXT	SEGMENT
__Byte$ = 8						; size = 4
__File$ = 12						; size = 4
??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z PROC		; std::_Fgetc<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\fstream
; Line 35
	push	ebp
	mov	ebp, esp
; Line 37
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	call	DWORD PTR __imp__fgetc
	add	esp, 4
	cmp	eax, -1
	jne	SHORT $LN2@Fgetc
; Line 38
	xor	al, al
; Line 44
	pop	ebp
	ret	0
$LN2@Fgetc:
; Line 41
	mov	ecx, DWORD PTR __Byte$[ebp]
	mov	BYTE PTR [ecx], al
; Line 42
	mov	al, 1
; Line 44
	pop	ebp
	ret	0
??$_Fgetc@D@std@@YA_NAADPAU_iobuf@@@Z ENDP		; std::_Fgetc<char>
_TEXT	ENDS
PUBLIC	??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z		; std::_Fputc<char>
EXTRN	__imp__fputc:PROC
; Function compile flags: /Ogtp
;	COMDAT ??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z
_TEXT	SEGMENT
__Byte$ = 8						; size = 1
__File$ = 12						; size = 4
??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z PROC		; std::_Fputc<char>, COMDAT
; Line 80
	push	ebp
	mov	ebp, esp
; Line 81
	mov	eax, DWORD PTR __File$[ebp]
	movsx	ecx, BYTE PTR __Byte$[ebp]
	push	eax
	push	ecx
	call	DWORD PTR __imp__fputc
	xor	edx, edx
	add	esp, 8
	cmp	eax, -1
	setne	al
; Line 82
	pop	ebp
	ret	0
??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z ENDP		; std::_Fputc<char>
_TEXT	ENDS
PUBLIC	??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z		; std::_Ungetc<char>
EXTRN	__imp__ungetc:PROC
; Function compile flags: /Ogtp
;	COMDAT ??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z
_TEXT	SEGMENT
__Byte$ = 8						; size = 4
__File$ = 12						; size = 4
??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z PROC		; std::_Ungetc<char>, COMDAT
; Line 104
	push	ebp
	mov	ebp, esp
; Line 105
	mov	ecx, DWORD PTR __Byte$[ebp]
	mov	eax, DWORD PTR __File$[ebp]
	movzx	edx, BYTE PTR [ecx]
	push	eax
	push	edx
	call	DWORD PTR __imp__ungetc
	xor	ecx, ecx
	add	esp, 8
	cmp	eax, -1
	setne	al
; Line 106
	pop	ebp
	ret	0
??$_Ungetc@D@std@@YA_NABDPAU_iobuf@@@Z ENDP		; std::_Ungetc<char>
_TEXT	ENDS
EXTRN	__imp___lock_file:PROC
; Function compile flags: /Ogtp
;	COMDAT ?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ
_TEXT	SEGMENT
?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Lock, COMDAT
; _this$ = ecx
; Line 309
	mov	eax, DWORD PTR [ecx+84]
	test	eax, eax
	je	SHORT $LN1@Lock
; Line 310
	push	eax
	call	DWORD PTR __imp___lock_file
	pop	ecx
$LN1@Lock:
; Line 311
	ret	0
?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Lock
_TEXT	ENDS
EXTRN	__imp___unlock_file:PROC
; Function compile flags: /Ogtp
;	COMDAT ?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ
_TEXT	SEGMENT
?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Unlock, COMDAT
; _this$ = ecx
; Line 315
	mov	eax, DWORD PTR [ecx+84]
	test	eax, eax
	je	SHORT $LN1@Unlock
; Line 316
	push	eax
	call	DWORD PTR __imp___unlock_file
	pop	ecx
$LN1@Unlock:
; Line 317
	ret	0
?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Unlock
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::underflow, COMDAT
; _this$ = ecx
; Line 408
	push	esi
	mov	esi, ecx
; Line 411
	mov	eax, DWORD PTR [esi+32]
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN4@underflow
	mov	edx, DWORD PTR [esi+48]
	mov	edx, DWORD PTR [edx]
	mov	eax, ecx
	add	edx, eax
	cmp	eax, edx
	jae	SHORT $LN4@underflow
; Line 412
	movzx	eax, BYTE PTR [ecx]
	pop	esi
; Line 420
	ret	0
$LN4@underflow:
; Line 413
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+28]
	push	edi
	mov	ecx, esi
	call	edx
	mov	edi, eax
	cmp	edi, -1
	jne	SHORT $LN2@underflow
; Line 414
	pop	edi
	or	eax, eax
	pop	esi
; Line 420
	ret	0
$LN2@underflow:
; Line 417
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+16]
	push	edi
	mov	ecx, esi
	call	edx
; Line 418
	mov	eax, edi
	pop	edi
	pop	esi
; Line 420
	ret	0
?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::underflow
_TEXT	ENDS
EXTRN	__imp__fflush:PROC
; Function compile flags: /Ogtp
;	COMDAT ?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::sync, COMDAT
; _this$ = ecx
; Line 543
	push	esi
	mov	esi, ecx
; Line 546
	cmp	DWORD PTR [esi+84], 0
	je	SHORT $LN3@sync
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+12]
	push	-1
	call	edx
	cmp	eax, -1
	je	SHORT $LN3@sync
	mov	eax, DWORD PTR [esi+84]
	push	eax
	call	DWORD PTR __imp__fflush
	add	esp, 4
	test	eax, eax
	jns	SHORT $LN3@sync
	or	eax, -1
	pop	esi
; Line 547
	ret	0
$LN3@sync:
; Line 546
	xor	eax, eax
	pop	esi
; Line 547
	ret	0
?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::sync
_TEXT	ENDS
PUBLIC	?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back
; Function compile flags: /Ogtp
;	COMDAT ?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ
_TEXT	SEGMENT
?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back, COMDAT
; _this$ = ecx
; Line 647
	mov	edx, DWORD PTR [ecx+16]
	push	esi
	mov	esi, DWORD PTR [edx]
	lea	eax, DWORD PTR [ecx+72]
	cmp	esi, eax
	je	SHORT $LN1@Set_back
; Line 649
	mov	DWORD PTR [ecx+60], esi
; Line 650
	mov	esi, DWORD PTR [ecx+48]
	mov	esi, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR [ecx+32]
	add	esi, DWORD PTR [edi]
	pop	edi
	mov	DWORD PTR [ecx+64], esi
$LN1@Set_back:
; Line 652
	mov	DWORD PTR [edx], eax
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [edx], eax
	mov	edx, ecx
	sub	edx, eax
	mov	eax, DWORD PTR [ecx+48]
	add	edx, 73					; 00000049H
	mov	DWORD PTR [eax], edx
	pop	esi
; Line 653
	ret	0
?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back
_TEXT	ENDS
PUBLIC	??0?$fpos@H@std@@QAE@_J@Z			; std::fpos<int>::fpos<int>
; Function compile flags: /Ogtp
;	COMDAT ??0?$fpos@H@std@@QAE@_J@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 8
??0?$fpos@H@std@@QAE@_J@Z PROC				; std::fpos<int>::fpos<int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 40
	push	ebp
	mov	ebp, esp
	mov	edx, DWORD PTR __Off$[ebp+4]
	mov	eax, ecx
	mov	ecx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR [eax], ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
; Line 41
	pop	ebp
	ret	8
??0?$fpos@H@std@@QAE@_J@Z ENDP				; std::fpos<int>::fpos<int>
_TEXT	ENDS
PUBLIC	??0?$fpos@H@std@@QAE@H_J@Z			; std::fpos<int>::fpos<int>
; Function compile flags: /Ogtp
;	COMDAT ??0?$fpos@H@std@@QAE@H_J@Z
_TEXT	SEGMENT
__State$ = 8						; size = 4
__Fileposition$ = 12					; size = 8
??0?$fpos@H@std@@QAE@H_J@Z PROC				; std::fpos<int>::fpos<int>, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	mov	edx, DWORD PTR __Fileposition$[ebp+4]
	mov	eax, ecx
	mov	ecx, DWORD PTR __Fileposition$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR __State$[ebp]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax+12], edx
	mov	DWORD PTR [eax+16], ecx
; Line 46
	pop	ebp
	ret	12					; 0000000cH
??0?$fpos@H@std@@QAE@H_J@Z ENDP				; std::fpos<int>::fpos<int>
_TEXT	ENDS
PUBLIC	?state@?$fpos@H@std@@QBEHXZ			; std::fpos<int>::state
; Function compile flags: /Ogtp
;	COMDAT ?state@?$fpos@H@std@@QBEHXZ
_TEXT	SEGMENT
?state@?$fpos@H@std@@QBEHXZ PROC			; std::fpos<int>::state, COMDAT
; _this$ = ecx
; Line 50
	mov	eax, DWORD PTR [ecx+16]
; Line 51
	ret	0
?state@?$fpos@H@std@@QBEHXZ ENDP			; std::fpos<int>::state
_TEXT	ENDS
PUBLIC	?seekpos@?$fpos@H@std@@QBE_JXZ			; std::fpos<int>::seekpos
; Function compile flags: /Ogtp
;	COMDAT ?seekpos@?$fpos@H@std@@QBE_JXZ
_TEXT	SEGMENT
?seekpos@?$fpos@H@std@@QBE_JXZ PROC			; std::fpos<int>::seekpos, COMDAT
; _this$ = ecx
; Line 60
	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [ecx+12]
; Line 61
	ret	0
?seekpos@?$fpos@H@std@@QBE_JXZ ENDP			; std::fpos<int>::seekpos
_TEXT	ENDS
PUBLIC	??B?$fpos@H@std@@QBE_JXZ			; std::fpos<int>::operator __int64
; Function compile flags: /Ogtp
;	COMDAT ??B?$fpos@H@std@@QBE_JXZ
_TEXT	SEGMENT
??B?$fpos@H@std@@QBE_JXZ PROC				; std::fpos<int>::operator __int64, COMDAT
; _this$ = ecx
; Line 65
	mov	eax, DWORD PTR [ecx+8]
	cdq
	add	eax, DWORD PTR [ecx]
	adc	edx, DWORD PTR [ecx+4]
; Line 66
	ret	0
??B?$fpos@H@std@@QBE_JXZ ENDP				; std::fpos<int>::operator __int64
_TEXT	ENDS
PUBLIC	?not_eof@?$char_traits@D@std@@SAHABH@Z		; std::char_traits<char>::not_eof
; Function compile flags: /Ogtp
;	COMDAT ?not_eof@?$char_traits@D@std@@SAHABH@Z
_TEXT	SEGMENT
__Meta$ = 8						; size = 4
?not_eof@?$char_traits@D@std@@SAHABH@Z PROC		; std::char_traits<char>::not_eof, COMDAT
; Line 557
	push	ebp
	mov	ebp, esp
; Line 558
	mov	eax, DWORD PTR __Meta$[ebp]
	mov	ecx, DWORD PTR [eax]
	lea	eax, DWORD PTR [ecx+1]
	neg	eax
	sbb	eax, eax
	and	eax, ecx
; Line 559
	pop	ebp
	ret	0
?not_eof@?$char_traits@D@std@@SAHABH@Z ENDP		; std::char_traits<char>::not_eof
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
_TEXT	SEGMENT
__Meta$ = 8						; size = 4
?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\fstream
; Line 383
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 388
	mov	ebx, DWORD PTR __Meta$[ebp]
	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+32]
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN10@pbackfail
	mov	ecx, DWORD PTR [esi+16]
	cmp	DWORD PTR [ecx], eax
	jae	SHORT $LN10@pbackfail
	cmp	ebx, -1
	je	SHORT $LN9@pbackfail
	movzx	edx, BYTE PTR [eax-1]
	cmp	edx, ebx
	jne	SHORT $LN10@pbackfail
$LN9@pbackfail:
; Line 390
	mov	eax, DWORD PTR [esi+48]
	inc	DWORD PTR [eax]
	mov	esi, DWORD PTR [esi+32]
	dec	DWORD PTR [esi]
; Line 391
	lea	eax, DWORD PTR [ebx+1]
	neg	eax
	sbb	eax, eax
	pop	esi
	and	eax, ebx
	pop	ebx
; Line 405
	pop	ebp
	ret	4
$LN10@pbackfail:
; Line 393
	mov	eax, DWORD PTR [esi+84]
	test	eax, eax
	je	SHORT $LN6@pbackfail
	cmp	ebx, -1
	je	SHORT $LN6@pbackfail
; Line 395
	cmp	DWORD PTR [esi+68], 0
	jne	SHORT $LN4@pbackfail
	push	eax
	movzx	eax, bl
	push	eax
	call	DWORD PTR __imp__ungetc
	add	esp, 8
	cmp	eax, -1
; Line 396
	jne	SHORT $LN55@pbackfail
$LN4@pbackfail:
; Line 397
	mov	ecx, DWORD PTR [esi+32]
	lea	eax, DWORD PTR [esi+72]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $LN6@pbackfail
; Line 400
	mov	ecx, esi
	mov	BYTE PTR [eax], bl
	call	?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back
$LN55@pbackfail:
; Line 401
	pop	esi
	mov	eax, ebx
	pop	ebx
; Line 405
	pop	ebp
	ret	4
$LN6@pbackfail:
	pop	esi
; Line 394
	or	eax, -1
	pop	ebx
; Line 405
	pop	ebp
	ret	4
?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail
_TEXT	ENDS
EXTRN	__imp__setvbuf:PROC
; Function compile flags: /Ogtp
;	COMDAT ?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Count$ = 12						; size = 8
?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::setbuf, COMDAT
; _this$ = ecx
; Line 530
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
; Line 533
	mov	ecx, DWORD PTR [esi+84]
	push	edi
	test	ecx, ecx
	je	SHORT $LN2@setbuf
	mov	edx, DWORD PTR __Buffer$[ebp]
	mov	edi, DWORD PTR __Count$[ebp]
	test	edx, edx
	jne	SHORT $LN6@setbuf
	mov	eax, edi
	or	eax, DWORD PTR __Count$[ebp+4]
	jne	SHORT $LN6@setbuf
	mov	eax, 4
	jmp	SHORT $LN7@setbuf
$LN6@setbuf:
	xor	eax, eax
$LN7@setbuf:
	push	edi
	push	eax
	push	edx
	push	ecx
	call	DWORD PTR __imp__setvbuf
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN2@setbuf
; Line 537
	mov	edi, DWORD PTR [esi+84]
	mov	ecx, esi
	mov	BYTE PTR [esi+80], 1
	mov	BYTE PTR [esi+73], al
	call	DWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ
	test	edi, edi
	je	SHORT $LN17@setbuf
	lea	eax, DWORD PTR [edi+8]
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+20], eax
	lea	eax, DWORD PTR [edi+4]
	mov	DWORD PTR [esi+32], edi
	mov	DWORD PTR [esi+36], edi
	mov	DWORD PTR [esi+48], eax
	mov	DWORD PTR [esi+52], eax
$LN17@setbuf:
	mov	DWORD PTR [esi+84], edi
	mov	ecx, DWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA
	pop	edi
	mov	DWORD PTR [esi+76], ecx
	mov	DWORD PTR [esi+68], 0
; Line 538
	mov	eax, esi
	pop	esi
; Line 540
	pop	ebp
	ret	12					; 0000000cH
$LN2@setbuf:
	pop	edi
; Line 534
	xor	eax, eax
	pop	esi
; Line 540
	pop	ebp
	ret	12					; 0000000cH
?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PAD_J@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::setbuf
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
_TEXT	SEGMENT
__Loc$ = 8						; size = 4
?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::imbue, COMDAT
; _this$ = ecx
; Line 550
	push	ebp
	mov	ebp, esp
; Line 551
	mov	eax, DWORD PTR __Loc$[ebp]
	push	esi
	push	edi
	push	eax
	mov	esi, ecx
	call	??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,int> >
	mov	edi, eax
	add	esp, 4
	mov	ecx, edi
	call	DWORD PTR __imp_?always_noconv@codecvt_base@std@@QBE_NXZ
	test	al, al
	je	SHORT $LN4@imbue
	pop	edi
	mov	DWORD PTR [esi+68], 0
	pop	esi
; Line 552
	pop	ebp
	ret	4
; Line 551
$LN4@imbue:
	mov	ecx, esi
	mov	DWORD PTR [esi+68], edi
	call	DWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ
	pop	edi
	pop	esi
; Line 552
	pop	ebp
	ret	4
?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::imbue
_TEXT	ENDS
PUBLIC	?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::open
EXTRN	__imp_?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QBE?AVlocale@2@XZ:PROC
EXTRN	__imp_?_Fiopen@std@@YAPAU_iobuf@@PBDHH@Z:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xlocale
xdata$x	SEGMENT
__unwindtable$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z$0
__ehfuncinfo$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Filename$ = 8						; size = 4
__Mode$ = 12						; size = 4
$T135472 = 16						; size = 4
__Prot$ = 16						; size = 4
?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::open, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\fstream
; Line 218
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
; Line 220
	xor	ebx, ebx
	cmp	DWORD PTR [esi+84], ebx
	jne	$LN1@open
	mov	eax, DWORD PTR __Prot$[ebp]
	mov	ecx, DWORD PTR __Mode$[ebp]
	mov	edx, DWORD PTR __Filename$[ebp]
	push	eax
	push	ecx
	push	edx
	call	DWORD PTR __imp_?_Fiopen@std@@YAPAU_iobuf@@PBDHH@Z
	mov	edi, eax
	add	esp, 12					; 0000000cH
	cmp	edi, ebx
	je	$LN1@open
; Line 223
	mov	ecx, esi
	mov	BYTE PTR [esi+80], 1
	mov	BYTE PTR [esi+73], bl
	call	DWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ
	lea	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR [esi+48], ecx
	mov	DWORD PTR [esi+52], ecx
	lea	eax, DWORD PTR [edi+8]
; Line 224
	lea	ecx, DWORD PTR $T135472[ebp]
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+20], eax
	mov	DWORD PTR [esi+32], edi
	mov	DWORD PTR [esi+36], edi
	mov	DWORD PTR [esi+84], edi
	mov	eax, DWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA
	push	ecx
	mov	ecx, esi
	mov	DWORD PTR [esi+76], eax
	mov	DWORD PTR [esi+68], ebx
	call	DWORD PTR __imp_?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QBE?AVlocale@2@XZ
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], ebx
	call	??$use_facet@V?$codecvt@DDH@std@@@std@@YAABV?$codecvt@DDH@0@ABVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,int> >
	mov	edi, eax
	add	esp, 4
	mov	ecx, edi
	call	DWORD PTR __imp_?always_noconv@codecvt_base@std@@QBE_NXZ
	test	al, al
	je	SHORT $LN18@open
	mov	DWORD PTR [esi+68], ebx
	jmp	SHORT $LN17@open
$LN18@open:
	mov	ecx, esi
	mov	DWORD PTR [esi+68], edi
	call	DWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ
$LN17@open:
	mov	ecx, DWORD PTR $T135472[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	ecx, ebx
	je	SHORT $LN30@open
	call	DWORD PTR __imp_?_Decref@facet@locale@std@@QAEPAV123@XZ
	cmp	eax, ebx
	je	SHORT $LN30@open
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx]
	push	1
	call	eax
$LN30@open:
; Line 225
	mov	eax, esi
; Line 226
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN1@open:
; Line 221
	xor	eax, eax
; Line 226
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z$0:
	lea	ecx, DWORD PTR $T135472[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::open
PUBLIC	??D?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEAADXZ ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator*
; Function compile flags: /Ogtp
;	COMDAT ??D?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEAADXZ
_TEXT	SEGMENT
??D?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEAADXZ PROC ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 343
	mov	eax, DWORD PTR [ecx]
; Line 344
	ret	0
??D?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEAADXZ ENDP ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator*
_TEXT	ENDS
PUBLIC	?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign
; Function compile flags: /Ogtp
;	COMDAT ?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ch$ = 16						; size = 1
?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign, COMDAT
; _this$ = ecx
; Line 1910
	push	ebp
	mov	ebp, esp
; Line 1911
	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, 1
	jne	SHORT $LN2@Chassign
; Line 1912
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN7@Chassign
	mov	ecx, DWORD PTR [ecx]
$LN7@Chassign:
	mov	al, BYTE PTR __Ch$[ebp]
	mov	edx, DWORD PTR __Off$[ebp]
	mov	BYTE PTR [ecx+edx], al
; Line 1915
	pop	ebp
	ret	12					; 0000000cH
$LN2@Chassign:
; Line 1914
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN13@Chassign
	mov	ecx, DWORD PTR [ecx]
$LN13@Chassign:
	add	ecx, DWORD PTR __Off$[ebp]
	push	eax
	movsx	eax, BYTE PTR __Ch$[ebp]
	push	eax
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1915
	pop	ebp
	ret	12					; 0000000cH
?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Ogtp
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx
; Line 1952
	push	ebp
	mov	ebp, esp
; Line 1953
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [ecx+16], eax
	jb	SHORT $LN5@Eos
	mov	ecx, DWORD PTR [ecx]
$LN5@Eos:
	mov	BYTE PTR [ecx+eax], 0
; Line 1954
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Ogtp
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx
; Line 1972
	push	ebp
	mov	ebp, esp
	push	esi
; Line 1973
	mov	esi, DWORD PTR __Ptr$[ebp]
	test	esi, esi
	je	SHORT $LN2@Inside@4
	mov	edx, DWORD PTR [ecx+20]
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN8@Inside@4
	mov	eax, DWORD PTR [ecx]
	jmp	SHORT $LN9@Inside@4
$LN8@Inside@4:
	mov	eax, ecx
$LN9@Inside@4:
	cmp	esi, eax
	jb	SHORT $LN2@Inside@4
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN12@Inside@4
	mov	eax, DWORD PTR [ecx]
	jmp	SHORT $LN13@Inside@4
$LN12@Inside@4:
	mov	eax, ecx
$LN13@Inside@4:
	mov	ecx, DWORD PTR [ecx+16]
	add	ecx, eax
	cmp	ecx, esi
	jbe	SHORT $LN2@Inside@4
; Line 1976
	mov	al, 1
	pop	esi
; Line 1977
	pop	ebp
	ret	4
$LN2@Inside@4:
; Line 1974
	xor	al, al
	pop	esi
; Line 1977
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
PUBLIC	?max_size@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QBEIXZ ; std::vector<AppState *,std::allocator<AppState *> >::max_size
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QBEIXZ PROC ; std::vector<AppState *,std::allocator<AppState *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 884
	mov	eax, 1073741823				; 3fffffffH
; Line 885
	ret	0
?max_size@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QBEIXZ ENDP ; std::vector<AppState *,std::allocator<AppState *> >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBEII@Z ; std::vector<AppState *,std::allocator<AppState *> >::_Grow_to
; Function compile flags: /Ogtp
;	COMDAT ?_Grow_to@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBEII@Z PROC ; std::vector<AppState *,std::allocator<AppState *> >::_Grow_to, COMDAT
; _this$ = ecx
; Line 1274
	push	ebp
	mov	ebp, esp
; Line 1275
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx]
; Line 1278
	mov	edx, 1073741823				; 3fffffffH
	sar	eax, 2
	mov	ecx, eax
	shr	ecx, 1
	sub	edx, ecx
	cmp	edx, eax
	jae	SHORT $LN4@Grow_to
	xor	eax, eax
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	add	eax, ecx
$LN5@Grow_to:
; Line 1279
	mov	ecx, DWORD PTR __Count$[ebp]
	cmp	eax, ecx
	jae	SHORT $LN1@Grow_to
; Line 1281
	mov	eax, ecx
$LN1@Grow_to:
; Line 1282
	pop	ebp
	ret	4
?_Grow_to@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBEII@Z ENDP ; std::vector<AppState *,std::allocator<AppState *> >::_Grow_to
_TEXT	ENDS
PUBLIC	?max_size@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QBEIXZ ; std::vector<MapEntry,std::allocator<MapEntry> >::max_size
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QBEIXZ PROC ; std::vector<MapEntry,std::allocator<MapEntry> >::max_size, COMDAT
; _this$ = ecx
; Line 884
	mov	eax, 56512727				; 035e50d7H
; Line 885
	ret	0
?max_size@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QBEIXZ ENDP ; std::vector<MapEntry,std::allocator<MapEntry> >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IBEII@Z ; std::vector<MapEntry,std::allocator<MapEntry> >::_Grow_to
; Function compile flags: /Ogtp
;	COMDAT ?_Grow_to@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IBEII@Z PROC ; std::vector<MapEntry,std::allocator<MapEntry> >::_Grow_to, COMDAT
; _this$ = ecx
; Line 1274
	push	ebp
	mov	ebp, esp
; Line 1275
	mov	edx, DWORD PTR [ecx+8]
	sub	edx, DWORD PTR [ecx]
	mov	eax, 1808407283				; 6bca1af3H
	imul	edx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
; Line 1278
	mov	ecx, eax
	shr	ecx, 1
	mov	edx, 56512727				; 035e50d7H
	sub	edx, ecx
	cmp	edx, eax
	jae	SHORT $LN4@Grow_to@2
	xor	eax, eax
	jmp	SHORT $LN5@Grow_to@2
$LN4@Grow_to@2:
	add	eax, ecx
$LN5@Grow_to@2:
; Line 1279
	mov	ecx, DWORD PTR __Count$[ebp]
	cmp	eax, ecx
	jae	SHORT $LN1@Grow_to@2
; Line 1281
	mov	eax, ecx
$LN1@Grow_to@2:
; Line 1282
	pop	ebp
	ret	4
?_Grow_to@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IBEII@Z ENDP ; std::vector<MapEntry,std::allocator<MapEntry> >::_Grow_to
_TEXT	ENDS
PUBLIC	?max_size@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QBEIXZ ; std::vector<Bookmark,std::allocator<Bookmark> >::max_size
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QBEIXZ PROC ; std::vector<Bookmark,std::allocator<Bookmark> >::max_size, COMDAT
; _this$ = ecx
; Line 884
	mov	eax, 35791394				; 02222222H
; Line 885
	ret	0
?max_size@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QBEIXZ ENDP ; std::vector<Bookmark,std::allocator<Bookmark> >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IBEII@Z ; std::vector<Bookmark,std::allocator<Bookmark> >::_Grow_to
; Function compile flags: /Ogtp
;	COMDAT ?_Grow_to@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IBEII@Z PROC ; std::vector<Bookmark,std::allocator<Bookmark> >::_Grow_to, COMDAT
; _this$ = ecx
; Line 1274
	push	ebp
	mov	ebp, esp
	push	esi
; Line 1275
	mov	esi, DWORD PTR [ecx+8]
	sub	esi, DWORD PTR [ecx]
	mov	eax, -2004318071			; 88888889H
	imul	esi
	add	edx, esi
	sar	edx, 6
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
; Line 1278
	mov	ecx, eax
	shr	ecx, 1
	mov	edx, 35791394				; 02222222H
	sub	edx, ecx
	pop	esi
	cmp	edx, eax
	jae	SHORT $LN4@Grow_to@3
	xor	eax, eax
	jmp	SHORT $LN5@Grow_to@3
$LN4@Grow_to@3:
	add	eax, ecx
$LN5@Grow_to@3:
; Line 1279
	mov	ecx, DWORD PTR __Count$[ebp]
	cmp	eax, ecx
	jae	SHORT $LN1@Grow_to@3
; Line 1281
	mov	eax, ecx
$LN1@Grow_to@3:
; Line 1282
	pop	ebp
	ret	4
?_Grow_to@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IBEII@Z ENDP ; std::vector<Bookmark,std::allocator<Bookmark> >::_Grow_to
_TEXT	ENDS
PUBLIC	??0?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PADPBU_Container_base0@1@@Z ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_iterator<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PADPBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pstring$ = 12						; size = 4
??0?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PADPBU_Container_base0@1@@Z PROC ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_iterator<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 325
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 326
	pop	ebp
	ret	8
??0?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PADPBU_Container_base0@1@@Z ENDP ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_iterator<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@std@@QAE@PAUBookmark@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<Bookmark,std::allocator<Bookmark> > >::_Vector_iterator<std::_Vector_val<Bookmark,std::allocator<Bookmark> > >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@std@@QAE@PAUBookmark@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@std@@QAE@PAUBookmark@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<Bookmark,std::allocator<Bookmark> > >::_Vector_iterator<std::_Vector_val<Bookmark,std::allocator<Bookmark> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 304
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 305
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@std@@QAE@PAUBookmark@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<Bookmark,std::allocator<Bookmark> > >::_Vector_iterator<std::_Vector_val<Bookmark,std::allocator<Bookmark> > >
_TEXT	ENDS
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1517
	mov	eax, -2					; fffffffeH
; Line 1518
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@PAVAppState@@@std@@QAEPAPAVAppState@@I@Z ; std::allocator<AppState *>::allocate
; Function compile flags: /Ogtp
;	COMDAT ?allocate@?$allocator@PAVAppState@@@std@@QAEPAPAVAppState@@I@Z
_TEXT	SEGMENT
$T135735 = -12						; size = 12
$T135733 = 8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAVAppState@@@std@@QAEPAPAVAppState@@I@Z PROC ; std::allocator<AppState *>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 186
	push	ebp
	mov	ebp, esp
; Line 187
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
	je	SHORT $LN1@allocate
	cmp	ecx, 1073741823				; 3fffffffH
	ja	SHORT $LN3@allocate
	lea	eax, DWORD PTR [ecx*4]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@allocate
$LN3@allocate:
	lea	ecx, DWORD PTR $T135733[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T135735[ebp]
	mov	DWORD PTR $T135733[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T135735[ebp]
	push	edx
	mov	DWORD PTR $T135735[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN13@allocate:
$LN1@allocate:
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
$LN12@allocate:
?allocate@?$allocator@PAVAppState@@@std@@QAEPAPAVAppState@@I@Z ENDP ; std::allocator<AppState *>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@UMapEntry@@@std@@QAEPAUMapEntry@@I@Z ; std::allocator<MapEntry>::allocate
; Function compile flags: /Ogtp
;	COMDAT ?allocate@?$allocator@UMapEntry@@@std@@QAEPAUMapEntry@@I@Z
_TEXT	SEGMENT
$T135758 = -12						; size = 12
$T135756 = 8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@UMapEntry@@@std@@QAEPAUMapEntry@@I@Z PROC ; std::allocator<MapEntry>::allocate, COMDAT
; _this$ = ecx
; Line 186
	push	ebp
	mov	ebp, esp
; Line 187
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
	je	SHORT $LN1@allocate@2
	cmp	ecx, 56512727				; 035e50d7H
	ja	SHORT $LN3@allocate@2
	imul	ecx, 76					; 0000004cH
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@allocate@2
$LN3@allocate@2:
	lea	eax, DWORD PTR $T135756[ebp]
	push	eax
	lea	ecx, DWORD PTR $T135758[ebp]
	mov	DWORD PTR $T135756[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T135758[ebp]
	push	ecx
	mov	DWORD PTR $T135758[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN13@allocate@2:
$LN1@allocate@2:
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
$LN12@allocate@2:
?allocate@?$allocator@UMapEntry@@@std@@QAEPAUMapEntry@@I@Z ENDP ; std::allocator<MapEntry>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@UBookmark@@@std@@QAEPAUBookmark@@I@Z ; std::allocator<Bookmark>::allocate
; Function compile flags: /Ogtp
;	COMDAT ?allocate@?$allocator@UBookmark@@@std@@QAEPAUBookmark@@I@Z
_TEXT	SEGMENT
$T135781 = -12						; size = 12
$T135779 = 8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@UBookmark@@@std@@QAEPAUBookmark@@I@Z PROC ; std::allocator<Bookmark>::allocate, COMDAT
; _this$ = ecx
; Line 186
	push	ebp
	mov	ebp, esp
; Line 187
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
	je	SHORT $LN1@allocate@3
	cmp	ecx, 35791394				; 02222222H
	ja	SHORT $LN3@allocate@3
	mov	eax, ecx
	shl	eax, 4
	sub	eax, ecx
	add	eax, eax
	add	eax, eax
	add	eax, eax
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@allocate@3
$LN3@allocate@3:
	lea	ecx, DWORD PTR $T135779[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T135781[ebp]
	mov	DWORD PTR $T135779[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T135781[ebp]
	push	edx
	mov	DWORD PTR $T135781[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN13@allocate@3:
$LN1@allocate@3:
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
$LN12@allocate@3:
?allocate@?$allocator@UBookmark@@@std@@QAEPAUBookmark@@I@Z ENDP ; std::allocator<Bookmark>::allocate
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<Bookmark,std::allocator<Bookmark> > >::operator==
; Function compile flags: /Ogtp
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<Bookmark,std::allocator<Bookmark> > >::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 201
	push	ebp
	mov	ebp, esp
; Line 203
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	al
; Line 204
	pop	ebp
	ret	4
??8?$_Vector_const_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<Bookmark,std::allocator<Bookmark> > >::operator==
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
; Function compile flags: /Ogtp
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
$T135809 = -12						; size = 12
$T135807 = 8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 186
	push	ebp
	mov	ebp, esp
; Line 187
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
	je	SHORT $LN1@allocate@4
	cmp	ecx, -1
	ja	SHORT $LN3@allocate@4
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@allocate@4
$LN3@allocate@4:
	lea	eax, DWORD PTR $T135807[ebp]
	push	eax
	lea	ecx, DWORD PTR $T135809[ebp]
	mov	DWORD PTR $T135807[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T135809[ebp]
	push	ecx
	mov	DWORD PTR $T135809[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN13@allocate@4:
$LN1@allocate@4:
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
$LN12@allocate@4:
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAVAppState@@@std@@PAVAppState@@AAPAV3@@std@@YAXAAV?$allocator@PAVAppState@@@0@PAPAVAppState@@AAPAV2@@Z ; std::_Cons_val<std::allocator<AppState *>,AppState *,AppState * &>
; Function compile flags: /Ogtp
;	COMDAT ??$_Cons_val@V?$allocator@PAVAppState@@@std@@PAVAppState@@AAPAV3@@std@@YAXAAV?$allocator@PAVAppState@@@0@PAPAVAppState@@AAPAV2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAVAppState@@@std@@PAVAppState@@AAPAV3@@std@@YAXAAV?$allocator@PAVAppState@@@0@PAPAVAppState@@AAPAV2@@Z PROC ; std::_Cons_val<std::allocator<AppState *>,AppState *,AppState * &>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Pdest$[ebp]
	test	eax, eax
	je	SHORT $LN7@Cons_val
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN7@Cons_val:
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@PAVAppState@@@std@@PAVAppState@@AAPAV3@@std@@YAXAAV?$allocator@PAVAppState@@@0@PAPAVAppState@@AAPAV2@@Z ENDP ; std::_Cons_val<std::allocator<AppState *>,AppState *,AppState * &>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVAppState@@@std@@@std@@YAXPAPAVAppState@@0AAV?$allocator@PAVAppState@@@0@@Z ; std::_Destroy_range<std::allocator<AppState *> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy_range@V?$allocator@PAVAppState@@@std@@@std@@YAXPAPAVAppState@@0AAV?$allocator@PAVAppState@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVAppState@@@std@@@std@@YAXPAPAVAppState@@0AAV?$allocator@PAVAppState@@@0@@Z PROC ; std::_Destroy_range<std::allocator<AppState *> >, COMDAT
; Line 89
	ret	0
??$_Destroy_range@V?$allocator@PAVAppState@@@std@@@std@@YAXPAPAVAppState@@0AAV?$allocator@PAVAppState@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<AppState *> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAVAppState@@@std@@QAEXPAPAVAppState@@ABQAV3@@Z ; std::allocator<AppState *>::construct
; Function compile flags: /Ogtp
;	COMDAT ?construct@?$allocator@PAVAppState@@@std@@QAEXPAPAVAppState@@ABQAV3@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAVAppState@@@std@@QAEXPAPAVAppState@@ABQAV3@@Z PROC ; std::allocator<AppState *>::construct, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
; Line 197
	mov	eax, DWORD PTR __Ptr$[ebp]
	test	eax, eax
	je	SHORT $LN5@construct@2
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN5@construct@2:
; Line 198
	pop	ebp
	ret	8
?construct@?$allocator@PAVAppState@@@std@@QAEXPAPAVAppState@@ABQAV3@@Z ENDP ; std::allocator<AppState *>::construct
_TEXT	ENDS
PUBLIC	??$?5DU?$char_traits@D@std@@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAD@Z ; std::operator>><char,std::char_traits<char> >
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z:PROC
EXTRN	__imp_?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\ios
xdata$x	SEGMENT
__catchsym$??$?5DU?$char_traits@D@std@@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAD@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?5DU?$char_traits@D@std@@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAD@Z$0
__tryblocktable$??$?5DU?$char_traits@D@std@@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAD@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$?5DU?$char_traits@D@std@@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAD@Z$5
__unwindtable$??$?5DU?$char_traits@D@std@@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?5DU?$char_traits@D@std@@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAD@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$?5DU?$char_traits@D@std@@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAD@Z$2
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$??$?5DU?$char_traits@D@std@@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAD@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$?5DU?$char_traits@D@std@@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAD@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?5DU?$char_traits@D@std@@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$?5DU?$char_traits@D@std@@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAD@Z
_TEXT	SEGMENT
__Ok$ = -28						; size = 8
__State$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Istr$ = 8						; size = 4
__Ch$ = 12						; size = 4
??$?5DU?$char_traits@D@std@@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAD@Z PROC ; std::operator>><char,std::char_traits<char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\istream
; Line 1030
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?5DU?$char_traits@D@std@@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 1035
	mov	esi, DWORD PTR __Istr$[ebp]
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [ecx+esi+56]
	xor	edi, edi
	mov	DWORD PTR __State$[ebp], edi
	mov	DWORD PTR __Ok$[ebp], esi
	cmp	ecx, edi
	je	SHORT $LN15@operator
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN15@operator:
	push	edi
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+12], edi
	call	DWORD PTR __imp_?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z
	mov	BYTE PTR __Ok$[ebp+4], al
	mov	ebx, 1
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
; Line 1037
	test	al, al
	je	SHORT $LN11@operator
; Line 1040
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx+esi+56]
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	call	DWORD PTR __imp_?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
; Line 1041
	cmp	eax, -1
	jne	SHORT $LN2@operator
; Line 1042
	lea	edi, DWORD PTR [ebx+2]
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	jmp	SHORT $LN11@operator
$LN2@operator:
; Line 1044
	mov	ecx, DWORD PTR __Ch$[ebp]
	mov	BYTE PTR [ecx], al
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	jmp	SHORT $LN11@operator
__catch$??$?5DU?$char_traits@D@std@@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAD@Z$0:
; Line 1045
	mov	eax, DWORD PTR __Istr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [edx+4]
	mov	ebx, 1
	push	ebx
	push	4
	add	ecx, eax
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	mov	eax, $LN44@operator
	ret	0
$LN44@operator:
	mov	esi, DWORD PTR __Istr$[ebp]
	mov	edi, DWORD PTR __State$[ebp]
$LN11@operator:
; Line 1048
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	push	0
	push	edi
	add	ecx, esi
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
; Line 1049
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx+esi+56]
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	test	ecx, ecx
	je	SHORT $LN43@operator
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+8]
	call	edx
$LN43@operator:
	mov	eax, esi
; Line 1050
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?5DU?$char_traits@D@std@@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAD@Z$3:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__unwindfunclet$??$?5DU?$char_traits@D@std@@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAD@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
__ehhandler$??$?5DU?$char_traits@D@std@@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?5DU?$char_traits@D@std@@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?5DU?$char_traits@D@std@@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAD@Z ENDP ; std::operator>><char,std::char_traits<char> >
PUBLIC	??$_Uninitialized_move@PAPAVAppState@@PAPAV1@V?$allocator@PAVAppState@@@std@@@std@@YAPAPAVAppState@@PAPAV1@00AAV?$allocator@PAVAppState@@@0@@Z ; std::_Uninitialized_move<AppState * *,AppState * *,std::allocator<AppState *> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Uninitialized_move@PAPAVAppState@@PAPAV1@V?$allocator@PAVAppState@@@std@@@std@@YAPAPAVAppState@@PAPAV1@00AAV?$allocator@PAVAppState@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVAppState@@PAPAV1@V?$allocator@PAVAppState@@@std@@@std@@YAPAPAVAppState@@PAPAV1@00AAV?$allocator@PAVAppState@@@0@@Z PROC ; std::_Uninitialized_move<AppState * *,AppState * *,std::allocator<AppState *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
; Line 469
	push	ebp
	mov	ebp, esp
; Line 471
	mov	ecx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, ecx
	push	esi
	sar	eax, 2
	lea	esi, DWORD PTR [eax*4]
	mov	eax, DWORD PTR __Dest$[ebp]
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
	pop	esi
; Line 472
	pop	ebp
	ret	0
??$_Uninitialized_move@PAPAVAppState@@PAPAV1@V?$allocator@PAVAppState@@@std@@@std@@YAPAPAVAppState@@PAPAV1@00AAV?$allocator@PAVAppState@@@0@@Z ENDP ; std::_Uninitialized_move<AppState * *,AppState * *,std::allocator<AppState *> >
_TEXT	ENDS
PUBLIC	__real@3fe0000000000000
PUBLIC	?display@Menu@@UAEXMM@Z				; Menu::display
EXTRN	?shdrawtext@Font@@QAEXHHPBD@Z:PROC		; Font::shdrawtext
EXTRN	?f24@@3PAVFont@@A:DWORD				; f24
EXTRN	?shprint@freetype@@YAXABUfont_data@1@MMPBDZZ:PROC ; freetype::shprint
EXTRN	?width@freetype@@YAHABUfont_data@1@PBDZZ:PROC	; freetype::width
EXTRN	?morpheus@@3Ufont_data@freetype@@A:BYTE		; morpheus
EXTRN	?f16@@3PAVFont@@A:DWORD				; f16
EXTRN	__imp__glTexCoord2f@8:PROC
EXTRN	__imp__glBindTexture@8:PROC
EXTRN	?shprint@Font@@QAAXHHPBDZZ:PROC			; Font::shprint
EXTRN	?textwidth@Font@@QAEHPBD@Z:PROC			; Font::textwidth
EXTRN	?f32@@3PAVFont@@A:DWORD				; f32
EXTRN	__imp__glEnd@0:PROC
EXTRN	__imp__glBegin@4:PROC
EXTRN	__imp__glVertex2i@8:PROC
EXTRN	__imp__glBlendFunc@8:PROC
EXTRN	?set2D@Video@@QAEXXZ:PROC			; Video::set2D
EXTRN	?draw@Model@@QAEXXZ:PROC			; Model::draw
EXTRN	?setup@ModelCamera@@QAEXH@Z:PROC		; ModelCamera::setup
EXTRN	?globalTime@@3HA:DWORD				; globalTime
EXTRN	__imp__glDepthFunc@4:PROC
EXTRN	__imp__glEnableClientState@4:PROC
EXTRN	__imp__glLightf@12:PROC
EXTRN	__imp__glColor4f@16:PROC
EXTRN	__imp__glColorMaterial@8:PROC
EXTRN	__imp__glEnable@4:PROC
EXTRN	__imp__glLightModelfv@8:PROC
EXTRN	__imp__glDisable@4:PROC
EXTRN	?clearScreen@Video@@QAEXXZ:PROC			; Video::clearScreen
EXTRN	?video@@3VVideo@@A:BYTE				; video
;	COMDAT __real@3fe0000000000000
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
; Function compile flags: /Ogtp
CONST	ENDS
_TEXT	SEGMENT
_la$119334 = -36					; size = 16
tv935 = -20						; size = 4
tv928 = -20						; size = 4
tv743 = -20						; size = 4
_w$119366 = -20						; size = 4
tv771 = -16						; size = 8
_this$ = -12						; size = 4
tv429 = -8						; size = 4
_i$119356 = -8						; size = 4
tv995 = -4						; size = 4
_t$ = 8							; size = 4
_dt$ = 12						; size = 4
?display@Menu@@UAEXMM@Z PROC				; Menu::display
; _this$ = ecx
; File c:\programovani\wow editor\test\src\editor\menu.cpp
; Line 173
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	ebx
	push	esi
	mov	esi, ecx
	push	edi
; Line 174
	mov	ecx, OFFSET ?video@@3VVideo@@A		; video
	mov	DWORD PTR _this$[ebp], esi
	call	?clearScreen@Video@@QAEXXZ		; Video::clearScreen
; Line 175
	mov	edi, DWORD PTR __imp__glDisable@4
	push	2912					; 00000b60H
	call	edi
; Line 177
	cmp	DWORD PTR [esi+76], 0
	je	$LN92@display
; Line 178
	mov	eax, 1036831949				; 3dcccccdH
	mov	DWORD PTR _la$119334[ebp], eax
	mov	DWORD PTR _la$119334[ebp+4], eax
	mov	DWORD PTR _la$119334[ebp+8], eax
; Line 179
	lea	eax, DWORD PTR _la$119334[ebp]
	push	eax
	push	2899					; 00000b53H
	mov	DWORD PTR _la$119334[ebp+12], 1065353216 ; 3f800000H
	call	DWORD PTR __imp__glLightModelfv@8
; Line 181
	push	2903					; 00000b57H
	call	DWORD PTR __imp__glEnable@4
; Line 182
	push	5634					; 00001602H
	push	1032					; 00000408H
	call	DWORD PTR __imp__glColorMaterial@8
; Line 183
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [esp+12], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+8], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+4], 1065353216		; 3f800000H
	mov	DWORD PTR [esp], 1065353216		; 3f800000H
	call	DWORD PTR __imp__glColor4f@16
	mov	ebx, DWORD PTR __imp__glLightf@12
	mov	edi, 16384				; 00004000H
	mov	DWORD PTR tv429[ebp], 8
	npad	8
$LL28@display:
; Line 187
	push	ecx
	mov	DWORD PTR [esp], 0
	push	4615					; 00001207H
	push	edi
	call	ebx
; Line 188
	push	ecx
	mov	DWORD PTR [esp], 1060320051		; 3f333333H
	push	4616					; 00001208H
	push	edi
	call	ebx
; Line 189
	push	ecx
	mov	DWORD PTR [esp], 1022739087		; 3cf5c28fH
	push	4617					; 00001209H
	push	edi
	call	ebx
; Line 190
	push	edi
	call	DWORD PTR __imp__glDisable@4
	inc	edi
	dec	DWORD PTR tv429[ebp]
	jne	SHORT $LL28@display
; Line 192
	mov	edi, DWORD PTR __imp__glEnableClientState@4
	push	32884					; 00008074H
	call	edi
; Line 193
	push	32885					; 00008075H
	call	edi
; Line 194
	push	32888					; 00008078H
	call	edi
; Line 195
	mov	ebx, DWORD PTR __imp__glEnable@4
	push	3553					; 00000de1H
	call	ebx
; Line 196
	push	2929					; 00000b71H
	call	ebx
; Line 197
	push	515					; 00000203H
	call	DWORD PTR __imp__glDepthFunc@4
; Line 198
	push	2896					; 00000b50H
	call	ebx
; Line 199
	mov	ecx, DWORD PTR ?globalTime@@3HA		; globalTime
	push	ecx
	mov	ecx, DWORD PTR [esi+76]
	add	ecx, 156				; 0000009cH
	call	?setup@ModelCamera@@QAEXH@Z		; ModelCamera::setup
; Line 200
	mov	ecx, DWORD PTR [esi+76]
	call	?draw@Model@@QAEXXZ			; Model::draw
	mov	edi, DWORD PTR __imp__glDisable@4
	jmp	SHORT $LN29@display
$LN92@display:
	mov	ebx, DWORD PTR __imp__glEnable@4
$LN29@display:
; Line 203
	mov	ecx, OFFSET ?video@@3VVideo@@A		; video
	call	?set2D@Video@@QAEXXZ			; Video::set2D
; Line 204
	push	3042					; 00000be2H
	call	ebx
; Line 205
	push	771					; 00000303H
	push	770					; 00000302H
	call	DWORD PTR __imp__glBlendFunc@8
; Line 206
	push	2929					; 00000b71H
	call	edi
; Line 207
	push	2884					; 00000b44H
	call	edi
; Line 208
	push	2896					; 00000b50H
	call	edi
; Line 210
	cmp	BYTE PTR [esi+88], 0
	mov	edi, DWORD PTR __imp__glVertex2i@8
	je	SHORT $LN93@display
; Line 212
	push	3553					; 00000de1H
	call	DWORD PTR __imp__glDisable@4
; Line 214
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [esp+12], 1051931443		; 3eb33333H
	mov	DWORD PTR [esp+8], 0
	mov	DWORD PTR [esp+4], 0
	mov	DWORD PTR [esp], 0
	call	DWORD PTR __imp__glColor4f@16
; Line 215
	push	7
	call	DWORD PTR __imp__glBegin@4
; Line 216
	push	0
	push	0
	call	edi
; Line 217
	mov	edx, DWORD PTR ?video@@3VVideo@@A+52
	push	0
	push	edx
	call	edi
; Line 218
	mov	eax, DWORD PTR ?video@@3VVideo@@A+56
	mov	ecx, DWORD PTR ?video@@3VVideo@@A+52
	push	eax
	push	ecx
	call	edi
; Line 219
	mov	edx, DWORD PTR ?video@@3VVideo@@A+56
	push	edx
	push	0
	call	edi
; Line 220
	call	DWORD PTR __imp__glEnd@0
$LN93@display:
; Line 223
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [esp+12], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+8], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+4], 1065353216		; 3f800000H
	mov	DWORD PTR [esp], 1065353216		; 3f800000H
	call	DWORD PTR __imp__glColor4f@16
; Line 225
	push	3553					; 00000de1H
	call	ebx
; Line 231
	mov	eax, DWORD PTR [esi+8]
	cmp	eax, 1
	jne	SHORT $LN24@display
; Line 237
	mov	eax, DWORD PTR ?video@@3VVideo@@A+56
	mov	ecx, DWORD PTR ?f32@@3PAVFont@@A	; f32
	cdq
	sub	eax, edx
	sar	eax, 1
	push	OFFSET $SG119346
	sub	eax, 16					; 00000010H
	push	eax
	push	OFFSET $SG119346
	call	?textwidth@Font@@QAEHPBD@Z		; Font::textwidth
	cdq
	sub	eax, edx
	mov	ecx, eax
	mov	eax, DWORD PTR ?video@@3VVideo@@A+52
	cdq
	sub	eax, edx
	mov	edx, DWORD PTR ?f32@@3PAVFont@@A	; f32
	sar	ecx, 1
	sar	eax, 1
	sub	eax, ecx
	push	eax
	push	edx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 376
	add	esp, 16					; 00000010H
	pop	edi
	mov	DWORD PTR [esi+8], 2
	pop	esi
	pop	ebx
; Line 379
	mov	esp, ebp
	pop	ebp
	ret	8
$LN24@display:
; Line 241
	test	eax, eax
	jne	$LN1@display
; Line 244
	cmp	DWORD PTR [esi+4], -1
	je	$LN21@display
	mov	eax, DWORD PTR [esi+28]
	test	eax, eax
	je	$LN21@display
; Line 247
	cmp	DWORD PTR [eax+21244], 0
	je	$LN94@display
; Line 251
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [esp+12], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+8], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+4], 1065353216		; 3f800000H
	mov	DWORD PTR [esp], 1065353216		; 3f800000H
	call	DWORD PTR __imp__glColor4f@16
; Line 252
	mov	eax, DWORD PTR [esi+28]
	mov	ecx, DWORD PTR [eax+21244]
	push	ecx
	push	3553					; 00000de1H
	call	DWORD PTR __imp__glBindTexture@8
; Line 253
	push	7
	call	DWORD PTR __imp__glBegin@4
; Line 254
	mov	ebx, DWORD PTR __imp__glTexCoord2f@8
	sub	esp, 8
	mov	DWORD PTR [esp+4], 0
	mov	DWORD PTR [esp], 0
	call	ebx
; Line 255
	push	0
	push	200					; 000000c8H
	call	edi
; Line 256
	sub	esp, 8
	mov	DWORD PTR [esp+4], 0
	mov	DWORD PTR [esp], 1065353216		; 3f800000H
	call	ebx
; Line 257
	push	0
	push	968					; 000003c8H
	call	edi
; Line 258
	sub	esp, 8
	mov	DWORD PTR [esp+4], 1065353216		; 3f800000H
	mov	DWORD PTR [esp], 1065353216		; 3f800000H
	call	ebx
; Line 259
	push	768					; 00000300H
	push	968					; 000003c8H
	call	edi
; Line 260
	sub	esp, 8
	mov	DWORD PTR [esp+4], 1065353216		; 3f800000H
	mov	DWORD PTR [esp], 0
	call	ebx
; Line 261
	push	768					; 00000300H
	push	200					; 000000c8H
	call	edi
; Line 262
	call	DWORD PTR __imp__glEnd@0
$LN94@display:
; Line 265
	push	3553					; 00000de1H
	call	DWORD PTR __imp__glDisable@4
; Line 266
	xor	ebx, ebx
	npad	10
$LL19@display:
; Line 268
	mov	eax, ebx
	shl	eax, 6
	mov	DWORD PTR _i$119356[ebp], 0
	mov	DWORD PTR tv743[ebp], eax
	mov	DWORD PTR tv995[ebp], 200		; 000000c8H
$LL16@display:
; Line 270
	mov	edx, DWORD PTR [esi+28]
	mov	ecx, DWORD PTR _i$119356[ebp]
	add	edx, eax
	cmp	BYTE PTR [edx+ecx+304], 0
	je	SHORT $LN15@display
; Line 272
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [esp+12], 1045220557		; 3e4ccccdH
	mov	DWORD PTR [esp+8], 1061997773		; 3f4ccccdH
	mov	DWORD PTR [esp+4], 1063675494		; 3f666666H
	mov	DWORD PTR [esp], 1060320051		; 3f333333H
	call	DWORD PTR __imp__glColor4f@16
; Line 273
	push	7
	call	DWORD PTR __imp__glBegin@4
; Line 274
	mov	edx, DWORD PTR tv995[ebp]
	lea	esi, DWORD PTR [ebx+ebx*2]
	add	esi, esi
	add	esi, esi
	push	esi
	push	edx
	call	edi
; Line 275
	mov	eax, DWORD PTR tv995[ebp]
	add	eax, 12					; 0000000cH
	push	esi
	push	eax
	call	edi
; Line 276
	mov	eax, DWORD PTR tv995[ebp]
	lea	esi, DWORD PTR [ebx+ebx*2+3]
	add	esi, esi
	add	esi, esi
	push	esi
	add	eax, 12					; 0000000cH
	push	eax
	call	edi
; Line 277
	mov	eax, DWORD PTR tv995[ebp]
	push	esi
	push	eax
	call	edi
; Line 278
	call	DWORD PTR __imp__glEnd@0
	mov	esi, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv743[ebp]
$LN15@display:
; Line 268
	mov	ecx, DWORD PTR tv995[ebp]
	inc	DWORD PTR _i$119356[ebp]
	add	ecx, 12					; 0000000cH
	mov	DWORD PTR tv995[ebp], ecx
	cmp	ecx, 968				; 000003c8H
	jl	$LL16@display
; Line 266
	inc	ebx
	cmp	ebx, 64					; 00000040H
	jl	$LL19@display
; Line 282
	push	3553					; 00000de1H
	call	DWORD PTR __imp__glEnable@4
; Line 284
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [esp+12], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+8], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+4], 1065353216		; 3f800000H
	mov	DWORD PTR [esp], 1065353216		; 3f800000H
	call	DWORD PTR __imp__glColor4f@16
; Line 285
	mov	ecx, DWORD PTR [esi+28]
	cmp	DWORD PTR [ecx+20824], 0
	jne	SHORT $LN12@display
; Line 287
	mov	edx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	OFFSET $SG119362
	push	360					; 00000168H
	push	400					; 00000190H
	push	edx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	add	esp, 16					; 00000010H
; Line 288
	jmp	$LN95@display
$LN12@display:
; Line 289
	mov	eax, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	OFFSET $SG119364
	push	0
	push	400					; 00000190H
	push	eax
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	add	esp, 16					; 00000010H
; Line 290
	jmp	$LN95@display
$LN21@display:
; Line 295
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [esp+12], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+8], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+4], 1065353216		; 3f800000H
	mov	DWORD PTR [esp], 1065353216		; 3f800000H
	call	DWORD PTR __imp__glColor4f@16
; Line 300
	push	OFFSET $SG119367
	push	OFFSET ?morpheus@@3Ufont_data@freetype@@A ; morpheus
	call	?width@freetype@@YAHABUfont_data@1@PBDZZ ; freetype::width
	mov	DWORD PTR _w$119366[ebp], eax
; Line 301
	fild	DWORD PTR _w$119366[ebp]
	add	esp, 8
	fld	QWORD PTR __real@3fe0000000000000
	push	OFFSET $SG119368
	sub	esp, 8
	fmul	ST(1), ST(0)
	mov	DWORD PTR [esp+4], 1065353216		; 3f800000H
	fxch	ST(1)
	fst	QWORD PTR tv771[ebp]
	fild	DWORD PTR ?video@@3VVideo@@A+52
	fmulp	ST(2), ST(0)
	fsubp	ST(1), ST(0)
	fstp	DWORD PTR tv935[ebp]
	fld	DWORD PTR tv935[ebp]
	fstp	DWORD PTR [esp]
	push	OFFSET ?morpheus@@3Ufont_data@freetype@@A ; morpheus
	call	?shprint@freetype@@YAXABUfont_data@1@MMPBDZZ ; freetype::shprint
; Line 302
	fild	DWORD PTR ?video@@3VVideo@@A+52
	add	esp, 16					; 00000010H
	push	OFFSET $SG119369
	fmul	QWORD PTR __real@3fe0000000000000
	sub	esp, 8
	mov	DWORD PTR [esp+4], 1065353216		; 3f800000H
	fsub	QWORD PTR tv771[ebp]
	fstp	DWORD PTR tv928[ebp]
	fld	DWORD PTR tv928[ebp]
	fstp	DWORD PTR [esp]
	push	OFFSET ?morpheus@@3Ufont_data@freetype@@A ; morpheus
	call	?shprint@freetype@@YAXABUfont_data@1@MMPBDZZ ; freetype::shprint
; Line 304
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	add	esp, 16					; 00000010H
	push	OFFSET $SG119370
	push	10					; 0000000aH
	push	OFFSET $SG119371
	call	?textwidth@Font@@QAEHPBD@Z		; Font::textwidth
	mov	ecx, DWORD PTR ?video@@3VVideo@@A+52
	mov	edx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	sub	ecx, eax
	sub	ecx, 20					; 00000014H
	push	ecx
	push	edx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 306
	mov	eax, DWORD PTR ?f24@@3PAVFont@@A	; f24
	push	OFFSET $SG119372
	push	74					; 0000004aH
	push	680					; 000002a8H
	push	eax
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 344
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	OFFSET $SG119373
	push	110					; 0000006eH
	push	620					; 0000026cH
	push	ecx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 351
	mov	edx, DWORD PTR ?video@@3VVideo@@A+56
	mov	eax, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	OFFSET $SG119374
	add	edx, -20				; ffffffecH
	push	edx
	push	300					; 0000012cH
	push	eax
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 354
	mov	ecx, DWORD PTR ?f24@@3PAVFont@@A	; f24
	add	esp, 64					; 00000040H
	push	OFFSET $SG119375
	push	74					; 0000004aH
	push	360					; 00000168H
	push	ecx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	add	esp, 16					; 00000010H
; Line 355
	xor	edi, edi
	mov	ecx, DWORD PTR [esi+52]
	sub	ecx, DWORD PTR [esi+48]
	mov	eax, -2004318071			; 88888889H
	imul	ecx
	add	edx, ecx
	sar	edx, 6
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	je	SHORT $LN95@display
; Line 295
	xor	ebx, ebx
$LL9@display:
; Line 357
	mov	ecx, DWORD PTR [esi+48]
	lea	eax, DWORD PTR [ebx+ecx]
	cmp	DWORD PTR [eax+92], 16			; 00000010H
	lea	ecx, DWORD PTR [eax+72]
	jb	SHORT $LN44@display
	mov	ecx, DWORD PTR [ecx]
$LN44@display:
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	edx
	push	eax
	call	?shdrawtext@Font@@QAEXHHPBD@Z		; Font::shdrawtext
	mov	ecx, DWORD PTR [esi+52]
	sub	ecx, DWORD PTR [esi+48]
	mov	eax, -2004318071			; 88888889H
	imul	ecx
	add	edx, ecx
	sar	edx, 6
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	inc	edi
	add	ecx, edx
	add	ebx, 120				; 00000078H
	cmp	edi, ecx
	jb	SHORT $LL9@display
$LN95@display:
; Line 362
	mov	ecx, DWORD PTR [esi+36]
	sub	ecx, DWORD PTR [esi+32]
	mov	eax, 1808407283				; 6bca1af3H
	imul	ecx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	xor	edi, edi
	add	eax, edx
	je	$LN4@display
	xor	ebx, ebx
	npad	6
$LL6@display:
; Line 364
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [esp+12], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+8], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+4], 1065353216		; 3f800000H
	cmp	edi, DWORD PTR [esi+4]
	jne	SHORT $LN3@display
	mov	DWORD PTR [esp], 0
	jmp	SHORT $LN98@display
$LN3@display:
; Line 365
	mov	DWORD PTR [esp], 1065353216		; 3f800000H
$LN98@display:
	call	DWORD PTR __imp__glColor4f@16
; Line 369
	mov	ecx, DWORD PTR [esi+32]
	lea	eax, DWORD PTR [ebx+ecx]
	cmp	DWORD PTR [eax+36], 16			; 00000010H
	lea	ecx, DWORD PTR [eax+16]
	jb	SHORT $LN58@display
	mov	ecx, DWORD PTR [ecx]
$LN58@display:
	mov	edx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR [eax]
	push	edx
	mov	edx, DWORD PTR [eax+72]
	push	ecx
	push	edx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	mov	ecx, DWORD PTR [esi+36]
	sub	ecx, DWORD PTR [esi+32]
	mov	eax, 1808407283				; 6bca1af3H
	imul	ecx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	inc	edi
	add	eax, edx
	add	esp, 16					; 00000010H
	add	ebx, 76					; 0000004cH
	cmp	edi, eax
	jb	SHORT $LL6@display
$LN4@display:
; Line 373
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [esp+12], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+8], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+4], 1065353216		; 3f800000H
	mov	DWORD PTR [esp], 1065353216		; 3f800000H
	call	DWORD PTR __imp__glColor4f@16
; Line 374
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, -1
	je	SHORT $LN1@display
; Line 376
	mov	ecx, DWORD PTR [esi+32]
	imul	eax, 76					; 0000004cH
	lea	eax, DWORD PTR [eax+ecx+44]
	mov	edx, 16					; 00000010H
	cmp	DWORD PTR [eax+20], edx
	jb	SHORT $LN72@display
	mov	ecx, DWORD PTR [eax]
	jmp	SHORT $LN73@display
$LN72@display:
	mov	ecx, eax
$LN73@display:
	cmp	DWORD PTR [eax+20], edx
	jb	SHORT $LN80@display
	mov	eax, DWORD PTR [eax]
$LN80@display:
	mov	edx, DWORD PTR ?video@@3VVideo@@A+56
	push	ecx
	mov	ecx, DWORD PTR ?f32@@3PAVFont@@A	; f32
	add	edx, -40				; ffffffd8H
	push	edx
	push	eax
	call	?textwidth@Font@@QAEHPBD@Z		; Font::textwidth
	cdq
	sub	eax, edx
	mov	ecx, eax
	mov	eax, DWORD PTR ?video@@3VVideo@@A+52
	cdq
	sub	eax, edx
	mov	edx, DWORD PTR ?f32@@3PAVFont@@A	; f32
	sar	ecx, 1
	sar	eax, 1
	sub	eax, ecx
	push	eax
	push	edx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	add	esp, 16					; 00000010H
$LN1@display:
	pop	edi
	pop	esi
	pop	ebx
; Line 379
	mov	esp, ebp
	pop	ebp
	ret	8
?display@Menu@@UAEXMM@Z ENDP				; Menu::display
_TEXT	ENDS
PUBLIC	__real@4080aaaaa0000000
PUBLIC	?mouseclick@Menu@@UAEXPAUSDL_MouseButtonEvent@@@Z ; Menu::mouseclick
EXTRN	??0World@@QAE@PBD@Z:PROC			; World::World
EXTRN	__ftol2_sse_excpt:PROC
;	COMDAT __real@4080aaaaa0000000
CONST	SEGMENT
__real@4080aaaaa0000000 DQ 04080aaaaa0000000r	; 533.333
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$?mouseclick@Menu@@UAEXPAUSDL_MouseButtonEvent@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?mouseclick@Menu@@UAEXPAUSDL_MouseButtonEvent@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?mouseclick@Menu@@UAEXPAUSDL_MouseButtonEvent@@@Z$1
__ehfuncinfo$?mouseclick@Menu@@UAEXPAUSDL_MouseButtonEvent@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?mouseclick@Menu@@UAEXPAUSDL_MouseButtonEvent@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
_TEXT	SEGMENT
tv486 = -20						; size = 4
$T136148 = -20						; size = 4
_found$119455 = -13					; size = 1
__$EHRec$ = -12						; size = 12
$T136147 = 8						; size = 4
$T136123 = 8						; size = 4
$T136115 = 8						; size = 4
_e$ = 8							; size = 4
?mouseclick@Menu@@UAEXPAUSDL_MouseButtonEvent@@@Z PROC	; Menu::mouseclick
; _this$ = ecx
; Line 404
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?mouseclick@Menu@@UAEXPAUSDL_MouseButtonEvent@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
; Line 409
	cmp	DWORD PTR [esi+8], 0
	jne	$LN2@mouseclick
; Line 413
	mov	ecx, DWORD PTR _e$[ebp]
	movzx	eax, WORD PTR [ecx+4]
	mov	edx, DWORD PTR [esi+4]
	mov	edi, 200				; 000000c8H
	mov	DWORD PTR tv486[ebp], edx
	cmp	ax, di
	jb	$LN17@mouseclick
	mov	edi, 968				; 000003c8H
	cmp	ax, di
	jae	$LN17@mouseclick
; Line 415
	cmp	edx, -1
	je	SHORT $LN96@mouseclick
	cmp	DWORD PTR [esi+28], 0
	je	SHORT $LN16@mouseclick
	mov	edi, 768				; 00000300H
	cmp	WORD PTR [ecx+6], di
	jae	SHORT $LN16@mouseclick
; Line 417
	add	eax, -200				; ffffff38H
	mov	DWORD PTR [esi+12], eax
; Line 418
	movzx	eax, WORD PTR [ecx+6]
	mov	DWORD PTR [esi+16], eax
; Line 419
	mov	DWORD PTR [esi+8], 1
$LN16@mouseclick:
; Line 422
	cmp	edx, -1
	jne	$LN2@mouseclick
$LN96@mouseclick:
; Line 424
	mov	edi, DWORD PTR [esi+52]
	sub	edi, DWORD PTR [esi+48]
	mov	eax, -2004318071			; 88888889H
	imul	edi
	add	edx, edi
	sar	edx, 6
	mov	edi, edx
	shr	edi, 31					; 0000001fH
	xor	ebx, ebx
	add	edi, edx
	je	$LN2@mouseclick
; Line 426
	movzx	edx, WORD PTR [ecx+6]
	movzx	ecx, WORD PTR [ecx+4]
	mov	DWORD PTR $T136147[ebp], ecx
	mov	ecx, DWORD PTR [esi+48]
	mov	DWORD PTR $T136148[ebp], edx
	mov	eax, ecx
$LL14@mouseclick:
	cmp	edx, DWORD PTR [eax+4]
	jl	SHORT $LN37@mouseclick
	cmp	edx, DWORD PTR [eax+12]
	jge	SHORT $LN37@mouseclick
	mov	edx, DWORD PTR $T136147[ebp]
	cmp	edx, DWORD PTR [eax]
	jl	SHORT $LN93@mouseclick
	cmp	edx, DWORD PTR [eax+8]
	jl	SHORT $LN83@mouseclick
$LN93@mouseclick:
	mov	edx, DWORD PTR $T136148[ebp]
$LN37@mouseclick:
; Line 424
	inc	ebx
	add	eax, 120				; 00000078H
	cmp	ebx, edi
	jb	SHORT $LL14@mouseclick
; Line 475
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
$LN83@mouseclick:
; Line 431
	mov	edi, ebx
	shl	edi, 4
	sub	edi, ebx
	add	edi, edi
	add	edi, edi
	mov	DWORD PTR [esi+8], 1
	mov	BYTE PTR [esi+64], 0
	add	edi, edi
	mov	edx, DWORD PTR [ecx+edi+112]
	mov	DWORD PTR [esi+68], edx
; Line 432
	mov	eax, DWORD PTR [ecx+edi+116]
; Line 434
	push	21268					; 00005314H
	mov	DWORD PTR [esi+72], eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T136115[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	test	eax, eax
	je	SHORT $LN21@mouseclick
	mov	ecx, DWORD PTR [esi+48]
	cmp	DWORD PTR [edi+ecx+36], 16		; 00000010H
	lea	ecx, DWORD PTR [edi+ecx+16]
	jb	SHORT $LN49@mouseclick
	mov	ecx, DWORD PTR [ecx]
$LN49@mouseclick:
	push	ecx
	mov	ecx, eax
	call	??0World@@QAE@PBD@Z			; World::World
	jmp	SHORT $LN22@mouseclick
$LN21@mouseclick:
	xor	eax, eax
$LN22@mouseclick:
; Line 435
	mov	edx, DWORD PTR [esi+48]
	lea	ecx, DWORD PTR [edi+edx+100]
	mov	DWORD PTR [esi+28], eax
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+20928], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+20932], edx
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+20936], ecx
; Line 437
	add	edi, DWORD PTR [esi+48]
	fld	DWORD PTR [edi+100]
	fld	QWORD PTR __real@4080aaaaa0000000
	fdiv	ST(1), ST(0)
	fxch	ST(1)
	call	__ftol2_sse_excpt
	mov	DWORD PTR [esi+24], eax
; Line 438
	fdivr	DWORD PTR [edi+108]
	call	__ftol2_sse_excpt
	mov	DWORD PTR [esi+20], eax
; Line 475
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
$LN17@mouseclick:
; Line 451
	mov	edx, DWORD PTR [esi+36]
	sub	edx, DWORD PTR [esi+32]
	mov	eax, 1808407283				; 6bca1af3H
	imul	edx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	xor	edi, edi
	add	eax, edx
	mov	BYTE PTR _found$119455[ebp], 0
	je	$LN5@mouseclick
; Line 449
	mov	ebx, DWORD PTR [esi+32]
	jmp	SHORT $LN9@mouseclick
	npad	5
$LL91@mouseclick:
	mov	ecx, DWORD PTR _e$[ebp]
$LN9@mouseclick:
; Line 453
	movzx	eax, WORD PTR [ecx+6]
	movzx	ecx, WORD PTR [ecx+4]
	cmp	eax, DWORD PTR [ebx+4]
	jl	SHORT $LN8@mouseclick
	cmp	eax, DWORD PTR [ebx+12]
	jge	SHORT $LN8@mouseclick
	cmp	ecx, DWORD PTR [ebx]
	jl	SHORT $LN8@mouseclick
	cmp	ecx, DWORD PTR [ebx+8]
	jge	SHORT $LN8@mouseclick
; Line 455
	mov	DWORD PTR [esi+4], edi
; Line 456
	mov	BYTE PTR _found$119455[ebp], 1
$LN8@mouseclick:
; Line 451
	mov	ecx, DWORD PTR [esi+36]
	sub	ecx, DWORD PTR [esi+32]
	mov	eax, 1808407283				; 6bca1af3H
	imul	ecx
	sar	edx, 5
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	inc	edi
	add	ecx, edx
	add	ebx, 76					; 0000004cH
	cmp	edi, ecx
	jb	SHORT $LL91@mouseclick
; Line 460
	cmp	BYTE PTR _found$119455[ebp], 0
	je	$LN5@mouseclick
; Line 462
	mov	edx, DWORD PTR tv486[ebp]
	cmp	DWORD PTR [esi+4], edx
	je	$LN2@mouseclick
; Line 464
	mov	edi, DWORD PTR [esi+28]
	test	edi, edi
	je	SHORT $LN67@mouseclick
	mov	ecx, edi
	call	??1World@@QAE@XZ			; World::~World
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN67@mouseclick:
; Line 465
	push	21268					; 00005314H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T136123[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	test	eax, eax
	je	SHORT $LN25@mouseclick
	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [esi+32]
	imul	ecx, 76					; 0000004cH
	cmp	DWORD PTR [ecx+edx+36], 16		; 00000010H
	lea	edx, DWORD PTR [ecx+edx+16]
	jb	SHORT $LN76@mouseclick
	mov	edx, DWORD PTR [edx]
$LN76@mouseclick:
	push	edx
	mov	ecx, eax
	call	??0World@@QAE@PBD@Z			; World::World
	mov	DWORD PTR [esi+28], eax
; Line 475
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
$LN25@mouseclick:
; Line 465
	xor	eax, eax
	mov	DWORD PTR [esi+28], eax
; Line 475
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
$LN5@mouseclick:
; Line 470
	mov	edi, DWORD PTR [esi+28]
	test	edi, edi
	je	SHORT $LN78@mouseclick
	mov	ecx, edi
	call	??1World@@QAE@XZ			; World::~World
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN78@mouseclick:
; Line 471
	mov	DWORD PTR [esi+4], -1
; Line 472
	mov	DWORD PTR [esi+28], 0
$LN2@mouseclick:
; Line 475
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?mouseclick@Menu@@UAEXPAUSDL_MouseButtonEvent@@@Z$0:
	mov	eax, DWORD PTR $T136115[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?mouseclick@Menu@@UAEXPAUSDL_MouseButtonEvent@@@Z$1:
	mov	eax, DWORD PTR $T136123[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?mouseclick@Menu@@UAEXPAUSDL_MouseButtonEvent@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?mouseclick@Menu@@UAEXPAUSDL_MouseButtonEvent@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?mouseclick@Menu@@UAEXPAUSDL_MouseButtonEvent@@@Z ENDP	; Menu::mouseclick
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
; Function compile flags: /Ogtp
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1852
	push	ebp
	mov	ebp, esp
; Line 1853
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	mov	edx, DWORD PTR [eax+16]
	jb	SHORT $LN7@compare@3
	mov	eax, DWORD PTR [eax]
$LN7@compare@3:
	push	edx
	push	eax
	mov	eax, DWORD PTR [ecx+16]
	push	eax
	push	0
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
; Line 1854
	pop	ebp
	ret	4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
_TEXT	ENDS
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
; Function compile flags: /Ogtp
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare, COMDAT
; _this$ = ecx
; Line 1874
	push	ebp
	mov	ebp, esp
	push	esi
; Line 1876
	mov	esi, DWORD PTR __Ptr$[ebp]
	mov	eax, esi
	push	edi
	lea	edi, DWORD PTR [eax+1]
	npad	3
$LL5@compare@4:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL5@compare@4
	sub	eax, edi
	push	eax
	mov	eax, DWORD PTR [ecx+16]
	push	esi
	push	eax
	push	0
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
	pop	edi
	pop	esi
; Line 1877
	pop	ebp
	ret	4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
_TEXT	ENDS
PUBLIC	??0?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAE@XZ ; std::vector<MapEntry,std::allocator<MapEntry> >::vector<MapEntry,std::allocator<MapEntry> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAE@XZ PROC ; std::vector<MapEntry,std::allocator<MapEntry> >::vector<MapEntry,std::allocator<MapEntry> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 507
	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
; Line 508
	ret	0
??0?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAE@XZ ENDP ; std::vector<MapEntry,std::allocator<MapEntry> >::vector<MapEntry,std::allocator<MapEntry> >
_TEXT	ENDS
PUBLIC	??0?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE@XZ ; std::vector<Bookmark,std::allocator<Bookmark> >::vector<Bookmark,std::allocator<Bookmark> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE@XZ PROC ; std::vector<Bookmark,std::allocator<Bookmark> >::vector<Bookmark,std::allocator<Bookmark> >, COMDAT
; _this$ = ecx
; Line 507
	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
; Line 508
	ret	0
??0?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE@XZ ENDP ; std::vector<Bookmark,std::allocator<Bookmark> >::vector<Bookmark,std::allocator<Bookmark> >
_TEXT	ENDS
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
; Function compile flags: /Ogtp
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1108
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
; Line 1109
	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR __Off$[ebp]
	push	edi
	cmp	eax, ecx
	jae	SHORT $LN3@erase
; Line 1110
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN28@erase:
$LN3@erase:
; Line 1111
	mov	edi, DWORD PTR __Count$[ebp]
	sub	eax, ecx
	cmp	eax, edi
	jae	SHORT $LN2@erase
; Line 1112
	mov	edi, eax
$LN2@erase:
; Line 1113
	test	edi, edi
	je	SHORT $LN25@erase
; Line 1116
	mov	edx, DWORD PTR [esi+20]
	push	ebx
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN11@erase
	mov	ebx, DWORD PTR [esi]
	jmp	SHORT $LN12@erase
$LN11@erase:
	mov	ebx, esi
$LN12@erase:
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN15@erase
	mov	edx, DWORD PTR [esi]
	jmp	SHORT $LN16@erase
$LN15@erase:
	mov	edx, esi
$LN16@erase:
	sub	eax, edi
	add	ebx, ecx
	push	eax
	add	ebx, edi
	add	edx, ecx
	push	ebx
	push	edx
	call	DWORD PTR __imp__memmove
; Line 1117
	mov	eax, DWORD PTR [esi+16]
	add	esp, 12					; 0000000cH
	sub	eax, edi
; Line 1118
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], eax
	pop	ebx
	jb	SHORT $LN23@erase
	mov	ecx, DWORD PTR [esi]
	mov	BYTE PTR [ecx+eax], 0
	pop	edi
; Line 1120
	mov	eax, esi
	pop	esi
; Line 1121
	pop	ebp
	ret	8
; Line 1118
$LN23@erase:
	mov	ecx, esi
	mov	BYTE PTR [ecx+eax], 0
$LN25@erase:
; Line 1120
	pop	edi
	mov	eax, esi
	pop	esi
; Line 1121
	pop	ebp
	ret	8
$LN27@erase:
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
PUBLIC	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
; Function compile flags: /Ogtp
;	COMDAT ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin, COMDAT
; _this$ = ecx
; Line 1350
	push	ebp
	mov	ebp, esp
; Line 1351
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jb	SHORT $LN5@begin
	mov	ecx, DWORD PTR [ecx]
$LN5@begin:
	mov	DWORD PTR [eax], ecx
; Line 1352
	pop	ebp
	ret	4
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
_TEXT	ENDS
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Ogtp
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; Line 1987
	push	ebp
	mov	ebp, esp
; Line 1988
	cmp	BYTE PTR __Built$[ebp], 0
	push	esi
	push	edi
	mov	edi, DWORD PTR __Newsize$[ebp]
	mov	esi, ecx
	je	SHORT $LN9@Tidy
; Line 1990
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN9@Tidy
; Line 1992
	push	ebx
	mov	ebx, DWORD PTR [esi]
; Line 1993
	test	edi, edi
	je	SHORT $LN7@Tidy
; Line 1994
	push	edi
	push	ebx
	push	esi
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN7@Tidy:
; Line 1995
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	pop	ebx
$LN9@Tidy:
; Line 1998
	mov	DWORD PTR [esi+16], edi
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	BYTE PTR [edi+esi], 0
	pop	edi
	pop	esi
; Line 1999
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
PUBLIC	?begin@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@2@XZ ; std::vector<Bookmark,std::allocator<Bookmark> >::begin
; Function compile flags: /Ogtp
;	COMDAT ?begin@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@2@XZ PROC ; std::vector<Bookmark,std::allocator<Bookmark> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 781
	push	ebp
	mov	ebp, esp
; Line 782
	mov	ecx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 783
	pop	ebp
	ret	4
?begin@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@2@XZ ENDP ; std::vector<Bookmark,std::allocator<Bookmark> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@2@XZ ; std::vector<Bookmark,std::allocator<Bookmark> >::end
; Function compile flags: /Ogtp
;	COMDAT ?end@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@2@XZ PROC ; std::vector<Bookmark,std::allocator<Bookmark> >::end, COMDAT
; _this$ = ecx
; Line 791
	push	ebp
	mov	ebp, esp
; Line 792
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 793
	pop	ebp
	ret	4
?end@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@2@XZ ENDP ; std::vector<Bookmark,std::allocator<Bookmark> >::end
_TEXT	ENDS
PUBLIC	?_Make_iter@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@2@@Z ; std::vector<Bookmark,std::allocator<Bookmark> >::_Make_iter
; Function compile flags: /Ogtp
;	COMDAT ?_Make_iter@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@2@@Z PROC ; std::vector<Bookmark,std::allocator<Bookmark> >::_Make_iter, COMDAT
; _this$ = ecx
; Line 801
	push	ebp
	mov	ebp, esp
; Line 802
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 803
	pop	ebp
	ret	8
?_Make_iter@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@2@@Z ENDP ; std::vector<Bookmark,std::allocator<Bookmark> >::_Make_iter
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<Bookmark,std::allocator<Bookmark> > >::operator!=
; Function compile flags: /Ogtp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<Bookmark,std::allocator<Bookmark> > >::operator!=, COMDAT
; _this$ = ecx
; Line 207
	push	ebp
	mov	ebp, esp
; Line 208
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	al
; Line 209
	pop	ebp
	ret	4
??9?$_Vector_const_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<Bookmark,std::allocator<Bookmark> > >::operator!=
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
$T136566 = -40						; size = 12
__Newres$ = -28						; size = 4
$T136550 = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ptr$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1918
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	edi, ecx
	mov	DWORD PTR _this$[ebp], edi
; Line 1919
	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	esi, eax
	or	esi, 15					; 0000000fH
; Line 1920
	cmp	esi, -2					; fffffffeH
	jbe	SHORT $LN9@Copy
; Line 1921
	mov	esi, eax
	jmp	SHORT $LN39@Copy
$LN9@Copy:
; Line 1922
	mov	ebx, DWORD PTR [edi+20]
	mov	eax, -1431655765			; aaaaaaabH
	mul	esi
	mov	ecx, ebx
	shr	ecx, 1
	shr	edx, 1
	cmp	ecx, edx
	jbe	SHORT $LN39@Copy
; Line 1924
	mov	eax, -2					; fffffffeH
	sub	eax, ecx
; Line 1926
	lea	esi, DWORD PTR [ecx+ebx]
	cmp	ebx, eax
	jbe	SHORT $LN39@Copy
; Line 1928
	mov	esi, -2					; fffffffeH
$LN39@Copy:
; Line 1931
	xor	eax, eax
; Line 1932
	lea	ecx, DWORD PTR [esi+1]
	mov	DWORD PTR __$EHRec$[ebp+12], eax
	cmp	ecx, eax
	jbe	SHORT $LN47@Copy
	cmp	ecx, -1
	ja	SHORT $LN46@Copy
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN46@Copy
$LN47@Copy:
	mov	DWORD PTR __Ptr$[ebp], eax
	jmp	SHORT $LN19@Copy
$LN46@Copy:
	lea	ecx, DWORD PTR $T136550[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T136566[ebp]
	mov	DWORD PTR $T136550[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T136566[ebp]
	push	edx
	mov	DWORD PTR $T136566[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN112@Copy:
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:
; Line 1934
	mov	eax, DWORD PTR __Newsize$[ebp]
; Line 1936
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR __Newres$[ebp], eax
	inc	eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	push	eax
	add	ecx, 24					; 00000018H
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 1941
	mov	eax, $LN107@Copy
	ret	0
$LN107@Copy:
	mov	edi, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR __Newres$[ebp]
$LN19@Copy:
; Line 1943
	mov	ebx, DWORD PTR __Oldlen$[ebp]
	test	ebx, ebx
	je	SHORT $LN78@Copy
; Line 1944
	cmp	DWORD PTR [edi+20], 16			; 00000010H
	jb	SHORT $LN76@Copy
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN77@Copy
$LN76@Copy:
	mov	eax, edi
$LN77@Copy:
	push	ebx
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN78@Copy:
; Line 1945
	cmp	DWORD PTR [edi+20], 16			; 00000010H
	jb	SHORT $LN88@Copy
	mov	ecx, DWORD PTR [edi]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN88@Copy:
; Line 1946
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	BYTE PTR [edi], 0
	mov	DWORD PTR [edi], eax
; Line 1947
	mov	DWORD PTR [edi+20], esi
; Line 1948
	mov	DWORD PTR [edi+16], ebx
	cmp	esi, 16					; 00000010H
	jb	SHORT $LN102@Copy
	mov	edi, eax
$LN102@Copy:
	mov	BYTE PTR [edi+ebx], 0
; Line 1949
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:
; Line 1938
	mov	esi, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN64@Copy
	mov	edx, DWORD PTR [esi]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN64@Copy:
; Line 1939
	push	0
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	push	0
	mov	BYTE PTR [esi], 0
	call	__CxxThrowException@8
$LN113@Copy:
$LN111@Copy:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Destroy@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEXPAPAVAppState@@0@Z ; std::vector<AppState *,std::allocator<AppState *> >::_Destroy
; Function compile flags: /Ogtp
;	COMDAT ?_Destroy@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEXPAPAVAppState@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEXPAPAVAppState@@0@Z PROC ; std::vector<AppState *,std::allocator<AppState *> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1271
	ret	8
?_Destroy@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEXPAPAVAppState@@0@Z ENDP ; std::vector<AppState *,std::allocator<AppState *> >::_Destroy
_TEXT	ENDS
PUBLIC	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
;	COMDAT ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z PROC ; std::operator==<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string
; Line 186
	push	ebp
	mov	ebp, esp
; Line 187
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, edx
	push	esi
	lea	esi, DWORD PTR [eax+1]
	npad	4
$LL7@operator@2:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL7@operator@2
	mov	ecx, DWORD PTR __Left$[ebp]
	sub	eax, esi
	push	eax
	mov	eax, DWORD PTR [ecx+16]
	push	edx
	push	eax
	push	0
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
	neg	eax
	sbb	eax, eax
	inc	eax
	pop	esi
; Line 188
	pop	ebp
	ret	0
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ENDP ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??$?5DU?$char_traits@D@std@@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAD@Z ; std::operator>><char,std::char_traits<char> >
; Function compile flags: /Ogtp
;	COMDAT ??$?5DU?$char_traits@D@std@@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAD@Z
_TEXT	SEGMENT
__Istr$ = 8						; size = 4
__Ch$ = 12						; size = 4
??$?5DU?$char_traits@D@std@@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAD@Z PROC ; std::operator>><char,std::char_traits<char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\istream
; Line 1092
	push	ebp
	mov	ebp, esp
; Line 1094
	pop	ebp
; Line 1093
	jmp	??$?5DU?$char_traits@D@std@@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAD@Z ; std::operator>><char,std::char_traits<char> >
??$?5DU?$char_traits@D@std@@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAD@Z ENDP ; std::operator>><char,std::char_traits<char> >
_TEXT	ENDS
PUBLIC	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
;	COMDAT ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::operator==<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string
; Line 166
	push	ebp
	mov	ebp, esp
; Line 167
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	mov	ecx, DWORD PTR [eax+16]
	jb	SHORT $LN9@operator@3
	mov	eax, DWORD PTR [eax]
$LN9@operator@3:
	push	ecx
	mov	ecx, DWORD PTR __Left$[ebp]
	push	eax
	mov	eax, DWORD PTR [ecx+16]
	push	eax
	push	0
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
	neg	eax
	sbb	eax, eax
	inc	eax
; Line 168
	pop	ebp
	ret	0
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAVAppState@@@std@@PAVAppState@@ABQAV3@@std@@YAXAAV?$allocator@PAVAppState@@@0@PAPAVAppState@@ABQAV2@@Z ; std::_Cons_val<std::allocator<AppState *>,AppState *,AppState * const &>
; Function compile flags: /Ogtp
;	COMDAT ??$_Cons_val@V?$allocator@PAVAppState@@@std@@PAVAppState@@ABQAV3@@std@@YAXAAV?$allocator@PAVAppState@@@0@PAPAVAppState@@ABQAV2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAVAppState@@@std@@PAVAppState@@ABQAV3@@std@@YAXAAV?$allocator@PAVAppState@@@0@PAPAVAppState@@ABQAV2@@Z PROC ; std::_Cons_val<std::allocator<AppState *>,AppState *,AppState * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Pdest$[ebp]
	test	eax, eax
	je	SHORT $LN9@Cons_val@2
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN9@Cons_val@2:
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@PAVAppState@@@std@@PAVAppState@@ABQAV3@@std@@YAXAAV?$allocator@PAVAppState@@@0@PAPAVAppState@@ABQAV2@@Z ENDP ; std::_Cons_val<std::allocator<AppState *>,AppState *,AppState * const &>
_TEXT	ENDS
PUBLIC	??$_Umove@PAPAVAppState@@@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEPAPAVAppState@@PAPAV2@00@Z ; std::vector<AppState *,std::allocator<AppState *> >::_Umove<AppState * *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Umove@PAPAVAppState@@@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEPAPAVAppState@@PAPAV2@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAVAppState@@@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEPAPAVAppState@@PAPAV2@00@Z PROC ; std::vector<AppState *,std::allocator<AppState *> >::_Umove<AppState * *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1322
	push	ebp
	mov	ebp, esp
; Line 1325
	mov	ecx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, ecx
	push	esi
	sar	eax, 2
	lea	esi, DWORD PTR [eax*4]
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
	pop	esi
; Line 1326
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAPAVAppState@@@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEPAPAVAppState@@PAPAV2@00@Z ENDP ; std::vector<AppState *,std::allocator<AppState *> >::_Umove<AppState * *>
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 550
	mov	eax, ecx
; Line 551
	mov	DWORD PTR [eax+20], 15			; 0000000fH
	mov	DWORD PTR [eax+16], 0
	mov	BYTE PTR [eax], 0
; Line 552
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 752
	push	esi
	mov	esi, ecx
; Line 753
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN11@basic_stri
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN11@basic_stri:
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
	pop	esi
; Line 754
	ret	0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
; Function compile flags: /Ogtp
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx
; Line 1958
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 1959
	mov	ebx, DWORD PTR __Newsize$[ebp]
	push	esi
	mov	esi, ecx
	cmp	ebx, -2					; fffffffeH
	jbe	SHORT $LN6@Grow
; Line 1960
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN49@Grow:
$LN6@Grow:
; Line 1961
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, ebx
	jae	SHORT $LN5@Grow
; Line 1962
	mov	eax, DWORD PTR [esi+16]
	push	eax
	push	ebx
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Line 1968
	xor	ecx, ecx
	cmp	ecx, ebx
	sbb	eax, eax
	pop	esi
	neg	eax
	pop	ebx
; Line 1969
	pop	ebp
	ret	8
$LN5@Grow:
; Line 1963
	cmp	BYTE PTR __Trim$[ebp], 0
	je	SHORT $LN3@Grow
	cmp	ebx, 16					; 00000010H
	jae	SHORT $LN3@Grow
; Line 1965
	push	edi
	mov	edi, DWORD PTR [esi+16]
	cmp	ebx, edi
	jae	SHORT $LN9@Grow
	mov	edi, ebx
$LN9@Grow:
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN30@Grow
	mov	ebx, DWORD PTR [esi]
	test	edi, edi
	je	SHORT $LN28@Grow
	push	edi
	push	ebx
	push	esi
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN28@Grow:
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	mov	ebx, DWORD PTR __Newsize$[ebp]
	add	esp, 4
$LN30@Grow:
	mov	DWORD PTR [esi+16], edi
	mov	DWORD PTR [esi+20], 15			; 0000000fH
; Line 1968
	xor	ecx, ecx
	mov	BYTE PTR [edi+esi], 0
	cmp	ecx, ebx
	pop	edi
	sbb	eax, eax
	pop	esi
	neg	eax
	pop	ebx
; Line 1969
	pop	ebp
	ret	8
$LN3@Grow:
; Line 1966
	test	ebx, ebx
	jne	SHORT $LN46@Grow
; Line 1967
	mov	DWORD PTR [esi+16], ebx
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN44@Grow
	mov	esi, DWORD PTR [esi]
$LN44@Grow:
	mov	BYTE PTR [esi], 0
$LN46@Grow:
; Line 1968
	xor	ecx, ecx
	cmp	ecx, ebx
	sbb	eax, eax
	pop	esi
	neg	eax
	pop	ebx
; Line 1969
	pop	ebp
	ret	8
$LN48@Grow:
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
PUBLIC	?reserve@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAEXI@Z ; std::vector<AppState *,std::allocator<AppState *> >::reserve
; Function compile flags: /Ogtp
;	COMDAT ?reserve@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?reserve@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAEXI@Z PROC ; std::vector<AppState *,std::allocator<AppState *> >::reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 746
	push	ebp
	mov	ebp, esp
; Line 747
	mov	eax, DWORD PTR __Count$[ebp]
	push	esi
	mov	esi, ecx
	cmp	eax, 1073741823				; 3fffffffH
	jbe	SHORT $LN5@reserve
; Line 748
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN43@reserve:
$LN5@reserve:
; Line 749
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, DWORD PTR [esi]
	sar	ecx, 2
	cmp	ecx, eax
	jae	SHORT $LN3@reserve
; Line 751
	push	ebx
	push	edi
	push	eax
	lea	ecx, DWORD PTR [esi+12]
	call	?allocate@?$allocator@PAVAppState@@@std@@QAEPAPAVAppState@@I@Z ; std::allocator<AppState *>::allocate
; Line 754
	mov	edx, DWORD PTR [esi+4]
	mov	ebx, eax
	mov	eax, DWORD PTR [esi]
	sub	edx, eax
	sar	edx, 2
	add	edx, edx
	add	edx, edx
	push	edx
	push	eax
	push	ebx
	call	DWORD PTR __imp__memmove
; Line 760
	mov	eax, DWORD PTR [esi]
	mov	edi, DWORD PTR [esi+4]
	sub	edi, eax
	add	esp, 12					; 0000000cH
	sar	edi, 2
; Line 761
	test	eax, eax
	je	SHORT $LN37@reserve
; Line 765
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN37@reserve:
; Line 769
	mov	eax, DWORD PTR __Count$[ebp]
; Line 770
	lea	edx, DWORD PTR [ebx+edi*4]
	lea	ecx, DWORD PTR [ebx+eax*4]
	pop	edi
; Line 771
	mov	DWORD PTR [esi], ebx
	mov	DWORD PTR [esi+8], ecx
	mov	DWORD PTR [esi+4], edx
	pop	ebx
$LN3@reserve:
	pop	esi
; Line 773
	pop	ebp
	ret	4
$LN42@reserve:
?reserve@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAEXI@Z ENDP ; std::vector<AppState *,std::allocator<AppState *> >::reserve
_TEXT	ENDS
PUBLIC	??0MapEntry@@QAE@XZ				; MapEntry::MapEntry
; Function compile flags: /Ogtp
;	COMDAT ??0MapEntry@@QAE@XZ
_TEXT	SEGMENT
??0MapEntry@@QAE@XZ PROC				; MapEntry::MapEntry, COMDAT
; _this$ = ecx
	mov	eax, ecx
	xor	ecx, ecx
	mov	edx, 15					; 0000000fH
	mov	DWORD PTR [eax+36], edx
	mov	DWORD PTR [eax+32], ecx
	mov	BYTE PTR [eax+16], cl
	mov	DWORD PTR [eax+64], edx
	mov	DWORD PTR [eax+60], ecx
	mov	BYTE PTR [eax+44], cl
	ret	0
??0MapEntry@@QAE@XZ ENDP				; MapEntry::MapEntry
_TEXT	ENDS
PUBLIC	??1MapEntry@@QAE@XZ				; MapEntry::~MapEntry
; Function compile flags: /Ogtp
;	COMDAT ??1MapEntry@@QAE@XZ
_TEXT	SEGMENT
??1MapEntry@@QAE@XZ PROC				; MapEntry::~MapEntry, COMDAT
; _this$ = ecx
	push	ebx
	push	esi
	mov	esi, ecx
	cmp	DWORD PTR [esi+64], 16			; 00000010H
	jb	SHORT $LN15@MapEntry
	mov	eax, DWORD PTR [esi+44]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN15@MapEntry:
	xor	ebx, ebx
	mov	DWORD PTR [esi+64], 15			; 0000000fH
	mov	DWORD PTR [esi+60], ebx
	mov	BYTE PTR [esi+44], bl
	cmp	DWORD PTR [esi+36], 16			; 00000010H
	jb	SHORT $LN37@MapEntry
	mov	ecx, DWORD PTR [esi+16]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN37@MapEntry:
	mov	DWORD PTR [esi+32], ebx
	mov	DWORD PTR [esi+36], 15			; 0000000fH
	mov	BYTE PTR [esi+16], bl
	pop	esi
	pop	ebx
	ret	0
??1MapEntry@@QAE@XZ ENDP				; MapEntry::~MapEntry
_TEXT	ENDS
PUBLIC	??0Bookmark@@QAE@XZ				; Bookmark::Bookmark
; Function compile flags: /Ogtp
;	COMDAT ??0Bookmark@@QAE@XZ
_TEXT	SEGMENT
??0Bookmark@@QAE@XZ PROC				; Bookmark::Bookmark, COMDAT
; _this$ = ecx
	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax+32], ecx
	mov	edx, 15					; 0000000fH
	mov	DWORD PTR [eax+36], edx
	mov	BYTE PTR [eax+16], cl
	mov	DWORD PTR [eax+64], edx
	mov	DWORD PTR [eax+60], ecx
	mov	BYTE PTR [eax+44], cl
	mov	DWORD PTR [eax+92], edx
	mov	DWORD PTR [eax+88], ecx
	mov	BYTE PTR [eax+72], cl
	mov	DWORD PTR [eax+100], ecx
	mov	DWORD PTR [eax+104], ecx
	mov	DWORD PTR [eax+108], ecx
	ret	0
??0Bookmark@@QAE@XZ ENDP				; Bookmark::Bookmark
_TEXT	ENDS
PUBLIC	??1Bookmark@@QAE@XZ				; Bookmark::~Bookmark
; Function compile flags: /Ogtp
;	COMDAT ??1Bookmark@@QAE@XZ
_TEXT	SEGMENT
??1Bookmark@@QAE@XZ PROC				; Bookmark::~Bookmark, COMDAT
; _this$ = ecx
	push	ebx
	push	esi
	mov	esi, ecx
	cmp	DWORD PTR [esi+92], 16			; 00000010H
	jb	SHORT $LN16@Bookmark
	mov	eax, DWORD PTR [esi+72]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN16@Bookmark:
	xor	ebx, ebx
	mov	DWORD PTR [esi+92], 15			; 0000000fH
	mov	DWORD PTR [esi+88], ebx
	mov	BYTE PTR [esi+72], bl
	cmp	DWORD PTR [esi+64], 16			; 00000010H
	jb	SHORT $LN38@Bookmark
	mov	ecx, DWORD PTR [esi+44]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN38@Bookmark:
	mov	DWORD PTR [esi+64], 15			; 0000000fH
	mov	DWORD PTR [esi+60], ebx
	mov	BYTE PTR [esi+44], bl
	cmp	DWORD PTR [esi+36], 16			; 00000010H
	jb	SHORT $LN60@Bookmark
	mov	edx, DWORD PTR [esi+16]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN60@Bookmark:
	mov	DWORD PTR [esi+32], ebx
	mov	DWORD PTR [esi+36], 15			; 0000000fH
	mov	BYTE PTR [esi+16], bl
	pop	esi
	pop	ebx
	ret	0
??1Bookmark@@QAE@XZ ENDP				; Bookmark::~Bookmark
_TEXT	ENDS
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Ogtp
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
__Ch$ = 12						; size = 1
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 844
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 845
	mov	ebx, DWORD PTR __Count$[ebp]
	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+16]
	or	ecx, -1
	sub	ecx, eax
	cmp	ecx, ebx
	ja	SHORT $LN2@append
; Line 846
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN67@append:
$LN2@append:
; Line 849
	test	ebx, ebx
	je	SHORT $LN61@append
	push	edi
	lea	edi, DWORD PTR [eax+ebx]
	cmp	edi, -2					; fffffffeH
	jbe	SHORT $LN13@append
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN68@append:
$LN13@append:
	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, edi
	jae	SHORT $LN12@append
	push	eax
	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	test	edi, edi
	je	SHORT $LN63@append
$LN66@append:
; Line 851
	mov	edx, DWORD PTR __Ch$[ebp]
	mov	eax, DWORD PTR [esi+16]
	push	edx
	push	ebx
	push	eax
	mov	ecx, esi
	call	?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign
; Line 852
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], edi
	jb	SHORT $LN59@append
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax+edi], 0
	pop	edi
; Line 854
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 855
	pop	ebp
	ret	8
; Line 849
$LN12@append:
	test	edi, edi
	jne	SHORT $LN66@append
	mov	DWORD PTR [esi+16], edi
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN51@append
	mov	eax, DWORD PTR [esi]
	pop	edi
	mov	BYTE PTR [eax], 0
; Line 854
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 855
	pop	ebp
	ret	8
; Line 849
$LN51@append:
	pop	edi
	mov	eax, esi
	pop	esi
	mov	BYTE PTR [eax], 0
	pop	ebx
; Line 855
	pop	ebp
	ret	8
; Line 852
$LN59@append:
	mov	eax, esi
	mov	BYTE PTR [eax+edi], 0
$LN63@append:
	pop	edi
$LN61@append:
; Line 854
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 855
	pop	ebp
	ret	8
$LN64@append:
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 892
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 893
	mov	ebx, DWORD PTR __Roff$[ebp]
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	push	edi
	mov	edi, DWORD PTR [ecx+16]
	cmp	edi, ebx
	jae	SHORT $LN5@assign
; Line 894
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN83@assign:
$LN5@assign:
; Line 896
	mov	eax, DWORD PTR __Count$[ebp]
	sub	edi, ebx
	cmp	eax, edi
	jae	SHORT $LN4@assign
; Line 897
	mov	edi, eax
$LN4@assign:
; Line 899
	cmp	esi, ecx
	jne	SHORT $LN3@assign
; Line 900
	push	-1
	add	edi, ebx
	push	edi
	mov	ecx, esi
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	push	ebx
	push	0
	mov	ecx, esi
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	pop	edi
; Line 906
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 907
	pop	ebp
	ret	12					; 0000000cH
$LN3@assign:
; Line 901
	cmp	edi, -2					; fffffffeH
	jbe	SHORT $LN20@assign
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN84@assign:
$LN20@assign:
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, edi
	jae	SHORT $LN19@assign
	mov	eax, DWORD PTR [esi+16]
	push	eax
	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	mov	ecx, DWORD PTR __Right$[ebp]
	test	edi, edi
	je	SHORT $LN78@assign
$LN82@assign:
; Line 903
	mov	eax, 16					; 00000010H
	cmp	DWORD PTR [ecx+20], eax
	jb	SHORT $LN64@assign
	mov	ecx, DWORD PTR [ecx]
$LN64@assign:
	cmp	DWORD PTR [esi+20], eax
	jb	SHORT $LN68@assign
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN69@assign
; Line 901
$LN19@assign:
	test	edi, edi
	jne	SHORT $LN82@assign
	mov	DWORD PTR [esi+16], edi
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN58@assign
	mov	eax, DWORD PTR [esi]
	pop	edi
	mov	BYTE PTR [eax], 0
; Line 906
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 907
	pop	ebp
	ret	12					; 0000000cH
; Line 901
$LN58@assign:
	pop	edi
	mov	eax, esi
	pop	esi
	mov	BYTE PTR [eax], 0
	pop	ebx
; Line 907
	pop	ebp
	ret	12					; 0000000cH
; Line 903
$LN68@assign:
	mov	eax, esi
$LN69@assign:
	push	edi
	add	ecx, ebx
	push	ecx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 904
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], edi
	jb	SHORT $LN76@assign
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax+edi], 0
	pop	edi
; Line 906
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 907
	pop	ebp
	ret	12					; 0000000cH
; Line 904
$LN76@assign:
	mov	eax, esi
	mov	BYTE PTR [eax+edi], 0
$LN78@assign:
; Line 906
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 907
	pop	ebp
	ret	12					; 0000000cH
$LN80@assign:
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEXI@Z ; std::vector<AppState *,std::allocator<AppState *> >::_Reserve
; Function compile flags: /Ogtp
;	COMDAT ?_Reserve@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEXI@Z PROC ; std::vector<AppState *,std::allocator<AppState *> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1290
	push	ebp
	mov	ebp, esp
; Line 1291
	mov	eax, DWORD PTR [ecx+4]
; Line 1292
	mov	edx, DWORD PTR __Count$[ebp]
	push	esi
	mov	esi, DWORD PTR [ecx]
	push	edi
	sub	eax, esi
	mov	edi, 1073741823				; 3fffffffH
	sar	eax, 2
	sub	edi, edx
	cmp	edi, eax
	jae	SHORT $LN4@Reserve
; Line 1293
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN34@Reserve:
$LN4@Reserve:
; Line 1294
	add	eax, edx
	mov	edx, DWORD PTR [ecx+8]
	sub	edx, esi
	sar	edx, 2
	cmp	eax, edx
	jbe	SHORT $LN1@Reserve
; Line 1297
	mov	esi, edx
	shr	esi, 1
	mov	edi, 1073741823				; 3fffffffH
	sub	edi, esi
	cmp	edi, edx
	jae	SHORT $LN23@Reserve
	xor	edx, edx
	jmp	SHORT $LN24@Reserve
$LN23@Reserve:
	add	edx, esi
$LN24@Reserve:
	cmp	edx, eax
	jae	SHORT $LN20@Reserve
	mov	edx, eax
$LN20@Reserve:
	push	edx
	call	?reserve@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAEXI@Z ; std::vector<AppState *,std::allocator<AppState *> >::reserve
$LN1@Reserve:
	pop	edi
	pop	esi
; Line 1298
	pop	ebp
	ret	4
$LN33@Reserve:
?_Reserve@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEXI@Z ENDP ; std::vector<AppState *,std::allocator<AppState *> >::_Reserve
_TEXT	ENDS
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Ogtp
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 798
	push	ebp
	mov	ebp, esp
; Line 799
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	ebx
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR __Roff$[ebp]
	cmp	eax, ecx
	jae	SHORT $LN4@append@2
; Line 800
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN85@append@2:
$LN4@append@2:
; Line 802
	mov	ebx, DWORD PTR __Count$[ebp]
	sub	eax, ecx
	cmp	eax, ebx
	jae	SHORT $LN3@append@2
; Line 803
	mov	ebx, eax
$LN3@append@2:
; Line 804
	mov	eax, DWORD PTR [esi+16]
	or	ecx, -1
	sub	ecx, eax
	cmp	ecx, ebx
	ja	SHORT $LN2@append@2
; Line 805
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN86@append@2:
$LN2@append@2:
; Line 807
	test	ebx, ebx
	je	$LN79@append@2
	push	edi
	lea	edi, DWORD PTR [eax+ebx]
	cmp	edi, -2					; fffffffeH
	jbe	SHORT $LN21@append@2
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN87@append@2:
$LN21@append@2:
	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, edi
	jae	SHORT $LN20@append@2
	push	eax
	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	mov	edx, DWORD PTR __Right$[ebp]
	test	edi, edi
	je	SHORT $LN81@append@2
$LN84@append@2:
; Line 810
	mov	eax, 16					; 00000010H
	cmp	DWORD PTR [edx+20], eax
	jb	SHORT $LN65@append@2
	mov	ecx, DWORD PTR [edx]
	jmp	SHORT $LN66@append@2
; Line 807
$LN20@append@2:
	test	edi, edi
	jne	SHORT $LN84@append@2
	mov	DWORD PTR [esi+16], edi
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN59@append@2
	mov	eax, DWORD PTR [esi]
	pop	edi
	mov	BYTE PTR [eax], 0
; Line 813
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 814
	pop	ebp
	ret	12					; 0000000cH
; Line 807
$LN59@append@2:
	pop	edi
	mov	eax, esi
	pop	esi
	mov	BYTE PTR [eax], 0
	pop	ebx
; Line 814
	pop	ebp
	ret	12					; 0000000cH
; Line 810
$LN65@append@2:
	mov	ecx, edx
$LN66@append@2:
	cmp	DWORD PTR [esi+20], eax
	jb	SHORT $LN69@append@2
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN70@append@2
$LN69@append@2:
	mov	eax, esi
$LN70@append@2:
	add	ecx, DWORD PTR __Roff$[ebp]
	push	ebx
	push	ecx
	mov	ecx, DWORD PTR [esi+16]
	add	ecx, eax
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 811
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], edi
	jb	SHORT $LN77@append@2
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax+edi], 0
	pop	edi
; Line 813
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 814
	pop	ebp
	ret	12					; 0000000cH
; Line 811
$LN77@append@2:
	mov	eax, esi
	mov	BYTE PTR [eax+edi], 0
$LN81@append@2:
	pop	edi
$LN79@append@2:
; Line 813
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 814
	pop	ebp
	ret	12					; 0000000cH
$LN82@append@2:
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 910
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 916
	mov	ebx, DWORD PTR __Ptr$[ebp]
	push	esi
	mov	esi, ecx
	test	ebx, ebx
	je	SHORT $LN85@assign@2
	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN12@assign@2
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN13@assign@2
$LN12@assign@2:
	mov	eax, esi
$LN13@assign@2:
	cmp	ebx, eax
	jb	SHORT $LN85@assign@2
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN16@assign@2
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN17@assign@2
$LN16@assign@2:
	mov	eax, esi
$LN17@assign@2:
	mov	edx, DWORD PTR [esi+16]
	add	edx, eax
	cmp	edx, ebx
	jbe	SHORT $LN85@assign@2
; Line 917
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN20@assign@2
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	sub	ebx, eax
	push	ebx
	push	esi
	mov	ecx, esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	esi
	pop	ebx
; Line 925
	pop	ebp
	ret	8
; Line 917
$LN20@assign@2:
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	eax, esi
	push	ecx
	sub	ebx, eax
	push	ebx
	push	esi
	mov	ecx, esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	esi
	pop	ebx
; Line 925
	pop	ebp
	ret	8
$LN85@assign@2:
	push	edi
; Line 919
	mov	edi, DWORD PTR __Count$[ebp]
	cmp	edi, -2					; fffffffeH
	jbe	SHORT $LN27@assign@2
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN89@assign@2:
$LN27@assign@2:
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, edi
	jae	SHORT $LN26@assign@2
	mov	edx, DWORD PTR [esi+16]
	push	edx
	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	test	edi, edi
	je	SHORT $LN82@assign@2
$LN88@assign@2:
; Line 921
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN72@assign@2
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN73@assign@2
; Line 919
$LN26@assign@2:
	test	edi, edi
	jne	SHORT $LN88@assign@2
	mov	DWORD PTR [esi+16], edi
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN65@assign@2
	mov	eax, DWORD PTR [esi]
	pop	edi
	mov	BYTE PTR [eax], 0
; Line 924
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 925
	pop	ebp
	ret	8
; Line 919
$LN65@assign@2:
	pop	edi
	mov	eax, esi
	pop	esi
	mov	BYTE PTR [eax], 0
	pop	ebx
; Line 925
	pop	ebp
	ret	8
; Line 921
$LN72@assign@2:
	mov	eax, esi
$LN73@assign@2:
	push	edi
	push	ebx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 922
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], edi
	jb	SHORT $LN80@assign@2
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax+edi], 0
	pop	edi
; Line 924
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 925
	pop	ebp
	ret	8
; Line 922
$LN80@assign@2:
	mov	eax, esi
	mov	BYTE PTR [eax+edi], 0
$LN82@assign@2:
; Line 924
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 925
	pop	ebp
	ret	8
$LN86@assign@2:
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
__Ch$ = 12						; size = 1
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 934
	push	ebp
	mov	ebp, esp
	push	esi
	push	edi
; Line 935
	mov	edi, DWORD PTR __Count$[ebp]
	mov	esi, ecx
	cmp	edi, -1
	jne	SHORT $LN2@assign@3
; Line 936
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN82@assign@3:
$LN2@assign@3:
; Line 938
	cmp	edi, -2					; fffffffeH
	jbe	SHORT $LN13@assign@3
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN83@assign@3:
$LN13@assign@3:
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, edi
	jae	SHORT $LN12@assign@3
	mov	eax, DWORD PTR [esi+16]
	push	eax
	push	edi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	test	edi, edi
	je	SHORT $LN77@assign@3
$LN81@assign@3:
; Line 940
	cmp	edi, 1
	jne	SHORT $LN56@assign@3
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN61@assign@3
	mov	eax, DWORD PTR [esi]
	mov	cl, BYTE PTR __Ch$[ebp]
	mov	BYTE PTR [eax], cl
	jmp	SHORT $LN69@assign@3
; Line 938
$LN12@assign@3:
	test	edi, edi
	jne	SHORT $LN81@assign@3
	mov	DWORD PTR [esi+16], edi
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN51@assign@3
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax], 0
	pop	edi
; Line 943
	mov	eax, esi
	pop	esi
; Line 944
	pop	ebp
	ret	8
; Line 938
$LN51@assign@3:
	mov	eax, esi
	pop	edi
	mov	BYTE PTR [eax], 0
	pop	esi
; Line 944
	pop	ebp
	ret	8
; Line 940
$LN61@assign@3:
	mov	cl, BYTE PTR __Ch$[ebp]
	mov	eax, esi
	mov	BYTE PTR [eax], cl
	jmp	SHORT $LN69@assign@3
$LN56@assign@3:
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN67@assign@3
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN68@assign@3
$LN67@assign@3:
	mov	eax, esi
$LN68@assign@3:
	movsx	edx, BYTE PTR __Ch$[ebp]
	push	edi
	push	edx
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
$LN69@assign@3:
; Line 941
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], edi
	jb	SHORT $LN75@assign@3
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax+edi], 0
	pop	edi
; Line 943
	mov	eax, esi
	pop	esi
; Line 944
	pop	ebp
	ret	8
; Line 941
$LN75@assign@3:
	mov	eax, esi
	mov	BYTE PTR [eax+edi], 0
$LN77@assign@3:
; Line 943
	pop	edi
	mov	eax, esi
	pop	esi
; Line 944
	pop	ebp
	ret	8
$LN79@assign@3:
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 886
	push	ebp
	mov	ebp, esp
; Line 887
	mov	eax, DWORD PTR __Right$[ebp]
	push	-1
	push	0
	push	eax
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 888
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator>><char,std::char_traits<char>,std::allocator<char> >
EXTRN	__imp_?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ:PROC
EXTRN	__imp_?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ:PROC
EXTRN	__imp_?getloc@ios_base@std@@QBE?AVlocale@2@XZ:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\ios
xdata$x	SEGMENT
__catchsym$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$6 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$0
__tryblocktable$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 03H
	DD	03H
	DD	04H
	DD	01H
	DD	FLAT:__catchsym$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$6
__ehfuncinfo$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$3
	DD	01H
	DD	00H
	DD	01H
	DD	00H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
$T139218 = -48						; size = 8
$T139243 = -48						; size = 8
__Ok$ = -40						; size = 8
__Ctype_fac$130986 = -32				; size = 4
$T139158 = -28						; size = 4
__State$ = -24						; size = 4
__Changed$ = -17					; size = 1
__$EHRec$ = -16						; size = 16
__Istr$ = 8						; size = 4
__Str$ = 12						; size = 4
??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::operator>><char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string
; Line 347
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 355
	mov	esi, DWORD PTR __Istr$[ebp]
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [ecx+esi+56]
	xor	edi, edi
	mov	DWORD PTR __State$[ebp], edi
	mov	BYTE PTR __Changed$[ebp], 0
	mov	DWORD PTR __Ok$[ebp], esi
	cmp	ecx, edi
	je	SHORT $LN24@operator@4
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN24@operator@4:
	push	edi
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+12], edi
	call	DWORD PTR __imp_?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z
	mov	BYTE PTR __Ok$[ebp+4], al
	mov	ebx, 1
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
; Line 357
	test	al, al
	je	$LN20@operator@4
; Line 359
	mov	edx, DWORD PTR [esi]
	lea	ecx, DWORD PTR $T139158[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+4]
	add	ecx, esi
	call	DWORD PTR __imp_?getloc@ios_base@std@@QBE?AVlocale@2@XZ
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	call	??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z ; std::use_facet<std::ctype<char> >
	mov	ecx, DWORD PTR $T139158[ebp]
	add	esp, 4
	mov	DWORD PTR __Ctype_fac$130986[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	cmp	ecx, edi
	je	SHORT $LN36@operator@4
	call	DWORD PTR __imp_?_Decref@facet@locale@std@@QAEPAV123@XZ
	cmp	eax, edi
	je	SHORT $LN36@operator@4
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx]
	push	ebx
	call	eax
$LN36@operator@4:
; Line 360
	mov	ecx, DWORD PTR __Str$[ebp]
	push	-1
	push	edi
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
; Line 365
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx+esi+36]
	mov	eax, DWORD PTR [edx+esi+32]
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	cmp	ecx, edi
	jl	SHORT $LN13@operator@4
	jg	SHORT $LN88@operator@4
	cmp	eax, edi
	jbe	SHORT $LN13@operator@4
$LN88@operator@4:
	mov	DWORD PTR $T139218[ebp+4], ecx
	cmp	eax, -2					; fffffffeH
	jae	SHORT $LN13@operator@4
	mov	DWORD PTR $T139243[ebp+4], ecx
	mov	edi, eax
	jmp	SHORT $LN55@operator@4
$LN13@operator@4:
	mov	edi, -2					; fffffffeH
$LN55@operator@4:
; Line 366
	mov	ecx, DWORD PTR [edx+esi+56]
	call	DWORD PTR __imp_?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
	npad	1
$LL8@operator@4:
; Line 368
	test	edi, edi
	je	SHORT $LN6@operator@4
; Line 369
	cmp	eax, -1
	jne	SHORT $LN5@operator@4
; Line 371
	or	DWORD PTR __State$[ebp], ebx
$LN6@operator@4:
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	jmp	SHORT $LN95@operator@4
$LN5@operator@4:
; Line 375
	mov	edx, DWORD PTR __Ctype_fac$130986[ebp]
	mov	edx, DWORD PTR [edx+16]
	movzx	ecx, al
	test	BYTE PTR [edx+ecx*2], 72		; 00000048H
	jne	SHORT $LN6@operator@4
; Line 379
	mov	ecx, DWORD PTR __Str$[ebp]
	push	eax
	push	ebx
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [ecx+esi+56]
; Line 380
	mov	BYTE PTR __Changed$[ebp], bl
	sub	edi, ebx
	call	DWORD PTR __imp_?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ
	jmp	SHORT $LL8@operator@4
__catch$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$0:
; Line 382
	mov	eax, DWORD PTR __Istr$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [edx+4]
	mov	ebx, 1
	push	ebx
	push	4
	add	ecx, eax
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	mov	eax, $LN91@operator@4
	ret	0
$LN91@operator@4:
	mov	esi, DWORD PTR __Istr$[ebp]
$LN95@operator@4:
	xor	edi, edi
$LN20@operator@4:
; Line 386
	cmp	BYTE PTR __Changed$[ebp], 0
	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [eax+esi+32], edi
	mov	DWORD PTR [eax+esi+36], edi
	jne	SHORT $LN1@operator@4
; Line 387
	or	DWORD PTR __State$[ebp], 2
$LN1@operator@4:
; Line 388
	mov	ecx, DWORD PTR __State$[ebp]
	mov	edx, DWORD PTR [esi]
	push	edi
	push	ecx
	mov	ecx, DWORD PTR [edx+4]
	add	ecx, esi
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
; Line 389
	mov	eax, DWORD PTR __Ok$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [edx+eax+56]
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	cmp	ecx, edi
	je	SHORT $LN89@operator@4
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+8]
	call	edx
$LN89@operator@4:
	mov	eax, esi
; Line 390
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$4:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__unwindfunclet$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ
__unwindfunclet$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$3:
	lea	ecx, DWORD PTR $T139158[ebp]
	jmp	??1locale@std@@QAE@XZ			; std::locale::~locale
__ehhandler$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::operator>><char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??_GMapEntry@@QAEPAXI@Z				; MapEntry::`scalar deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??_GMapEntry@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GMapEntry@@QAEPAXI@Z PROC				; MapEntry::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	cmp	DWORD PTR [esi+64], 16			; 00000010H
	jb	SHORT $LN16@scalar@4
	mov	eax, DWORD PTR [esi+44]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN16@scalar@4:
	push	ebx
	xor	ebx, ebx
	mov	DWORD PTR [esi+64], 15			; 0000000fH
	mov	DWORD PTR [esi+60], ebx
	mov	BYTE PTR [esi+44], bl
	cmp	DWORD PTR [esi+36], 16			; 00000010H
	jb	SHORT $LN38@scalar@4
	mov	ecx, DWORD PTR [esi+16]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN38@scalar@4:
	test	BYTE PTR ___flags$[ebp], 1
	mov	DWORD PTR [esi+32], ebx
	mov	DWORD PTR [esi+36], 15			; 0000000fH
	mov	BYTE PTR [esi+16], bl
	pop	ebx
	je	SHORT $LN50@scalar@4
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN50@scalar@4:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_GMapEntry@@QAEPAXI@Z ENDP				; MapEntry::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_GBookmark@@QAEPAXI@Z				; Bookmark::`scalar deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??_GBookmark@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GBookmark@@QAEPAXI@Z PROC				; Bookmark::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	call	??1Bookmark@@QAE@XZ
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN4@scalar@5
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@scalar@5:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_GBookmark@@QAEPAXI@Z ENDP				; Bookmark::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 543
	push	ebp
	mov	ebp, esp
; Line 545
	mov	eax, DWORD PTR __Right$[ebp]
	push	esi
	push	-1
	mov	esi, ecx
	push	0
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	push	eax
	mov	BYTE PTR [esi], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 546
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?push_back@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAEXABQAVAppState@@@Z ; std::vector<AppState *,std::allocator<AppState *> >::push_back
; Function compile flags: /Ogtp
;	COMDAT ?push_back@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAEXABQAVAppState@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAEXABQAVAppState@@@Z PROC ; std::vector<AppState *,std::allocator<AppState *> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 976
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
; Line 977
	mov	eax, DWORD PTR [esi+4]
	push	edi
	mov	edi, DWORD PTR __Val$[ebp]
	cmp	edi, eax
	jae	SHORT $LN4@push_back
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, edi
	ja	SHORT $LN4@push_back
; Line 979
	sub	edi, ecx
	sar	edi, 2
; Line 980
	cmp	eax, DWORD PTR [esi+8]
	jne	SHORT $LN3@push_back
; Line 981
	push	1
	mov	ecx, esi
	call	?_Reserve@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEXI@Z ; std::vector<AppState *,std::allocator<AppState *> >::_Reserve
$LN3@push_back:
; Line 985
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN39@push_back
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx+edi*4]
	mov	DWORD PTR [eax], edx
; Line 996
	add	DWORD PTR [esi+4], 4
	pop	edi
	pop	esi
; Line 998
	pop	ebp
	ret	4
$LN4@push_back:
; Line 990
	cmp	eax, DWORD PTR [esi+8]
	jne	SHORT $LN1@push_back
; Line 991
	push	1
	mov	ecx, esi
	call	?_Reserve@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEXI@Z ; std::vector<AppState *,std::allocator<AppState *> >::_Reserve
$LN1@push_back:
; Line 995
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN39@push_back
	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR [eax], ecx
$LN39@push_back:
; Line 996
	add	DWORD PTR [esi+4], 4
	pop	edi
	pop	esi
; Line 998
	pop	ebp
	ret	4
?push_back@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAEXABQAVAppState@@@Z ENDP ; std::vector<AppState *,std::allocator<AppState *> >::push_back
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp__memcpy_s:PROC
EXTRN	__imp_?in@?$codecvt@DDH@std@@QBEHAAHPBD1AAPBDPAD3AAPAD@Z:PROC
EXTRN	__imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$0
__ehfuncinfo$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
_TEXT	SEGMENT
__Dest$122540 = -56					; size = 4
__Src$122541 = -52					; size = 4
__Ch$122539 = -45					; size = 1
__Str$122535 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::uflow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\fstream
; Line 423
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
; Line 425
	mov	eax, DWORD PTR [esi+32]
	mov	eax, DWORD PTR [eax]
	xor	edi, edi
	cmp	eax, edi
	je	SHORT $LN18@uflow
	mov	ecx, DWORD PTR [esi+32]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [esi+48]
	mov	ecx, DWORD PTR [edx]
	add	ecx, eax
	cmp	eax, ecx
	jae	SHORT $LN18@uflow
; Line 427
	mov	eax, edx
	dec	DWORD PTR [eax]
	mov	esi, DWORD PTR [esi+32]
	mov	eax, DWORD PTR [esi]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR [esi], edx
	movzx	eax, BYTE PTR [eax]
	jmp	$LN14@uflow
$LN18@uflow:
; Line 428
	cmp	DWORD PTR [esi+84], edi
; Line 429
	je	$LN178@uflow
; Line 430
	mov	eax, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [eax]
	lea	ecx, DWORD PTR [esi+72]
	cmp	eax, ecx
	jne	SHORT $LN36@uflow
	mov	eax, DWORD PTR [esi+64]
	mov	edx, DWORD PTR [esi+60]
	push	eax
	push	eax
	push	edx
	mov	ecx, esi
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
$LN36@uflow:
; Line 431
	cmp	DWORD PTR [esi+68], edi
	jne	SHORT $LN15@uflow
; Line 435
	mov	esi, DWORD PTR [esi+84]
	push	esi
	call	DWORD PTR __imp__fgetc
	add	esp, 4
	cmp	eax, -1
	je	$LN178@uflow
	movzx	eax, al
	jmp	$LN14@uflow
$LN15@uflow:
; Line 439
	mov	DWORD PTR __Str$122535[ebp+20], 15	; 0000000fH
	mov	DWORD PTR __Str$122535[ebp+16], edi
	mov	BYTE PTR __Str$122535[ebp], 0
; Line 446
	mov	eax, DWORD PTR [esi+84]
	mov	ebx, DWORD PTR __imp__fgetc
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], edi
	call	ebx
	add	esp, 4
; Line 448
	cmp	eax, -1
	je	$LN1@uflow
	lea	edi, DWORD PTR [esi+76]
$LL13@uflow:
; Line 451
	push	eax
	push	1
	lea	ecx, DWORD PTR __Str$122535[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 454
	mov	edx, DWORD PTR __Str$122535[ebp+20]
	mov	eax, DWORD PTR __Str$122535[ebp]
	mov	ecx, eax
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN100@uflow
	lea	ecx, DWORD PTR __Str$122535[ebp]
	mov	eax, ecx
$LN100@uflow:
	add	ecx, DWORD PTR __Str$122535[ebp+16]
	lea	edx, DWORD PTR __Dest$122540[ebp]
	push	edx
	lea	edx, DWORD PTR __Ch$122539[ebp+1]
	push	edx
	lea	edx, DWORD PTR __Ch$122539[ebp]
	push	edx
	lea	edx, DWORD PTR __Src$122541[ebp]
	push	edx
	push	ecx
	mov	ecx, DWORD PTR [esi+68]
	push	eax
	push	edi
	call	DWORD PTR __imp_?in@?$codecvt@DDH@std@@QBEHAAHPBD1AAPBDPAD3AAPAD@Z
	test	eax, eax
	js	SHORT $LN1@uflow
	cmp	eax, 1
	jle	SHORT $LN8@uflow
	cmp	eax, 3
	jne	SHORT $LN1@uflow
; Line 471
	cmp	DWORD PTR __Str$122535[ebp+16], 1
	jb	SHORT $LN4@uflow
; Line 474
	cmp	DWORD PTR __Str$122535[ebp+20], 16	; 00000010H
	mov	eax, DWORD PTR __Str$122535[ebp]
	jae	SHORT $LN154@uflow
	lea	eax, DWORD PTR __Str$122535[ebp]
$LN154@uflow:
	push	1
	push	eax
	lea	eax, DWORD PTR __Ch$122539[ebp]
	push	1
	push	eax
	call	DWORD PTR __imp__memcpy_s
; Line 477
	movzx	esi, BYTE PTR __Ch$122539[ebp]
	add	esp, 16					; 00000010H
	lea	ecx, DWORD PTR __Str$122535[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, esi
	jmp	SHORT $LN14@uflow
$LN8@uflow:
; Line 458
	lea	eax, DWORD PTR __Ch$122539[ebp]
	cmp	DWORD PTR __Dest$122540[ebp], eax
	jne	SHORT $LN173@uflow
; Line 467
	cmp	DWORD PTR __Str$122535[ebp+20], 16	; 00000010H
	mov	eax, DWORD PTR __Str$122535[ebp]
	jae	SHORT $LN136@uflow
	lea	eax, DWORD PTR __Str$122535[ebp]
$LN136@uflow:
	mov	ecx, DWORD PTR __Src$122541[ebp]
	sub	ecx, eax
	push	ecx
	push	0
	lea	ecx, DWORD PTR __Str$122535[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
$LN4@uflow:
; Line 446
	mov	edx, DWORD PTR [esi+84]
	push	edx
	call	ebx
	add	esp, 4
; Line 448
	cmp	eax, -1
	jne	$LL13@uflow
$LN1@uflow:
; Line 480
	lea	ecx, DWORD PTR __Str$122535[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN178@uflow:
	or	eax, -1
$LN14@uflow:
; Line 484
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN173@uflow:
; Line 460
	cmp	DWORD PTR __Str$122535[ebp+20], 16	; 00000010H
	mov	edi, DWORD PTR __Str$122535[ebp]
	jae	SHORT $LN116@uflow
	lea	edi, DWORD PTR __Str$122535[ebp]
$LN116@uflow:
	sub	edi, DWORD PTR __Src$122541[ebp]
	add	edi, DWORD PTR __Str$122535[ebp+16]
; Line 461
	test	edi, edi
	jle	SHORT $LN5@uflow
	mov	ebx, DWORD PTR __imp__ungetc
$LN6@uflow:
; Line 462
	mov	edx, DWORD PTR __Src$122541[ebp]
	mov	ecx, DWORD PTR [esi+84]
	movsx	eax, BYTE PTR [edi+edx-1]
	dec	edi
	push	ecx
	push	eax
	call	ebx
	add	esp, 8
	test	edi, edi
	jg	SHORT $LN6@uflow
$LN5@uflow:
; Line 463
	movzx	esi, BYTE PTR __Ch$122539[ebp]
	lea	ecx, DWORD PTR __Str$122535[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, esi
	jmp	SHORT $LN14@uflow
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ$0:
	lea	ecx, DWORD PTR __Str$122535[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::uflow
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
__Ch$ = 12						; size = 1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 606
	push	ebp
	mov	ebp, esp
; Line 608
	mov	eax, DWORD PTR __Ch$[ebp]
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR __Count$[ebp]
	push	eax
	push	ecx
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	ecx, esi
	mov	BYTE PTR [esi], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 609
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	8
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Ogtp
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx
; Line 817
	push	ebp
	mov	ebp, esp
; Line 823
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	esi
	push	edi
	mov	esi, ecx
	test	edx, edx
	je	SHORT $LN88@append@3
	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN13@append@3
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN14@append@3
$LN13@append@3:
	mov	eax, esi
$LN14@append@3:
	cmp	edx, eax
	jb	SHORT $LN88@append@3
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN17@append@3
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN18@append@3
$LN17@append@3:
	mov	eax, esi
$LN18@append@3:
	mov	edi, DWORD PTR [esi+16]
	add	edi, eax
	cmp	edi, edx
	jbe	SHORT $LN88@append@3
; Line 824
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN21@append@3
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	sub	edx, eax
	push	edx
	push	esi
	mov	ecx, esi
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	pop	edi
	pop	esi
; Line 835
	pop	ebp
	ret	8
; Line 824
$LN21@append@3:
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	eax, esi
	push	ecx
	sub	edx, eax
	push	edx
	push	esi
	mov	ecx, esi
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	pop	edi
	pop	esi
; Line 835
	pop	ebp
	ret	8
$LN88@append@3:
; Line 825
	mov	eax, DWORD PTR [esi+16]
	or	ecx, -1
	push	ebx
	mov	ebx, DWORD PTR __Count$[ebp]
	sub	ecx, eax
	cmp	ecx, ebx
	ja	SHORT $LN2@append@3
; Line 826
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN92@append@3:
$LN2@append@3:
; Line 829
	test	ebx, ebx
	je	$LN85@append@3
	lea	edi, DWORD PTR [eax+ebx]
	cmp	edi, -2					; fffffffeH
	jbe	SHORT $LN31@append@3
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN93@append@3:
$LN31@append@3:
	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, edi
	jae	SHORT $LN30@append@3
	push	eax
	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	mov	edx, DWORD PTR __Ptr$[ebp]
	test	edi, edi
	je	SHORT $LN85@append@3
$LN91@append@3:
; Line 831
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN75@append@3
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN76@append@3
; Line 829
$LN30@append@3:
	test	edi, edi
	jne	SHORT $LN91@append@3
	mov	DWORD PTR [esi+16], edi
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN69@append@3
	mov	eax, DWORD PTR [esi]
	pop	ebx
	mov	BYTE PTR [eax], 0
	pop	edi
; Line 834
	mov	eax, esi
	pop	esi
; Line 835
	pop	ebp
	ret	8
; Line 829
$LN69@append@3:
	pop	ebx
	mov	eax, esi
	pop	edi
	mov	BYTE PTR [eax], 0
	pop	esi
; Line 835
	pop	ebp
	ret	8
; Line 831
$LN75@append@3:
	mov	eax, esi
$LN76@append@3:
	push	ebx
	push	edx
	mov	edx, DWORD PTR [esi+16]
	add	edx, eax
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 832
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], edi
	jb	SHORT $LN83@append@3
	mov	eax, DWORD PTR [esi]
	pop	ebx
	mov	BYTE PTR [eax+edi], 0
	pop	edi
; Line 834
	mov	eax, esi
	pop	esi
; Line 835
	pop	ebp
	ret	8
; Line 832
$LN83@append@3:
	mov	eax, esi
	mov	BYTE PTR [eax+edi], 0
$LN85@append@3:
; Line 834
	pop	ebx
	pop	edi
	mov	eax, esi
	pop	esi
; Line 835
	pop	ebp
	ret	8
$LN89@append@3:
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 928
	push	ebp
	mov	ebp, esp
	push	esi
; Line 930
	mov	esi, DWORD PTR __Ptr$[ebp]
	mov	eax, esi
	push	edi
	lea	edi, DWORD PTR [eax+1]
	npad	3
$LL5@assign@4:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL5@assign@4
	sub	eax, edi
	push	eax
	push	esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	edi
	pop	esi
; Line 931
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
EXTRN	__imp__fwrite:PROC
EXTRN	__imp_?unshift@?$codecvt@DDH@std@@QBEHAAHPAD1AAPAD@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ$0
__ehfuncinfo$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ
_TEXT	SEGMENT
__Dest$125138 = -48					; size = 4
__Str$125142 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\fstream
; Line 587
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	edi, ecx
; Line 588
	cmp	DWORD PTR [edi+68], 0
	je	$LN14@Endwrite
	cmp	BYTE PTR [edi+73], 0
	je	$LN14@Endwrite
; Line 594
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax+12]
	push	-1
	call	edx
	cmp	eax, -1
; Line 595
	je	$LN206@Endwrite
; Line 597
	mov	ecx, 15					; 0000000fH
	xor	eax, eax
	mov	BYTE PTR __Str$125142[ebp], 0
	mov	DWORD PTR __Str$125142[ebp+20], ecx
	mov	DWORD PTR __Str$125142[ebp], eax
	mov	DWORD PTR __Str$125142[ebp+4], eax
	mov	DWORD PTR __Str$125142[ebp+16], 8
	cmp	ecx, 16					; 00000010H
	jae	SHORT $LN126@Endwrite
	lea	eax, DWORD PTR __Str$125142[ebp]
$LN126@Endwrite:
	mov	BYTE PTR [eax+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ebx, DWORD PTR [edi+76]
$LN205@Endwrite:
	mov	eax, DWORD PTR __Str$125142[ebp]
	mov	edx, DWORD PTR __Str$125142[ebp+20]
$LN11@Endwrite:
; Line 600
	mov	ecx, eax
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN154@Endwrite
	lea	ecx, DWORD PTR __Str$125142[ebp]
	mov	eax, ecx
$LN154@Endwrite:
	add	ecx, DWORD PTR __Str$125142[ebp+16]
	lea	edx, DWORD PTR __Dest$125138[ebp]
	push	edx
	push	ecx
	mov	ecx, DWORD PTR [edi+68]
	push	eax
	push	ebx
	call	DWORD PTR __imp_?unshift@?$codecvt@DDH@std@@QBEHAAHPAD1AAPAD@Z
	sub	eax, 0
	je	SHORT $LN7@Endwrite
	dec	eax
	je	SHORT $LN6@Endwrite
	sub	eax, 2
; Line 622
	lea	ecx, DWORD PTR __Str$125142[ebp]
	jne	SHORT $LN207@Endwrite
; Line 619
	jmp	SHORT $LN208@Endwrite
$LN7@Endwrite:
; Line 603
	mov	BYTE PTR [edi+73], 0
$LN6@Endwrite:
; Line 607
	mov	edx, DWORD PTR __Str$125142[ebp+20]
	mov	eax, DWORD PTR __Str$125142[ebp]
	mov	ecx, eax
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN170@Endwrite
	lea	ecx, DWORD PTR __Str$125142[ebp]
$LN170@Endwrite:
	mov	esi, DWORD PTR __Dest$125138[ebp]
	sub	esi, ecx
; Line 609
	je	SHORT $LN5@Endwrite
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN186@Endwrite
	lea	eax, DWORD PTR __Str$125142[ebp]
$LN186@Endwrite:
	mov	ecx, DWORD PTR [edi+84]
	push	ecx
	push	esi
	push	1
	push	eax
	call	DWORD PTR __imp__fwrite
	add	esp, 16					; 00000010H
	cmp	esi, eax
	jne	SHORT $LN198@Endwrite
	mov	edx, DWORD PTR __Str$125142[ebp+20]
	mov	eax, DWORD PTR __Str$125142[ebp]
$LN5@Endwrite:
; Line 611
	cmp	BYTE PTR [edi+73], 0
	je	SHORT $LN199@Endwrite
; Line 613
	test	esi, esi
	jne	SHORT $LN11@Endwrite
; Line 614
	push	esi
	push	8
	lea	ecx, DWORD PTR __Str$125142[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 623
	jmp	$LN205@Endwrite
$LN198@Endwrite:
; Line 610
	lea	ecx, DWORD PTR __Str$125142[ebp]
$LN207@Endwrite:
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN206@Endwrite:
	xor	al, al
	jmp	SHORT $LN13@Endwrite
$LN199@Endwrite:
; Line 612
	lea	ecx, DWORD PTR __Str$125142[ebp]
$LN208@Endwrite:
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN14@Endwrite:
; Line 589
	mov	al, 1
$LN13@Endwrite:
; Line 625
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ$0:
	lea	ecx, DWORD PTR __Str$125142[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Function compile flags: /Ogtp
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 762
	push	ebp
	mov	ebp, esp
; Line 763
	mov	eax, DWORD PTR __Right$[ebp]
	push	-1
	push	0
	push	eax
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 764
	pop	ebp
	ret	4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
PUBLIC	??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator>><char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
;	COMDAT ??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
__Istr$ = 8						; size = 4
__Str$ = 12						; size = 4
??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::operator>><char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string
; Line 461
	push	ebp
	mov	ebp, esp
; Line 463
	pop	ebp
; Line 462
	jmp	??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator>><char,std::char_traits<char>,std::allocator<char> >
??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@AAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::operator>><char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??0MapEntry@@QAE@ABU0@@Z			; MapEntry::MapEntry
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0MapEntry@@QAE@ABU0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0MapEntry@@QAE@ABU0@@Z$0
__ehfuncinfo$??0MapEntry@@QAE@ABU0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0MapEntry@@QAE@ABU0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??0MapEntry@@QAE@ABU0@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0MapEntry@@QAE@ABU0@@Z PROC				; MapEntry::MapEntry, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0MapEntry@@QAE@ABU0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	mov	edi, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR [esi+4], ecx
	mov	edx, DWORD PTR [edi+8]
	mov	DWORD PTR [esi+8], edx
	mov	eax, DWORD PTR [edi+12]
	push	-1
	lea	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR [esi+12], eax
	push	0
	lea	edx, DWORD PTR [edi+16]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH
	mov	DWORD PTR [ecx+16], 0
	push	edx
	mov	BYTE PTR [ecx], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	push	-1
	lea	ecx, DWORD PTR [esi+44]
	push	0
	lea	eax, DWORD PTR [edi+44]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH
	mov	DWORD PTR [ecx+16], 0
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	BYTE PTR [ecx], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	ecx, DWORD PTR [edi+72]
	mov	DWORD PTR [esi+72], ecx
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0MapEntry@@QAE@ABU0@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0MapEntry@@QAE@ABU0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0MapEntry@@QAE@ABU0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0MapEntry@@QAE@ABU0@@Z ENDP				; MapEntry::MapEntry
PUBLIC	??0Bookmark@@QAE@ABU0@@Z			; Bookmark::Bookmark
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Bookmark@@QAE@ABU0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Bookmark@@QAE@ABU0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0Bookmark@@QAE@ABU0@@Z$1
__ehfuncinfo$??0Bookmark@@QAE@ABU0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0Bookmark@@QAE@ABU0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??0Bookmark@@QAE@ABU0@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0Bookmark@@QAE@ABU0@@Z PROC				; Bookmark::Bookmark, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0Bookmark@@QAE@ABU0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	mov	edi, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR [esi+4], ecx
	mov	edx, DWORD PTR [edi+8]
	mov	DWORD PTR [esi+8], edx
	mov	eax, DWORD PTR [edi+12]
	xor	ebx, ebx
	push	-1
	lea	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR [esi+12], eax
	push	ebx
	lea	edx, DWORD PTR [edi+16]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH
	mov	DWORD PTR [ecx+16], ebx
	push	edx
	mov	BYTE PTR [ecx], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	push	-1
	lea	ecx, DWORD PTR [esi+44]
	push	ebx
	lea	eax, DWORD PTR [edi+44]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH
	mov	DWORD PTR [ecx+16], ebx
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], ebx
	mov	BYTE PTR [ecx], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	push	-1
	lea	ecx, DWORD PTR [esi+72]
	push	ebx
	lea	edx, DWORD PTR [edi+72]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH
	mov	DWORD PTR [ecx+16], ebx
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	BYTE PTR [ecx], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	eax, DWORD PTR [edi+100]
	mov	DWORD PTR [esi+100], eax
	mov	ecx, DWORD PTR [edi+104]
	mov	DWORD PTR [esi+104], ecx
	mov	edx, DWORD PTR [edi+108]
	mov	DWORD PTR [esi+108], edx
	mov	eax, DWORD PTR [edi+112]
	mov	DWORD PTR [esi+112], eax
	mov	ecx, DWORD PTR [edi+116]
	mov	DWORD PTR [esi+116], ecx
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Bookmark@@QAE@ABU0@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0Bookmark@@QAE@ABU0@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0Bookmark@@QAE@ABU0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0Bookmark@@QAE@ABU0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0Bookmark@@QAE@ABU0@@Z ENDP				; Bookmark::Bookmark
PUBLIC	??4Bookmark@@QAEAAU0@ABU0@@Z			; Bookmark::operator=
; Function compile flags: /Ogtp
;	COMDAT ??4Bookmark@@QAEAAU0@ABU0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4Bookmark@@QAEAAU0@ABU0@@Z PROC			; Bookmark::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	push	edi
	mov	edi, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edi]
	mov	esi, ecx
	mov	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR [esi+4], ecx
	mov	edx, DWORD PTR [edi+8]
	push	-1
	mov	DWORD PTR [esi+8], edx
	mov	eax, DWORD PTR [edi+12]
	push	0
	lea	ecx, DWORD PTR [edi+16]
	push	ecx
	lea	ecx, DWORD PTR [esi+16]
	mov	DWORD PTR [esi+12], eax
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	push	-1
	push	0
	lea	edx, DWORD PTR [edi+44]
	push	edx
	lea	ecx, DWORD PTR [esi+44]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	push	-1
	push	0
	lea	eax, DWORD PTR [edi+72]
	push	eax
	lea	ecx, DWORD PTR [esi+72]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	ecx, DWORD PTR [edi+100]
	mov	DWORD PTR [esi+100], ecx
	mov	edx, DWORD PTR [edi+104]
	mov	DWORD PTR [esi+104], edx
	mov	eax, DWORD PTR [edi+108]
	mov	DWORD PTR [esi+108], eax
	mov	ecx, DWORD PTR [edi+112]
	mov	DWORD PTR [esi+112], ecx
	mov	edx, DWORD PTR [edi+116]
	pop	edi
	mov	DWORD PTR [esi+116], edx
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??4Bookmark@@QAEAAU0@ABU0@@Z ENDP			; Bookmark::operator=
_TEXT	ENDS
PUBLIC	??$_Destroy@UMapEntry@@@std@@YAXPAUMapEntry@@@Z	; std::_Destroy<MapEntry>
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy@UMapEntry@@@std@@YAXPAUMapEntry@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@UMapEntry@@@std@@YAXPAUMapEntry@@@Z PROC	; std::_Destroy<MapEntry>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 62
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
; Line 63
	mov	esi, DWORD PTR __Ptr$[ebp]
	cmp	DWORD PTR [esi+64], 16			; 00000010H
	jb	SHORT $LN18@Destroy
	mov	eax, DWORD PTR [esi+44]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN18@Destroy:
	xor	ebx, ebx
	mov	DWORD PTR [esi+64], 15			; 0000000fH
	mov	DWORD PTR [esi+60], ebx
	mov	BYTE PTR [esi+44], bl
	cmp	DWORD PTR [esi+36], 16			; 00000010H
	jb	SHORT $LN40@Destroy
	mov	ecx, DWORD PTR [esi+16]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN40@Destroy:
	mov	DWORD PTR [esi+32], ebx
	mov	DWORD PTR [esi+36], 15			; 0000000fH
	mov	BYTE PTR [esi+16], bl
	pop	esi
	pop	ebx
; Line 64
	pop	ebp
	ret	0
??$_Destroy@UMapEntry@@@std@@YAXPAUMapEntry@@@Z ENDP	; std::_Destroy<MapEntry>
_TEXT	ENDS
PUBLIC	??$_Destroy@UBookmark@@@std@@YAXPAUBookmark@@@Z	; std::_Destroy<Bookmark>
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy@UBookmark@@@std@@YAXPAUBookmark@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@UBookmark@@@std@@YAXPAUBookmark@@@Z PROC	; std::_Destroy<Bookmark>, COMDAT
; Line 62
	push	ebp
	mov	ebp, esp
; Line 63
	mov	ecx, DWORD PTR __Ptr$[ebp]
; Line 64
	pop	ebp
; Line 63
	jmp	??1Bookmark@@QAE@XZ
??$_Destroy@UBookmark@@@std@@YAXPAUBookmark@@@Z ENDP	; std::_Destroy<Bookmark>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@$$QAU3@@Z ; std::allocator<MapEntry>::construct
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@$$QAU3@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@$$QAU3@@Z$0
__ehfuncinfo$?construct@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@$$QAU3@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@$$QAU3@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@$$QAU3@@Z
_TEXT	SEGMENT
$T141969 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@$$QAU3@@Z PROC ; std::allocator<MapEntry>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@$$QAU3@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 202
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR $T141969[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	test	ecx, ecx
	je	SHORT $LN3@construct@3
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??0MapEntry@@QAE@ABU0@@Z
$LN3@construct@3:
; Line 203
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@$$QAU3@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T141969[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@$$QAU3@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@$$QAU3@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@$$QAU3@@Z ENDP ; std::allocator<MapEntry>::construct
PUBLIC	?construct@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@$$QAU3@@Z ; std::allocator<Bookmark>::construct
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@$$QAU3@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@$$QAU3@@Z$0
__ehfuncinfo$?construct@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@$$QAU3@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@$$QAU3@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@$$QAU3@@Z
_TEXT	SEGMENT
$T141988 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@$$QAU3@@Z PROC ; std::allocator<Bookmark>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@$$QAU3@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 202
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR $T141988[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	test	ecx, ecx
	je	SHORT $LN3@construct@4
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??0Bookmark@@QAE@ABU0@@Z
$LN3@construct@4:
; Line 203
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@$$QAU3@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T141988[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@$$QAU3@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@$$QAU3@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@$$QAU3@@Z ENDP ; std::allocator<Bookmark>::construct
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 592
	push	ebp
	mov	ebp, esp
; Line 594
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	esi
	mov	esi, ecx
	mov	eax, edx
	push	edi
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
	lea	edi, DWORD PTR [eax+1]
$LL31@basic_stri@2:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL31@basic_stri@2
	sub	eax, edi
	push	eax
	push	edx
	mov	ecx, esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	edi
; Line 595
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Function compile flags: /Ogtp
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx
; Line 767
	push	ebp
	mov	ebp, esp
	push	esi
; Line 768
	mov	esi, DWORD PTR __Ptr$[ebp]
	mov	eax, esi
	push	edi
	lea	edi, DWORD PTR [eax+1]
	npad	3
$LL7@operator@5:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL7@operator@5
	sub	eax, edi
	push	eax
	push	esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	edi
	pop	esi
; Line 769
	pop	ebp
	ret	4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Ogtp
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx
; Line 838
	push	ebp
	mov	ebp, esp
	push	esi
; Line 840
	mov	esi, DWORD PTR __Ptr$[ebp]
	mov	eax, esi
	push	edi
	lea	edi, DWORD PTR [eax+1]
	npad	3
$LL5@append@4:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL5@append@4
	sub	eax, edi
	push	eax
	push	esi
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	pop	edi
	pop	esi
; Line 841
	pop	ebp
	ret	4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_?out@?$codecvt@DDH@std@@QBEHAAHPBD1AAPBDPAD3AAPAD@Z:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z$0
__ehfuncinfo$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
_TEXT	SEGMENT
__Src$122474 = -56					; size = 4
__Dest$122475 = -52					; size = 4
__Ch$122473 = -48					; size = 1
__Str$122476 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Meta$ = 8						; size = 4
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::overflow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\fstream
; Line 322
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 323
	mov	ebx, DWORD PTR __Meta$[ebp]
	mov	edi, ecx
	cmp	ebx, -1
	jne	SHORT $LN20@overflow
; Line 324
	xor	eax, eax
	jmp	$LN14@overflow
$LN20@overflow:
; Line 326
	mov	eax, DWORD PTR [edi+36]
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN18@overflow
	mov	eax, DWORD PTR [edi+52]
	mov	edx, DWORD PTR [eax]
	add	edx, ecx
	cmp	ecx, edx
	jae	SHORT $LN18@overflow
; Line 328
	dec	DWORD PTR [eax]
	mov	edi, DWORD PTR [edi+36]
	mov	eax, DWORD PTR [edi]
	lea	ecx, DWORD PTR [eax+1]
	mov	DWORD PTR [edi], ecx
	mov	BYTE PTR [eax], bl
; Line 329
	mov	eax, ebx
	jmp	$LN14@overflow
$LN18@overflow:
; Line 331
	cmp	DWORD PTR [edi+84], 0
; Line 332
	je	$LN253@overflow
; Line 333
	mov	edx, DWORD PTR [edi+16]
	lea	ecx, DWORD PTR [edi+72]
	cmp	DWORD PTR [edx], ecx
	jne	SHORT $LN52@overflow
	mov	eax, DWORD PTR [edi+64]
	mov	edx, DWORD PTR [edi+60]
	push	eax
	push	eax
	push	edx
	mov	ecx, edi
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
$LN52@overflow:
; Line 334
	cmp	DWORD PTR [edi+68], 0
	jne	SHORT $LN15@overflow
; Line 336
	mov	edi, DWORD PTR [edi+84]
	movsx	eax, bl
	push	edi
	push	eax
	call	DWORD PTR __imp__fputc
	add	esp, 8
	cmp	eax, -1
	je	$LN253@overflow
	mov	eax, ebx
	jmp	$LN14@overflow
$LN15@overflow:
; Line 344
	mov	ecx, 15					; 0000000fH
	xor	eax, eax
	mov	BYTE PTR __Str$122476[ebp], 0
	mov	BYTE PTR __Ch$122473[ebp], bl
	mov	DWORD PTR __Str$122476[ebp+20], ecx
	mov	DWORD PTR __Str$122476[ebp], eax
	mov	DWORD PTR __Str$122476[ebp+4], eax
	mov	DWORD PTR __Str$122476[ebp+16], 8
	cmp	ecx, 16					; 00000010H
	jae	SHORT $LN166@overflow
	lea	eax, DWORD PTR __Str$122476[ebp]
$LN166@overflow:
	mov	BYTE PTR [eax+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ebx, DWORD PTR [edi+76]
$LN256@overflow:
	mov	eax, DWORD PTR __Str$122476[ebp]
	mov	edx, DWORD PTR __Str$122476[ebp+20]
$LN13@overflow:
; Line 348
	mov	ecx, eax
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN194@overflow
	lea	ecx, DWORD PTR __Str$122476[ebp]
	mov	eax, ecx
$LN194@overflow:
	add	ecx, DWORD PTR __Str$122476[ebp+16]
	lea	edx, DWORD PTR __Dest$122475[ebp]
	push	edx
	push	ecx
	push	eax
	lea	eax, DWORD PTR __Src$122474[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ch$122473[ebp+1]
	push	ecx
	mov	ecx, DWORD PTR [edi+68]
	lea	edx, DWORD PTR __Ch$122473[ebp]
	push	edx
	push	ebx
	call	DWORD PTR __imp_?out@?$codecvt@DDH@std@@QBEHAAHPBD1AAPBDPAD3AAPAD@Z
	test	eax, eax
	js	$LN1@overflow
	cmp	eax, 1
	jg	SHORT $LN248@overflow
; Line 353
	mov	edx, DWORD PTR __Str$122476[ebp+20]
	mov	eax, DWORD PTR __Str$122476[ebp]
	mov	ecx, eax
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN210@overflow
	lea	ecx, DWORD PTR __Str$122476[ebp]
$LN210@overflow:
	mov	esi, DWORD PTR __Dest$122475[ebp]
	sub	esi, ecx
; Line 355
	je	SHORT $LN8@overflow
	cmp	edx, 16					; 00000010H
	jae	SHORT $LN226@overflow
	lea	eax, DWORD PTR __Str$122476[ebp]
$LN226@overflow:
	mov	ecx, DWORD PTR [edi+84]
	push	ecx
	push	esi
	push	1
	push	eax
	call	DWORD PTR __imp__fwrite
	add	esp, 16					; 00000010H
	cmp	esi, eax
	jne	SHORT $LN1@overflow
	mov	edx, DWORD PTR __Str$122476[ebp+20]
	mov	eax, DWORD PTR __Str$122476[ebp]
$LN8@overflow:
; Line 359
	lea	ecx, DWORD PTR __Ch$122473[ebp]
	mov	BYTE PTR [edi+73], 1
	cmp	DWORD PTR __Src$122474[ebp], ecx
	jne	SHORT $LN250@overflow
; Line 362
	test	esi, esi
	jne	$LN13@overflow
; Line 364
	cmp	DWORD PTR __Str$122476[ebp+16], 32	; 00000020H
; Line 365
	lea	ecx, DWORD PTR __Str$122476[ebp]
	jae	SHORT $LN4@overflow
	push	esi
	push	8
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 377
	jmp	$LN256@overflow
$LN248@overflow:
; Line 348
	cmp	eax, 3
	jne	SHORT $LN1@overflow
; Line 373
	mov	edx, DWORD PTR [edi+84]
	mov	eax, DWORD PTR __Ch$122473[ebp]
	push	edx
	push	eax
	call	??$_Fputc@D@std@@YA_NDPAU_iobuf@@@Z	; std::_Fputc<char>
	add	esp, 8
	test	al, al
	je	SHORT $LN25@overflow
	mov	esi, DWORD PTR __Meta$[ebp]
	lea	ecx, DWORD PTR __Str$122476[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, esi
	jmp	SHORT $LN14@overflow
$LN25@overflow:
	lea	ecx, DWORD PTR __Str$122476[ebp]
	or	esi, -1
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, esi
	jmp	SHORT $LN14@overflow
$LN250@overflow:
; Line 360
	lea	ecx, DWORD PTR __Str$122476[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR __Meta$[ebp]
	jmp	SHORT $LN14@overflow
$LN1@overflow:
; Line 376
	lea	ecx, DWORD PTR __Str$122476[ebp]
$LN4@overflow:
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN253@overflow:
	or	eax, -1
$LN14@overflow:
; Line 379
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z$0:
	lea	ecx, DWORD PTR __Str$122476[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAEHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::overflow
EXTRN	__imp_?_BADOFF@std@@3_JB:QWORD
EXTRN	__imp__fgetpos:PROC
EXTRN	__imp___fseeki64:PROC
; Function compile flags: /Ogtp
;	COMDAT ?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@_JHH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Fileposition$ = 12					; size = 8
__Off$ = 12						; size = 8
__Way$ = 20						; size = 4
___formal$ = 24						; size = 4
?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@_JHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::seekoff, COMDAT
; _this$ = ecx
; Line 490
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
	mov	esi, ecx
; Line 495
	mov	ecx, DWORD PTR [esi+32]
	lea	eax, DWORD PTR [esi+72]
	push	edi
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN22@seekoff
	cmp	DWORD PTR __Way$[ebp], 1
	jne	SHORT $LN22@seekoff
	cmp	DWORD PTR [esi+68], 0
	jne	SHORT $LN22@seekoff
; Line 496
	mov	ebx, DWORD PTR __Off$[ebp]
	mov	edi, DWORD PTR __Off$[ebp+4]
	add	ebx, -1
	adc	edi, -1
	jmp	SHORT $LN5@seekoff
$LN22@seekoff:
	mov	edi, DWORD PTR __Off$[ebp+4]
	mov	ebx, DWORD PTR __Off$[ebp]
$LN5@seekoff:
; Line 501
	cmp	DWORD PTR [esi+84], 0
	je	$LN24@seekoff
	mov	ecx, esi
	call	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	test	al, al
	je	SHORT $LN24@seekoff
	mov	edx, ebx
	or	edx, edi
	jne	SHORT $LN23@seekoff
	cmp	DWORD PTR __Way$[ebp], 1
	je	SHORT $LN2@seekoff
$LN23@seekoff:
	mov	eax, DWORD PTR __Way$[ebp]
	mov	ecx, DWORD PTR [esi+84]
	push	eax
	push	edi
	push	ebx
	push	ecx
	call	DWORD PTR __imp___fseeki64
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN24@seekoff
$LN2@seekoff:
	mov	eax, DWORD PTR [esi+84]
	lea	edx, DWORD PTR __Fileposition$[ebp]
	push	edx
	push	eax
	call	DWORD PTR __imp__fgetpos
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN24@seekoff
; Line 504
	mov	ecx, DWORD PTR [esi+16]
	lea	eax, DWORD PTR [esi+72]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN17@seekoff
	mov	edx, DWORD PTR [esi+60]
	mov	eax, DWORD PTR [esi+64]
	mov	DWORD PTR [ecx], edx
	mov	ecx, DWORD PTR [esi+32]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR [esi+48]
	sub	eax, eax
	mov	DWORD PTR [edx], eax
$LN17@seekoff:
; Line 505
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Fileposition$[ebp]
	mov	edx, DWORD PTR __Fileposition$[ebp+4]
	pop	edi
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR [esi+76]
	pop	esi
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax+12], edx
	mov	DWORD PTR [eax+16], ecx
	pop	ebx
; Line 507
	pop	ebp
	ret	20					; 00000014H
$LN24@seekoff:
; Line 502
	mov	ecx, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	pop	edi
	mov	DWORD PTR [eax+4], ecx
	xor	ecx, ecx
	pop	esi
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], ecx
	pop	ebx
; Line 507
	pop	ebp
	ret	20					; 00000014H
?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@_JHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::seekoff
_TEXT	ENDS
EXTRN	__imp__fsetpos:PROC
; Function compile flags: /Ogtp
;	COMDAT ?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z
_TEXT	SEGMENT
__Fileposition$ = -8					; size = 8
___$ReturnUdt$ = 8					; size = 4
__Pos$ = 12						; size = 24
___formal$ = 36						; size = 4
?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::seekpos, COMDAT
; _this$ = ecx
; Line 512
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 513
	mov	eax, DWORD PTR __Pos$[ebp+8]
	push	ebx
; Line 514
	mov	ebx, DWORD PTR __Pos$[ebp+4]
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR __Pos$[ebp+12]
; Line 519
	xor	edx, edx
	push	edi
	mov	edi, DWORD PTR __Pos$[ebp]
	mov	DWORD PTR __Fileposition$[ebp], eax
	mov	DWORD PTR __Fileposition$[ebp+4], ecx
	cmp	DWORD PTR [esi+84], edx
	je	$LN2@seekpos
	mov	ecx, esi
	call	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	test	al, al
	je	SHORT $LN16@seekpos
	mov	eax, DWORD PTR [esi+84]
	lea	edx, DWORD PTR __Fileposition$[ebp]
	push	edx
	push	eax
	call	DWORD PTR __imp__fsetpos
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN16@seekpos
	mov	ecx, edi
	or	ecx, ebx
	je	SHORT $LN1@seekpos
	mov	edx, DWORD PTR [esi+84]
	push	1
	push	ebx
	push	edi
	push	edx
	call	DWORD PTR __imp___fseeki64
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN16@seekpos
$LN1@seekpos:
	mov	ecx, DWORD PTR [esi+84]
	lea	eax, DWORD PTR __Fileposition$[ebp]
	push	eax
	push	ecx
	call	DWORD PTR __imp__fgetpos
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN16@seekpos
; Line 522
	mov	edx, DWORD PTR __Pos$[ebp+16]
; Line 524
	mov	ecx, esi
	mov	DWORD PTR [esi+76], edx
	call	?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AAEXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
; Line 525
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Fileposition$[ebp]
	mov	edx, DWORD PTR __Fileposition$[ebp+4]
	pop	edi
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR [esi+76]
	pop	esi
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+12], edx
	pop	ebx
; Line 527
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
$LN16@seekpos:
; Line 525
	xor	edx, edx
$LN2@seekpos:
; Line 520
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	esi, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [ecx+4]
	pop	edi
	mov	DWORD PTR [eax], esi
	pop	esi
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], edx
	mov	DWORD PTR [eax+16], edx
	mov	DWORD PTR [eax+12], edx
	pop	ebx
; Line 527
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::seekpos
_TEXT	ENDS
PUBLIC	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
EXTRN	__imp__fclose:PROC
; Function compile flags: /Ogtp
;	COMDAT ?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ
_TEXT	SEGMENT
?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::close, COMDAT
; _this$ = ecx
; Line 292
	push	ebx
	push	esi
	mov	esi, ecx
; Line 294
	xor	ebx, ebx
	push	edi
	mov	edi, esi
	cmp	DWORD PTR [esi+84], ebx
; Line 296
	je	SHORT $LN18@close
; Line 298
	call	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	test	al, al
	jne	SHORT $LN2@close
; Line 299
	xor	edi, edi
$LN2@close:
; Line 300
	mov	eax, DWORD PTR [esi+84]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
	test	eax, eax
	je	SHORT $LN1@close
$LN18@close:
; Line 301
	xor	edi, edi
$LN1@close:
; Line 303
	mov	ecx, esi
	mov	BYTE PTR [esi+80], bl
	mov	BYTE PTR [esi+73], bl
	call	DWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ
	mov	DWORD PTR [esi+84], ebx
	mov	ecx, DWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA
; Line 304
	mov	eax, edi
	pop	edi
	mov	DWORD PTR [esi+68], ebx
	mov	DWORD PTR [esi+76], ecx
	pop	esi
	pop	ebx
; Line 305
	ret	0
?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::close
_TEXT	ENDS
PUBLIC	??$construct@AAUMapEntry@@@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@AAU2@@Z ; std::allocator<MapEntry>::construct<MapEntry &>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$construct@AAUMapEntry@@@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@AAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@AAUMapEntry@@@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@AAU2@@Z$0
__ehfuncinfo$??$construct@AAUMapEntry@@@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@AAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@AAUMapEntry@@@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@AAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$construct@AAUMapEntry@@@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@AAU2@@Z
_TEXT	SEGMENT
$T142962 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAUMapEntry@@@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@AAU2@@Z PROC ; std::allocator<MapEntry>::construct<MapEntry &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 206
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@AAUMapEntry@@@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@AAU2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 208
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR $T142962[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	test	ecx, ecx
	je	SHORT $LN3@construct@5
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??0MapEntry@@QAE@ABU0@@Z
$LN3@construct@5:
; Line 209
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@AAUMapEntry@@@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@AAU2@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T142962[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@AAUMapEntry@@@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@AAU2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@AAUMapEntry@@@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@AAU2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@AAUMapEntry@@@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@AAU2@@Z ENDP ; std::allocator<MapEntry>::construct<MapEntry &>
PUBLIC	??$construct@AAUBookmark@@@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@AAU2@@Z ; std::allocator<Bookmark>::construct<Bookmark &>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$construct@AAUBookmark@@@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@AAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@AAUBookmark@@@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@AAU2@@Z$0
__ehfuncinfo$??$construct@AAUBookmark@@@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@AAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@AAUBookmark@@@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@AAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$construct@AAUBookmark@@@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@AAU2@@Z
_TEXT	SEGMENT
$T142981 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAUBookmark@@@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@AAU2@@Z PROC ; std::allocator<Bookmark>::construct<Bookmark &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 206
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@AAUBookmark@@@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@AAU2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 208
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR $T142981[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	test	ecx, ecx
	je	SHORT $LN3@construct@6
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??0Bookmark@@QAE@ABU0@@Z
$LN3@construct@6:
; Line 209
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@AAUBookmark@@@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@AAU2@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T142981[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@AAUBookmark@@@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@AAU2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@AAUBookmark@@@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@AAU2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@AAUBookmark@@@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@AAU2@@Z ENDP ; std::allocator<Bookmark>::construct<Bookmark &>
PUBLIC	??$_Move@PAUBookmark@@PAU1@@std@@YAPAUBookmark@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<Bookmark *,Bookmark *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Move@PAUBookmark@@PAU1@@std@@YAPAUBookmark@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAUBookmark@@PAU1@@std@@YAPAUBookmark@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<Bookmark *,Bookmark *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 2524
	push	ebp
	mov	ebp, esp
; Line 2525
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	$LN26@Move
	push	ebx
	mov	ebx, DWORD PTR __Dest$[ebp]
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebx+108]
	lea	esi, DWORD PTR [eax+108]
	npad	5
$LL3@Move:
; Line 2526
	mov	eax, DWORD PTR [esi-108]
	mov	DWORD PTR [ebx], eax
	mov	ecx, DWORD PTR [esi-104]
	mov	DWORD PTR [ebx+4], ecx
	mov	edx, DWORD PTR [esi-100]
	push	-1
	mov	DWORD PTR [ebx+8], edx
	mov	eax, DWORD PTR [esi-96]
	push	0
	lea	ecx, DWORD PTR [esi-92]
	push	ecx
	lea	ecx, DWORD PTR [edi-92]
	mov	DWORD PTR [ebx+12], eax
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	push	-1
	push	0
	lea	edx, DWORD PTR [esi-64]
	push	edx
	lea	ecx, DWORD PTR [edi-64]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	push	-1
	push	0
	lea	eax, DWORD PTR [esi-36]
	push	eax
	lea	ecx, DWORD PTR [edi-36]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	ecx, DWORD PTR [esi-8]
	mov	DWORD PTR [edi-8], ecx
	mov	edx, DWORD PTR [esi-4]
	mov	DWORD PTR [edi-4], edx
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [edi], eax
	mov	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [edi+4], ecx
	mov	edx, DWORD PTR [esi+8]
	add	esi, 120				; 00000078H
	mov	DWORD PTR [edi+8], edx
	lea	eax, DWORD PTR [esi-108]
	add	ebx, 120				; 00000078H
	add	edi, 120				; 00000078H
	cmp	eax, DWORD PTR __Last$[ebp]
	jne	SHORT $LL3@Move
; Line 2527
	pop	edi
	pop	esi
	mov	eax, ebx
	pop	ebx
; Line 2528
	pop	ebp
	ret	0
$LN26@Move:
; Line 2527
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 2528
	pop	ebp
	ret	0
??$_Move@PAUBookmark@@PAU1@@std@@YAPAUBookmark@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<Bookmark *,Bookmark *>
_TEXT	ENDS
PUBLIC	??$_Construct@UMapEntry@@ABU1@@std@@YAXPAUMapEntry@@ABU1@@Z ; std::_Construct<MapEntry,MapEntry const &>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$_Construct@UMapEntry@@ABU1@@std@@YAXPAUMapEntry@@ABU1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@UMapEntry@@ABU1@@std@@YAXPAUMapEntry@@ABU1@@Z$0
__ehfuncinfo$??$_Construct@UMapEntry@@ABU1@@std@@YAXPAUMapEntry@@ABU1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@UMapEntry@@ABU1@@std@@YAXPAUMapEntry@@ABU1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$_Construct@UMapEntry@@ABU1@@std@@YAXPAUMapEntry@@ABU1@@Z
_TEXT	SEGMENT
$T143054 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Vptr$ = 8						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@UMapEntry@@ABU1@@std@@YAXPAUMapEntry@@ABU1@@Z PROC ; std::_Construct<MapEntry,MapEntry const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 46
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@UMapEntry@@ABU1@@std@@YAXPAUMapEntry@@ABU1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 47
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$[ebp], ecx
; Line 48
	mov	DWORD PTR $T143054[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	test	ecx, ecx
	je	SHORT $LN3@Construct@2
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??0MapEntry@@QAE@ABU0@@Z
$LN3@Construct@2:
; Line 49
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@UMapEntry@@ABU1@@std@@YAXPAUMapEntry@@ABU1@@Z$0:
	mov	eax, DWORD PTR __Vptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T143054[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Construct@UMapEntry@@ABU1@@std@@YAXPAUMapEntry@@ABU1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@UMapEntry@@ABU1@@std@@YAXPAUMapEntry@@ABU1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@UMapEntry@@ABU1@@std@@YAXPAUMapEntry@@ABU1@@Z ENDP ; std::_Construct<MapEntry,MapEntry const &>
PUBLIC	??$_Construct@UBookmark@@ABU1@@std@@YAXPAUBookmark@@ABU1@@Z ; std::_Construct<Bookmark,Bookmark const &>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$_Construct@UBookmark@@ABU1@@std@@YAXPAUBookmark@@ABU1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@UBookmark@@ABU1@@std@@YAXPAUBookmark@@ABU1@@Z$0
__ehfuncinfo$??$_Construct@UBookmark@@ABU1@@std@@YAXPAUBookmark@@ABU1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@UBookmark@@ABU1@@std@@YAXPAUBookmark@@ABU1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$_Construct@UBookmark@@ABU1@@std@@YAXPAUBookmark@@ABU1@@Z
_TEXT	SEGMENT
$T143073 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Vptr$ = 8						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@UBookmark@@ABU1@@std@@YAXPAUBookmark@@ABU1@@Z PROC ; std::_Construct<Bookmark,Bookmark const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 46
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@UBookmark@@ABU1@@std@@YAXPAUBookmark@@ABU1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 47
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$[ebp], ecx
; Line 48
	mov	DWORD PTR $T143073[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	test	ecx, ecx
	je	SHORT $LN3@Construct@3
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??0Bookmark@@QAE@ABU0@@Z
$LN3@Construct@3:
; Line 49
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@UBookmark@@ABU1@@std@@YAXPAUBookmark@@ABU1@@Z$0:
	mov	eax, DWORD PTR __Vptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T143073[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Construct@UBookmark@@ABU1@@std@@YAXPAUBookmark@@ABU1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@UBookmark@@ABU1@@std@@YAXPAUBookmark@@ABU1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@UBookmark@@ABU1@@std@@YAXPAUBookmark@@ABU1@@Z ENDP ; std::_Construct<Bookmark,Bookmark const &>
PUBLIC	?destroy@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@@Z ; std::allocator<MapEntry>::destroy
; Function compile flags: /Ogtp
;	COMDAT ?destroy@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@@Z PROC ; std::allocator<MapEntry>::destroy, COMDAT
; _this$ = ecx
; Line 212
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
; Line 213
	mov	esi, DWORD PTR __Ptr$[ebp]
	cmp	DWORD PTR [esi+64], 16			; 00000010H
	jb	SHORT $LN20@destroy
	mov	eax, DWORD PTR [esi+44]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN20@destroy:
	xor	ebx, ebx
	mov	DWORD PTR [esi+64], 15			; 0000000fH
	mov	DWORD PTR [esi+60], ebx
	mov	BYTE PTR [esi+44], bl
	cmp	DWORD PTR [esi+36], 16			; 00000010H
	jb	SHORT $LN42@destroy
	mov	ecx, DWORD PTR [esi+16]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN42@destroy:
	mov	DWORD PTR [esi+32], ebx
	mov	DWORD PTR [esi+36], 15			; 0000000fH
	mov	BYTE PTR [esi+16], bl
	pop	esi
	pop	ebx
; Line 214
	pop	ebp
	ret	4
?destroy@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@@Z ENDP ; std::allocator<MapEntry>::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@@Z ; std::allocator<Bookmark>::destroy
; Function compile flags: /Ogtp
;	COMDAT ?destroy@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@@Z PROC ; std::allocator<Bookmark>::destroy, COMDAT
; _this$ = ecx
; Line 212
	push	ebp
	mov	ebp, esp
; Line 213
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??1Bookmark@@QAE@XZ
; Line 214
	pop	ebp
	ret	4
?destroy@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@@Z ENDP ; std::allocator<Bookmark>::destroy
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@U3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@$$QAU2@@Z ; std::_Cons_val<std::allocator<MapEntry>,MapEntry,MapEntry>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@U3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@$$QAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@U3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@$$QAU2@@Z$0
__ehfuncinfo$??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@U3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@$$QAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@U3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@$$QAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@U3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@$$QAU2@@Z
_TEXT	SEGMENT
$T143439 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@U3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@$$QAU2@@Z PROC ; std::_Cons_val<std::allocator<MapEntry>,MapEntry,MapEntry>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 279
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@U3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@$$QAU2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 280
	mov	ecx, DWORD PTR __Pdest$[ebp]
	mov	DWORD PTR $T143439[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	test	ecx, ecx
	je	SHORT $LN7@Cons_val@3
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??0MapEntry@@QAE@ABU0@@Z
$LN7@Cons_val@3:
; Line 281
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@U3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@$$QAU2@@Z$0:
	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T143439[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@U3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@$$QAU2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@U3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@$$QAU2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@U3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@$$QAU2@@Z ENDP ; std::_Cons_val<std::allocator<MapEntry>,MapEntry,MapEntry>
PUBLIC	??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@U3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@$$QAU2@@Z ; std::_Cons_val<std::allocator<Bookmark>,Bookmark,Bookmark>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@U3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@$$QAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@U3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@$$QAU2@@Z$0
__ehfuncinfo$??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@U3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@$$QAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@U3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@$$QAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@U3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@$$QAU2@@Z
_TEXT	SEGMENT
$T143472 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@U3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@$$QAU2@@Z PROC ; std::_Cons_val<std::allocator<Bookmark>,Bookmark,Bookmark>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 279
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@U3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@$$QAU2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 280
	mov	ecx, DWORD PTR __Pdest$[ebp]
	mov	DWORD PTR $T143472[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	test	ecx, ecx
	je	SHORT $LN7@Cons_val@4
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??0Bookmark@@QAE@ABU0@@Z
$LN7@Cons_val@4:
; Line 281
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@U3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@$$QAU2@@Z$0:
	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T143472[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@U3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@$$QAU2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@U3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@$$QAU2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@U3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@$$QAU2@@Z ENDP ; std::_Cons_val<std::allocator<Bookmark>,Bookmark,Bookmark>
PUBLIC	__$ArrayPad$
PUBLIC	?randBackground@Menu@@QAEXXZ			; Menu::randBackground
EXTRN	??0Model@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z:PROC ; Model::Model
EXTRN	?gLog@@YAXPADZZ:PROC				; gLog
EXTRN	?randint@@YAHHH@Z:PROC				; randint
EXTRN	?glBindBufferARB@@3P6GXII@ZA:DWORD		; glBindBufferARB
xdata$x	SEGMENT
__unwindtable$?randBackground@Menu@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?randBackground@Menu@@QAEXXZ$0
__ehfuncinfo$?randBackground@Menu@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?randBackground@Menu@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
_TEXT	SEGMENT
$T143494 = -308						; size = 4
tv390 = -304						; size = 4
$T143495 = -304						; size = 4
_ui$ = -304						; size = 4
_dark$ = -300						; size = 28
_path$ = -272						; size = 256
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?randBackground@Menu@@QAEXXZ PROC			; Menu::randBackground
; _this$ = ecx
; File c:\programovani\wow editor\test\src\editor\menu.cpp
; Line 65
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?randBackground@Menu@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 296				; 00000128H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
; Line 66
	mov	ecx, DWORD PTR [esi+76]
	xor	ebx, ebx
	cmp	ecx, ebx
	je	SHORT $LN7@randBackgr
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
$LN7@randBackgr:
; Line 67
	push	ebx
	push	34962					; 00008892H
	call	DWORD PTR ?glBindBufferARB@@3P6GXII@ZA	; glBindBufferARB
; Line 70
	mov	eax, 1
	mov	DWORD PTR _ui$[ebp], OFFSET $SG119265
	mov	DWORD PTR _dark$[ebp], ebx
	mov	DWORD PTR _dark$[ebp+4], ebx
	mov	DWORD PTR _dark$[ebp+8], eax
	mov	DWORD PTR _dark$[ebp+12], eax
	mov	DWORD PTR _dark$[ebp+16], ebx
	mov	DWORD PTR _dark$[ebp+20], ebx
	mov	DWORD PTR _dark$[ebp+24], ebx
$LL3@randBackgr:
; Line 73
	push	6
	push	ebx
	call	?randint@@YAHHH@Z			; randint
	mov	edi, eax
	add	esp, 8
; Line 74
	cmp	edi, DWORD PTR [esi+84]
	je	SHORT $LL3@randBackgr
; Line 76
	mov	eax, DWORD PTR _ui$[ebp+edi*4]
; Line 77
	cmp	DWORD PTR _dark$[ebp+edi*4], ebx
; Line 79
	push	eax
	push	eax
	lea	edx, DWORD PTR _path$[ebp]
	setne	cl
	push	OFFSET $SG119278
	push	edx
	mov	BYTE PTR [esi+88], cl
	call	??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ	; sprintf_s<256>
; Line 81
	push	OFFSET $SG119279
	call	?gLog@@YAXPADZZ				; gLog
; Line 82
	push	840					; 00000348H
	call	??2@YAPAXI@Z				; operator new
	mov	ebx, eax
	add	esp, 24					; 00000018H
	mov	DWORD PTR $T143494[ebp], ebx
	xor	eax, eax
	mov	DWORD PTR __$EHRec$[ebp+8], eax
	cmp	ebx, eax
	je	SHORT $LN9@randBackgr
	push	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR [ecx+16], eax
	mov	DWORD PTR [ecx+20], 15			; 0000000fH
	mov	BYTE PTR [ecx], al
	lea	eax, DWORD PTR _path$[ebp]
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR $T143495[ebp], esp
	mov	DWORD PTR tv390[ebp], edx
	npad	2
$LL44@randBackgr:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL44@randBackgr
	sub	eax, DWORD PTR tv390[ebp]
	push	eax
	lea	eax, DWORD PTR _path$[ebp]
	push	eax
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	ecx, ebx
	call	??0Model@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z ; Model::Model
$LN9@randBackgr:
; Line 83
	push	OFFSET $SG119285
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	DWORD PTR [esi+76], eax
	call	?gLog@@YAXPADZZ				; gLog
; Line 84
	push	OFFSET $SG119286
	call	?gLog@@YAXPADZZ				; gLog
; Line 85
	mov	eax, DWORD PTR [esi+76]
; Line 86
	push	OFFSET $SG119287
	mov	BYTE PTR [eax+817], 1
	call	?gLog@@YAXPADZZ				; gLog
; Line 87
	push	OFFSET $SG119288
	call	?gLog@@YAXPADZZ				; gLog
; Line 89
	push	OFFSET $SG119289
	mov	DWORD PTR [esi+84], edi
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 20					; 00000014H
; Line 90
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?randBackground@Menu@@QAEXXZ$0:
	mov	eax, DWORD PTR $T143494[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?randBackground@Menu@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-312]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?randBackground@Menu@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?randBackground@Menu@@QAEXXZ ENDP			; Menu::randBackground
PUBLIC	?close@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ifstream<char,std::char_traits<char> >::close
; Function compile flags: /Ogtp
;	COMDAT ?close@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?close@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ PROC ; std::basic_ifstream<char,std::char_traits<char> >::close, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\fstream
; Line 883
	push	ebx
	mov	ebx, ecx
; Line 884
	cmp	DWORD PTR [ebx+100], 0
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebx+16]
	je	SHORT $LN21@close@2
	lea	ecx, DWORD PTR [ebx+16]
	call	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	test	al, al
	jne	SHORT $LN5@close@2
	xor	edi, edi
$LN5@close@2:
	mov	eax, DWORD PTR [ebx+100]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
	test	eax, eax
	je	SHORT $LN4@close@2
$LN21@close@2:
	xor	edi, edi
$LN4@close@2:
	lea	ecx, DWORD PTR [ebx+16]
	mov	BYTE PTR [ebx+96], 0
	mov	BYTE PTR [ebx+89], 0
	call	DWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ
	xor	eax, eax
	mov	DWORD PTR [ebx+100], eax
	mov	ecx, DWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA
	mov	DWORD PTR [ebx+92], ecx
	mov	DWORD PTR [ebx+84], eax
	cmp	edi, eax
	jne	SHORT $LN1@close@2
; Line 885
	mov	edx, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [edx+4]
	push	eax
	push	2
	add	ecx, ebx
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
$LN1@close@2:
; Line 886
	pop	edi
	pop	esi
	pop	ebx
	ret	0
?close@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ ENDP ; std::basic_ifstream<char,std::char_traits<char> >::close
_TEXT	ENDS
PUBLIC	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\streambuf
xdata$x	SEGMENT
__unwindtable$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ$0
__ehfuncinfo$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\fstream
; Line 143
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
; Line 144
	cmp	DWORD PTR [esi+84], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	je	SHORT $LN11@basic_file@2
; Line 145
	mov	ecx, DWORD PTR [esi+16]
	lea	edx, DWORD PTR [esi+72]
	cmp	DWORD PTR [ecx], edx
	jne	SHORT $LN11@basic_file@2
	mov	edx, DWORD PTR [esi+60]
	mov	eax, DWORD PTR [esi+64]
	mov	DWORD PTR [ecx], edx
	mov	ecx, DWORD PTR [esi+32]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR [esi+48]
	sub	eax, eax
	mov	DWORD PTR [edx], eax
$LN11@basic_file@2:
; Line 146
	cmp	BYTE PTR [esi+80], 0
	je	SHORT $LN1@basic_file@2
; Line 147
	mov	ecx, esi
	call	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
$LN1@basic_file@2:
; Line 148
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
__ehhandler$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z$0
__ehfuncinfo$??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
	cmp	DWORD PTR [esi+84], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	je	SHORT $LN14@scalar@6
	mov	ecx, DWORD PTR [esi+16]
	lea	edx, DWORD PTR [esi+72]
	cmp	DWORD PTR [ecx], edx
	jne	SHORT $LN14@scalar@6
	mov	edx, DWORD PTR [esi+60]
	mov	eax, DWORD PTR [esi+64]
	mov	DWORD PTR [ecx], edx
	mov	ecx, DWORD PTR [esi+32]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR [esi+48]
	sub	eax, eax
	mov	DWORD PTR [edx], eax
$LN14@scalar@6:
	cmp	BYTE PTR [esi+80], 0
	je	SHORT $LN4@scalar@6
	mov	ecx, esi
	call	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
$LN4@scalar@6:
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN16@scalar@6
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN16@scalar@6:
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
__ehhandler$??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@AAU3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@AAU2@@Z ; std::_Cons_val<std::allocator<MapEntry>,MapEntry,MapEntry &>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@AAU3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@AAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@AAU3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@AAU2@@Z$0
__ehfuncinfo$??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@AAU3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@AAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@AAU3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@AAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@AAU3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@AAU2@@Z
_TEXT	SEGMENT
$T143743 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@AAU3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@AAU2@@Z PROC ; std::_Cons_val<std::allocator<MapEntry>,MapEntry,MapEntry &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 279
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@AAU3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@AAU2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 280
	mov	ecx, DWORD PTR __Pdest$[ebp]
	mov	DWORD PTR $T143743[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	test	ecx, ecx
	je	SHORT $LN7@Cons_val@5
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??0MapEntry@@QAE@ABU0@@Z
$LN7@Cons_val@5:
; Line 281
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@AAU3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@AAU2@@Z$0:
	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T143743[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@AAU3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@AAU2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@AAU3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@AAU2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@AAU3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@AAU2@@Z ENDP ; std::_Cons_val<std::allocator<MapEntry>,MapEntry,MapEntry &>
PUBLIC	??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@AAU3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@AAU2@@Z ; std::_Cons_val<std::allocator<Bookmark>,Bookmark,Bookmark &>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@AAU3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@AAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@AAU3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@AAU2@@Z$0
__ehfuncinfo$??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@AAU3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@AAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@AAU3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@AAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@AAU3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@AAU2@@Z
_TEXT	SEGMENT
$T143776 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@AAU3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@AAU2@@Z PROC ; std::_Cons_val<std::allocator<Bookmark>,Bookmark,Bookmark &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 279
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@AAU3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@AAU2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 280
	mov	ecx, DWORD PTR __Pdest$[ebp]
	mov	DWORD PTR $T143776[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	test	ecx, ecx
	je	SHORT $LN7@Cons_val@6
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??0Bookmark@@QAE@ABU0@@Z
$LN7@Cons_val@6:
; Line 281
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@AAU3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@AAU2@@Z$0:
	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T143776[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@AAU3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@AAU2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@AAU3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@AAU2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@AAU3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@AAU2@@Z ENDP ; std::_Cons_val<std::allocator<Bookmark>,Bookmark,Bookmark &>
PUBLIC	??$_Move@PAUBookmark@@PAU1@@std@@YAPAUBookmark@@PAU1@00@Z ; std::_Move<Bookmark *,Bookmark *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Move@PAUBookmark@@PAU1@@std@@YAPAUBookmark@@PAU1@00@Z
_TEXT	SEGMENT
__Cat$143795 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAUBookmark@@PAU1@@std@@YAPAUBookmark@@PAU1@00@Z PROC ; std::_Move<Bookmark *,Bookmark *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 2545
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 2547
	mov	eax, DWORD PTR __Cat$143795[ebp]
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	edx, DWORD PTR __Last$[ebp]
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	ecx
	push	edx
	push	eax
	call	??$_Move@PAUBookmark@@PAU1@@std@@YAPAUBookmark@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<Bookmark *,Bookmark *>
	add	esp, 16					; 00000010H
; Line 2548
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move@PAUBookmark@@PAU1@@std@@YAPAUBookmark@@PAU1@00@Z ENDP ; std::_Move<Bookmark *,Bookmark *>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@ABU3@@Z ; std::allocator<MapEntry>::construct
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@ABU3@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@ABU3@@Z$0
__ehfuncinfo$?construct@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@ABU3@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@ABU3@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@ABU3@@Z
_TEXT	SEGMENT
$T143815 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Vptr$143812 = 8					; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@ABU3@@Z PROC ; std::allocator<MapEntry>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 196
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@ABU3@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 197
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$143812[ebp], ecx
	mov	DWORD PTR $T143815[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	test	ecx, ecx
	je	SHORT $LN5@construct@7
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??0MapEntry@@QAE@ABU0@@Z
$LN5@construct@7:
; Line 198
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@ABU3@@Z$0:
	mov	eax, DWORD PTR __Vptr$143812[ebp]
	push	eax
	mov	ecx, DWORD PTR $T143815[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@ABU3@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@ABU3@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@UMapEntry@@@std@@QAEXPAUMapEntry@@ABU3@@Z ENDP ; std::allocator<MapEntry>::construct
PUBLIC	?construct@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@ABU3@@Z ; std::allocator<Bookmark>::construct
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@ABU3@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@ABU3@@Z$0
__ehfuncinfo$?construct@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@ABU3@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@ABU3@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@ABU3@@Z
_TEXT	SEGMENT
$T143846 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Vptr$143843 = 8					; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@ABU3@@Z PROC ; std::allocator<Bookmark>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 196
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@ABU3@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 197
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$143843[ebp], ecx
	mov	DWORD PTR $T143846[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	test	ecx, ecx
	je	SHORT $LN5@construct@8
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??0Bookmark@@QAE@ABU0@@Z
$LN5@construct@8:
; Line 198
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@ABU3@@Z$0:
	mov	eax, DWORD PTR __Vptr$143843[ebp]
	push	eax
	mov	ecx, DWORD PTR $T143846[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@ABU3@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@ABU3@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@UBookmark@@@std@@QAEXPAUBookmark@@ABU3@@Z ENDP ; std::allocator<Bookmark>::construct
PUBLIC	??$_Dest_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@@Z ; std::_Dest_val<std::allocator<MapEntry>,MapEntry>
; Function compile flags: /Ogtp
;	COMDAT ??$_Dest_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@@Z PROC ; std::_Dest_val<std::allocator<MapEntry>,MapEntry>, COMDAT
; Line 286
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
; Line 287
	mov	esi, DWORD PTR __Pdest$[ebp]
	cmp	DWORD PTR [esi+64], 16			; 00000010H
	jb	SHORT $LN22@Dest_val
	mov	eax, DWORD PTR [esi+44]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN22@Dest_val:
	xor	ebx, ebx
	mov	DWORD PTR [esi+64], 15			; 0000000fH
	mov	DWORD PTR [esi+60], ebx
	mov	BYTE PTR [esi+44], bl
	cmp	DWORD PTR [esi+36], 16			; 00000010H
	jb	SHORT $LN44@Dest_val
	mov	ecx, DWORD PTR [esi+16]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN44@Dest_val:
	mov	DWORD PTR [esi+32], ebx
	mov	DWORD PTR [esi+36], 15			; 0000000fH
	mov	BYTE PTR [esi+16], bl
	pop	esi
	pop	ebx
; Line 288
	pop	ebp
	ret	0
??$_Dest_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@@Z ENDP ; std::_Dest_val<std::allocator<MapEntry>,MapEntry>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@UBookmark@@@std@@UBookmark@@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@@Z ; std::_Dest_val<std::allocator<Bookmark>,Bookmark>
; Function compile flags: /Ogtp
;	COMDAT ??$_Dest_val@V?$allocator@UBookmark@@@std@@UBookmark@@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@UBookmark@@@std@@UBookmark@@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@@Z PROC ; std::_Dest_val<std::allocator<Bookmark>,Bookmark>, COMDAT
; Line 286
	push	ebp
	mov	ebp, esp
; Line 287
	mov	ecx, DWORD PTR __Pdest$[ebp]
; Line 288
	pop	ebp
; Line 287
	jmp	??1Bookmark@@QAE@XZ
??$_Dest_val@V?$allocator@UBookmark@@@std@@UBookmark@@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@@Z ENDP ; std::_Dest_val<std::allocator<Bookmark>,Bookmark>
_TEXT	ENDS
PUBLIC	??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ifstream<char,std::char_traits<char> >::`vftable'
PUBLIC	??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@ ; std::basic_ifstream<char,std::char_traits<char> >::`vbtable'
PUBLIC	??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >
PUBLIC	??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ifstream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
PUBLIC	??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVios_base@std@@@8			; std::ios_base `RTTI Type Descriptor'
PUBLIC	??_R3ios_base@std@@8				; std::ios_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ios_base@std@@8				; std::ios_base::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AV?$_Iosb@H@std@@@8			; std::_Iosb<int> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@A@3EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
PUBLIC	??_R17A@3EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
EXTRN	__imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z:PROC
EXTRN	__imp_??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@:QWORD
EXTRN	__imp_??_7ios_base@std@@6B@:QWORD
EXTRN	??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z:PROC ; std::basic_ifstream<char,std::char_traits<char> >::`vector deleting destructor'
;	COMDAT ??_R17A@3EA@?$_Iosb@H@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\streambuf
rdata$r	SEGMENT
??_R17A@3EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
	DD	00H
	DD	08H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@A@3EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@A@3EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
	DD	01H
	DD	00H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R2?$_Iosb@H@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Iosb@H@std@@8 ; std::_Iosb<int>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R3?$_Iosb@H@std@@8 DD 00H				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Iosb@H@std@@@8
_DATA	SEGMENT
??_R0?AV?$_Iosb@H@std@@@8 DD FLAT:??_7type_info@@6B@	; std::_Iosb<int> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Iosb@H@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2ios_base@std@@8
rdata$r	SEGMENT
??_R2ios_base@std@@8 DD FLAT:??_R1A@?0A@EA@ios_base@std@@8 ; std::ios_base::`RTTI Base Class Array'
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ios_base@std@@8
rdata$r	SEGMENT
??_R3ios_base@std@@8 DD 00H				; std::ios_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVios_base@std@@@8
_DATA	SEGMENT
??_R0?AVios_base@std@@@8 DD FLAT:??_7type_info@@6B@	; std::ios_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVios_base@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ios_base@std@@8
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD 00H	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ios@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
	DD	02H
	DD	00H
	DD	00H
	DD	04H
	DD	050H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_istream@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ifstream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ DD 00H ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	068H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8
	DD	FLAT:??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ DD FLAT:??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ifstream<char,std::char_traits<char> >::`vftable'
	DD	FLAT:??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@
CONST	SEGMENT
??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@ DD 00H ; std::basic_ifstream<char,std::char_traits<char> >::`vbtable'
	DD	068H
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$4
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$2
__ehfuncinfo$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T144260 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Filename$ = 8						; size = 4
__Mode$ = 12						; size = 4
__Prot$ = 16						; size = 4
$T144307 = 20						; size = 4
_$initVBases$ = 20					; size = 4
??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z PROC ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\fstream
; Line 714
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	edi, ecx
	mov	DWORD PTR _this$[ebp], edi
	xor	eax, eax
	mov	DWORD PTR $T144260[ebp], eax
	cmp	DWORD PTR _$initVBases$[ebp], eax
	je	SHORT $LN2@basic_ifst
	mov	DWORD PTR [edi], OFFSET ??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@
	mov	ecx, DWORD PTR __imp_??_7ios_base@std@@6B@
	mov	DWORD PTR [edi+104], ecx
	mov	edx, DWORD PTR __imp_??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@
	mov	DWORD PTR [edi+104], edx
	mov	DWORD PTR __$EHRec$[ebp+8], eax
	mov	DWORD PTR $T144260[ebp], 1
$LN2@basic_ifst:
	push	eax
	push	eax
	lea	esi, DWORD PTR [edi+16]
	push	esi
	mov	ecx, edi
	call	DWORD PTR __imp_??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edi+ecx], OFFSET ??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR $T144307[ebp], esi
	call	DWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
	xor	al, al
	mov	ecx, esi
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
	mov	BYTE PTR [esi+80], al
	mov	BYTE PTR [esi+73], al
	call	DWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ
	mov	DWORD PTR [esi+84], 0
	mov	edx, DWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA
	mov	DWORD PTR [esi+76], edx
	mov	DWORD PTR [esi+68], 0
; Line 715
	mov	eax, DWORD PTR __Prot$[ebp]
	mov	ecx, DWORD PTR __Mode$[ebp]
	mov	edx, DWORD PTR __Filename$[ebp]
	push	eax
	or	ecx, 1
	push	ecx
	push	edx
	mov	ecx, esi
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	call	?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@PBDHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::open
	test	eax, eax
	jne	SHORT $LN26@basic_ifst
; Line 716
	push	eax
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [eax+4]
	push	2
	add	ecx, edi
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
$LN26@basic_ifst:
; Line 717
	mov	eax, edi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$0:
	mov	eax, DWORD PTR $T144260[ebp]
	and	eax, 1
	je	$LN6@basic_ifst
	and	DWORD PTR $T144260[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	jmp	DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
$LN6@basic_ifst:
	ret	0
__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	DWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ
__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$4:
	mov	ecx, DWORD PTR $T144307[ebp]
	jmp	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
__unwindfunclet$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
__ehhandler$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z ENDP ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >
PUBLIC	??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >
EXTRN	__imp_??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@:QWORD
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\istream
xdata$x	SEGMENT
__unwindtable$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ$2
__ehfuncinfo$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ
_TEXT	SEGMENT
$T144350 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ PROC ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\fstream
; Line 845
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR [ecx-104]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+ecx-104], OFFSET ??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
; Line 846
	lea	esi, DWORD PTR [ecx-88]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR $T144350[ebp], esi
	mov	DWORD PTR [esi], OFFSET ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
	cmp	DWORD PTR [esi+84], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	je	SHORT $LN15@basic_ifst@2
	mov	ecx, DWORD PTR [esi+16]
	lea	edx, DWORD PTR [esi+72]
	cmp	DWORD PTR [ecx], edx
	jne	SHORT $LN15@basic_ifst@2
	mov	edx, DWORD PTR [esi+60]
	mov	eax, DWORD PTR [esi+64]
	mov	DWORD PTR [ecx], edx
	mov	ecx, DWORD PTR [esi+32]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR [esi+48]
	sub	eax, eax
	mov	DWORD PTR [edx], eax
$LN15@basic_ifst@2:
	cmp	BYTE PTR [esi+80], 0
	je	SHORT $LN5@basic_ifst@2
	mov	ecx, esi
	call	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QAEPAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
$LN5@basic_ifst@2:
	mov	ecx, esi
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	call	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	mov	eax, DWORD PTR [esi-16]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __imp_??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@
	mov	DWORD PTR [ecx+esi-16], edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 88					; 00000058H
	jmp	DWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ
__unwindfunclet$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ$2:
	mov	ecx, DWORD PTR $T144350[ebp]
	jmp	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
__ehhandler$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ ENDP ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >
PUBLIC	??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@ABU3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@ABU2@@Z ; std::_Cons_val<std::allocator<MapEntry>,MapEntry,MapEntry const &>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@ABU3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@ABU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@ABU3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@ABU2@@Z$0
__ehfuncinfo$??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@ABU3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@ABU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@ABU3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@ABU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@ABU3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@ABU2@@Z
_TEXT	SEGMENT
$T144402 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Alval$ = 8						; size = 4
__Vptr$144399 = 12					; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@ABU3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@ABU2@@Z PROC ; std::_Cons_val<std::allocator<MapEntry>,MapEntry,MapEntry const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 279
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@ABU3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@ABU2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 280
	mov	ecx, DWORD PTR __Pdest$[ebp]
	mov	DWORD PTR __Vptr$144399[ebp], ecx
	mov	DWORD PTR $T144402[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	test	ecx, ecx
	je	SHORT $LN9@Cons_val@7
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??0MapEntry@@QAE@ABU0@@Z
$LN9@Cons_val@7:
; Line 281
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@ABU3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@ABU2@@Z$0:
	mov	eax, DWORD PTR __Vptr$144399[ebp]
	push	eax
	mov	ecx, DWORD PTR $T144402[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@ABU3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@ABU2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@ABU3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@ABU2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Cons_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@ABU3@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@ABU2@@Z ENDP ; std::_Cons_val<std::allocator<MapEntry>,MapEntry,MapEntry const &>
PUBLIC	??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@ABU3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@ABU2@@Z ; std::_Cons_val<std::allocator<Bookmark>,Bookmark,Bookmark const &>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@ABU3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@ABU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@ABU3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@ABU2@@Z$0
__ehfuncinfo$??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@ABU3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@ABU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@ABU3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@ABU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@ABU3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@ABU2@@Z
_TEXT	SEGMENT
$T144441 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Alval$ = 8						; size = 4
__Vptr$144449 = 12					; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@ABU3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@ABU2@@Z PROC ; std::_Cons_val<std::allocator<Bookmark>,Bookmark,Bookmark const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 279
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@ABU3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@ABU2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 280
	mov	ecx, DWORD PTR __Pdest$[ebp]
	mov	DWORD PTR __Vptr$144449[ebp], ecx
	mov	DWORD PTR $T144441[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	test	ecx, ecx
	je	SHORT $LN9@Cons_val@8
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??0Bookmark@@QAE@ABU0@@Z
$LN9@Cons_val@8:
; Line 281
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@ABU3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@ABU2@@Z$0:
	mov	eax, DWORD PTR __Vptr$144449[ebp]
	push	eax
	mov	ecx, DWORD PTR $T144441[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@ABU3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@ABU2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@ABU3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@ABU2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Cons_val@V?$allocator@UBookmark@@@std@@UBookmark@@ABU3@@std@@YAXAAV?$allocator@UBookmark@@@0@PAUBookmark@@ABU2@@Z ENDP ; std::_Cons_val<std::allocator<Bookmark>,Bookmark,Bookmark const &>
PUBLIC	??$_Destroy_range@V?$allocator@UMapEntry@@@std@@@std@@YAXPAUMapEntry@@0AAV?$allocator@UMapEntry@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<MapEntry> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy_range@V?$allocator@UMapEntry@@@std@@@std@@YAXPAUMapEntry@@0AAV?$allocator@UMapEntry@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@UMapEntry@@@std@@@std@@YAXPAUMapEntry@@0AAV?$allocator@UMapEntry@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<MapEntry> >, COMDAT
; Line 95
	push	ebp
	mov	ebp, esp
; Line 96
	mov	eax, DWORD PTR __First$[ebp]
	push	edi
	mov	edi, DWORD PTR __Last$[ebp]
	cmp	eax, edi
	je	SHORT $LN1@Destroy_ra
	push	ebx
	push	esi
	lea	esi, DWORD PTR [eax+64]
	xor	ebx, ebx
$LL3@Destroy_ra:
; Line 97
	cmp	DWORD PTR [esi], 16			; 00000010H
	jb	SHORT $LN27@Destroy_ra
	mov	eax, DWORD PTR [esi-20]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN27@Destroy_ra:
	mov	DWORD PTR [esi], 15			; 0000000fH
	mov	DWORD PTR [esi-4], ebx
	mov	BYTE PTR [esi-20], bl
	cmp	DWORD PTR [esi-28], 16			; 00000010H
	jb	SHORT $LN49@Destroy_ra
	mov	ecx, DWORD PTR [esi-48]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN49@Destroy_ra:
	mov	DWORD PTR [esi-28], 15			; 0000000fH
	mov	DWORD PTR [esi-32], ebx
	mov	BYTE PTR [esi-48], bl
	add	esi, 76					; 0000004cH
	lea	edx, DWORD PTR [esi-64]
	cmp	edx, edi
	jne	SHORT $LL3@Destroy_ra
	pop	esi
	pop	ebx
$LN1@Destroy_ra:
	pop	edi
; Line 98
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@UMapEntry@@@std@@@std@@YAXPAUMapEntry@@0AAV?$allocator@UMapEntry@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<MapEntry> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UBookmark@@@std@@@std@@YAXPAUBookmark@@0AAV?$allocator@UBookmark@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<Bookmark> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy_range@V?$allocator@UBookmark@@@std@@@std@@YAXPAUBookmark@@0AAV?$allocator@UBookmark@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@UBookmark@@@std@@@std@@YAXPAUBookmark@@0AAV?$allocator@UBookmark@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<Bookmark> >, COMDAT
; Line 95
	push	ebp
	mov	ebp, esp
; Line 96
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN1@Destroy_ra@2
	push	ebx
	push	esi
	push	edi
	lea	esi, DWORD PTR [eax+92]
	mov	edi, 15					; 0000000fH
	xor	ebx, ebx
$LL3@Destroy_ra@2:
; Line 97
	cmp	DWORD PTR [esi], 16			; 00000010H
	jb	SHORT $LN27@Destroy_ra@2
	mov	eax, DWORD PTR [esi-20]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN27@Destroy_ra@2:
	mov	DWORD PTR [esi], edi
	mov	DWORD PTR [esi-4], ebx
	mov	BYTE PTR [esi-20], bl
	cmp	DWORD PTR [esi-28], 16			; 00000010H
	jb	SHORT $LN49@Destroy_ra@2
	mov	ecx, DWORD PTR [esi-48]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN49@Destroy_ra@2:
	mov	DWORD PTR [esi-28], edi
	mov	DWORD PTR [esi-32], ebx
	mov	BYTE PTR [esi-48], bl
	cmp	DWORD PTR [esi-56], 16			; 00000010H
	jb	SHORT $LN71@Destroy_ra@2
	mov	edx, DWORD PTR [esi-76]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN71@Destroy_ra@2:
	mov	DWORD PTR [esi-56], edi
	mov	DWORD PTR [esi-60], ebx
	mov	BYTE PTR [esi-76], bl
	add	esi, 120				; 00000078H
	lea	eax, DWORD PTR [esi-92]
	cmp	eax, DWORD PTR __Last$[ebp]
	jne	SHORT $LL3@Destroy_ra@2
	pop	edi
	pop	esi
	pop	ebx
$LN1@Destroy_ra@2:
; Line 98
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@UBookmark@@@std@@@std@@YAXPAUBookmark@@0AAV?$allocator@UBookmark@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<Bookmark> >
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAUMapEntry@@PAU1@V?$allocator@UMapEntry@@@std@@U1@@std@@YAPAUMapEntry@@PAU1@00AAV?$allocator@UMapEntry@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<MapEntry *,MapEntry *,std::allocator<MapEntry>,MapEntry>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAUMapEntry@@PAU1@V?$allocator@UMapEntry@@@std@@U1@@std@@YAPAUMapEntry@@PAU1@00AAV?$allocator@UMapEntry@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAUMapEntry@@PAU1@V?$allocator@UMapEntry@@@std@@U1@@std@@YAPAUMapEntry@@PAU1@00AAV?$allocator@UMapEntry@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_move@PAUMapEntry@@PAU1@V?$allocator@UMapEntry@@@std@@U1@@std@@YAPAUMapEntry@@PAU1@00AAV?$allocator@UMapEntry@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAUMapEntry@@PAU1@V?$allocator@UMapEntry@@@std@@U1@@std@@YAPAUMapEntry@@PAU1@00AAV?$allocator@UMapEntry@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$3
__unwindtable$??$_Uninit_move@PAUMapEntry@@PAU1@V?$allocator@UMapEntry@@@std@@U1@@std@@YAPAUMapEntry@@PAU1@00AAV?$allocator@UMapEntry@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninit_move@PAUMapEntry@@PAU1@V?$allocator@UMapEntry@@@std@@U1@@std@@YAPAUMapEntry@@PAU1@00AAV?$allocator@UMapEntry@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$_Uninit_move@PAUMapEntry@@PAU1@V?$allocator@UMapEntry@@@std@@U1@@std@@YAPAUMapEntry@@PAU1@00AAV?$allocator@UMapEntry@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAUMapEntry@@PAU1@V?$allocator@UMapEntry@@@std@@U1@@std@@YAPAUMapEntry@@PAU1@00AAV?$allocator@UMapEntry@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAUMapEntry@@PAU1@V?$allocator@UMapEntry@@@std@@U1@@std@@YAPAUMapEntry@@PAU1@00AAV?$allocator@UMapEntry@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$_Uninit_move@PAUMapEntry@@PAU1@V?$allocator@UMapEntry@@@std@@U1@@std@@YAPAUMapEntry@@PAU1@00AAV?$allocator@UMapEntry@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
$T145570 = 8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUMapEntry@@PAU1@V?$allocator@UMapEntry@@@std@@U1@@std@@YAPAUMapEntry@@PAU1@00AAV?$allocator@UMapEntry@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<MapEntry *,MapEntry *,std::allocator<MapEntry>,MapEntry>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
; Line 424
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAUMapEntry@@PAU1@V?$allocator@UMapEntry@@@std@@U1@@std@@YAPAUMapEntry@@PAU1@00AAV?$allocator@UMapEntry@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 427
	mov	esi, DWORD PTR __Dest$[ebp]
; Line 429
	mov	edi, DWORD PTR __First$[ebp]
	xor	ebx, ebx
	mov	DWORD PTR __Next$[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	npad	7
$LL6@Uninit_mov:
; Line 430
	cmp	edi, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov
; Line 431
	mov	DWORD PTR $T145570[ebp], esi
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	esi, ebx
	je	SHORT $LN20@Uninit_mov
	push	edi
	mov	ecx, esi
	call	??0MapEntry@@QAE@ABU0@@Z
$LN20@Uninit_mov:
	add	esi, 76					; 0000004cH
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	mov	DWORD PTR __Dest$[ebp], esi
	add	edi, 76					; 0000004cH
	jmp	SHORT $LL6@Uninit_mov
__catch$??$_Uninit_move@PAUMapEntry@@PAU1@V?$allocator@UMapEntry@@@std@@U1@@std@@YAPAUMapEntry@@PAU1@00AAV?$allocator@UMapEntry@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 433
	mov	esi, DWORD PTR __Next$[ebp]
	mov	edi, DWORD PTR __Dest$[ebp]
	cmp	esi, edi
	je	SHORT $LN1@Uninit_mov
	mov	ebx, DWORD PTR __Al$[ebp]
$LL3@Uninit_mov:
; Line 434
	push	esi
	push	ebx
	call	??$_Dest_val@V?$allocator@UMapEntry@@@std@@UMapEntry@@@std@@YAXAAV?$allocator@UMapEntry@@@0@PAUMapEntry@@@Z ; std::_Dest_val<std::allocator<MapEntry>,MapEntry>
	add	esi, 76					; 0000004cH
	add	esp, 8
	cmp	esi, edi
	jne	SHORT $LL3@Uninit_mov
$LN1@Uninit_mov:
; Line 435
	xor	ebx, ebx
	push	ebx
	push	ebx
	call	__CxxThrowException@8
$LN33@Uninit_mov:
$LN4@Uninit_mov:
; Line 437
	mov	eax, esi
; Line 438
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN32@Uninit_mov:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninit_move@PAUMapEntry@@PAU1@V?$allocator@UMapEntry@@@std@@U1@@std@@YAPAUMapEntry@@PAU1@00AAV?$allocator@UMapEntry@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2:
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T145570[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Uninit_move@PAUMapEntry@@PAU1@V?$allocator@UMapEntry@@@std@@U1@@std@@YAPAUMapEntry@@PAU1@00AAV?$allocator@UMapEntry@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAUMapEntry@@PAU1@V?$allocator@UMapEntry@@@std@@U1@@std@@YAPAUMapEntry@@PAU1@00AAV?$allocator@UMapEntry@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAUMapEntry@@PAU1@V?$allocator@UMapEntry@@@std@@U1@@std@@YAPAUMapEntry@@PAU1@00AAV?$allocator@UMapEntry@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<MapEntry *,MapEntry *,std::allocator<MapEntry>,MapEntry>
PUBLIC	??$_Uninit_move@PAUBookmark@@PAU1@V?$allocator@UBookmark@@@std@@U1@@std@@YAPAUBookmark@@PAU1@00AAV?$allocator@UBookmark@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Bookmark *,Bookmark *,std::allocator<Bookmark>,Bookmark>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAUBookmark@@PAU1@V?$allocator@UBookmark@@@std@@U1@@std@@YAPAUBookmark@@PAU1@00AAV?$allocator@UBookmark@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAUBookmark@@PAU1@V?$allocator@UBookmark@@@std@@U1@@std@@YAPAUBookmark@@PAU1@00AAV?$allocator@UBookmark@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_move@PAUBookmark@@PAU1@V?$allocator@UBookmark@@@std@@U1@@std@@YAPAUBookmark@@PAU1@00AAV?$allocator@UBookmark@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAUBookmark@@PAU1@V?$allocator@UBookmark@@@std@@U1@@std@@YAPAUBookmark@@PAU1@00AAV?$allocator@UBookmark@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$3
__unwindtable$??$_Uninit_move@PAUBookmark@@PAU1@V?$allocator@UBookmark@@@std@@U1@@std@@YAPAUBookmark@@PAU1@00AAV?$allocator@UBookmark@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninit_move@PAUBookmark@@PAU1@V?$allocator@UBookmark@@@std@@U1@@std@@YAPAUBookmark@@PAU1@00AAV?$allocator@UBookmark@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$_Uninit_move@PAUBookmark@@PAU1@V?$allocator@UBookmark@@@std@@U1@@std@@YAPAUBookmark@@PAU1@00AAV?$allocator@UBookmark@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAUBookmark@@PAU1@V?$allocator@UBookmark@@@std@@U1@@std@@YAPAUBookmark@@PAU1@00AAV?$allocator@UBookmark@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAUBookmark@@PAU1@V?$allocator@UBookmark@@@std@@U1@@std@@YAPAUBookmark@@PAU1@00AAV?$allocator@UBookmark@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$_Uninit_move@PAUBookmark@@PAU1@V?$allocator@UBookmark@@@std@@U1@@std@@YAPAUBookmark@@PAU1@00AAV?$allocator@UBookmark@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
$T145630 = 8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUBookmark@@PAU1@V?$allocator@UBookmark@@@std@@U1@@std@@YAPAUBookmark@@PAU1@00AAV?$allocator@UBookmark@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<Bookmark *,Bookmark *,std::allocator<Bookmark>,Bookmark>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
; Line 424
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAUBookmark@@PAU1@V?$allocator@UBookmark@@@std@@U1@@std@@YAPAUBookmark@@PAU1@00AAV?$allocator@UBookmark@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 427
	mov	esi, DWORD PTR __Dest$[ebp]
; Line 429
	mov	edi, DWORD PTR __First$[ebp]
	xor	ebx, ebx
	mov	DWORD PTR __Next$[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	npad	7
$LL6@Uninit_mov@2:
; Line 430
	cmp	edi, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov@2
; Line 431
	mov	DWORD PTR $T145630[ebp], esi
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	esi, ebx
	je	SHORT $LN20@Uninit_mov@2
	push	edi
	mov	ecx, esi
	call	??0Bookmark@@QAE@ABU0@@Z
$LN20@Uninit_mov@2:
	add	esi, 120				; 00000078H
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	mov	DWORD PTR __Dest$[ebp], esi
	add	edi, 120				; 00000078H
	jmp	SHORT $LL6@Uninit_mov@2
__catch$??$_Uninit_move@PAUBookmark@@PAU1@V?$allocator@UBookmark@@@std@@U1@@std@@YAPAUBookmark@@PAU1@00AAV?$allocator@UBookmark@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 433
	mov	esi, DWORD PTR __Next$[ebp]
	mov	edi, DWORD PTR __Dest$[ebp]
	cmp	esi, edi
	je	SHORT $LN1@Uninit_mov@2
$LL3@Uninit_mov@2:
; Line 434
	mov	ecx, esi
	call	??1Bookmark@@QAE@XZ
	add	esi, 120				; 00000078H
	cmp	esi, edi
	jne	SHORT $LL3@Uninit_mov@2
$LN1@Uninit_mov@2:
; Line 435
	xor	ebx, ebx
	push	ebx
	push	ebx
	call	__CxxThrowException@8
$LN42@Uninit_mov@2:
$LN4@Uninit_mov@2:
; Line 437
	mov	eax, esi
; Line 438
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN41@Uninit_mov@2:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninit_move@PAUBookmark@@PAU1@V?$allocator@UBookmark@@@std@@U1@@std@@YAPAUBookmark@@PAU1@00AAV?$allocator@UBookmark@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2:
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T145630[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Uninit_move@PAUBookmark@@PAU1@V?$allocator@UBookmark@@@std@@U1@@std@@YAPAUBookmark@@PAU1@00AAV?$allocator@UBookmark@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAUBookmark@@PAU1@V?$allocator@UBookmark@@@std@@U1@@std@@YAPAUBookmark@@PAU1@00AAV?$allocator@UBookmark@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAUBookmark@@PAU1@V?$allocator@UBookmark@@@std@@U1@@std@@YAPAUBookmark@@PAU1@00AAV?$allocator@UBookmark@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<Bookmark *,Bookmark *,std::allocator<Bookmark>,Bookmark>
PUBLIC	??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ ; std::basic_ifstream<char,std::char_traits<char> >::`vbase destructor'
EXTRN	__imp_?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z:PROC
; Function compile flags: /Ogtp
;	COMDAT ??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ
_TEXT	SEGMENT
??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ PROC ; std::basic_ifstream<char,std::char_traits<char> >::`vbase destructor', COMDAT
; _this$ = ecx
	push	esi
	lea	esi, DWORD PTR [ecx+104]
	mov	ecx, esi
	call	??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >
	mov	eax, DWORD PTR __imp_??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@
	mov	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR __imp_??_7ios_base@std@@6B@
	push	esi
	mov	DWORD PTR [esi], ecx
	call	DWORD PTR __imp_?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z
	add	esp, 4
	pop	esi
	ret	0
??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ ENDP ; std::basic_ifstream<char,std::char_traits<char> >::`vbase destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z PROC ; std::basic_ifstream<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	push	edi
	lea	edi, DWORD PTR [ecx-104]
	lea	esi, DWORD PTR [edi+104]
	mov	ecx, esi
	call	??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >
	mov	eax, DWORD PTR __imp_??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@
	mov	DWORD PTR [esi], eax
	mov	ecx, DWORD PTR __imp_??_7ios_base@std@@6B@
	push	esi
	mov	DWORD PTR [esi], ecx
	call	DWORD PTR __imp_?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z
	add	esp, 4
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN11@scalar@7
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN11@scalar@7:
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	ret	4
??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z ENDP ; std::basic_ifstream<char,std::char_traits<char> >::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UMapEntry@@@std@@@std@@YAXPAUMapEntry@@0AAV?$allocator@UMapEntry@@@0@@Z ; std::_Destroy_range<std::allocator<MapEntry> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy_range@V?$allocator@UMapEntry@@@std@@@std@@YAXPAUMapEntry@@0AAV?$allocator@UMapEntry@@@0@@Z
_TEXT	SEGMENT
__Cat$145720 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UMapEntry@@@std@@@std@@YAXPAUMapEntry@@0AAV?$allocator@UMapEntry@@@0@@Z PROC ; std::_Destroy_range<std::allocator<MapEntry> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 87
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 88
	mov	eax, DWORD PTR __Cat$145720[ebp]
	mov	ecx, DWORD PTR __Al$[ebp]
	mov	edx, DWORD PTR __Last$[ebp]
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	ecx
	push	edx
	push	eax
	call	??$_Destroy_range@V?$allocator@UMapEntry@@@std@@@std@@YAXPAUMapEntry@@0AAV?$allocator@UMapEntry@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<MapEntry> >
	add	esp, 16					; 00000010H
; Line 89
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@UMapEntry@@@std@@@std@@YAXPAUMapEntry@@0AAV?$allocator@UMapEntry@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<MapEntry> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@UBookmark@@@std@@@std@@YAXPAUBookmark@@0AAV?$allocator@UBookmark@@@0@@Z ; std::_Destroy_range<std::allocator<Bookmark> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy_range@V?$allocator@UBookmark@@@std@@@std@@YAXPAUBookmark@@0AAV?$allocator@UBookmark@@@0@@Z
_TEXT	SEGMENT
__Cat$145727 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UBookmark@@@std@@@std@@YAXPAUBookmark@@0AAV?$allocator@UBookmark@@@0@@Z PROC ; std::_Destroy_range<std::allocator<Bookmark> >, COMDAT
; Line 87
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 88
	mov	eax, DWORD PTR __Cat$145727[ebp]
	mov	ecx, DWORD PTR __Al$[ebp]
	mov	edx, DWORD PTR __Last$[ebp]
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	ecx
	push	edx
	push	eax
	call	??$_Destroy_range@V?$allocator@UBookmark@@@std@@@std@@YAXPAUBookmark@@0AAV?$allocator@UBookmark@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<Bookmark> >
	add	esp, 16					; 00000010H
; Line 89
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@UBookmark@@@std@@@std@@YAXPAUBookmark@@0AAV?$allocator@UBookmark@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<Bookmark> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAUMapEntry@@PAU1@V?$allocator@UMapEntry@@@std@@@std@@YAPAUMapEntry@@PAU1@00AAV?$allocator@UMapEntry@@@0@@Z ; std::_Uninitialized_move<MapEntry *,MapEntry *,std::allocator<MapEntry> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Uninitialized_move@PAUMapEntry@@PAU1@V?$allocator@UMapEntry@@@std@@@std@@YAPAUMapEntry@@PAU1@00AAV?$allocator@UMapEntry@@@0@@Z
_TEXT	SEGMENT
__Cat$145734 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUMapEntry@@PAU1@V?$allocator@UMapEntry@@@std@@@std@@YAPAUMapEntry@@PAU1@00AAV?$allocator@UMapEntry@@@0@@Z PROC ; std::_Uninitialized_move<MapEntry *,MapEntry *,std::allocator<MapEntry> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
; Line 469
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 471
	mov	eax, DWORD PTR __Cat$145734[ebp]
	mov	ecx, DWORD PTR __Al$[ebp]
	mov	edx, DWORD PTR __Dest$[ebp]
	push	eax
	mov	eax, DWORD PTR __Last$[ebp]
	push	0
	push	ecx
	mov	ecx, DWORD PTR __First$[ebp]
	push	edx
	push	eax
	push	ecx
	call	??$_Uninit_move@PAUMapEntry@@PAU1@V?$allocator@UMapEntry@@@std@@U1@@std@@YAPAUMapEntry@@PAU1@00AAV?$allocator@UMapEntry@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<MapEntry *,MapEntry *,std::allocator<MapEntry>,MapEntry>
	add	esp, 24					; 00000018H
; Line 472
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_move@PAUMapEntry@@PAU1@V?$allocator@UMapEntry@@@std@@@std@@YAPAUMapEntry@@PAU1@00AAV?$allocator@UMapEntry@@@0@@Z ENDP ; std::_Uninitialized_move<MapEntry *,MapEntry *,std::allocator<MapEntry> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAUBookmark@@PAU1@V?$allocator@UBookmark@@@std@@@std@@YAPAUBookmark@@PAU1@00AAV?$allocator@UBookmark@@@0@@Z ; std::_Uninitialized_move<Bookmark *,Bookmark *,std::allocator<Bookmark> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Uninitialized_move@PAUBookmark@@PAU1@V?$allocator@UBookmark@@@std@@@std@@YAPAUBookmark@@PAU1@00AAV?$allocator@UBookmark@@@0@@Z
_TEXT	SEGMENT
__Cat$145744 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUBookmark@@PAU1@V?$allocator@UBookmark@@@std@@@std@@YAPAUBookmark@@PAU1@00AAV?$allocator@UBookmark@@@0@@Z PROC ; std::_Uninitialized_move<Bookmark *,Bookmark *,std::allocator<Bookmark> >, COMDAT
; Line 469
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 471
	mov	eax, DWORD PTR __Cat$145744[ebp]
	mov	ecx, DWORD PTR __Al$[ebp]
	mov	edx, DWORD PTR __Dest$[ebp]
	push	eax
	mov	eax, DWORD PTR __Last$[ebp]
	push	0
	push	ecx
	mov	ecx, DWORD PTR __First$[ebp]
	push	edx
	push	eax
	push	ecx
	call	??$_Uninit_move@PAUBookmark@@PAU1@V?$allocator@UBookmark@@@std@@U1@@std@@YAPAUBookmark@@PAU1@00AAV?$allocator@UBookmark@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Bookmark *,Bookmark *,std::allocator<Bookmark>,Bookmark>
	add	esp, 24					; 00000018H
; Line 472
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_move@PAUBookmark@@PAU1@V?$allocator@UBookmark@@@std@@@std@@YAPAUBookmark@@PAU1@00AAV?$allocator@UBookmark@@@0@@Z ENDP ; std::_Uninitialized_move<Bookmark *,Bookmark *,std::allocator<Bookmark> >
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IAEXPAUMapEntry@@0@Z ; std::vector<MapEntry,std::allocator<MapEntry> >::_Destroy
; Function compile flags: /Ogtp
;	COMDAT ?_Destroy@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IAEXPAUMapEntry@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Cat$145761 = 12					; size = 1
__Last$ = 12						; size = 4
?_Destroy@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IAEXPAUMapEntry@@0@Z PROC ; std::vector<MapEntry,std::allocator<MapEntry> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1269
	push	ebp
	mov	ebp, esp
; Line 1270
	mov	eax, DWORD PTR __Cat$145761[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	push	eax
	add	ecx, 12					; 0000000cH
	push	ecx
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	push	edx
	call	??$_Destroy_range@V?$allocator@UMapEntry@@@std@@@std@@YAXPAUMapEntry@@0AAV?$allocator@UMapEntry@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<MapEntry> >
	add	esp, 16					; 00000010H
; Line 1271
	pop	ebp
	ret	8
?_Destroy@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IAEXPAUMapEntry@@0@Z ENDP ; std::vector<MapEntry,std::allocator<MapEntry> >::_Destroy
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IAEXPAUBookmark@@0@Z ; std::vector<Bookmark,std::allocator<Bookmark> >::_Destroy
; Function compile flags: /Ogtp
;	COMDAT ?_Destroy@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IAEXPAUBookmark@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Cat$145774 = 12					; size = 1
__Last$ = 12						; size = 4
?_Destroy@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IAEXPAUBookmark@@0@Z PROC ; std::vector<Bookmark,std::allocator<Bookmark> >::_Destroy, COMDAT
; _this$ = ecx
; Line 1269
	push	ebp
	mov	ebp, esp
; Line 1270
	mov	eax, DWORD PTR __Cat$145774[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	push	eax
	add	ecx, 12					; 0000000cH
	push	ecx
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	push	edx
	call	??$_Destroy_range@V?$allocator@UBookmark@@@std@@@std@@YAXPAUBookmark@@0AAV?$allocator@UBookmark@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<Bookmark> >
	add	esp, 16					; 00000010H
; Line 1271
	pop	ebp
	ret	8
?_Destroy@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IAEXPAUBookmark@@0@Z ENDP ; std::vector<Bookmark,std::allocator<Bookmark> >::_Destroy
_TEXT	ENDS
PUBLIC	??$_Umove@PAUMapEntry@@@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IAEPAUMapEntry@@PAU2@00@Z ; std::vector<MapEntry,std::allocator<MapEntry> >::_Umove<MapEntry *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Umove@PAUMapEntry@@@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IAEPAUMapEntry@@PAU2@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$145792 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Umove@PAUMapEntry@@@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IAEPAUMapEntry@@PAU2@00@Z PROC ; std::vector<MapEntry,std::allocator<MapEntry> >::_Umove<MapEntry *>, COMDAT
; _this$ = ecx
; Line 1322
	push	ebp
	mov	ebp, esp
; Line 1325
	mov	eax, DWORD PTR __Cat$145792[ebp]
	mov	edx, DWORD PTR __Last$[ebp]
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	0
	add	ecx, 12					; 0000000cH
	push	ecx
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	push	edx
	push	eax
	call	??$_Uninit_move@PAUMapEntry@@PAU1@V?$allocator@UMapEntry@@@std@@U1@@std@@YAPAUMapEntry@@PAU1@00AAV?$allocator@UMapEntry@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<MapEntry *,MapEntry *,std::allocator<MapEntry>,MapEntry>
	add	esp, 24					; 00000018H
; Line 1326
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAUMapEntry@@@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IAEPAUMapEntry@@PAU2@00@Z ENDP ; std::vector<MapEntry,std::allocator<MapEntry> >::_Umove<MapEntry *>
_TEXT	ENDS
PUBLIC	??$_Umove@PAUBookmark@@@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IAEPAUBookmark@@PAU2@00@Z ; std::vector<Bookmark,std::allocator<Bookmark> >::_Umove<Bookmark *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Umove@PAUBookmark@@@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IAEPAUBookmark@@PAU2@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$145811 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Umove@PAUBookmark@@@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IAEPAUBookmark@@PAU2@00@Z PROC ; std::vector<Bookmark,std::allocator<Bookmark> >::_Umove<Bookmark *>, COMDAT
; _this$ = ecx
; Line 1322
	push	ebp
	mov	ebp, esp
; Line 1325
	mov	eax, DWORD PTR __Cat$145811[ebp]
	mov	edx, DWORD PTR __Last$[ebp]
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	0
	add	ecx, 12					; 0000000cH
	push	ecx
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	push	edx
	push	eax
	call	??$_Uninit_move@PAUBookmark@@PAU1@V?$allocator@UBookmark@@@std@@U1@@std@@YAPAUBookmark@@PAU1@00AAV?$allocator@UBookmark@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Bookmark *,Bookmark *,std::allocator<Bookmark>,Bookmark>
	add	esp, 24					; 00000018H
; Line 1326
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAUBookmark@@@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IAEPAUBookmark@@PAU2@00@Z ENDP ; std::vector<Bookmark,std::allocator<Bookmark> >::_Umove<Bookmark *>
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IAEXXZ ; std::vector<MapEntry,std::allocator<MapEntry> >::_Tidy
; Function compile flags: /Ogtp
;	COMDAT ?_Tidy@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
__Cat$145839 = -4					; size = 1
?_Tidy@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IAEXXZ PROC ; std::vector<MapEntry,std::allocator<MapEntry> >::_Tidy, COMDAT
; _this$ = ecx
; Line 1301
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx
; Line 1302
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN12@Tidy@2
; Line 1305
	mov	ecx, DWORD PTR __Cat$145839[ebp]
	push	ecx
	mov	ecx, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [esi+12]
	push	edx
	push	ecx
	push	eax
	call	??$_Destroy_range@V?$allocator@UMapEntry@@@std@@@std@@YAXPAUMapEntry@@0AAV?$allocator@UMapEntry@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<MapEntry> >
; Line 1307
	mov	edx, DWORD PTR [esi]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN12@Tidy@2:
; Line 1309
	mov	DWORD PTR [esi], 0
; Line 1310
	mov	DWORD PTR [esi+4], 0
; Line 1311
	mov	DWORD PTR [esi+8], 0
	pop	esi
; Line 1312
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IAEXXZ ENDP ; std::vector<MapEntry,std::allocator<MapEntry> >::_Tidy
_TEXT	ENDS
PUBLIC	?erase@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@2@0@Z ; std::vector<Bookmark,std::allocator<Bookmark> >::erase
; Function compile flags: /Ogtp
;	COMDAT ?erase@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
__Cat$145948 = 8					; size = 1
__Cat$145923 = 8					; size = 1
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@2@0@Z PROC ; std::vector<Bookmark,std::allocator<Bookmark> >::erase, COMDAT
; _this$ = ecx
; Line 1190
	push	ebp
	mov	ebp, esp
; Line 1191
	mov	eax, DWORD PTR __First_arg$[ebp]
; Line 1194
	mov	edx, DWORD PTR __Last_arg$[ebp]
	push	ebx
	push	esi
	mov	esi, ecx
	mov	ebx, eax
	cmp	eax, edx
	je	SHORT $LN44@erase@2
; Line 1207
	mov	ecx, DWORD PTR [esi+4]
	push	edi
	mov	edi, DWORD PTR __Cat$145923[ebp]
	push	edi
	push	eax
	push	ecx
	push	edx
	call	??$_Move@PAUBookmark@@PAU1@@std@@YAPAUBookmark@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<Bookmark *,Bookmark *>
; Line 1210
	mov	edx, DWORD PTR [esi+4]
	mov	edi, eax
	mov	eax, DWORD PTR __Cat$145948[ebp]
	push	eax
	lea	ecx, DWORD PTR [esi+12]
	push	ecx
	push	edx
	push	edi
	call	??$_Destroy_range@V?$allocator@UBookmark@@@std@@@std@@YAXPAUBookmark@@0AAV?$allocator@UBookmark@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<Bookmark> >
	add	esp, 32					; 00000020H
; Line 1211
	mov	DWORD PTR [esi+4], edi
	pop	edi
$LN44@erase@2:
; Line 1213
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	esi
	mov	DWORD PTR [eax], ebx
	pop	ebx
; Line 1214
	pop	ebp
	ret	12					; 0000000cH
?erase@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@@2@0@Z ENDP ; std::vector<Bookmark,std::allocator<Bookmark> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IAEXXZ ; std::vector<Bookmark,std::allocator<Bookmark> >::_Tidy
; Function compile flags: /Ogtp
;	COMDAT ?_Tidy@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
__Cat$146000 = -4					; size = 1
?_Tidy@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IAEXXZ PROC ; std::vector<Bookmark,std::allocator<Bookmark> >::_Tidy, COMDAT
; _this$ = ecx
; Line 1301
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx
; Line 1302
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN12@Tidy@3
; Line 1305
	mov	ecx, DWORD PTR __Cat$146000[ebp]
	push	ecx
	mov	ecx, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [esi+12]
	push	edx
	push	ecx
	push	eax
	call	??$_Destroy_range@V?$allocator@UBookmark@@@std@@@std@@YAXPAUBookmark@@0AAV?$allocator@UBookmark@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<Bookmark> >
; Line 1307
	mov	edx, DWORD PTR [esi]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN12@Tidy@3:
; Line 1309
	mov	DWORD PTR [esi], 0
; Line 1310
	mov	DWORD PTR [esi+4], 0
; Line 1311
	mov	DWORD PTR [esi+8], 0
	pop	esi
; Line 1312
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IAEXXZ ENDP ; std::vector<Bookmark,std::allocator<Bookmark> >::_Tidy
_TEXT	ENDS
PUBLIC	?reserve@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXI@Z ; std::vector<MapEntry,std::allocator<MapEntry> >::reserve
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
xdata$x	SEGMENT
__catchsym$?reserve@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXI@Z$0
__unwindtable$?reserve@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?reserve@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXI@Z$2
__ehfuncinfo$?reserve@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Ptr$126239 = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Cat$146093 = 8					; size = 1
__Cat$146062 = 8					; size = 1
__Count$ = 8						; size = 4
?reserve@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXI@Z PROC ; std::vector<MapEntry,std::allocator<MapEntry> >::reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 746
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?reserve@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, ecx
; Line 747
	mov	ebx, DWORD PTR __Count$[ebp]
	cmp	ebx, 56512727				; 035e50d7H
	jbe	SHORT $LN5@reserve@2
; Line 748
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN48@reserve@2:
$LN5@reserve@2:
; Line 749
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, DWORD PTR [esi]
	mov	eax, 1808407283				; 6bca1af3H
	imul	ecx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	eax, ebx
	jae	SHORT $LN3@reserve@2
; Line 751
	lea	edi, DWORD PTR [esi+12]
	push	ebx
	mov	ecx, edi
	call	?allocate@?$allocator@UMapEntry@@@std@@QAEPAUMapEntry@@I@Z ; std::allocator<MapEntry>::allocate
; Line 754
	mov	ebx, DWORD PTR __Cat$146062[ebp]
	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [esi]
	push	ebx
	push	0
	push	edi
	push	eax
	push	ecx
	push	edx
	mov	DWORD PTR __Ptr$126239[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	??$_Uninit_move@PAUMapEntry@@PAU1@V?$allocator@UMapEntry@@@std@@U1@@std@@YAPAUMapEntry@@PAU1@00AAV?$allocator@UMapEntry@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<MapEntry *,MapEntry *,std::allocator<MapEntry>,MapEntry>
; Line 760
	mov	ebx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [esi+4]
	sub	ecx, ebx
	mov	eax, 1808407283				; 6bca1af3H
	imul	ecx
	sar	edx, 5
	mov	edi, edx
	shr	edi, 31					; 0000001fH
	add	esp, 24					; 00000018H
	add	edi, edx
; Line 761
	test	ebx, ebx
	je	SHORT $LN41@reserve@2
; Line 763
	mov	ecx, DWORD PTR __Cat$146093[ebp]
	push	ecx
	lea	eax, DWORD PTR [esi+12]
	push	eax
	mov	eax, DWORD PTR [esi+4]
	push	eax
	push	ebx
	call	??$_Destroy_range@V?$allocator@UMapEntry@@@std@@@std@@YAXPAUMapEntry@@0AAV?$allocator@UMapEntry@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<MapEntry> >
; Line 765
	mov	edx, DWORD PTR [esi]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN41@reserve@2:
; Line 769
	mov	eax, DWORD PTR __Count$[ebp]
; Line 770
	imul	edi, 76					; 0000004cH
	mov	ecx, DWORD PTR __Ptr$126239[ebp]
	imul	eax, 76					; 0000004cH
	add	eax, ecx
	add	edi, ecx
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+4], edi
; Line 771
	mov	DWORD PTR [esi], ecx
$LN3@reserve@2:
; Line 773
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
__catch$?reserve@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXI@Z$0:
; Line 756
	mov	eax, DWORD PTR __Ptr$126239[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 757
	push	0
	push	0
	call	__CxxThrowException@8
$LN49@reserve@2:
$LN47@reserve@2:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?reserve@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXI@Z ENDP ; std::vector<MapEntry,std::allocator<MapEntry> >::reserve
PUBLIC	?reserve@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXI@Z ; std::vector<Bookmark,std::allocator<Bookmark> >::reserve
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
xdata$x	SEGMENT
__catchsym$?reserve@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXI@Z$0
__unwindtable$?reserve@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?reserve@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXI@Z$2
__ehfuncinfo$?reserve@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Ptr$126275 = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Cat$146201 = 8					; size = 1
__Cat$146170 = 8					; size = 1
__Count$ = 8						; size = 4
?reserve@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXI@Z PROC ; std::vector<Bookmark,std::allocator<Bookmark> >::reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 746
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?reserve@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, ecx
; Line 747
	mov	ebx, DWORD PTR __Count$[ebp]
	cmp	ebx, 35791394				; 02222222H
	jbe	SHORT $LN5@reserve@3
; Line 748
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN48@reserve@3:
$LN5@reserve@3:
; Line 749
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, DWORD PTR [esi]
	mov	eax, -2004318071			; 88888889H
	imul	ecx
	add	edx, ecx
	sar	edx, 6
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	eax, ebx
	jae	$LN3@reserve@3
; Line 751
	lea	edi, DWORD PTR [esi+12]
	push	ebx
	mov	ecx, edi
	call	?allocate@?$allocator@UBookmark@@@std@@QAEPAUBookmark@@I@Z ; std::allocator<Bookmark>::allocate
; Line 754
	mov	ebx, DWORD PTR __Cat$146170[ebp]
	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [esi]
	push	ebx
	push	0
	push	edi
	push	eax
	push	ecx
	push	edx
	mov	DWORD PTR __Ptr$126275[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	??$_Uninit_move@PAUBookmark@@PAU1@V?$allocator@UBookmark@@@std@@U1@@std@@YAPAUBookmark@@PAU1@00AAV?$allocator@UBookmark@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Bookmark *,Bookmark *,std::allocator<Bookmark>,Bookmark>
; Line 760
	mov	ebx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [esi+4]
	sub	ecx, ebx
	mov	eax, -2004318071			; 88888889H
	imul	ecx
	add	edx, ecx
	sar	edx, 6
	mov	edi, edx
	shr	edi, 31					; 0000001fH
	add	esp, 24					; 00000018H
	add	edi, edx
; Line 761
	test	ebx, ebx
	je	SHORT $LN41@reserve@3
; Line 763
	mov	ecx, DWORD PTR __Cat$146201[ebp]
	push	ecx
	lea	eax, DWORD PTR [esi+12]
	push	eax
	mov	eax, DWORD PTR [esi+4]
	push	eax
	push	ebx
	call	??$_Destroy_range@V?$allocator@UBookmark@@@std@@@std@@YAXPAUBookmark@@0AAV?$allocator@UBookmark@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<Bookmark> >
; Line 765
	mov	edx, DWORD PTR [esi]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN41@reserve@3:
; Line 769
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, eax
	shl	ecx, 4
	sub	ecx, eax
	mov	eax, DWORD PTR __Ptr$126275[ebp]
	lea	edx, DWORD PTR [eax+ecx*8]
; Line 770
	mov	ecx, edi
	shl	ecx, 4
	sub	ecx, edi
	mov	DWORD PTR [esi+8], edx
	lea	edx, DWORD PTR [eax+ecx*8]
	mov	DWORD PTR [esi+4], edx
; Line 771
	mov	DWORD PTR [esi], eax
$LN3@reserve@3:
; Line 773
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
__catch$?reserve@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXI@Z$0:
; Line 756
	mov	eax, DWORD PTR __Ptr$126275[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 757
	push	0
	push	0
	call	__CxxThrowException@8
$LN49@reserve@3:
$LN47@reserve@3:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?reserve@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXI@Z ENDP ; std::vector<Bookmark,std::allocator<Bookmark> >::reserve
PUBLIC	??1?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAE@XZ ; std::vector<MapEntry,std::allocator<MapEntry> >::~vector<MapEntry,std::allocator<MapEntry> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
__Cat$146270 = -4					; size = 1
??1?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAE@XZ PROC ; std::vector<MapEntry,std::allocator<MapEntry> >::~vector<MapEntry,std::allocator<MapEntry> >, COMDAT
; _this$ = ecx
; Line 704
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx
; Line 705
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN14@vector@2
	mov	ecx, DWORD PTR __Cat$146270[ebp]
	push	ecx
	mov	ecx, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [esi+12]
	push	edx
	push	ecx
	push	eax
	call	??$_Destroy_range@V?$allocator@UMapEntry@@@std@@@std@@YAXPAUMapEntry@@0AAV?$allocator@UMapEntry@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<MapEntry> >
	mov	edx, DWORD PTR [esi]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN14@vector@2:
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	pop	esi
; Line 706
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAE@XZ ENDP ; std::vector<MapEntry,std::allocator<MapEntry> >::~vector<MapEntry,std::allocator<MapEntry> >
_TEXT	ENDS
PUBLIC	??1?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE@XZ ; std::vector<Bookmark,std::allocator<Bookmark> >::~vector<Bookmark,std::allocator<Bookmark> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
__Cat$146322 = -4					; size = 1
??1?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE@XZ PROC ; std::vector<Bookmark,std::allocator<Bookmark> >::~vector<Bookmark,std::allocator<Bookmark> >, COMDAT
; _this$ = ecx
; Line 704
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx
; Line 705
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN14@vector@3
	mov	ecx, DWORD PTR __Cat$146322[ebp]
	push	ecx
	mov	ecx, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [esi+12]
	push	edx
	push	ecx
	push	eax
	call	??$_Destroy_range@V?$allocator@UBookmark@@@std@@@std@@YAXPAUBookmark@@0AAV?$allocator@UBookmark@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<Bookmark> >
	mov	edx, DWORD PTR [esi]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN14@vector@3:
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	pop	esi
; Line 706
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE@XZ ENDP ; std::vector<Bookmark,std::allocator<Bookmark> >::~vector<Bookmark,std::allocator<Bookmark> >
_TEXT	ENDS
PUBLIC	?clear@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXXZ ; std::vector<Bookmark,std::allocator<Bookmark> >::clear
; Function compile flags: /Ogtp
;	COMDAT ?clear@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Cat$146526 = -4					; size = 1
__Cat$146532 = -4					; size = 1
?clear@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXXZ PROC ; std::vector<Bookmark,std::allocator<Bookmark> >::clear, COMDAT
; _this$ = ecx
; Line 1217
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx
; Line 1218
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, eax
	je	SHORT $LN19@clear
	mov	edx, DWORD PTR __Cat$146526[ebp]
	push	edi
	push	edx
	push	ecx
	push	eax
	push	eax
	call	??$_Move@PAUBookmark@@PAU1@@std@@YAPAUBookmark@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<Bookmark *,Bookmark *>
	mov	edx, DWORD PTR [esi+4]
	mov	edi, eax
	mov	eax, DWORD PTR __Cat$146532[ebp]
	push	eax
	lea	ecx, DWORD PTR [esi+12]
	push	ecx
	push	edx
	push	edi
	call	??$_Destroy_range@V?$allocator@UBookmark@@@std@@@std@@YAXPAUBookmark@@0AAV?$allocator@UBookmark@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<Bookmark> >
	add	esp, 32					; 00000020H
	mov	DWORD PTR [esi+4], edi
	pop	edi
$LN19@clear:
	pop	esi
; Line 1219
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXXZ ENDP ; std::vector<Bookmark,std::allocator<Bookmark> >::clear
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IAEXI@Z ; std::vector<MapEntry,std::allocator<MapEntry> >::_Reserve
; Function compile flags: /Ogtp
;	COMDAT ?_Reserve@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IAEXI@Z PROC ; std::vector<MapEntry,std::allocator<MapEntry> >::_Reserve, COMDAT
; _this$ = ecx
; Line 1290
	push	ebp
	mov	ebp, esp
; Line 1291
	mov	edx, DWORD PTR [ecx+4]
	push	esi
	push	edi
	mov	edi, DWORD PTR [ecx]
	sub	edx, edi
	mov	eax, 1808407283				; 6bca1af3H
	imul	edx
; Line 1292
	mov	eax, DWORD PTR __Count$[ebp]
	sar	edx, 5
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
	mov	edx, 56512727				; 035e50d7H
	sub	edx, eax
	cmp	edx, esi
	jae	SHORT $LN4@Reserve@2
; Line 1293
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN34@Reserve@2:
$LN4@Reserve@2:
; Line 1294
	mov	edx, DWORD PTR [ecx+8]
	add	esi, eax
	sub	edx, edi
	mov	eax, 1808407283				; 6bca1af3H
	imul	edx
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	esi, eax
	jbe	SHORT $LN1@Reserve@2
; Line 1297
	mov	edx, eax
	shr	edx, 1
	mov	edi, 56512727				; 035e50d7H
	sub	edi, edx
	cmp	edi, eax
	jae	SHORT $LN23@Reserve@2
	xor	eax, eax
	jmp	SHORT $LN24@Reserve@2
$LN23@Reserve@2:
	add	eax, edx
$LN24@Reserve@2:
	cmp	eax, esi
	jae	SHORT $LN20@Reserve@2
	mov	eax, esi
$LN20@Reserve@2:
	push	eax
	call	?reserve@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXI@Z ; std::vector<MapEntry,std::allocator<MapEntry> >::reserve
$LN1@Reserve@2:
	pop	edi
	pop	esi
; Line 1298
	pop	ebp
	ret	4
$LN33@Reserve@2:
?_Reserve@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IAEXI@Z ENDP ; std::vector<MapEntry,std::allocator<MapEntry> >::_Reserve
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IAEXI@Z ; std::vector<Bookmark,std::allocator<Bookmark> >::_Reserve
; Function compile flags: /Ogtp
;	COMDAT ?_Reserve@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IAEXI@Z PROC ; std::vector<Bookmark,std::allocator<Bookmark> >::_Reserve, COMDAT
; _this$ = ecx
; Line 1290
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 1291
	mov	ebx, DWORD PTR [ecx]
	push	esi
	mov	esi, DWORD PTR [ecx+4]
	sub	esi, ebx
	mov	eax, -2004318071			; 88888889H
	imul	esi
; Line 1292
	mov	eax, DWORD PTR __Count$[ebp]
	add	edx, esi
	sar	edx, 6
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
	mov	edx, 35791394				; 02222222H
	sub	edx, eax
	push	edi
	cmp	edx, esi
	jae	SHORT $LN4@Reserve@3
; Line 1293
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN34@Reserve@3:
$LN4@Reserve@3:
; Line 1294
	mov	edi, DWORD PTR [ecx+8]
	add	esi, eax
	sub	edi, ebx
	mov	eax, -2004318071			; 88888889H
	imul	edi
	add	edx, edi
	sar	edx, 6
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	esi, eax
	jbe	SHORT $LN1@Reserve@3
; Line 1297
	mov	edx, eax
	shr	edx, 1
	mov	edi, 35791394				; 02222222H
	sub	edi, edx
	cmp	edi, eax
	jae	SHORT $LN23@Reserve@3
	xor	eax, eax
	jmp	SHORT $LN24@Reserve@3
$LN23@Reserve@3:
	add	eax, edx
$LN24@Reserve@3:
	cmp	eax, esi
	jae	SHORT $LN20@Reserve@3
	mov	eax, esi
$LN20@Reserve@3:
	push	eax
	call	?reserve@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXI@Z ; std::vector<Bookmark,std::allocator<Bookmark> >::reserve
$LN1@Reserve@3:
	pop	edi
	pop	esi
	pop	ebx
; Line 1298
	pop	ebp
	ret	4
$LN33@Reserve@3:
?_Reserve@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IAEXI@Z ENDP ; std::vector<Bookmark,std::allocator<Bookmark> >::_Reserve
_TEXT	ENDS
PUBLIC	??_7Menu@@6B@					; Menu::`vftable'
PUBLIC	??1Menu@@UAE@XZ					; Menu::~Menu
PUBLIC	??_R4Menu@@6B@					; Menu::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVMenu@@@8				; Menu `RTTI Type Descriptor'
PUBLIC	??_R3Menu@@8					; Menu::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Menu@@8					; Menu::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Menu@@8				; Menu::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?tick@Menu@@UAEXMM@Z				; Menu::tick
EXTRN	??_EMenu@@UAEPAXI@Z:PROC			; Menu::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@Menu@@8
; File c:\programovani\wow editor\test\src\editor\appstate.h
rdata$r	SEGMENT
??_R1A@?0A@EA@Menu@@8 DD FLAT:??_R0?AVMenu@@@8		; Menu::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Menu@@8
rdata$r	ENDS
;	COMDAT ??_R2Menu@@8
rdata$r	SEGMENT
??_R2Menu@@8 DD	FLAT:??_R1A@?0A@EA@Menu@@8		; Menu::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@AppState@@8
rdata$r	ENDS
;	COMDAT ??_R3Menu@@8
rdata$r	SEGMENT
??_R3Menu@@8 DD	00H					; Menu::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2Menu@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMenu@@@8
_DATA	SEGMENT
??_R0?AVMenu@@@8 DD FLAT:??_7type_info@@6B@		; Menu `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMenu@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Menu@@6B@
rdata$r	SEGMENT
??_R4Menu@@6B@ DD 00H					; Menu::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMenu@@@8
	DD	FLAT:??_R3Menu@@8
rdata$r	ENDS
;	COMDAT ??_7Menu@@6B@
CONST	SEGMENT
??_7Menu@@6B@ DD FLAT:??_R4Menu@@6B@			; Menu::`vftable'
	DD	FLAT:??_EMenu@@UAEPAXI@Z
	DD	FLAT:?tick@Menu@@UAEXMM@Z
	DD	FLAT:?display@Menu@@UAEXMM@Z
	DD	FLAT:?mousemove@Menu@@UAEXPAUSDL_MouseMotionEvent@@@Z
	DD	FLAT:?mouseclick@Menu@@UAEXPAUSDL_MouseButtonEvent@@@Z
	DD	FLAT:?keypressed@Menu@@UAEXPAUSDL_KeyboardEvent@@@Z
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$??1Menu@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1Menu@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1Menu@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1Menu@@UAE@XZ$2
__ehfuncinfo$??1Menu@@UAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1Menu@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
_TEXT	SEGMENT
__Cat$146841 = -16					; size = 1
__Cat$146767 = -16					; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1Menu@@UAE@XZ PROC					; Menu::~Menu
; _this$ = ecx
; File c:\programovani\wow editor\test\src\editor\menu.cpp
; Line 60
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1Menu@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	mov	DWORD PTR [esi], OFFSET ??_7Menu@@6B@
; Line 61
	mov	ecx, DWORD PTR [esi+76]
	xor	edi, edi
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	ecx, edi
	je	SHORT $LN3@Menu
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
$LN3@Menu:
; Line 62
	mov	eax, DWORD PTR [esi+48]
	cmp	eax, edi
	je	SHORT $LN21@Menu
	mov	ecx, DWORD PTR __Cat$146767[ebp]
	push	ecx
	mov	ecx, DWORD PTR [esi+52]
	lea	edx, DWORD PTR [esi+60]
	push	edx
	push	ecx
	push	eax
	call	??$_Destroy_range@V?$allocator@UBookmark@@@std@@@std@@YAXPAUBookmark@@0AAV?$allocator@UBookmark@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<Bookmark> >
	mov	edx, DWORD PTR [esi+48]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN21@Menu:
	mov	DWORD PTR [esi+48], edi
	mov	DWORD PTR [esi+52], edi
	mov	DWORD PTR [esi+56], edi
	mov	eax, DWORD PTR [esi+32]
	cmp	eax, edi
	je	SHORT $LN38@Menu
	mov	ecx, DWORD PTR __Cat$146841[ebp]
	push	ecx
	mov	ecx, DWORD PTR [esi+36]
	lea	edx, DWORD PTR [esi+44]
	push	edx
	push	ecx
	push	eax
	call	??$_Destroy_range@V?$allocator@UMapEntry@@@std@@@std@@YAXPAUMapEntry@@0AAV?$allocator@UMapEntry@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<MapEntry> >
	mov	edx, DWORD PTR [esi+32]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN38@Menu:
	mov	DWORD PTR [esi+32], edi
	mov	DWORD PTR [esi+36], edi
	mov	DWORD PTR [esi+40], edi
	mov	DWORD PTR [esi], OFFSET ??_7AppState@@6B@
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1Menu@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1AppState@@UAE@XZ			; AppState::~AppState
__unwindfunclet$??1Menu@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAE@XZ ; std::vector<MapEntry,std::allocator<MapEntry> >::~vector<MapEntry,std::allocator<MapEntry> >
__unwindfunclet$??1Menu@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	jmp	??1?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE@XZ ; std::vector<Bookmark,std::allocator<Bookmark> >::~vector<Bookmark,std::allocator<Bookmark> >
__ehhandler$??1Menu@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1Menu@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1Menu@@UAE@XZ ENDP					; Menu::~Menu
PUBLIC	?push_back@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXABUMapEntry@@@Z ; std::vector<MapEntry,std::allocator<MapEntry> >::push_back
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$?push_back@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXABUMapEntry@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?push_back@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXABUMapEntry@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?push_back@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXABUMapEntry@@@Z$1
__ehfuncinfo$?push_back@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXABUMapEntry@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?push_back@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXABUMapEntry@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?push_back@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXABUMapEntry@@@Z
_TEXT	SEGMENT
$T146967 = -16						; size = 4
$T146904 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Vptr$146964 = 8					; size = 4
$T146912 = 8						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXABUMapEntry@@@Z PROC ; std::vector<MapEntry,std::allocator<MapEntry> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 976
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?push_back@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXABUMapEntry@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	edi, ecx
; Line 977
	mov	ecx, DWORD PTR [edi+4]
	mov	esi, DWORD PTR __Val$[ebp]
	cmp	esi, ecx
	jae	SHORT $LN4@push_back@2
	mov	eax, DWORD PTR [edi]
	cmp	eax, esi
	ja	SHORT $LN4@push_back@2
; Line 979
	sub	esi, eax
	mov	eax, 1808407283				; 6bca1af3H
	imul	esi
	sar	edx, 5
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
; Line 980
	cmp	ecx, DWORD PTR [edi+8]
	jne	SHORT $LN3@push_back@2
; Line 981
	push	1
	mov	ecx, edi
	call	?_Reserve@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IAEXI@Z ; std::vector<MapEntry,std::allocator<MapEntry> >::_Reserve
$LN3@push_back@2:
; Line 985
	mov	ecx, DWORD PTR [edi+4]
	imul	esi, 76					; 0000004cH
	add	esi, DWORD PTR [edi]
	mov	DWORD PTR $T146912[ebp], ecx
	mov	DWORD PTR $T146904[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 988
	jmp	SHORT $LN51@push_back@2
$LN4@push_back@2:
; Line 990
	cmp	ecx, DWORD PTR [edi+8]
	jne	SHORT $LN1@push_back@2
; Line 991
	push	1
	mov	ecx, edi
	call	?_Reserve@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IAEXI@Z ; std::vector<MapEntry,std::allocator<MapEntry> >::_Reserve
$LN1@push_back@2:
; Line 995
	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR __Vptr$146964[ebp], ecx
	mov	DWORD PTR $T146967[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
$LN51@push_back@2:
	test	ecx, ecx
	je	SHORT $LN40@push_back@2
	push	esi
	call	??0MapEntry@@QAE@ABU0@@Z
$LN40@push_back@2:
; Line 996
	add	DWORD PTR [edi+4], 76			; 0000004cH
; Line 998
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?push_back@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXABUMapEntry@@@Z$0:
	mov	eax, DWORD PTR $T146912[ebp]
	push	eax
	mov	ecx, DWORD PTR $T146904[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$?push_back@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXABUMapEntry@@@Z$1:
	mov	eax, DWORD PTR __Vptr$146964[ebp]
	push	eax
	mov	ecx, DWORD PTR $T146967[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?push_back@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXABUMapEntry@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?push_back@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXABUMapEntry@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?push_back@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAEXABUMapEntry@@@Z ENDP ; std::vector<MapEntry,std::allocator<MapEntry> >::push_back
PUBLIC	?push_back@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXABUBookmark@@@Z ; std::vector<Bookmark,std::allocator<Bookmark> >::push_back
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$?push_back@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXABUBookmark@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?push_back@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXABUBookmark@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?push_back@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXABUBookmark@@@Z$1
__ehfuncinfo$?push_back@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXABUBookmark@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?push_back@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXABUBookmark@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?push_back@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXABUBookmark@@@Z
_TEXT	SEGMENT
$T147100 = -16						; size = 4
$T147036 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Vptr$147097 = 8					; size = 4
$T147044 = 8						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXABUBookmark@@@Z PROC ; std::vector<Bookmark,std::allocator<Bookmark> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 976
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?push_back@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXABUBookmark@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	edi, ecx
; Line 977
	mov	ecx, DWORD PTR [edi+4]
	mov	esi, DWORD PTR __Val$[ebp]
	cmp	esi, ecx
	jae	SHORT $LN4@push_back@3
	mov	eax, DWORD PTR [edi]
	cmp	eax, esi
	ja	SHORT $LN4@push_back@3
; Line 979
	sub	esi, eax
	mov	eax, -2004318071			; 88888889H
	imul	esi
	add	edx, esi
	sar	edx, 6
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
; Line 980
	cmp	ecx, DWORD PTR [edi+8]
	jne	SHORT $LN3@push_back@3
; Line 981
	push	1
	mov	ecx, edi
	call	?_Reserve@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IAEXI@Z ; std::vector<Bookmark,std::allocator<Bookmark> >::_Reserve
$LN3@push_back@3:
; Line 985
	mov	ecx, DWORD PTR [edi]
	mov	eax, esi
	shl	eax, 4
	sub	eax, esi
	lea	eax, DWORD PTR [ecx+eax*8]
	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR $T147044[ebp], ecx
	mov	DWORD PTR $T147036[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	test	ecx, ecx
	je	SHORT $LN40@push_back@3
	push	eax
; Line 988
	jmp	SHORT $LN49@push_back@3
$LN4@push_back@3:
; Line 990
	cmp	ecx, DWORD PTR [edi+8]
	jne	SHORT $LN1@push_back@3
; Line 991
	push	1
	mov	ecx, edi
	call	?_Reserve@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@IAEXI@Z ; std::vector<Bookmark,std::allocator<Bookmark> >::_Reserve
$LN1@push_back@3:
; Line 995
	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR __Vptr$147097[ebp], ecx
	mov	DWORD PTR $T147100[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	test	ecx, ecx
	je	SHORT $LN40@push_back@3
	push	esi
$LN49@push_back@3:
	call	??0Bookmark@@QAE@ABU0@@Z
$LN40@push_back@3:
; Line 996
	add	DWORD PTR [edi+4], 120			; 00000078H
; Line 998
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?push_back@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXABUBookmark@@@Z$0:
	mov	eax, DWORD PTR $T147044[ebp]
	push	eax
	mov	ecx, DWORD PTR $T147036[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$?push_back@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXABUBookmark@@@Z$1:
	mov	eax, DWORD PTR __Vptr$147097[ebp]
	push	eax
	mov	ecx, DWORD PTR $T147100[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?push_back@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXABUBookmark@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?push_back@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXABUBookmark@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?push_back@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXABUBookmark@@@Z ENDP ; std::vector<Bookmark,std::allocator<Bookmark> >::push_back
; Function compile flags: /Ogtp
;	COMDAT ??_GMenu@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GMenu@@UAEPAXI@Z PROC				; Menu::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	call	??1Menu@@UAE@XZ				; Menu::~Menu
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN4@scalar@8
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@scalar@8:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_GMenu@@UAEPAXI@Z ENDP				; Menu::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?refreshBookmarks@Menu@@QAEXXZ			; Menu::refreshBookmarks
EXTRN	__imp_?getline@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV12@PAD_J@Z:PROC
EXTRN	__imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAM@Z:PROC
xdata$x	SEGMENT
__unwindtable$?refreshBookmarks@Menu@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?refreshBookmarks@Menu@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?refreshBookmarks@Menu@@QAEXXZ$1
__ehfuncinfo$?refreshBookmarks@Menu@@QAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?refreshBookmarks@Menu@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
_TEXT	SEGMENT
_f$ = -588						; size = 176
_i$119784 = -412					; size = 4
_this$GSCopy$ = -408					; size = 4
__Cat$147421 = -404					; size = 1
__Cat$147413 = -404					; size = 1
_y$ = -404						; size = 4
_cc$119781 = -400					; size = 2
_c$119745 = -393					; size = 1
_b$119704 = -392					; size = 120
_buf$119782 = -272					; size = 256
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?refreshBookmarks@Menu@@QAEXXZ PROC			; Menu::refreshBookmarks
; _this$ = ecx
; File c:\programovani\wow editor\test\src\editor\menu.cpp
; Line 478
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?refreshBookmarks@Menu@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 576				; 00000240H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	edi, ecx
; Line 479
	mov	eax, DWORD PTR [edi+52]
	mov	ecx, DWORD PTR [edi+48]
; Line 510
	mov	DWORD PTR _this$GSCopy$[ebp], edi
	cmp	ecx, eax
	je	SHORT $LN35@refreshBoo
; Line 479
	mov	edx, DWORD PTR __Cat$147413[ebp]
	push	edx
	push	ecx
	push	eax
	push	eax
	call	??$_Move@PAUBookmark@@PAU1@@std@@YAPAUBookmark@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<Bookmark *,Bookmark *>
	mov	ecx, DWORD PTR __Cat$147421[ebp]
	push	ecx
	mov	esi, eax
	mov	eax, DWORD PTR [edi+52]
	lea	edx, DWORD PTR [edi+60]
	push	edx
	push	eax
	push	esi
	call	??$_Destroy_range@V?$allocator@UBookmark@@@std@@@std@@YAXPAUBookmark@@0AAV?$allocator@UBookmark@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<Bookmark> >
	add	esp, 32					; 00000020H
	mov	DWORD PTR [edi+52], esi
$LN35@refreshBoo:
; Line 480
	push	1
	push	64					; 00000040H
	push	1
	push	OFFSET $SG119697
	lea	ecx, DWORD PTR _f$[ebp]
	call	??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAE@PBDHH@Z ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >
	xor	esi, esi
	mov	DWORD PTR __$EHRec$[ebp+8], esi
; Line 481
	cmp	DWORD PTR _f$[ebp+100], esi
; Line 483
	je	$LN390@refreshBoo
; Line 488
	mov	eax, DWORD PTR _f$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _f$[ebp+ecx+12]
	mov	DWORD PTR _y$[ebp], 110			; 0000006eH
	test	al, 1
	jne	$LN10@refreshBoo
	jmp	SHORT $LN11@refreshBoo
	npad	9
$LL417@refreshBoo:
	mov	edi, DWORD PTR _this$GSCopy$[ebp]
$LN11@refreshBoo:
; Line 490
	mov	eax, 15					; 0000000fH
	mov	DWORD PTR _b$119704[ebp+36], eax
	mov	DWORD PTR _b$119704[ebp+32], esi
	mov	BYTE PTR _b$119704[ebp+16], 0
	mov	DWORD PTR _b$119704[ebp+64], eax
	mov	DWORD PTR _b$119704[ebp+60], esi
	mov	BYTE PTR _b$119704[ebp+44], 0
	mov	DWORD PTR _b$119704[ebp+92], eax
	mov	DWORD PTR _b$119704[ebp+88], esi
	mov	BYTE PTR _b$119704[ebp+72], 0
	mov	DWORD PTR _b$119704[ebp+100], esi
	mov	DWORD PTR _b$119704[ebp+104], esi
	mov	DWORD PTR _b$119704[ebp+108], esi
; Line 491
	lea	edx, DWORD PTR _b$119704[ebp+16]
	push	edx
	lea	eax, DWORD PTR _f$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??$?5DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator>><char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	lea	ecx, DWORD PTR _b$119704[ebp+116]
	push	ecx
	lea	edx, DWORD PTR _b$119704[ebp+112]
	push	edx
	lea	ecx, DWORD PTR _b$119704[ebp+108]
	push	ecx
	lea	edx, DWORD PTR _b$119704[ebp+104]
	push	edx
	lea	ecx, DWORD PTR _b$119704[ebp+100]
	push	ecx
	mov	ecx, eax
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAM@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAM@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAM@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAM@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAM@Z
; Line 492
	mov	edx, DWORD PTR _f$[ebp]
	mov	eax, DWORD PTR [edx+4]
	test	BYTE PTR _f$[ebp+eax+12], 1
	jne	$LN410@refreshBoo
$LL8@refreshBoo:
; Line 497
	lea	ecx, DWORD PTR _c$119745[ebp]
	push	ecx
	lea	edx, DWORD PTR _f$[ebp]
	push	edx
	call	??$?5DU?$char_traits@D@std@@@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QAV10@AAD@Z ; std::operator>><char,std::char_traits<char> >
; Line 498
	mov	bl, BYTE PTR _c$119745[ebp]
	add	esp, 8
	cmp	bl, 32					; 00000020H
	je	SHORT $LL8@refreshBoo
; Line 499
	push	esi
	push	OFFSET $SG119780
	lea	ecx, DWORD PTR _b$119704[ebp+44]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 503
	lea	eax, DWORD PTR _cc$119781[ebp]
	mov	BYTE PTR _cc$119781[ebp], bl
	mov	BYTE PTR _cc$119781[ebp+1], 0
	lea	edx, DWORD PTR [eax+1]
	npad	6
$LL414@refreshBoo:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL414@refreshBoo
	sub	eax, edx
	push	eax
	lea	eax, DWORD PTR _cc$119781[ebp]
	push	eax
	lea	ecx, DWORD PTR _b$119704[ebp+44]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 505
	push	esi
	push	256					; 00000100H
	lea	ecx, DWORD PTR _buf$119782[ebp]
	push	ecx
	lea	ecx, DWORD PTR _f$[ebp]
	call	DWORD PTR __imp_?getline@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV12@PAD_J@Z
; Line 506
	lea	eax, DWORD PTR _buf$119782[ebp]
	lea	ecx, DWORD PTR [eax+1]
	npad	2
$LL415@refreshBoo:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL415@refreshBoo
	sub	eax, ecx
	push	eax
	lea	edx, DWORD PTR _buf$119782[ebp]
	push	edx
	lea	ecx, DWORD PTR _b$119704[ebp+44]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 510
	mov	ecx, DWORD PTR [edi+36]
	sub	ecx, DWORD PTR [edi+32]
	mov	eax, 1808407283				; 6bca1af3H
	imul	ecx
	sar	edx, 5
	mov	edi, edx
	shr	edi, 31					; 0000001fH
	add	edi, edx
	mov	DWORD PTR _i$119784[ebp], esi
	je	$LN413@refreshBoo
; Line 499
	mov	eax, DWORD PTR _this$GSCopy$[ebp]
	mov	ebx, DWORD PTR [eax+32]
	add	ebx, 32					; 00000020H
	npad	5
$LL5@refreshBoo:
; Line 512
	cmp	DWORD PTR _b$119704[ebp+36], 16		; 00000010H
	mov	edx, DWORD PTR _b$119704[ebp+16]
	jae	SHORT $LN209@refreshBoo
	lea	edx, DWORD PTR _b$119704[ebp+16]
$LN209@refreshBoo:
	mov	esi, DWORD PTR [ebx]
	mov	eax, esi
	cmp	eax, esi
	jae	SHORT $LN210@refreshBoo
$LN210@refreshBoo:
	mov	ecx, DWORD PTR _b$119704[ebp+32]
	cmp	esi, ecx
	jae	SHORT $LN214@refreshBoo
	mov	ecx, esi
$LN214@refreshBoo:
	cmp	DWORD PTR [ebx+4], 16			; 00000010H
	jb	SHORT $LN225@refreshBoo
	mov	eax, DWORD PTR [ebx-16]
	jmp	SHORT $LN226@refreshBoo
$LN225@refreshBoo:
	lea	eax, DWORD PTR [ebx-16]
$LN226@refreshBoo:
	push	ecx
	push	edx
	push	eax
	call	?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN419@refreshBoo
	mov	eax, DWORD PTR _b$119704[ebp+32]
	cmp	esi, eax
	jae	SHORT $LN216@refreshBoo
	or	eax, -1
	jmp	SHORT $LN217@refreshBoo
$LN216@refreshBoo:
	xor	ecx, ecx
	cmp	esi, eax
	setne	cl
	mov	eax, ecx
$LN217@refreshBoo:
	test	eax, eax
$LN419@refreshBoo:
	sete	al
	test	al, al
	jne	$LN1@refreshBoo
; Line 510
	mov	eax, DWORD PTR _i$119784[ebp]
	inc	eax
	add	ebx, 76					; 0000004cH
	mov	DWORD PTR _i$119784[ebp], eax
	cmp	eax, edi
	jb	SHORT $LL5@refreshBoo
	xor	esi, esi
$LN413@refreshBoo:
; Line 518
	mov	ebx, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _b$119704[ebp+92], ebx
	jb	SHORT $LN242@refreshBoo
	mov	edx, DWORD PTR _b$119704[ebp+72]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN242@refreshBoo:
	mov	edi, 15					; 0000000fH
	mov	DWORD PTR _b$119704[ebp+92], edi
	mov	DWORD PTR _b$119704[ebp+88], esi
	mov	BYTE PTR _b$119704[ebp+72], 0
	cmp	DWORD PTR _b$119704[ebp+64], ebx
	jb	SHORT $LN264@refreshBoo
	mov	eax, DWORD PTR _b$119704[ebp+44]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN264@refreshBoo:
	mov	DWORD PTR _b$119704[ebp+64], edi
	mov	DWORD PTR _b$119704[ebp+60], esi
	mov	BYTE PTR _b$119704[ebp+44], 0
	cmp	DWORD PTR _b$119704[ebp+36], ebx
	jb	SHORT $LN286@refreshBoo
	mov	ecx, DWORD PTR _b$119704[ebp+16]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN286@refreshBoo:
	mov	DWORD PTR _b$119704[ebp+32], esi
	jmp	$LN420@refreshBoo
$LN1@refreshBoo:
; Line 520
	mov	ecx, DWORD PTR _b$119704[ebp+44]
	mov	ebx, 16					; 00000010H
	cmp	DWORD PTR _b$119704[ebp+64], ebx
	jae	SHORT $LN303@refreshBoo
	lea	ecx, DWORD PTR _b$119704[ebp+44]
$LN303@refreshBoo:
	mov	eax, DWORD PTR _b$119704[ebp+16]
	cmp	DWORD PTR _b$119704[ebp+36], ebx
	jae	SHORT $LN309@refreshBoo
	lea	eax, DWORD PTR _b$119704[ebp+16]
$LN309@refreshBoo:
	push	ecx
	push	eax
	lea	edx, DWORD PTR _buf$119782[ebp]
	push	OFFSET $SG119803
	push	edx
	call	??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ	; sprintf_s<256>
; Line 521
	lea	eax, DWORD PTR _buf$119782[ebp]
	add	esp, 16					; 00000010H
	lea	edx, DWORD PTR [eax+1]
$LL416@refreshBoo:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL416@refreshBoo
	sub	eax, edx
	push	eax
	lea	eax, DWORD PTR _buf$119782[ebp]
	push	eax
	lea	ecx, DWORD PTR _b$119704[ebp+72]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 524
	mov	eax, DWORD PTR _b$119704[ebp+72]
	mov	DWORD PTR _b$119704[ebp], 300		; 0000012cH
	cmp	DWORD PTR _b$119704[ebp+92], ebx
	jae	SHORT $LN321@refreshBoo
	lea	eax, DWORD PTR _b$119704[ebp+72]
$LN321@refreshBoo:
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	eax
	call	?textwidth@Font@@QAEHPBD@Z		; Font::textwidth
	add	eax, 300				; 0000012cH
	mov	DWORD PTR _b$119704[ebp+8], eax
; Line 525
	mov	eax, DWORD PTR _y$[ebp]
; Line 529
	lea	ecx, DWORD PTR _b$119704[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$GSCopy$[ebp]
	mov	DWORD PTR _b$119704[ebp+4], eax
	add	eax, 16					; 00000010H
	add	ecx, 48					; 00000030H
	mov	DWORD PTR _b$119704[ebp+12], eax
	mov	DWORD PTR _y$[ebp], eax
	call	?push_back@?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAEXABUBookmark@@@Z ; std::vector<Bookmark,std::allocator<Bookmark> >::push_back
; Line 530
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR _b$119704[ebp+92], ebx
	jb	SHORT $LN334@refreshBoo
	mov	edx, DWORD PTR _b$119704[ebp+72]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN334@refreshBoo:
	xor	esi, esi
	mov	edi, 15					; 0000000fH
	mov	DWORD PTR _b$119704[ebp+92], edi
	mov	DWORD PTR _b$119704[ebp+88], esi
	mov	BYTE PTR _b$119704[ebp+72], 0
	cmp	DWORD PTR _b$119704[ebp+64], ebx
	jb	SHORT $LN356@refreshBoo
	mov	eax, DWORD PTR _b$119704[ebp+44]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN356@refreshBoo:
	mov	DWORD PTR _b$119704[ebp+64], edi
	mov	DWORD PTR _b$119704[ebp+60], esi
	mov	BYTE PTR _b$119704[ebp+44], 0
	cmp	DWORD PTR _b$119704[ebp+36], ebx
	jb	SHORT $LN378@refreshBoo
	mov	ecx, DWORD PTR _b$119704[ebp+16]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN378@refreshBoo:
	mov	DWORD PTR _b$119704[ebp+32], esi
	xor	esi, esi
$LN420@refreshBoo:
; Line 488
	mov	edx, DWORD PTR _f$[ebp]
	mov	eax, DWORD PTR [edx+4]
	test	BYTE PTR _f$[ebp+eax+12], 1
; Line 530
	mov	BYTE PTR _b$119704[ebp+16], 0
	mov	DWORD PTR _b$119704[ebp+36], edi
	je	$LL417@refreshBoo
; Line 492
	jmp	SHORT $LN10@refreshBoo
$LN410@refreshBoo:
	lea	ecx, DWORD PTR _b$119704[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	call	??1Bookmark@@QAE@XZ
$LN10@refreshBoo:
; Line 531
	lea	edi, DWORD PTR _f$[ebp+16]
	cmp	DWORD PTR _f$[ebp+100], esi
	je	SHORT $LN421@refreshBoo
	mov	ecx, edi
	call	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAE_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	test	al, al
	jne	SHORT $LN394@refreshBoo
	xor	edi, edi
$LN394@refreshBoo:
	mov	ecx, DWORD PTR _f$[ebp+100]
	push	ecx
	call	DWORD PTR __imp__fclose
	add	esp, 4
	test	eax, eax
	je	SHORT $LN393@refreshBoo
$LN421@refreshBoo:
	xor	edi, edi
$LN393@refreshBoo:
	lea	ecx, DWORD PTR _f$[ebp+16]
	mov	BYTE PTR _f$[ebp+96], 0
	mov	BYTE PTR _f$[ebp+89], 0
	call	DWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ
	mov	edx, DWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IAEXPAU_iobuf@@W4_Initfl@23@@Z@4HA
	mov	DWORD PTR _f$[ebp+100], esi
	mov	DWORD PTR _f$[ebp+92], edx
	mov	DWORD PTR _f$[ebp+84], esi
	cmp	edi, esi
	jne	SHORT $LN390@refreshBoo
	mov	eax, DWORD PTR _f$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	esi
	push	2
	lea	ecx, DWORD PTR _f$[ebp+ecx]
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
$LN390@refreshBoo:
; Line 532
	lea	ecx, DWORD PTR _f$[ebp+104]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UAE@XZ ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >
	lea	ecx, DWORD PTR _f$[ebp+104]
	call	DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?refreshBookmarks@Menu@@QAEXXZ$0:
	lea	ecx, DWORD PTR _f$[ebp]
	jmp	??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QAEXXZ
__unwindfunclet$?refreshBookmarks@Menu@@QAEXXZ$1:
	lea	ecx, DWORD PTR _b$119704[ebp]
	jmp	??1Bookmark@@QAE@XZ
__ehhandler$?refreshBookmarks@Menu@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-592]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?refreshBookmarks@Menu@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?refreshBookmarks@Menu@@QAEXXZ ENDP			; Menu::refreshBookmarks
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	??0Menu@@QAE@XZ					; Menu::Menu
EXTRN	??1DBCFile@@QAE@XZ:PROC				; DBCFile::~DBCFile
EXTRN	?end@DBCFile@@QAE?AVIterator@1@XZ:PROC		; DBCFile::end
EXTRN	?begin@DBCFile@@QAE?AVIterator@1@XZ:PROC	; DBCFile::begin
EXTRN	?open@DBCFile@@QAEXXZ:PROC			; DBCFile::open
EXTRN	??0DBCFile@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; DBCFile::DBCFile
xdata$x	SEGMENT
__ehfuncinfo$??0Menu@@QAE@XZ DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$??0Menu@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0Menu@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Menu@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0Menu@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0Menu@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0Menu@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0Menu@@QAE@XZ$4
	DD	02H
	DD	FLAT:__unwindfunclet$??0Menu@@QAE@XZ$4
	DD	05H
	DD	FLAT:__unwindfunclet$??0Menu@@QAE@XZ$5
	DD	06H
	DD	FLAT:__unwindfunclet$??0Menu@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??0Menu@@QAE@XZ$7
; Function compile flags: /Ogtp
xdata$x	ENDS
_TEXT	SEGMENT
$T148751 = -204						; size = 8
__Vptr$149846 = -196					; size = 4
$T149821 = -196						; size = 4
$T149838 = -192						; size = 4
$T149741 = -192						; size = 4
_y$ = -188						; size = 4
_i$119188 = -184					; size = 8
_this$GSCopy$ = -176					; size = 4
_e$119210 = -172					; size = 76
_f$ = -96						; size = 52
$T119185 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
??0Menu@@QAE@XZ PROC					; Menu::Menu
; _this$ = ecx
; Line 11
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0Menu@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	edi, ecx
	mov	DWORD PTR _this$GSCopy$[ebp], edi
	xor	ebx, ebx
	mov	DWORD PTR [edi], OFFSET ??_7Menu@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], ebx
	mov	DWORD PTR [edi+32], ebx
	mov	DWORD PTR [edi+36], ebx
	mov	DWORD PTR [edi+40], ebx
	mov	DWORD PTR [edi+48], ebx
	mov	DWORD PTR [edi+52], ebx
	mov	DWORD PTR [edi+56], ebx
	push	21					; 00000015H
	mov	esi, 15					; 0000000fH
	push	OFFSET $SG119186
	lea	ecx, DWORD PTR $T119185[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	DWORD PTR $T119185[ebp+20], esi
	mov	DWORD PTR $T119185[ebp+16], ebx
	mov	BYTE PTR $T119185[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR $T119185[ebp]
	push	eax
	lea	ecx, DWORD PTR _f$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	call	??0DBCFile@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; DBCFile::DBCFile
	cmp	DWORD PTR $T119185[ebp+20], 16		; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	jb	SHORT $LN73@Menu@2
	mov	ecx, DWORD PTR $T119185[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN73@Menu@2:
; Line 12
	lea	ecx, DWORD PTR _f$[ebp]
	mov	DWORD PTR $T119185[ebp+20], esi
	mov	DWORD PTR $T119185[ebp+16], ebx
	mov	BYTE PTR $T119185[ebp], bl
	call	?open@DBCFile@@QAEXXZ			; DBCFile::open
; Line 15
	lea	edx, DWORD PTR _i$119188[ebp]
	push	edx
	lea	ecx, DWORD PTR _f$[ebp]
	mov	DWORD PTR _y$[ebp], ebx
	call	?begin@DBCFile@@QAE?AVIterator@1@XZ	; DBCFile::begin
	lea	eax, DWORD PTR $T148751[ebp]
	push	eax
	lea	ecx, DWORD PTR _f$[ebp]
	call	?end@DBCFile@@QAE?AVIterator@1@XZ	; DBCFile::end
	mov	ecx, DWORD PTR _i$119188[ebp]
	cmp	ecx, DWORD PTR [eax]
	je	$LN4@Menu@2
	jmp	SHORT $LN85@Menu@2
	npad	1
$LL375@Menu@2:
	mov	esi, 15					; 0000000fH
$LN85@Menu@2:
; Line 17
	mov	DWORD PTR _e$119210[ebp+36], esi
	mov	DWORD PTR _e$119210[ebp+32], ebx
	mov	BYTE PTR _e$119210[ebp+16], bl
	mov	DWORD PTR _e$119210[ebp+64], esi
	mov	DWORD PTR _e$119210[ebp+60], ebx
	mov	BYTE PTR _e$119210[ebp+44], bl
; Line 19
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _i$119188[ebp+4]
	mov	ecx, DWORD PTR [ecx+48]
	add	ecx, eax
	mov	eax, ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	esi, DWORD PTR [eax+1]
$LL373@Menu@2:
	mov	dl, BYTE PTR [eax]
	inc	eax
	cmp	dl, bl
	jne	SHORT $LL373@Menu@2
	sub	eax, esi
	push	eax
	push	ecx
	lea	ecx, DWORD PTR _e$119210[ebp+16]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 20
	mov	ecx, DWORD PTR _i$119188[ebp+4]
	mov	edx, DWORD PTR _i$119188[ebp]
	mov	ecx, DWORD PTR [ecx+48]
	add	ecx, DWORD PTR [edx+12]
	mov	eax, ecx
	lea	esi, DWORD PTR [eax+1]
$LL374@Menu@2:
	mov	dl, BYTE PTR [eax]
	inc	eax
	cmp	dl, bl
	jne	SHORT $LL374@Menu@2
	sub	eax, esi
	push	eax
	push	ecx
	lea	ecx, DWORD PTR _e$119210[ebp+44]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 25
	mov	esi, DWORD PTR _e$119210[ebp+32]
	mov	edx, DWORD PTR _y$[ebp]
	mov	DWORD PTR _e$119210[ebp], 5
	mov	DWORD PTR _e$119210[ebp+4], edx
	mov	ecx, esi
	cmp	esi, 7
	jb	SHORT $LN178@Menu@2
	mov	ecx, 7
$LN178@Menu@2:
	mov	edi, DWORD PTR _e$119210[ebp+36]
	mov	eax, DWORD PTR _e$119210[ebp+16]
	cmp	edi, 16					; 00000010H
	jae	SHORT $LN189@Menu@2
	lea	eax, DWORD PTR _e$119210[ebp+16]
$LN189@Menu@2:
	push	ecx
	push	OFFSET $SG119240
	push	eax
	call	?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
	add	esp, 12					; 0000000cH
	cmp	eax, ebx
	jne	SHORT $LN377@Menu@2
	cmp	esi, 7
	jae	SHORT $LN179@Menu@2
	or	eax, -1
	jmp	SHORT $LN180@Menu@2
$LN179@Menu@2:
	xor	eax, eax
	cmp	esi, 7
	setne	al
$LN180@Menu@2:
	cmp	eax, ebx
$LN377@Menu@2:
	sete	al
	cmp	al, bl
	jne	$LN2@Menu@2
	mov	ecx, esi
	cmp	esi, 8
	jb	SHORT $LN204@Menu@2
	mov	ecx, 8
$LN204@Menu@2:
	mov	eax, DWORD PTR _e$119210[ebp+16]
	cmp	edi, 16					; 00000010H
	jae	SHORT $LN215@Menu@2
	lea	eax, DWORD PTR _e$119210[ebp+16]
$LN215@Menu@2:
	push	ecx
	push	OFFSET $SG119241
	push	eax
	call	?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
	add	esp, 12					; 0000000cH
	cmp	eax, ebx
	jne	SHORT $LN378@Menu@2
	cmp	esi, 8
	jae	SHORT $LN205@Menu@2
	or	eax, -1
	jmp	SHORT $LN206@Menu@2
$LN205@Menu@2:
	xor	eax, eax
	cmp	esi, 8
	setne	al
$LN206@Menu@2:
	cmp	eax, ebx
$LN378@Menu@2:
	sete	al
	cmp	al, bl
	jne	$LN2@Menu@2
	mov	ecx, esi
	cmp	esi, 7
	jb	SHORT $LN229@Menu@2
	mov	ecx, 7
$LN229@Menu@2:
	mov	eax, DWORD PTR _e$119210[ebp+16]
	cmp	edi, 16					; 00000010H
	jae	SHORT $LN240@Menu@2
	lea	eax, DWORD PTR _e$119210[ebp+16]
$LN240@Menu@2:
	push	ecx
	push	OFFSET $SG119242
	push	eax
	call	?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
	add	esp, 12					; 0000000cH
	cmp	eax, ebx
	jne	SHORT $LN379@Menu@2
	cmp	esi, 7
	jae	SHORT $LN230@Menu@2
	or	eax, -1
	jmp	SHORT $LN231@Menu@2
$LN230@Menu@2:
	xor	eax, eax
	cmp	esi, 7
	setne	al
$LN231@Menu@2:
	cmp	eax, ebx
$LN379@Menu@2:
	sete	al
	cmp	al, bl
	jne	SHORT $LN2@Menu@2
	mov	ecx, esi
	cmp	esi, 9
	jb	SHORT $LN254@Menu@2
	mov	ecx, 9
$LN254@Menu@2:
	mov	eax, DWORD PTR _e$119210[ebp+16]
	cmp	edi, 16					; 00000010H
	jae	SHORT $LN265@Menu@2
	lea	eax, DWORD PTR _e$119210[ebp+16]
$LN265@Menu@2:
	push	ecx
	push	OFFSET $SG119243
	push	eax
	call	?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
	add	esp, 12					; 0000000cH
	cmp	eax, ebx
	jne	SHORT $LN380@Menu@2
	cmp	esi, 9
	jae	SHORT $LN255@Menu@2
	or	eax, -1
	jmp	SHORT $LN256@Menu@2
$LN255@Menu@2:
	xor	eax, eax
	cmp	esi, 9
	setne	al
$LN256@Menu@2:
	cmp	eax, ebx
$LN380@Menu@2:
	sete	al
	cmp	al, bl
	jne	SHORT $LN2@Menu@2
; Line 31
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	mov	eax, 16					; 00000010H
	jmp	SHORT $LN381@Menu@2
$LN2@Menu@2:
; Line 28
	mov	ecx, DWORD PTR ?f24@@3PAVFont@@A	; f24
	mov	eax, 24					; 00000018H
$LN381@Menu@2:
; Line 34
	add	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _e$119210[ebp+72], ecx
	mov	DWORD PTR _e$119210[ebp+12], eax
; Line 35
	mov	DWORD PTR _y$[ebp], eax
; Line 37
	mov	eax, DWORD PTR _e$119210[ebp+16]
	cmp	edi, 16					; 00000010H
	jae	SHORT $LN273@Menu@2
	lea	eax, DWORD PTR _e$119210[ebp+16]
$LN273@Menu@2:
	push	eax
	call	?textwidth@Font@@QAEHPBD@Z		; Font::textwidth
	add	eax, DWORD PTR _e$119210[ebp]
	mov	DWORD PTR _e$119210[ebp+8], eax
; Line 39
	mov	eax, DWORD PTR _this$GSCopy$[ebp]
	mov	edi, DWORD PTR [eax+36]
	lea	eax, DWORD PTR _e$119210[ebp]
	cmp	eax, edi
	jae	SHORT $LN277@Menu@2
	mov	eax, DWORD PTR _this$GSCopy$[ebp]
	mov	eax, DWORD PTR [eax+32]
	lea	ecx, DWORD PTR _e$119210[ebp]
	cmp	eax, ecx
	ja	SHORT $LN277@Menu@2
	sub	ecx, eax
	mov	eax, 1808407283				; 6bca1af3H
	imul	ecx
	mov	ecx, DWORD PTR _this$GSCopy$[ebp]
	sar	edx, 5
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	ecx, 32					; 00000020H
	add	esi, edx
	cmp	edi, DWORD PTR [ecx+8]
	jne	SHORT $LN276@Menu@2
	push	1
	call	?_Reserve@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IAEXI@Z ; std::vector<MapEntry,std::allocator<MapEntry> >::_Reserve
$LN276@Menu@2:
	mov	eax, DWORD PTR _this$GSCopy$[ebp]
	imul	esi, 76					; 0000004cH
	mov	ecx, DWORD PTR [eax+36]
	add	esi, DWORD PTR [eax+32]
	mov	DWORD PTR $T149741[ebp], ecx
	mov	DWORD PTR $T149821[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	cmp	ecx, ebx
	je	SHORT $LN296@Menu@2
	push	esi
	call	??0MapEntry@@QAE@ABU0@@Z
$LN296@Menu@2:
	mov	eax, DWORD PTR _this$GSCopy$[ebp]
	add	DWORD PTR [eax+36], 76			; 0000004cH
	jmp	SHORT $LN275@Menu@2
$LN277@Menu@2:
	mov	esi, DWORD PTR _this$GSCopy$[ebp]
	cmp	edi, DWORD PTR [esi+40]
	jne	SHORT $LN274@Menu@2
	push	1
	lea	ecx, DWORD PTR [esi+32]
	call	?_Reserve@?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@IAEXI@Z ; std::vector<MapEntry,std::allocator<MapEntry> >::_Reserve
$LN274@Menu@2:
	mov	ecx, DWORD PTR [esi+36]
	mov	DWORD PTR __Vptr$149846[ebp], ecx
	mov	DWORD PTR $T149838[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	cmp	ecx, ebx
	je	SHORT $LN313@Menu@2
	lea	edx, DWORD PTR _e$119210[ebp]
	push	edx
	call	??0MapEntry@@QAE@ABU0@@Z
$LN313@Menu@2:
	add	DWORD PTR [esi+36], 76			; 0000004cH
$LN275@Menu@2:
; Line 40
	mov	esi, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR _e$119210[ebp+64], esi
	jb	SHORT $LN332@Menu@2
	mov	eax, DWORD PTR _e$119210[ebp+44]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN332@Menu@2:
	mov	DWORD PTR _e$119210[ebp+64], 15		; 0000000fH
	mov	DWORD PTR _e$119210[ebp+60], ebx
	mov	BYTE PTR _e$119210[ebp+44], bl
	cmp	DWORD PTR _e$119210[ebp+36], esi
	jb	SHORT $LN354@Menu@2
	mov	ecx, DWORD PTR _e$119210[ebp+16]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN354@Menu@2:
; Line 15
	mov	edx, DWORD PTR _i$119188[ebp+4]
	mov	eax, DWORD PTR [edx+28]
	add	DWORD PTR _i$119188[ebp], eax
	lea	ecx, DWORD PTR $T148751[ebp]
	push	ecx
	lea	ecx, DWORD PTR _f$[ebp]
	call	?end@DBCFile@@QAE?AVIterator@1@XZ	; DBCFile::end
	mov	ecx, DWORD PTR _i$119188[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	$LL375@Menu@2
	mov	edi, DWORD PTR _this$GSCopy$[ebp]
$LN4@Menu@2:
; Line 42
	or	esi, -1
; Line 48
	mov	ecx, edi
	mov	DWORD PTR [edi+4], esi
	mov	DWORD PTR [edi+8], ebx
	mov	DWORD PTR [edi+28], ebx
	mov	DWORD PTR [edi+80], ebx
	call	?refreshBookmarks@Menu@@QAEXXZ		; Menu::refreshBookmarks
; Line 56
	mov	ecx, edi
	mov	BYTE PTR [edi+64], 1
	mov	DWORD PTR [edi+68], -1028390912		; c2b40000H
	mov	DWORD PTR [edi+72], -1041235968		; c1f00000H
	mov	DWORD PTR [edi+76], ebx
	mov	DWORD PTR [edi+84], esi
	call	?randBackground@Menu@@QAEXXZ		; Menu::randBackground
; Line 57
	lea	ecx, DWORD PTR _f$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	call	??1DBCFile@@QAE@XZ			; DBCFile::~DBCFile
	mov	eax, edi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0Menu@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$GSCopy$[ebp]
	jmp	??1AppState@@UAE@XZ			; AppState::~AppState
__unwindfunclet$??0Menu@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$GSCopy$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1?$vector@UMapEntry@@V?$allocator@UMapEntry@@@std@@@std@@QAE@XZ ; std::vector<MapEntry,std::allocator<MapEntry> >::~vector<MapEntry,std::allocator<MapEntry> >
__unwindfunclet$??0Menu@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$GSCopy$[ebp]
	add	ecx, 48					; 00000030H
	jmp	??1?$vector@UBookmark@@V?$allocator@UBookmark@@@std@@@std@@QAE@XZ ; std::vector<Bookmark,std::allocator<Bookmark> >::~vector<Bookmark,std::allocator<Bookmark> >
__unwindfunclet$??0Menu@@QAE@XZ$3:
	lea	ecx, DWORD PTR $T119185[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0Menu@@QAE@XZ$4:
	lea	ecx, DWORD PTR _f$[ebp]
	jmp	??1DBCFile@@QAE@XZ			; DBCFile::~DBCFile
__unwindfunclet$??0Menu@@QAE@XZ$5:
	lea	ecx, DWORD PTR _e$119210[ebp]
	jmp	??1MapEntry@@QAE@XZ
__unwindfunclet$??0Menu@@QAE@XZ$6:
	mov	eax, DWORD PTR $T149741[ebp]
	push	eax
	mov	ecx, DWORD PTR $T149821[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$??0Menu@@QAE@XZ$7:
	mov	eax, DWORD PTR __Vptr$149846[ebp]
	push	eax
	mov	ecx, DWORD PTR $T149838[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??0Menu@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0Menu@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0Menu@@QAE@XZ ENDP					; Menu::Menu
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4039000000000000
PUBLIC	__real@4028000000000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@408f400000000000
EXTRN	?gStates@@3V?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@A:BYTE ; gStates
EXTRN	??0MapViewer@@QAE@PAVWorld@@MM@Z:PROC		; MapViewer::MapViewer
EXTRN	?enterTileInit@World@@QAEXHH@Z:PROC		; World::enterTileInit
EXTRN	?initDisplay@World@@QAEXXZ:PROC			; World::initDisplay
EXTRN	?gWorld@@3PAVWorld@@A:DWORD			; gWorld
EXTRN	_SDL_ShowCursor:PROC
EXTRN	?fullscreen@@3HA:DWORD				; fullscreen
EXTRN	?updateEmitters@Model@@QAEXM@Z:PROC		; Model::updateEmitters
;	COMDAT __real@3ff0000000000000
; File c:\programovani\wow editor\test\src\editor\vec3d.h
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@4039000000000000
CONST	SEGMENT
__real@4039000000000000 DQ 04039000000000000r	; 25
CONST	ENDS
;	COMDAT __real@4028000000000000
CONST	SEGMENT
__real@4028000000000000 DQ 04028000000000000r	; 12
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$?tick@Menu@@UAEXMM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?tick@Menu@@UAEXMM@Z$0
__ehfuncinfo$?tick@Menu@@UAEXMM@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?tick@Menu@@UAEXMM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
_TEXT	SEGMENT
_p$119308 = -32						; size = 12
$T150084 = -32						; size = 12
$T150154 = -20						; size = 4
$T150134 = -20						; size = 4
tv423 = -16						; size = 4
$T150153 = -16						; size = 4
$T150135 = -16						; size = 4
_fz$119303 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
$T150155 = 12						; size = 4
$T150136 = 12						; size = 4
$T150094 = 12						; size = 4
$T150091 = 12						; size = 4
_fx$119302 = 12						; size = 4
_dt$ = 12						; size = 4
?tick@Menu@@UAEXMM@Z PROC				; Menu::tick
; _this$ = ecx
; File c:\programovani\wow editor\test\src\editor\menu.cpp
; Line 93
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?tick@Menu@@UAEXMM@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
; Line 94
	fld	DWORD PTR _dt$[ebp]
	fmul	QWORD PTR __real@408f400000000000
	fadd	DWORD PTR [esi+80]
	fstp	DWORD PTR tv423[ebp]
	mov	eax, DWORD PTR tv423[ebp]
; Line 95
	fld	DWORD PTR tv423[ebp]
	mov	DWORD PTR [esi+80], eax
	call	__ftol2_sse_excpt
	mov	DWORD PTR ?globalTime@@3HA, eax		; globalTime
; Line 96
	mov	ecx, DWORD PTR [esi+76]
	xor	ebx, ebx
	cmp	ecx, ebx
	je	SHORT $LN11@tick
	mov	edx, DWORD PTR _dt$[ebp]
	push	ecx
	mov	DWORD PTR [esp], edx
	call	?updateEmitters@Model@@QAEXM@Z		; Model::updateEmitters
$LN11@tick:
; Line 98
	cmp	DWORD PTR [esi+76], ebx
	jne	SHORT $LN10@tick
	mov	ecx, esi
	call	?randBackground@Menu@@QAEXXZ		; Menu::randBackground
$LN10@tick:
; Line 100
	mov	eax, DWORD PTR [esi+8]
	cmp	eax, 2
	jne	$LN9@tick
; Line 103
	cmp	DWORD PTR ?fullscreen@@3HA, ebx		; fullscreen
	je	SHORT $LN8@tick
	push	ebx
	call	_SDL_ShowCursor
	add	esp, 4
$LN8@tick:
; Line 105
	mov	eax, DWORD PTR [esi+28]
	mov	DWORD PTR ?gWorld@@3PAVWorld@@A, eax	; gWorld
; Line 107
	mov	ecx, DWORD PTR [esi+28]
	call	?initDisplay@World@@QAEXXZ		; World::initDisplay
; Line 110
	cmp	BYTE PTR [esi+64], bl
	je	$LN7@tick
; Line 115
	mov	edi, DWORD PTR [esi+28]
	fldz
	mov	DWORD PTR [esi+20], ebx
	mov	DWORD PTR [esi+24], ebx
	cmp	DWORD PTR [edi+20824], ebx
	jle	SHORT $LN6@tick
; Line 118
	fild	DWORD PTR [esi+12]
	fld	QWORD PTR __real@4028000000000000
	fdiv	ST(1), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR _fx$119302[ebp]
; Line 119
	fidivr	DWORD PTR [esi+16]
	fstp	DWORD PTR _fz$119303[ebp]
; Line 121
	fld	DWORD PTR _fx$119302[ebp]
	fld	ST(0)
	call	__ftol2_sse_excpt
; Line 122
	fld	DWORD PTR _fz$119303[ebp]
	fld	ST(0)
	mov	DWORD PTR [esi+24], eax
	call	__ftol2_sse_excpt
; Line 124
	fld	QWORD PTR __real@4080aaaaa0000000
	fmul	ST(2), ST(0)
	mov	DWORD PTR [esi+20], eax
	fxch	ST(2)
	mov	DWORD PTR [edi+20932], ebx
	fstp	DWORD PTR $T150084[ebp]
	mov	ecx, DWORD PTR $T150084[ebp]
	fmulp	ST(1), ST(0)
	mov	DWORD PTR [edi+20928], ecx
	fstp	DWORD PTR $T150084[ebp+8]
	mov	edx, DWORD PTR $T150084[ebp+8]
	mov	DWORD PTR [edi+20936], edx
; Line 125
	mov	eax, DWORD PTR [esi+28]
	mov	BYTE PTR [eax+20784], 1
; Line 128
	jmp	$LN41@tick
$LN6@tick:
; Line 131
	mov	ecx, DWORD PTR [edi+20808]
	sub	ecx, DWORD PTR [edi+20804]
	mov	eax, 954437177				; 38e38e39H
	imul	ecx
	sar	edx, 4
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	cmp	ecx, 1
	jb	SHORT $LN4@tick
	mov	eax, DWORD PTR [edi+20804]
	mov	edx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _p$119308[ebp], edx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _p$119308[ebp+4], ecx
	mov	DWORD PTR _p$119308[ebp+8], edx
	jmp	SHORT $LN33@tick
$LN4@tick:
; Line 132
	mov	DWORD PTR _p$119308[ebp], ebx
	mov	DWORD PTR _p$119308[ebp+4], ebx
	mov	DWORD PTR _p$119308[ebp+8], ebx
$LN33@tick:
; Line 134
	fld	DWORD PTR _p$119308[ebp]
	fld	ST(0)
	fld	QWORD PTR __real@4080aaaaa0000000
	fdiv	ST(1), ST(0)
	fxch	ST(1)
	call	__ftol2_sse_excpt
; Line 135
	fld	DWORD PTR _p$119308[ebp+8]
	fld	ST(0)
	mov	DWORD PTR [esi+24], eax
	fdivrp	ST(2), ST(0)
	fxch	ST(1)
	call	__ftol2_sse_excpt
; Line 137
	fxch	ST(1)
	fadd	ST(0), ST(2)
	mov	DWORD PTR [esi+20], eax
	fstp	DWORD PTR $T150136[ebp]
	mov	eax, DWORD PTR $T150136[ebp]
	fld	DWORD PTR _p$119308[ebp+4]
	mov	DWORD PTR [edi+20928], eax
	fadd	QWORD PTR __real@4039000000000000
	fstp	DWORD PTR $T150135[ebp]
	mov	ecx, DWORD PTR $T150135[ebp]
	fadd	ST(0), ST(1)
	mov	DWORD PTR [edi+20932], ecx
	fstp	DWORD PTR $T150134[ebp]
	mov	edx, DWORD PTR $T150134[ebp]
	mov	DWORD PTR [edi+20936], edx
$LN41@tick:
; Line 139
	mov	eax, DWORD PTR [esi+28]
	fld	DWORD PTR [eax+20928]
	fadd	ST(0), ST(1)
	fstp	DWORD PTR $T150155[ebp]
	mov	ecx, DWORD PTR $T150155[ebp]
	fadd	DWORD PTR [eax+20932]
	fstp	DWORD PTR $T150154[ebp]
	fld	DWORD PTR [eax+20936]
	mov	edx, DWORD PTR $T150154[ebp]
	fsub	QWORD PTR __real@3ff0000000000000
	mov	DWORD PTR [eax+20940], ecx
	mov	DWORD PTR [eax+20944], edx
	fstp	DWORD PTR $T150153[ebp]
	mov	ecx, DWORD PTR $T150153[ebp]
	mov	DWORD PTR [eax+20948], ecx
; Line 141
	mov	DWORD PTR [esi+68], -1028390912		; c2b40000H
; Line 142
	mov	DWORD PTR [esi+72], -1041235968		; c1f00000H
$LN7@tick:
; Line 145
	mov	edx, DWORD PTR [esi+20]
	mov	eax, DWORD PTR [esi+24]
	mov	ecx, DWORD PTR [esi+28]
	push	edx
	push	eax
	call	?enterTileInit@World@@QAEXHH@Z		; World::enterTileInit
; Line 147
	push	100					; 00000064H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T150091[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], ebx
	cmp	eax, ebx
	je	SHORT $LN14@tick
	mov	ecx, DWORD PTR [esi+72]
	mov	edx, DWORD PTR [esi+68]
	sub	esp, 8
	mov	DWORD PTR [esp+4], ecx
	mov	ecx, DWORD PTR [esi+28]
	mov	DWORD PTR [esp], edx
	push	ecx
	mov	ecx, eax
	call	??0MapViewer@@QAE@PAVWorld@@MM@Z	; MapViewer::MapViewer
	jmp	SHORT $LN15@tick
$LN14@tick:
	xor	eax, eax
$LN15@tick:
; Line 149
	lea	edx, DWORD PTR $T150094[ebp]
	or	edi, -1
	push	edx
	mov	ecx, OFFSET ?gStates@@3V?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@A ; gStates
	mov	DWORD PTR __$EHRec$[ebp+8], edi
	mov	DWORD PTR $T150094[ebp], eax
	call	?push_back@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAEXABQAVAppState@@@Z ; std::vector<AppState *,std::allocator<AppState *> >::push_back
; Line 156
	mov	ecx, DWORD PTR [esi+76]
	mov	DWORD PTR [esi+4], edi
	mov	DWORD PTR [esi+28], ebx
	mov	DWORD PTR [esi+8], 3
	cmp	ecx, ebx
	je	SHORT $LN16@tick
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	call	edx
$LN16@tick:
; Line 157
	mov	DWORD PTR [esi+76], ebx
; Line 170
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
$LN9@tick:
; Line 159
	cmp	eax, 3
	jne	SHORT $LN1@tick
; Line 161
	push	1
	call	_SDL_ShowCursor
	add	esp, 4
; Line 163
	mov	ecx, esi
	mov	DWORD PTR [esi+8], ebx
	call	?refreshBookmarks@Menu@@QAEXXZ		; Menu::refreshBookmarks
; Line 164
	mov	BYTE PTR [esi+64], 1
; Line 165
	mov	DWORD PTR ?gWorld@@3PAVWorld@@A, ebx	; gWorld
$LN1@tick:
; Line 170
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?tick@Menu@@UAEXMM@Z$0:
	mov	eax, DWORD PTR $T150091[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?tick@Menu@@UAEXMM@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?tick@Menu@@UAEXMM@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?tick@Menu@@UAEXMM@Z ENDP				; Menu::tick
END
