; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\programovani\WoW Editor\Test\src\Editor\MapViewer.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?MouseX@@3HA					; MouseX
PUBLIC	?rh@@3MA					; rh
PUBLIC	?MoveObj@@3_NA					; MoveObj
PUBLIC	?rv@@3MA					; rv
PUBLIC	?mh@@3MA					; mh
PUBLIC	?CurSelection@@3PAVnameEntry@@A			; CurSelection
PUBLIC	?MouseY@@3HA					; MouseY
PUBLIC	?textureBrush@@3Vbrush@@A			; textureBrush
PUBLIC	?LastClicked@@3PAVframe@@A			; LastClicked
PUBLIC	?Selection@@3PAVnameEntry@@A			; Selection
PUBLIC	?Sel@@3IA					; Sel
PUBLIC	?mv@@3MA					; mv
PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?AreaID@AreaDB@@2IB				; AreaDB::AreaID
PUBLIC	?Continent@AreaDB@@2IB				; AreaDB::Continent
PUBLIC	?Region@AreaDB@@2IB				; AreaDB::Region
PUBLIC	?Flags@AreaDB@@2IB				; AreaDB::Flags
PUBLIC	?Name@AreaDB@@2IB				; AreaDB::Name
PUBLIC	?Selecting@@3_NA				; Selecting
PUBLIC	?TestSelection@@3_NA				; TestSelection
PUBLIC	?DetailSelection@@3_NA				; DetailSelection
PUBLIC	?LShiftDown@@3_NA				; LShiftDown
PUBLIC	?RShiftDown@@3_NA				; RShiftDown
PUBLIC	?LAltDown@@3_NA					; LAltDown
PUBLIC	?RAltDown@@3_NA					; RAltDown
PUBLIC	?LCtrlDown@@3_NA				; LCtrlDown
PUBLIC	?RCtrlDown@@3_NA				; RCtrlDown
PUBLIC	?leftMouse@@3_NA				; leftMouse
PUBLIC	?leftClicked@@3_NA				; leftClicked
PUBLIC	?TileMode@@3_NA					; TileMode
PUBLIC	?painting@@3_NA					; painting
PUBLIC	?BrushRadius@@3MA				; BrushRadius
PUBLIC	?BrushType@@3HA					; BrushType
PUBLIC	?brushPressure@@3MA				; brushPressure
PUBLIC	?brushLevel@@3MA				; brushLevel
PUBLIC	?terrainMode@@3HA				; terrainMode
PUBLIC	?Saving@@3_NA					; Saving
_BSS	SEGMENT
?MouseX@@3HA DD	01H DUP (?)				; MouseX
?rh@@3MA DD	01H DUP (?)				; rh
?MoveObj@@3_NA DB 01H DUP (?)				; MoveObj
	ALIGN	4

?rv@@3MA DD	01H DUP (?)				; rv
?mh@@3MA DD	01H DUP (?)				; mh
?CurSelection@@3PAVnameEntry@@A DD 01H DUP (?)		; CurSelection
?MouseY@@3HA DD	01H DUP (?)				; MouseY
?textureBrush@@3Vbrush@@A DB 010018H DUP (?)		; textureBrush
?LastClicked@@3PAVframe@@A DD 01H DUP (?)		; LastClicked
?Selection@@3PAVnameEntry@@A DD 01H DUP (?)		; Selection
?Sel@@3IA DD	01H DUP (?)				; Sel
?mv@@3MA DD	01H DUP (?)				; mv
?Selecting@@3_NA DB 01H DUP (?)				; Selecting
	ALIGN	4

?TestSelection@@3_NA DB 01H DUP (?)			; TestSelection
	ALIGN	4

?LShiftDown@@3_NA DB 01H DUP (?)			; LShiftDown
	ALIGN	4

?RShiftDown@@3_NA DB 01H DUP (?)			; RShiftDown
	ALIGN	4

?LAltDown@@3_NA DB 01H DUP (?)				; LAltDown
	ALIGN	4

?RAltDown@@3_NA DB 01H DUP (?)				; RAltDown
	ALIGN	4

?LCtrlDown@@3_NA DB 01H DUP (?)				; LCtrlDown
	ALIGN	4

?RCtrlDown@@3_NA DB 01H DUP (?)				; RCtrlDown
	ALIGN	4

?leftMouse@@3_NA DB 01H DUP (?)				; leftMouse
	ALIGN	4

?leftClicked@@3_NA DB 01H DUP (?)			; leftClicked
	ALIGN	4

?TileMode@@3_NA DB 01H DUP (?)				; TileMode
	ALIGN	4

?painting@@3_NA DB 01H DUP (?)				; painting
	ALIGN	4

?terrainMode@@3HA DD 01H DUP (?)			; terrainMode
?Saving@@3_NA DB 01H DUP (?)				; Saving
_BSS	ENDS
CONST	SEGMENT
$SG82267 DB	'Brush Settings', 00H
$SG82915 DB	00H
$SG82278 DB	'Hardness: %.2f', 00H
	ORG $+1
$SG82283 DB	'Radius: %.1f', 00H
	ORG $+3
$SG82288 DB	'Pressure: %.2f', 00H
	ORG $+1
$SG82422 DB	'[World of Warcraft Studio - Editor] - OpenGL Error %d', 0aH
	DB	00H
	ORG $+1
$SG82450 DB	'%.2f fps', 00H
	ORG $+3
$SG82457 DB	'%s', 00H
	ORG $+1
$SG82465 DB	'%s', 00H
	ORG $+1
$SG82469 DB	'Loading...', 00H
	ORG $+1
$SG82471 DB	'Out of bounds', 00H
	ORG $+2
$SG82475 DB	'[World of Warcraft Studio - Editor] - OpenGL Error %d', 0aH
	DB	00H
	ORG $+1
$SG82480 DB	'[World of Warcraft Studio - Editor] - OpenGL Error %d', 0aH
	DB	00H
	ORG $+1
$SG82482 DB	'%.2f fps', 00H
	ORG $+3
$SG82489 DB	'%s', 00H
	ORG $+1
$SG82496 DB	'%s', 00H
	ORG $+1
$SG82502 DB	'%02d:%02d', 00H
	ORG $+2
$SG82504 DB	'Brush Type: Flat', 00H
	ORG $+3
$SG82507 DB	'Brush Type: Linear', 00H
	ORG $+1
$SG82510 DB	'Brush Type: Smooth', 00H
	ORG $+1
$SG82512 DB	'Terrain Mode: Raise/Lower', 00H
	ORG $+2
$SG82513 DB	'Brush Radius: %.2f', 00H
	ORG $+1
$SG82515 DB	'Terrain Mode: Flatten/Blur', 00H
	ORG $+1
$SG82517 DB	'Brush Radius: %.2f (Blur 30)', 00H
	ORG $+3
$SG82519 DB	'Brush Radius: %.2f', 00H
	ORG $+1
$SG82523 DB	'%s', 00H
	ORG $+1
$SG82524 DB	'%UniqueID: %d', 00H
	ORG $+2
$SG82525 DB	'Pos: (%.2f, %.2f, %.2f)', 00H
$SG82526 DB	'Rot: (%.2f, %.2f, %.2f)', 00H
$SG82528 DB	'Scale: %d', 00H
	ORG $+2
$SG82529 DB	'Textures Used: %d', 00H
	ORG $+2
$SG82534 DB	'%d - %s', 00H
$SG82537 DB	'%s', 00H
	ORG $+1
$SG82538 DB	'%UniqueID: %d', 00H
	ORG $+2
$SG82539 DB	'Pos: (%.2f, %.2f, %.2f)', 00H
$SG82540 DB	'Rot: (%.2f, %.2f, %.2f)', 00H
$SG82541 DB	'Lower Extents: (%.2f, %.2f, %.2f)', 00H
	ORG $+2
$SG82542 DB	'Upper Extents: (%.2f, %.2f, %.2f)', 00H
	ORG $+2
$SG82543 DB	'Textures Used: %d', 00H
	ORG $+2
$SG82549 DB	'%d - %s', 00H
$SG82551 DB	'%d - %s', 00H
$SG82555 DB	'Map Chunk %d, %d from Tile %d, %d', 00H
	ORG $+2
$SG82556 DB	'Flags %x', 00H
	ORG $+3
$SG82558 DB	'Shadows Enabled', 00H
$SG82560 DB	'Impassible Chunk Enabled', 00H
	ORG $+3
$SG82562 DB	'River Enabled', 00H
	ORG $+2
$SG82564 DB	'Ocean Enabled', 00H
	ORG $+2
$SG82566 DB	'Lava Enabled', 00H
	ORG $+3
$SG82567 DB	'Textures %d', 00H
$SG82573 DB	'%d - %s  Flags - %x Effect ID - %d', 00H
	ORG $+1
$SG82580 DB	'%d - World\NoDXT\%s', 00H
$SG82739 DB	'%s', 00H
	ORG $+1
$SG82740 DB	'%s', 00H
	ORG $+1
$SG82741 DB	'(%.0f, %.0f, %.0f) Tile %.0f %.0f (%.0f, %.0f)', 00H
	ORG $+1
$SG82745 DB	'%s', 00H
	ORG $+1
$SG82746 DB	'%UniqueID: %d', 00H
	ORG $+2
$SG82747 DB	'Pos: (%.2f, %.2f, %.2f)', 00H
$SG82748 DB	'Rot: (%.2f, %.2f, %.2f)', 00H
$SG82750 DB	'Scale: %d', 00H
	ORG $+2
$SG82751 DB	'Textures Used: %d', 00H
	ORG $+2
$SG82756 DB	'%d - %s', 00H
$SG82759 DB	'%s', 00H
	ORG $+1
$SG82760 DB	'%UniqueID: %d', 00H
	ORG $+2
$SG82761 DB	'Pos: (%.2f, %.2f, %.2f)', 00H
$SG82762 DB	'Rot: (%.2f, %.2f, %.2f)', 00H
$SG82763 DB	'Lower Extents: (%.2f, %.2f, %.2f)', 00H
	ORG $+2
$SG82764 DB	'Upper Extents: (%.2f, %.2f, %.2f)', 00H
	ORG $+2
$SG82765 DB	'Textures Used: %d', 00H
	ORG $+2
$SG82771 DB	'%d - %s', 00H
$SG82773 DB	'%d - %s', 00H
$SG82777 DB	'Map Chunk %d, %d from Tile %d, %d', 00H
	ORG $+2
$SG82778 DB	'Flags %x', 00H
	ORG $+3
$SG82780 DB	'Shadows Enabled', 00H
$SG82782 DB	'Impassible Chunk Enabled', 00H
	ORG $+3
$SG82784 DB	'River Enabled', 00H
	ORG $+2
$SG82786 DB	'Ocean Enabled', 00H
	ORG $+2
$SG82788 DB	'Lava Enabled', 00H
	ORG $+3
$SG82789 DB	'Textures %d', 00H
$SG82795 DB	'%d - %s  Flags - %x Effect ID - %d', 00H
	ORG $+1
$SG82802 DB	'%d - World\NoDXT\%s', 00H
$SG82806 DB	'(%.0f, %.0f, %.0f) Tile %.0f %.0f (%.0f, %.0f)', 00H
	ORG $+1
$SG82809 DB	'Loading...', 00H
	ORG $+1
$SG82811 DB	'Out of bounds', 00H
	ORG $+2
$SG82813 DB	'[World of Warcraft Studio - Editor] - OpenGL Error %d', 0aH
	DB	00H
	ORG $+1
$SG82910 DB	'a', 00H
	ORG $+2
$SG82911 DB	'bookmarks.txt', 00H
	ORG $+2
$SG82921 DB	'Unknown location', 00H
	ORG $+3
$SG82927 DB	'%s %f %f %f  %f %f  %s', 0aH, 00H
CONST	ENDS
_DATA	SEGMENT
?DetailSelection@@3_NA DB 01H				; DetailSelection
	ORG $+3
?BrushRadius@@3MA DD 041200000r			; 10	; BrushRadius
?BrushType@@3HA DD 02H					; BrushType
?brushPressure@@3MA DD 03f666666r		; 0.9	; brushPressure
?brushLevel@@3MA DD 0437f0000r			; 255	; brushLevel
_DATA	ENDS
;	COMDAT ?Name@AreaDB@@2IB
CONST	SEGMENT
?Name@AreaDB@@2IB DD 0bH				; AreaDB::Name
CONST	ENDS
;	COMDAT ?Flags@AreaDB@@2IB
CONST	SEGMENT
?Flags@AreaDB@@2IB DD 03H				; AreaDB::Flags
CONST	ENDS
;	COMDAT ?Region@AreaDB@@2IB
CONST	SEGMENT
?Region@AreaDB@@2IB DD 02H				; AreaDB::Region
CONST	ENDS
;	COMDAT ?Continent@AreaDB@@2IB
CONST	SEGMENT
?Continent@AreaDB@@2IB DD 01H				; AreaDB::Continent
CONST	ENDS
;	COMDAT ?AreaID@AreaDB@@2IB
CONST	SEGMENT
?AreaID@AreaDB@@2IB DD 00H				; AreaDB::AreaID
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
; Line 345
	push	ebp
	mov	ebp, esp
	push	esi
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
; Line 346
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Ogtp
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx
; Line 354
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
; Line 355
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN6@scalar
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogtp
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
; Line 56
	push	ebp
	mov	ebp, esp
; Line 57
	mov	eax, DWORD PTR __Where$[ebp]
; Line 58
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; Line 62
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
; Function compile flags: /Ogtp
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 490
	push	ebp
	mov	ebp, esp
; Line 491
	mov	eax, DWORD PTR __First$[ebp]
	lea	edx, DWORD PTR [eax+1]
	npad	7
$LL3@length:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL3@length
	sub	eax, edx
; Line 492
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
EXTRN	_memcpy:PROC
; Function compile flags: /Ogtp
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT
; Line 496
	push	ebp
	mov	ebp, esp
; Line 498
	pop	ebp
; Line 497
	jmp	_memcpy
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
EXTRN	__imp__memmove:PROC
; Function compile flags: /Ogtp
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT
; Line 516
	push	ebp
	mov	ebp, esp
; Line 518
	pop	ebp
; Line 517
	jmp	DWORD PTR __imp__memmove
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
; Function compile flags: /Ogtp
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT
; Line 526
	push	ebp
	mov	ebp, esp
; Line 527
	mov	eax, DWORD PTR __Right$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	edx, DWORD PTR __Left$[ebp]
	mov	BYTE PTR [edx], cl
; Line 528
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
PUBLIC	_fabsf
EXTRN	__fltused:DWORD
; Function compile flags: /Ogtp
;	COMDAT _fabsf
_TEXT	SEGMENT
tv129 = 8						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\math.h
; Line 395
	push	ebp
	mov	ebp, esp
	fld	DWORD PTR __X$[ebp]
	fabs
	fstp	DWORD PTR tv129[ebp]
	fld	DWORD PTR tv129[ebp]
	pop	ebp
	ret	0
_fabsf	ENDP
_TEXT	ENDS
PUBLIC	_cosf
EXTRN	__CIcos:PROC
; Function compile flags: /Ogtp
;	COMDAT _cosf
_TEXT	SEGMENT
tv69 = 8						; size = 4
__X$ = 8						; size = 4
_cosf	PROC						; COMDAT
; Line 410
	push	ebp
	mov	ebp, esp
	fld	DWORD PTR __X$[ebp]
	call	__CIcos
	fstp	DWORD PTR tv69[ebp]
	fld	DWORD PTR tv69[ebp]
	pop	ebp
	ret	0
_cosf	ENDP
_TEXT	ENDS
PUBLIC	_powf
EXTRN	__CIpow:PROC
; Function compile flags: /Ogtp
;	COMDAT _powf
_TEXT	SEGMENT
tv72 = 8						; size = 4
__X$ = 8						; size = 4
__Y$ = 12						; size = 4
_powf	PROC						; COMDAT
; Line 428
	push	ebp
	mov	ebp, esp
	fld	DWORD PTR __X$[ebp]
	fld	DWORD PTR __Y$[ebp]
	call	__CIpow
	fstp	DWORD PTR tv72[ebp]
	fld	DWORD PTR tv72[ebp]
	pop	ebp
	ret	0
_powf	ENDP
_TEXT	ENDS
PUBLIC	_sinf
EXTRN	__CIsin:PROC
; Function compile flags: /Ogtp
;	COMDAT _sinf
_TEXT	SEGMENT
tv69 = 8						; size = 4
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT
; Line 430
	push	ebp
	mov	ebp, esp
	fld	DWORD PTR __X$[ebp]
	call	__CIsin
	fstp	DWORD PTR tv69[ebp]
	fld	DWORD PTR tv69[ebp]
	pop	ebp
	ret	0
_sinf	ENDP
_TEXT	ENDS
PUBLIC	_sqrtf
EXTRN	__CIsqrt:PROC
; Function compile flags: /Ogtp
;	COMDAT _sqrtf
_TEXT	SEGMENT
tv69 = 8						; size = 4
__X$ = 8						; size = 4
_sqrtf	PROC						; COMDAT
; Line 434
	push	ebp
	mov	ebp, esp
	fld	DWORD PTR __X$[ebp]
	call	__CIsqrt
	fstp	DWORD PTR tv69[ebp]
	fld	DWORD PTR tv69[ebp]
	pop	ebp
	ret	0
_sqrtf	ENDP
_TEXT	ENDS
PUBLIC	?abs@@YAMM@Z					; abs
; Function compile flags: /Ogtp
;	COMDAT ?abs@@YAMM@Z
_TEXT	SEGMENT
tv131 = 8						; size = 4
__X$ = 8						; size = 4
?abs@@YAMM@Z PROC					; abs, COMDAT
; Line 500
	push	ebp
	mov	ebp, esp
	fld	DWORD PTR __X$[ebp]
	fabs
	fstp	DWORD PTR tv131[ebp]
	fld	DWORD PTR tv131[ebp]
	pop	ebp
	ret	0
?abs@@YAMM@Z ENDP					; abs
_TEXT	ENDS
PUBLIC	?pow@@YAMMM@Z					; pow
; Function compile flags: /Ogtp
;	COMDAT ?pow@@YAMMM@Z
_TEXT	SEGMENT
tv77 = 8						; size = 4
__X$ = 8						; size = 4
__Y$ = 12						; size = 4
?pow@@YAMMM@Z PROC					; pow, COMDAT
; Line 534
	push	ebp
	mov	ebp, esp
	fld	DWORD PTR __X$[ebp]
	fld	DWORD PTR __Y$[ebp]
	call	__CIpow
	fstp	DWORD PTR tv77[ebp]
	fld	DWORD PTR tv77[ebp]
	pop	ebp
	ret	0
?pow@@YAMMM@Z ENDP					; pow
_TEXT	ENDS
PUBLIC	?sqrt@@YAMM@Z					; sqrt
; Function compile flags: /Ogtp
;	COMDAT ?sqrt@@YAMM@Z
_TEXT	SEGMENT
tv73 = 8						; size = 4
__X$ = 8						; size = 4
?sqrt@@YAMM@Z PROC					; sqrt, COMDAT
; Line 542
	push	ebp
	mov	ebp, esp
	fld	DWORD PTR __X$[ebp]
	call	__CIsqrt
	fstp	DWORD PTR tv73[ebp]
	fld	DWORD PTR tv73[ebp]
	pop	ebp
	ret	0
?sqrt@@YAMM@Z ENDP					; sqrt
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
; Function compile flags: /Ogtp
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 49
	ret	4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
PUBLIC	??_7AppState@@6B@				; AppState::`vftable'
PUBLIC	??0AppState@@QAE@XZ				; AppState::AppState
PUBLIC	??_R4AppState@@6B@				; AppState::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVAppState@@@8				; AppState `RTTI Type Descriptor'
PUBLIC	??_R3AppState@@8				; AppState::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2AppState@@8				; AppState::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@AppState@@8			; AppState::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?tick@AppState@@UAEXMM@Z			; AppState::tick
PUBLIC	?display@AppState@@UAEXMM@Z			; AppState::display
PUBLIC	?mousemove@AppState@@UAEXPAUSDL_MouseMotionEvent@@@Z ; AppState::mousemove
PUBLIC	?mouseclick@AppState@@UAEXPAUSDL_MouseButtonEvent@@@Z ; AppState::mouseclick
PUBLIC	?keypressed@AppState@@UAEXPAUSDL_KeyboardEvent@@@Z ; AppState::keypressed
EXTRN	??_EAppState@@UAEPAXI@Z:PROC			; AppState::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@AppState@@8
; File c:\programovani\wow editor\test\src\editor\appstate.h
rdata$r	SEGMENT
??_R1A@?0A@EA@AppState@@8 DD FLAT:??_R0?AVAppState@@@8	; AppState::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3AppState@@8
rdata$r	ENDS
;	COMDAT ??_R2AppState@@8
rdata$r	SEGMENT
??_R2AppState@@8 DD FLAT:??_R1A@?0A@EA@AppState@@8	; AppState::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3AppState@@8
rdata$r	SEGMENT
??_R3AppState@@8 DD 00H					; AppState::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2AppState@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVAppState@@@8
_DATA	SEGMENT
??_R0?AVAppState@@@8 DD FLAT:??_7type_info@@6B@		; AppState `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVAppState@@', 00H
_DATA	ENDS
;	COMDAT ??_R4AppState@@6B@
rdata$r	SEGMENT
??_R4AppState@@6B@ DD 00H				; AppState::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVAppState@@@8
	DD	FLAT:??_R3AppState@@8
rdata$r	ENDS
;	COMDAT ??_7AppState@@6B@
CONST	SEGMENT
??_7AppState@@6B@ DD FLAT:??_R4AppState@@6B@		; AppState::`vftable'
	DD	FLAT:??_EAppState@@UAEPAXI@Z
	DD	FLAT:?tick@AppState@@UAEXMM@Z
	DD	FLAT:?display@AppState@@UAEXMM@Z
	DD	FLAT:?mousemove@AppState@@UAEXPAUSDL_MouseMotionEvent@@@Z
	DD	FLAT:?mouseclick@AppState@@UAEXPAUSDL_MouseButtonEvent@@@Z
	DD	FLAT:?keypressed@AppState@@UAEXPAUSDL_KeyboardEvent@@@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??0AppState@@QAE@XZ
_TEXT	SEGMENT
??0AppState@@QAE@XZ PROC				; AppState::AppState, COMDAT
; _this$ = ecx
; Line 10
	mov	eax, ecx
	mov	DWORD PTR [eax], OFFSET ??_7AppState@@6B@
	ret	0
??0AppState@@QAE@XZ ENDP				; AppState::AppState
_TEXT	ENDS
PUBLIC	??1AppState@@UAE@XZ				; AppState::~AppState
; Function compile flags: /Ogtp
;	COMDAT ??1AppState@@UAE@XZ
_TEXT	SEGMENT
??1AppState@@UAE@XZ PROC				; AppState::~AppState, COMDAT
; _this$ = ecx
; Line 11
	mov	DWORD PTR [ecx], OFFSET ??_7AppState@@6B@
	ret	0
??1AppState@@UAE@XZ ENDP				; AppState::~AppState
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?tick@AppState@@UAEXMM@Z
_TEXT	SEGMENT
_t$ = 8							; size = 4
_dt$ = 12						; size = 4
?tick@AppState@@UAEXMM@Z PROC				; AppState::tick, COMDAT
; _this$ = ecx
; Line 13
	ret	8
?tick@AppState@@UAEXMM@Z ENDP				; AppState::tick
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?display@AppState@@UAEXMM@Z
_TEXT	SEGMENT
_t$ = 8							; size = 4
_dt$ = 12						; size = 4
?display@AppState@@UAEXMM@Z PROC			; AppState::display, COMDAT
; _this$ = ecx
; Line 14
	ret	8
?display@AppState@@UAEXMM@Z ENDP			; AppState::display
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?mousemove@AppState@@UAEXPAUSDL_MouseMotionEvent@@@Z
_TEXT	SEGMENT
_e$ = 8							; size = 4
?mousemove@AppState@@UAEXPAUSDL_MouseMotionEvent@@@Z PROC ; AppState::mousemove, COMDAT
; _this$ = ecx
; Line 16
	ret	4
?mousemove@AppState@@UAEXPAUSDL_MouseMotionEvent@@@Z ENDP ; AppState::mousemove
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?mouseclick@AppState@@UAEXPAUSDL_MouseButtonEvent@@@Z
_TEXT	SEGMENT
_e$ = 8							; size = 4
?mouseclick@AppState@@UAEXPAUSDL_MouseButtonEvent@@@Z PROC ; AppState::mouseclick, COMDAT
; _this$ = ecx
; Line 17
	ret	4
?mouseclick@AppState@@UAEXPAUSDL_MouseButtonEvent@@@Z ENDP ; AppState::mouseclick
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?keypressed@AppState@@UAEXPAUSDL_KeyboardEvent@@@Z
_TEXT	SEGMENT
_e$ = 8							; size = 4
?keypressed@AppState@@UAEXPAUSDL_KeyboardEvent@@@Z PROC	; AppState::keypressed, COMDAT
; _this$ = ecx
; Line 18
	ret	4
?keypressed@AppState@@UAEXPAUSDL_KeyboardEvent@@@Z ENDP	; AppState::keypressed
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_GAppState@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GAppState@@UAEPAXI@Z PROC				; AppState::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	test	BYTE PTR ___flags$[ebp], 1
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7AppState@@6B@
	je	SHORT $LN6@scalar@2
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar@2:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_GAppState@@UAEPAXI@Z ENDP				; AppState::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0Vec3D@@QAE@MMM@Z				; Vec3D::Vec3D
; Function compile flags: /Ogtp
;	COMDAT ??0Vec3D@@QAE@MMM@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_z0$ = 16						; size = 4
??0Vec3D@@QAE@MMM@Z PROC				; Vec3D::Vec3D, COMDAT
; _this$ = ecx
; File c:\programovani\wow editor\test\src\editor\vec3d.h
; Line 12
	push	ebp
	mov	ebp, esp
	mov	edx, DWORD PTR _y0$[ebp]
	mov	eax, ecx
	mov	ecx, DWORD PTR _x0$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _z0$[ebp]
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], ecx
	pop	ebp
	ret	12					; 0000000cH
??0Vec3D@@QAE@MMM@Z ENDP				; Vec3D::Vec3D
_TEXT	ENDS
PUBLIC	??0Vec3D@@QAE@ABV0@@Z				; Vec3D::Vec3D
; Function compile flags: /Ogtp
;	COMDAT ??0Vec3D@@QAE@ABV0@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
??0Vec3D@@QAE@ABV0@@Z PROC				; Vec3D::Vec3D, COMDAT
; _this$ = ecx
; Line 14
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], ecx
	pop	ebp
	ret	4
??0Vec3D@@QAE@ABV0@@Z ENDP				; Vec3D::Vec3D
_TEXT	ENDS
PUBLIC	??4Vec3D@@QAEAAV0@ABV0@@Z			; Vec3D::operator=
; Function compile flags: /Ogtp
;	COMDAT ??4Vec3D@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
??4Vec3D@@QAEAAV0@ABV0@@Z PROC				; Vec3D::operator=, COMDAT
; _this$ = ecx
; Line 17
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
; Line 18
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 19
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 20
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], ecx
; Line 22
	pop	ebp
	ret	4
??4Vec3D@@QAEAAV0@ABV0@@Z ENDP				; Vec3D::operator=
_TEXT	ENDS
PUBLIC	??HVec3D@@QBE?AV0@ABV0@@Z			; Vec3D::operator+
; Function compile flags: /Ogtp
;	COMDAT ??HVec3D@@QBE?AV0@ABV0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??HVec3D@@QBE?AV0@ABV0@@Z PROC				; Vec3D::operator+, COMDAT
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
; Line 26
	mov	edx, DWORD PTR _v$[ebp]
	fld	DWORD PTR [edx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	fadd	DWORD PTR [ecx]
	fstp	DWORD PTR [eax]
	fld	DWORD PTR [edx+4]
	fadd	DWORD PTR [ecx+4]
	fstp	DWORD PTR [eax+4]
	fld	DWORD PTR [edx+8]
	fadd	DWORD PTR [ecx+8]
	fstp	DWORD PTR [eax+8]
; Line 28
	pop	ebp
	ret	8
??HVec3D@@QBE?AV0@ABV0@@Z ENDP				; Vec3D::operator+
_TEXT	ENDS
PUBLIC	??GVec3D@@QBE?AV0@ABV0@@Z			; Vec3D::operator-
; Function compile flags: /Ogtp
;	COMDAT ??GVec3D@@QBE?AV0@ABV0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??GVec3D@@QBE?AV0@ABV0@@Z PROC				; Vec3D::operator-, COMDAT
; _this$ = ecx
; Line 31
	push	ebp
	mov	ebp, esp
; Line 32
	mov	edx, DWORD PTR _v$[ebp]
	fld	DWORD PTR [ecx]
	fsub	DWORD PTR [edx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	fstp	DWORD PTR [eax]
	fld	DWORD PTR [ecx+4]
	fsub	DWORD PTR [edx+4]
	fstp	DWORD PTR [eax+4]
	fld	DWORD PTR [ecx+8]
	fsub	DWORD PTR [edx+8]
	fstp	DWORD PTR [eax+8]
; Line 34
	pop	ebp
	ret	8
??GVec3D@@QBE?AV0@ABV0@@Z ENDP				; Vec3D::operator-
_TEXT	ENDS
PUBLIC	??DVec3D@@QBE?AV0@M@Z				; Vec3D::operator*
; Function compile flags: /Ogtp
;	COMDAT ??DVec3D@@QBE?AV0@M@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_d$ = 12						; size = 4
??DVec3D@@QBE?AV0@M@Z PROC				; Vec3D::operator*, COMDAT
; _this$ = ecx
; Line 42
	push	ebp
	mov	ebp, esp
; Line 43
	fld	DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	fld	DWORD PTR _d$[ebp]
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR [eax]
	fld	DWORD PTR [ecx+4]
	fmul	ST(0), ST(1)
	fstp	DWORD PTR [eax+4]
	fmul	DWORD PTR [ecx+8]
	fstp	DWORD PTR [eax+8]
; Line 45
	pop	ebp
	ret	8
??DVec3D@@QBE?AV0@M@Z ENDP				; Vec3D::operator*
_TEXT	ENDS
PUBLIC	??D@YA?AVVec3D@@MABV0@@Z			; operator*
; Function compile flags: /Ogtp
;	COMDAT ??D@YA?AVVec3D@@MABV0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_d$ = 12						; size = 4
_v$ = 16						; size = 4
??D@YA?AVVec3D@@MABV0@@Z PROC				; operator*, COMDAT
; Line 48
	push	ebp
	mov	ebp, esp
; Line 49
	mov	ecx, DWORD PTR _v$[ebp]
	fld	DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	fld	DWORD PTR _d$[ebp]
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR [eax]
	fld	DWORD PTR [ecx+4]
	fmul	ST(0), ST(1)
	fstp	DWORD PTR [eax+4]
	fmul	DWORD PTR [ecx+8]
	fstp	DWORD PTR [eax+8]
; Line 50
	pop	ebp
	ret	0
??D@YA?AVVec3D@@MABV0@@Z ENDP				; operator*
_TEXT	ENDS
PUBLIC	??LVec3D@@QBE?AV0@ABV0@@Z			; Vec3D::operator%
; Function compile flags: /Ogtp
;	COMDAT ??LVec3D@@QBE?AV0@ABV0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??LVec3D@@QBE?AV0@ABV0@@Z PROC				; Vec3D::operator%, COMDAT
; _this$ = ecx
; Line 53
	push	ebp
	mov	ebp, esp
; Line 54
	mov	edx, DWORD PTR _v$[ebp]
	fld	DWORD PTR [edx+8]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	fmul	DWORD PTR [ecx+4]
	fld	DWORD PTR [edx+4]
	fmul	DWORD PTR [ecx+8]
	fsubp	ST(1), ST(0)
	fstp	DWORD PTR [eax]
	fld	DWORD PTR [ecx+8]
	fmul	DWORD PTR [edx]
	fld	DWORD PTR [ecx]
	fmul	DWORD PTR [edx+8]
	fsubp	ST(1), ST(0)
	fstp	DWORD PTR [eax+4]
	fld	DWORD PTR [edx+4]
	fmul	DWORD PTR [ecx]
	fld	DWORD PTR [edx]
	fmul	DWORD PTR [ecx+4]
	fsubp	ST(1), ST(0)
	fstp	DWORD PTR [eax+8]
; Line 56
	pop	ebp
	ret	8
??LVec3D@@QBE?AV0@ABV0@@Z ENDP				; Vec3D::operator%
_TEXT	ENDS
PUBLIC	??YVec3D@@QAEAAV0@ABV0@@Z			; Vec3D::operator+=
; Function compile flags: /Ogtp
;	COMDAT ??YVec3D@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
??YVec3D@@QAEAAV0@ABV0@@Z PROC				; Vec3D::operator+=, COMDAT
; _this$ = ecx
; Line 59
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
; Line 60
	mov	ecx, DWORD PTR _v$[ebp]
	fld	DWORD PTR [ecx]
	fadd	DWORD PTR [eax]
	fstp	DWORD PTR [eax]
; Line 61
	fld	DWORD PTR [ecx+4]
	fadd	DWORD PTR [eax+4]
	fstp	DWORD PTR [eax+4]
; Line 62
	fld	DWORD PTR [ecx+8]
	fadd	DWORD PTR [eax+8]
	fstp	DWORD PTR [eax+8]
; Line 64
	pop	ebp
	ret	4
??YVec3D@@QAEAAV0@ABV0@@Z ENDP				; Vec3D::operator+=
_TEXT	ENDS
PUBLIC	??ZVec3D@@QAEAAV0@ABV0@@Z			; Vec3D::operator-=
; Function compile flags: /Ogtp
;	COMDAT ??ZVec3D@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
??ZVec3D@@QAEAAV0@ABV0@@Z PROC				; Vec3D::operator-=, COMDAT
; _this$ = ecx
; Line 67
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
; Line 68
	mov	ecx, DWORD PTR _v$[ebp]
	fld	DWORD PTR [eax]
	fsub	DWORD PTR [ecx]
	fstp	DWORD PTR [eax]
; Line 69
	fld	DWORD PTR [eax+4]
	fsub	DWORD PTR [ecx+4]
	fstp	DWORD PTR [eax+4]
; Line 70
	fld	DWORD PTR [eax+8]
	fsub	DWORD PTR [ecx+8]
	fstp	DWORD PTR [eax+8]
; Line 72
	pop	ebp
	ret	4
??ZVec3D@@QAEAAV0@ABV0@@Z ENDP				; Vec3D::operator-=
_TEXT	ENDS
PUBLIC	??XVec3D@@QAEAAV0@M@Z				; Vec3D::operator*=
; Function compile flags: /Ogtp
;	COMDAT ??XVec3D@@QAEAAV0@M@Z
_TEXT	SEGMENT
_d$ = 8							; size = 4
??XVec3D@@QAEAAV0@M@Z PROC				; Vec3D::operator*=, COMDAT
; _this$ = ecx
; Line 75
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
; Line 76
	fld	DWORD PTR [eax]
	fld	DWORD PTR _d$[ebp]
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR [eax]
; Line 77
	fld	DWORD PTR [eax+4]
	fmul	ST(0), ST(1)
	fstp	DWORD PTR [eax+4]
; Line 78
	fmul	DWORD PTR [eax+8]
	fstp	DWORD PTR [eax+8]
; Line 80
	pop	ebp
	ret	4
??XVec3D@@QAEAAV0@M@Z ENDP				; Vec3D::operator*=
_TEXT	ENDS
PUBLIC	?length@Vec3D@@QBEMXZ				; Vec3D::length
; Function compile flags: /Ogtp
;	COMDAT ?length@Vec3D@@QBEMXZ
_TEXT	SEGMENT
tv170 = -4						; size = 4
tv161 = -4						; size = 4
?length@Vec3D@@QBEMXZ PROC				; Vec3D::length, COMDAT
; _this$ = ecx
; Line 88
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 89
	fld	DWORD PTR [ecx+4]
	fld	DWORD PTR [ecx]
	fld	DWORD PTR [ecx+8]
	fld	ST(1)
	fmulp	ST(2), ST(0)
	fld	ST(2)
	fmulp	ST(3), ST(0)
	fxch	ST(1)
	faddp	ST(2), ST(0)
	fmul	ST(0), ST(0)
	faddp	ST(1), ST(0)
	fstp	DWORD PTR tv170[ebp]
	fld	DWORD PTR tv170[ebp]
	call	__CIsqrt
	fstp	DWORD PTR tv161[ebp]
	fld	DWORD PTR tv161[ebp]
; Line 90
	mov	esp, ebp
	pop	ebp
	ret	0
?length@Vec3D@@QBEMXZ ENDP				; Vec3D::length
_TEXT	ENDS
PUBLIC	__real@3ff0000000000000
PUBLIC	?normalize@Vec3D@@QAEAAV1@XZ			; Vec3D::normalize
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?normalize@Vec3D@@QAEAAV1@XZ
_TEXT	SEGMENT
tv206 = -4						; size = 4
tv196 = -4						; size = 4
$T95185 = -4						; size = 4
?normalize@Vec3D@@QAEAAV1@XZ PROC			; Vec3D::normalize, COMDAT
; _this$ = ecx
; Line 93
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx
; Line 94
	fld	DWORD PTR [esi+4]
	fld	DWORD PTR [esi]
	fld	DWORD PTR [esi+8]
	fld	ST(1)
	fmulp	ST(2), ST(0)
	fld	ST(2)
	fmulp	ST(3), ST(0)
	fxch	ST(1)
	faddp	ST(2), ST(0)
	fmul	ST(0), ST(0)
	faddp	ST(1), ST(0)
	fstp	DWORD PTR tv206[ebp]
	fld	DWORD PTR tv206[ebp]
	call	__CIsqrt
	fstp	DWORD PTR tv196[ebp]
	fld	DWORD PTR tv196[ebp]
; Line 95
	mov	eax, esi
	fld1
	fdivrp	ST(1), ST(0)
	fstp	DWORD PTR $T95185[ebp]
	fld	DWORD PTR [esi]
	fld	DWORD PTR $T95185[ebp]
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR [esi]
	fld	ST(0)
	fmul	DWORD PTR [esi+4]
	fstp	DWORD PTR [esi+4]
	fmul	DWORD PTR [esi+8]
	fstp	DWORD PTR [esi+8]
	pop	esi
; Line 96
	mov	esp, ebp
	pop	ebp
	ret	0
?normalize@Vec3D@@QAEAAV1@XZ ENDP			; Vec3D::normalize
_TEXT	ENDS
PUBLIC	?rotate@@YAXMMPAM0M@Z				; rotate
; Function compile flags: /Ogtp
;	COMDAT ?rotate@@YAXMMPAM0M@Z
_TEXT	SEGMENT
_xa$ = -4						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
tv206 = 16						; size = 4
_x$ = 16						; size = 4
_ya$ = 20						; size = 4
_y$ = 20						; size = 4
tv213 = 24						; size = 4
_angle$ = 24						; size = 4
?rotate@@YAXMMPAM0M@Z PROC				; rotate, COMDAT
; Line 218
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
; Line 219
	mov	esi, DWORD PTR _x$[ebp]
	fld	DWORD PTR [esi]
	push	edi
	fsub	DWORD PTR _x0$[ebp]
	mov	edi, DWORD PTR _y$[ebp]
	fstp	DWORD PTR _xa$[ebp]
	fld	DWORD PTR [edi]
	fsub	DWORD PTR _y0$[ebp]
	fstp	DWORD PTR _ya$[ebp]
; Line 220
	fld	DWORD PTR _angle$[ebp]
	call	__CIcos
	fstp	DWORD PTR tv206[ebp]
	fld	DWORD PTR _angle$[ebp]
	call	__CIsin
	fstp	DWORD PTR tv213[ebp]
	fld	DWORD PTR tv206[ebp]
	fld	ST(0)
	fld	DWORD PTR _xa$[ebp]
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fld	DWORD PTR tv213[ebp]
	fld	ST(0)
	fld	DWORD PTR _ya$[ebp]
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fxch	ST(4)
	fsubrp	ST(1), ST(0)
	fadd	DWORD PTR _x0$[ebp]
	fstp	DWORD PTR [esi]
; Line 221
	fmulp	ST(1), ST(0)
	fxch	ST(2)
	fmulp	ST(1), ST(0)
	faddp	ST(1), ST(0)
	fadd	DWORD PTR _y0$[ebp]
	fstp	DWORD PTR [edi]
	pop	edi
	pop	esi
; Line 222
	mov	esp, ebp
	pop	ebp
	ret	0
?rotate@@YAXMMPAM0M@Z ENDP				; rotate
_TEXT	ENDS
PUBLIC	??0Vec4D@@QAE@MMMM@Z				; Vec4D::Vec4D
; Function compile flags: /Ogtp
;	COMDAT ??0Vec4D@@QAE@MMMM@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_z0$ = 16						; size = 4
_w0$ = 20						; size = 4
??0Vec4D@@QAE@MMMM@Z PROC				; Vec4D::Vec4D, COMDAT
; _this$ = ecx
; File c:\programovani\wow editor\test\src\editor\quaternion.h
; Line 12
	push	ebp
	mov	ebp, esp
	mov	edx, DWORD PTR _y0$[ebp]
	mov	eax, ecx
	mov	ecx, DWORD PTR _x0$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _z0$[ebp]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _w0$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	pop	ebp
	ret	16					; 00000010H
??0Vec4D@@QAE@MMMM@Z ENDP				; Vec4D::Vec4D
_TEXT	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	push	edi
	mov	edi, DWORD PTR ___n$[ebp]
	dec	edi
	js	SHORT $LN1@vector
	push	ebx
	mov	ebx, DWORD PTR ___f$[ebp]
	push	esi
	mov	esi, DWORD PTR ___t$[ebp]
$LL2@vector:
	mov	ecx, esi
	call	ebx
	add	esi, DWORD PTR ___s$[ebp]
	dec	edi
	jns	SHORT $LL2@vector
	pop	esi
	pop	ebx
$LN1@vector:
	pop	edi
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?setHardness@brush@@QAEXM@Z			; brush::setHardness
; Function compile flags: /Ogtp
;	COMDAT ?setHardness@brush@@QAEXM@Z
_TEXT	SEGMENT
tv157 = 8						; size = 4
_H$ = 8							; size = 4
?setHardness@brush@@QAEXM@Z PROC			; brush::setHardness, COMDAT
; _this$ = ecx
; File c:\programovani\wow editor\test\src\editor\brush.h
; Line 14
	push	ebp
	mov	ebp, esp
	fld	DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _H$[ebp]
	fmul	DWORD PTR _H$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	BYTE PTR [ecx+65556], 1
	fstp	DWORD PTR tv157[ebp]
	fld	DWORD PTR [ecx+12]
	mov	edx, DWORD PTR tv157[ebp]
	fsub	DWORD PTR tv157[ebp]
	mov	DWORD PTR [ecx+4], edx
	fstp	DWORD PTR [ecx+8]
	pop	ebp
	ret	4
?setHardness@brush@@QAEXM@Z ENDP			; brush::setHardness
_TEXT	ENDS
PUBLIC	?setRadius@brush@@QAEXM@Z			; brush::setRadius
; Function compile flags: /Ogtp
;	COMDAT ?setRadius@brush@@QAEXM@Z
_TEXT	SEGMENT
tv154 = 8						; size = 4
_R$ = 8							; size = 4
?setRadius@brush@@QAEXM@Z PROC				; brush::setRadius, COMDAT
; _this$ = ecx
; Line 15
	push	ebp
	mov	ebp, esp
	fld	DWORD PTR [ecx]
	mov	eax, DWORD PTR _R$[ebp]
	fld	DWORD PTR _R$[ebp]
	mov	DWORD PTR [ecx+12], eax
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR tv154[ebp]
	fsub	DWORD PTR tv154[ebp]
	mov	edx, DWORD PTR tv154[ebp]
	mov	DWORD PTR [ecx+4], edx
	fstp	DWORD PTR [ecx+8]
	pop	ebp
	ret	4
?setRadius@brush@@QAEXM@Z ENDP				; brush::setRadius
_TEXT	ENDS
PUBLIC	?getRadius@brush@@QAEMXZ			; brush::getRadius
; Function compile flags: /Ogtp
;	COMDAT ?getRadius@brush@@QAEMXZ
_TEXT	SEGMENT
?getRadius@brush@@QAEMXZ PROC				; brush::getRadius, COMDAT
; _this$ = ecx
; Line 17
	fld	DWORD PTR [ecx+12]
	ret	0
?getRadius@brush@@QAEMXZ ENDP				; brush::getRadius
_TEXT	ENDS
PUBLIC	?getTexture@brush@@QAEIXZ			; brush::getTexture
; Function compile flags: /Ogtp
;	COMDAT ?getTexture@brush@@QAEIXZ
_TEXT	SEGMENT
?getTexture@brush@@QAEIXZ PROC				; brush::getTexture, COMDAT
; _this$ = ecx
; Line 26
	mov	eax, DWORD PTR [ecx+16]
	ret	0
?getTexture@brush@@QAEIXZ ENDP				; brush::getTexture
_TEXT	ENDS
PUBLIC	?needUpdate@brush@@QAE_NXZ			; brush::needUpdate
; Function compile flags: /Ogtp
;	COMDAT ?needUpdate@brush@@QAE_NXZ
_TEXT	SEGMENT
?needUpdate@brush@@QAE_NXZ PROC				; brush::needUpdate, COMDAT
; _this$ = ecx
; Line 27
	mov	al, BYTE PTR [ecx+65556]
	ret	0
?needUpdate@brush@@QAE_NXZ ENDP				; brush::needUpdate
_TEXT	ENDS
PUBLIC	?getSelectTex@World@@QAEIXZ			; World::getSelectTex
; Function compile flags: /Ogtp
;	COMDAT ?getSelectTex@World@@QAEIXZ
_TEXT	SEGMENT
?getSelectTex@World@@QAEIXZ PROC			; World::getSelectTex, COMDAT
; _this$ = ecx
; File c:\programovani\wow editor\test\src\editor\world.h
; Line 109
	mov	eax, DWORD PTR [ecx+21248]
	ret	0
?getSelectTex@World@@QAEIXZ ENDP			; World::getSelectTex
_TEXT	ENDS
PUBLIC	?getUInt@Record@DBCFile@@QBEII@Z		; DBCFile::Record::getUInt
; Function compile flags: /Ogtp
;	COMDAT ?getUInt@Record@DBCFile@@QBEII@Z
_TEXT	SEGMENT
_field$ = 8						; size = 4
?getUInt@Record@DBCFile@@QBEII@Z PROC			; DBCFile::Record::getUInt, COMDAT
; _this$ = ecx
; File c:\programovani\wow editor\test\src\editor\dbcfile.h
; Line 44
	push	ebp
	mov	ebp, esp
; Line 46
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _field$[ebp]
	mov	eax, DWORD PTR [eax+ecx*4]
; Line 47
	pop	ebp
	ret	4
?getUInt@Record@DBCFile@@QBEII@Z ENDP			; DBCFile::Record::getUInt
_TEXT	ENDS
PUBLIC	?getString@Record@DBCFile@@QBEPBDI@Z		; DBCFile::Record::getString
; Function compile flags: /Ogtp
;	COMDAT ?getString@Record@DBCFile@@QBEPBDI@Z
_TEXT	SEGMENT
_field$ = 8						; size = 4
?getString@Record@DBCFile@@QBEPBDI@Z PROC		; DBCFile::Record::getString, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
; Line 58
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _field$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [eax+edx*4]
	add	eax, DWORD PTR [ecx+48]
; Line 59
	pop	ebp
	ret	4
?getString@Record@DBCFile@@QBEPBDI@Z ENDP		; DBCFile::Record::getString
_TEXT	ENDS
PUBLIC	?setTextureBrushHardness@@YAXM@Z		; setTextureBrushHardness
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_f$ = 8							; size = 4
?setTextureBrushHardness@@YAXM@Z PROC			; setTextureBrushHardness
; File c:\programovani\wow editor\test\src\editor\mapviewer.cpp
; Line 57
	push	ebp
	mov	ebp, esp
; Line 58
	fld	DWORD PTR ?textureBrush@@3Vbrush@@A+12
	mov	eax, DWORD PTR _f$[ebp]
	fld	ST(0)
	mov	DWORD PTR ?textureBrush@@3Vbrush@@A, eax
	fmul	DWORD PTR _f$[ebp]
	mov	BYTE PTR ?textureBrush@@3Vbrush@@A+65556, 1
	fstp	DWORD PTR ?textureBrush@@3Vbrush@@A+4
	fsub	DWORD PTR ?textureBrush@@3Vbrush@@A+4
	fstp	DWORD PTR ?textureBrush@@3Vbrush@@A+8
; Line 59
	pop	ebp
	ret	0
?setTextureBrushHardness@@YAXM@Z ENDP			; setTextureBrushHardness
_TEXT	ENDS
PUBLIC	?setTextureBrushRadius@@YAXM@Z			; setTextureBrushRadius
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_f$ = 8							; size = 4
?setTextureBrushRadius@@YAXM@Z PROC			; setTextureBrushRadius
; Line 62
	push	ebp
	mov	ebp, esp
; Line 63
	fld	DWORD PTR ?textureBrush@@3Vbrush@@A
	mov	eax, DWORD PTR _f$[ebp]
	fld	DWORD PTR _f$[ebp]
	mov	DWORD PTR ?textureBrush@@3Vbrush@@A+12, eax
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR ?textureBrush@@3Vbrush@@A+4
	fsub	DWORD PTR ?textureBrush@@3Vbrush@@A+4
	fstp	DWORD PTR ?textureBrush@@3Vbrush@@A+8
; Line 64
	pop	ebp
	ret	0
?setTextureBrushRadius@@YAXM@Z ENDP			; setTextureBrushRadius
_TEXT	ENDS
PUBLIC	?setTextureBrushPressure@@YAXM@Z		; setTextureBrushPressure
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_f$ = 8							; size = 4
?setTextureBrushPressure@@YAXM@Z PROC			; setTextureBrushPressure
; Line 67
	push	ebp
	mov	ebp, esp
; Line 68
	mov	eax, DWORD PTR _f$[ebp]
	mov	DWORD PTR ?brushPressure@@3MA, eax
; Line 69
	pop	ebp
	ret	0
?setTextureBrushPressure@@YAXM@Z ENDP			; setTextureBrushPressure
_TEXT	ENDS
PUBLIC	__real@406fe00000000000
PUBLIC	?setTextureBrushLevel@@YAXM@Z			; setTextureBrushLevel
;	COMDAT __real@406fe00000000000
CONST	SEGMENT
__real@406fe00000000000 DQ 0406fe00000000000r	; 255
; Function compile flags: /Ogtp
CONST	ENDS
_TEXT	SEGMENT
_f$ = 8							; size = 4
?setTextureBrushLevel@@YAXM@Z PROC			; setTextureBrushLevel
; Line 72
	push	ebp
	mov	ebp, esp
; Line 73
	fld	DWORD PTR _f$[ebp]
	fld1
	fsubrp	ST(1), ST(0)
	fmul	QWORD PTR __real@406fe00000000000
	fstp	DWORD PTR ?brushLevel@@3MA		; brushLevel
; Line 74
	pop	ebp
	ret	0
?setTextureBrushLevel@@YAXM@Z ENDP			; setTextureBrushLevel
_TEXT	ENDS
PUBLIC	??_GWorld@@QAEPAXI@Z				; World::`scalar deleting destructor'
EXTRN	??1World@@QAE@XZ:PROC				; World::~World
; Function compile flags: /Ogtp
;	COMDAT ??_GWorld@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GWorld@@QAEPAXI@Z PROC				; World::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	call	??1World@@QAE@XZ			; World::~World
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN4@scalar@3
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@scalar@3:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_GWorld@@QAEPAXI@Z ENDP				; World::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?doSelection@MapViewer@@AAEXXZ			; MapViewer::doSelection
EXTRN	?drawSelectionChunk@World@@QAEXHH@Z:PROC	; World::drawSelectionChunk
EXTRN	?gLog@@YAXPADZZ:PROC				; gLog
EXTRN	__imp__glGetError@0:PROC
EXTRN	?getSelect@@YAPAVnameEntry@@I@Z:PROC		; getSelect
EXTRN	?getSelection@World@@QAEHXZ:PROC		; World::getSelection
EXTRN	?drawSelection@World@@QAEXHH@Z:PROC		; World::drawSelection
; Function compile flags: /Ogtp
_TEXT	SEGMENT
?doSelection@MapViewer@@AAEXXZ PROC			; MapViewer::doSelection
; _this$ = ecx
; Line 375
	mov	eax, DWORD PTR ?MouseY@@3HA		; MouseY
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR ?MouseX@@3HA		; MouseX
	push	eax
	push	ecx
	mov	ecx, DWORD PTR [esi+40]
	call	?drawSelection@World@@QAEXHH@Z		; World::drawSelection
; Line 376
	mov	ecx, DWORD PTR [esi+40]
	call	?getSelection@World@@QAEHXZ		; World::getSelection
; Line 377
	push	eax
	mov	DWORD PTR ?Sel@@3IA, eax		; Sel
	call	?getSelect@@YAPAVnameEntry@@I@Z		; getSelect
	add	esp, 4
	mov	DWORD PTR ?Selection@@3PAVnameEntry@@A, eax ; Selection
; Line 379
	test	eax, eax
	je	SHORT $LN1@doSelectio
; Line 381
	call	DWORD PTR __imp__glGetError@0
; Line 382
	test	eax, eax
	je	SHORT $LN2@doSelectio
; Line 383
	push	eax
	push	OFFSET $SG82422
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 8
$LN2@doSelectio:
; Line 385
	mov	edx, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	cmp	DWORD PTR [edx+28], 3
	jne	SHORT $LN1@doSelectio
; Line 387
	mov	eax, DWORD PTR ?MouseY@@3HA		; MouseY
	mov	ecx, DWORD PTR ?MouseX@@3HA		; MouseX
	push	eax
	push	ecx
	mov	ecx, DWORD PTR [esi+40]
	call	?drawSelectionChunk@World@@QAEXHH@Z	; World::drawSelectionChunk
; Line 388
	mov	ecx, DWORD PTR [esi+40]
	call	?getSelection@World@@QAEHXZ		; World::getSelection
; Line 389
	push	eax
	mov	DWORD PTR ?Sel@@3IA, eax		; Sel
	call	?getSelect@@YAPAVnameEntry@@I@Z		; getSelect
	add	esp, 4
	mov	DWORD PTR ?Selection@@3PAVnameEntry@@A, eax ; Selection
$LN1@doSelectio:
	pop	esi
; Line 391
	ret	0
?doSelection@MapViewer@@AAEXXZ ENDP			; MapViewer::doSelection
_TEXT	ENDS
PUBLIC	__real@3f800000
PUBLIC	__real@4059000000000000
PUBLIC	__real@4014000000000000
PUBLIC	__real@42a00000
PUBLIC	__real@c2a00000
PUBLIC	__real@402e000000000000
PUBLIC	?mousemove@MapViewer@@UAEXPAUSDL_MouseMotionEvent@@@Z ; MapViewer::mousemove
EXTRN	?video@@3VVideo@@A:BYTE				; video
EXTRN	?fullscreen@@3HA:DWORD				; fullscreen
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
CONST	ENDS
;	COMDAT __real@42a00000
CONST	SEGMENT
__real@42a00000 DD 042a00000r			; 80
CONST	ENDS
;	COMDAT __real@c2a00000
CONST	SEGMENT
__real@c2a00000 DD 0c2a00000r			; -80
CONST	ENDS
;	COMDAT __real@402e000000000000
CONST	SEGMENT
__real@402e000000000000 DQ 0402e000000000000r	; 15
; Function compile flags: /Ogtp
CONST	ENDS
_TEXT	SEGMENT
tv385 = 8						; size = 4
tv383 = 8						; size = 4
tv372 = 8						; size = 4
tv367 = 8						; size = 4
tv363 = 8						; size = 4
tv361 = 8						; size = 4
tv359 = 8						; size = 4
tv350 = 8						; size = 4
tv349 = 8						; size = 4
tv348 = 8						; size = 4
tv347 = 8						; size = 4
tv327 = 8						; size = 4
_e$ = 8							; size = 4
?mousemove@MapViewer@@UAEXPAUSDL_MouseMotionEvent@@@Z PROC ; MapViewer::mousemove
; _this$ = ecx
; Line 1268
	push	ebp
	mov	ebp, esp
; Line 1269
	xor	edx, edx
	push	esi
	mov	esi, DWORD PTR _e$[ebp]
	cmp	BYTE PTR [ecx+36], dl
	je	SHORT $LN15@mousemove
	cmp	BYTE PTR ?LShiftDown@@3_NA, dl		; LShiftDown
	jne	SHORT $LN15@mousemove
	cmp	BYTE PTR ?RShiftDown@@3_NA, dl		; RShiftDown
	jne	SHORT $LN15@mousemove
	cmp	BYTE PTR ?LCtrlDown@@3_NA, dl		; LCtrlDown
	jne	SHORT $LN15@mousemove
	cmp	BYTE PTR ?RCtrlDown@@3_NA, dl		; RCtrlDown
	jne	SHORT $LN15@mousemove
	cmp	BYTE PTR ?LAltDown@@3_NA, dl		; LAltDown
	jne	SHORT $LN15@mousemove
	cmp	BYTE PTR ?RAltDown@@3_NA, dl		; RAltDown
	je	SHORT $LN17@mousemove
$LN15@mousemove:
	cmp	DWORD PTR ?fullscreen@@3HA, edx		; fullscreen
	je	SHORT $LN21@mousemove
$LN17@mousemove:
; Line 1271
	movsx	eax, WORD PTR [esi+8]
	mov	DWORD PTR tv385[ebp], eax
	fild	DWORD PTR tv385[ebp]
	fld	QWORD PTR __real@402e000000000000
	fdiv	ST(1), ST(0)
	fld	DWORD PTR [ecx+8]
	faddp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR [ecx+8]
; Line 1272
	movsx	eax, WORD PTR [esi+10]
	fld	DWORD PTR [ecx+28]
	mov	DWORD PTR tv383[ebp], eax
	fild	DWORD PTR tv383[ebp]
	fmulp	ST(1), ST(0)
	fdivrp	ST(1), ST(0)
	fadd	DWORD PTR [ecx+12]
	fstp	DWORD PTR tv327[ebp]
; Line 1273
	fld	DWORD PTR __real@c2a00000
	mov	eax, DWORD PTR tv327[ebp]
	fld	DWORD PTR tv327[ebp]
	mov	DWORD PTR [ecx+12], eax
	fcom	ST(1)
	fnstsw	ax
	fstp	ST(1)
	test	ah, 5
	jp	SHORT $LN14@mousemove
	fstp	ST(0)
	mov	DWORD PTR [ecx+12], -1029701632		; c2a00000H
	jmp	SHORT $LN21@mousemove
$LN14@mousemove:
; Line 1274
	fcomp	DWORD PTR __real@42a00000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN21@mousemove
	mov	DWORD PTR [ecx+12], 1117782016		; 42a00000H
$LN21@mousemove:
; Line 1277
	cmp	BYTE PTR ?MoveObj@@3_NA, dl		; MoveObj
	je	SHORT $LN11@mousemove
; Line 1279
	movsx	ecx, WORD PTR [esi+8]
	mov	DWORD PTR tv372[ebp], ecx
	fild	DWORD PTR tv372[ebp]
	fld	DWORD PTR ?video@@3VVideo@@A+68
	fchs
	fmulp	ST(1), ST(0)
	fidiv	DWORD PTR ?video@@3VVideo@@A+52
	fstp	DWORD PTR ?mh@@3MA			; mh
; Line 1280
	movsx	eax, WORD PTR [esi+10]
	neg	eax
	mov	DWORD PTR tv367[ebp], eax
	fild	DWORD PTR tv367[ebp]
	fidiv	DWORD PTR ?video@@3VVideo@@A+56
	fstp	DWORD PTR ?mv@@3MA			; mv
; Line 1282
	jmp	SHORT $LN10@mousemove
$LN11@mousemove:
; Line 1284
	mov	DWORD PTR ?mh@@3MA, edx
; Line 1285
	mov	DWORD PTR ?mv@@3MA, edx
$LN10@mousemove:
; Line 1288
	cmp	BYTE PTR ?LShiftDown@@3_NA, dl		; LShiftDown
	jne	SHORT $LN22@mousemove
	cmp	BYTE PTR ?RShiftDown@@3_NA, dl		; RShiftDown
	jne	SHORT $LN22@mousemove
	cmp	BYTE PTR ?LCtrlDown@@3_NA, dl		; LCtrlDown
	jne	SHORT $LN22@mousemove
	cmp	BYTE PTR ?RCtrlDown@@3_NA, dl		; RCtrlDown
	jne	SHORT $LN22@mousemove
	cmp	BYTE PTR ?LAltDown@@3_NA, dl		; LAltDown
	jne	SHORT $LN22@mousemove
	cmp	BYTE PTR ?RAltDown@@3_NA, dl		; RAltDown
	je	SHORT $LN9@mousemove
$LN22@mousemove:
; Line 1290
	movsx	ecx, WORD PTR [esi+8]
	mov	DWORD PTR tv363[ebp], ecx
	fild	DWORD PTR tv363[ebp]
	fld	QWORD PTR __real@402e000000000000
	fdiv	ST(1), ST(0)
	fld	QWORD PTR __real@4014000000000000
	fmul	ST(2), ST(0)
	fxch	ST(2)
	fstp	DWORD PTR ?rh@@3MA			; rh
; Line 1291
	movsx	eax, WORD PTR [esi+10]
	mov	DWORD PTR tv361[ebp], eax
	fild	DWORD PTR tv361[ebp]
	fdivrp	ST(1), ST(0)
	fmulp	ST(1), ST(0)
	fstp	DWORD PTR ?rv@@3MA			; rv
$LN9@mousemove:
; Line 1294
	mov	cl, BYTE PTR ?leftMouse@@3_NA		; leftMouse
	cmp	cl, dl
	je	SHORT $LN3@mousemove
	cmp	BYTE PTR ?LAltDown@@3_NA, dl		; LAltDown
	jne	SHORT $LN6@mousemove
	cmp	BYTE PTR ?RAltDown@@3_NA, dl		; RAltDown
	je	SHORT $LN3@mousemove
$LN6@mousemove:
; Line 1296
	movsx	eax, WORD PTR [esi+8]
	mov	DWORD PTR tv359[ebp], eax
	fild	DWORD PTR tv359[ebp]
	fdiv	QWORD PTR __real@402e000000000000
	fadd	DWORD PTR ?BrushRadius@@3MA		; BrushRadius
	fstp	DWORD PTR ?BrushRadius@@3MA		; BrushRadius
; Line 1297
	fld	DWORD PTR ?BrushRadius@@3MA		; BrushRadius
	fcom	QWORD PTR __real@4059000000000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN5@mousemove
	fstp	ST(0)
; Line 1298
	mov	DWORD PTR ?BrushRadius@@3MA, 1120403456	; 42c80000H
	jmp	SHORT $LN3@mousemove
$LN5@mousemove:
; Line 1299
	fld1
	fcompp
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN3@mousemove
; Line 1300
	mov	DWORD PTR ?BrushRadius@@3MA, 1065353216	; 3f800000H
$LN3@mousemove:
; Line 1303
	cmp	BYTE PTR ?TileMode@@3_NA, dl		; TileMode
	je	SHORT $LN1@mousemove
; Line 1305
	cmp	cl, dl
	je	SHORT $LN1@mousemove
	mov	ecx, DWORD PTR ?LastClicked@@3PAVframe@@A ; LastClicked
	cmp	ecx, edx
	je	SHORT $LN1@mousemove
; Line 1306
	movsx	eax, WORD PTR [esi+10]
	mov	edx, DWORD PTR [ecx]
	mov	edx, DWORD PTR [edx+8]
	mov	DWORD PTR tv350[ebp], eax
	movsx	eax, WORD PTR [esi+8]
	fild	DWORD PTR tv350[ebp]
	mov	DWORD PTR tv349[ebp], eax
	movzx	eax, WORD PTR [esi+6]
	sub	esp, 16					; 00000010H
	sub	eax, 4
	fstp	DWORD PTR [esp+12]
	fild	DWORD PTR tv349[ebp]
	mov	DWORD PTR tv348[ebp], eax
	movzx	eax, WORD PTR [esi+4]
	sub	eax, 4
	fstp	DWORD PTR [esp+8]
	fild	DWORD PTR tv348[ebp]
	mov	DWORD PTR tv347[ebp], eax
	fstp	DWORD PTR [esp+4]
	fild	DWORD PTR tv347[ebp]
	fstp	DWORD PTR [esp]
	call	edx
$LN1@mousemove:
; Line 1309
	movzx	eax, WORD PTR [esi+4]
	mov	DWORD PTR ?MouseX@@3HA, eax		; MouseX
; Line 1310
	movzx	ecx, WORD PTR [esi+6]
	mov	DWORD PTR ?MouseY@@3HA, ecx		; MouseY
	pop	esi
; Line 1312
	pop	ebp
	ret	4
?mousemove@MapViewer@@UAEXPAUSDL_MouseMotionEvent@@@Z ENDP ; MapViewer::mousemove
_TEXT	ENDS
PUBLIC	?mouseclick@MapViewer@@UAEXPAUSDL_MouseButtonEvent@@@Z ; MapViewer::mouseclick
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_e$ = 8							; size = 4
?mouseclick@MapViewer@@UAEXPAUSDL_MouseButtonEvent@@@Z PROC ; MapViewer::mouseclick
; _this$ = ecx
; Line 1315
	push	ebp
	mov	ebp, esp
	push	esi
	push	edi
; Line 1316
	mov	edi, DWORD PTR _e$[ebp]
	mov	al, BYTE PTR [edi]
	mov	esi, ecx
	cmp	al, 5
	jne	$LN15@mouseclick
; Line 1318
	cmp	BYTE PTR [edi+2], 3
	jne	SHORT $LN14@mouseclick
; Line 1319
	mov	BYTE PTR [esi+36], 1
$LN14@mouseclick:
; Line 1320
	cmp	BYTE PTR [edi+2], 1
	jne	SHORT $LN13@mouseclick
; Line 1322
	cmp	BYTE PTR ?TileMode@@3_NA, 0		; TileMode
	je	SHORT $LN12@mouseclick
; Line 1323
	fild	DWORD PTR ?MouseY@@3HA			; MouseY
	mov	eax, DWORD PTR [esi+44]
	mov	edx, DWORD PTR [eax+4]
	sub	esp, 8
	fstp	DWORD PTR [esp+4]
	lea	ecx, DWORD PTR [esi+44]
	fild	DWORD PTR ?MouseX@@3HA			; MouseX
	fstp	DWORD PTR [esp]
	call	edx
	mov	DWORD PTR ?LastClicked@@3PAVframe@@A, eax ; LastClicked
; Line 1324
	jmp	SHORT $LN8@mouseclick
$LN12@mouseclick:
; Line 1326
	cmp	BYTE PTR ?Selecting@@3_NA, 0		; Selecting
	jne	SHORT $LN10@mouseclick
; Line 1327
	call	?doSelection@MapViewer@@AAEXXZ		; MapViewer::doSelection
$LN10@mouseclick:
; Line 1328
	mov	eax, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	test	eax, eax
	je	SHORT $LN9@mouseclick
	cmp	DWORD PTR [eax+28], 1
; Line 1329
	mov	DWORD PTR ?CurSelection@@3PAVnameEntry@@A, eax ; CurSelection
	je	SHORT $LN8@mouseclick
$LN9@mouseclick:
; Line 1331
	mov	DWORD PTR ?CurSelection@@3PAVnameEntry@@A, 0 ; CurSelection
$LN8@mouseclick:
; Line 1333
	mov	BYTE PTR ?leftMouse@@3_NA, 1		; leftMouse
$LN13@mouseclick:
; Line 1335
	cmp	BYTE PTR [edi+2], 2
	jne	SHORT $LN1@mouseclick
; Line 1336
	pop	edi
	mov	BYTE PTR ?MoveObj@@3_NA, 1		; MoveObj
	pop	esi
; Line 1351
	pop	ebp
	ret	4
$LN15@mouseclick:
; Line 1338
	cmp	al, 6
	jne	SHORT $LN1@mouseclick
; Line 1340
	cmp	BYTE PTR [edi+2], 1
	jne	SHORT $LN3@mouseclick
; Line 1343
	mov	ecx, DWORD PTR ?LastClicked@@3PAVframe@@A ; LastClicked
	mov	BYTE PTR ?leftMouse@@3_NA, 0		; leftMouse
	test	ecx, ecx
	je	SHORT $LN3@mouseclick
; Line 1344
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+12]
	call	edx
$LN3@mouseclick:
; Line 1346
	cmp	BYTE PTR [edi+2], 3
	jne	SHORT $LN2@mouseclick
; Line 1347
	mov	BYTE PTR [esi+36], 0
$LN2@mouseclick:
; Line 1348
	cmp	BYTE PTR [edi+2], 2
	jne	SHORT $LN1@mouseclick
; Line 1349
	mov	BYTE PTR ?MoveObj@@3_NA, 0		; MoveObj
$LN1@mouseclick:
	pop	edi
	pop	esi
; Line 1351
	pop	ebp
	ret	4
?mouseclick@MapViewer@@UAEXPAUSDL_MouseButtonEvent@@@Z ENDP ; MapViewer::mouseclick
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Ogtp
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1511
	mov	eax, DWORD PTR [ecx+16]
; Line 1512
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
PUBLIC	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
; Function compile flags: /Ogtp
;	COMDAT ??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 928
	push	ebp
	mov	ebp, esp
; Line 940
	mov	eax, DWORD PTR __Pos$[ebp]
	lea	edx, DWORD PTR [eax*8]
	sub	edx, eax
	mov	eax, DWORD PTR [ecx]
	lea	eax, DWORD PTR [eax+edx*4]
; Line 941
	pop	ebp
	ret	4
??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogtp
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 2008
	mov	eax, ecx
; Line 2010
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN4@Myptr
	mov	eax, DWORD PTR [eax]
$LN4@Myptr:
; Line 2011
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 459
	ret	0
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
; Function compile flags: /Ogtp
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 161
	mov	eax, ecx
; Line 163
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
; Function compile flags: /Ogtp
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; Line 165
	mov	eax, ecx
; Line 167
	ret	4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	??R?$less@I@std@@QBE_NABI0@Z			; std::less<unsigned int>::operator()
; Function compile flags: /Ogtp
;	COMDAT ??R?$less@I@std@@QBE_NABI0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@I@std@@QBE_NABI0@Z PROC			; std::less<unsigned int>::operator(), COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xfunctional
; Line 124
	push	ebp
	mov	ebp, esp
; Line 125
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Right$[ebp]
	cmp	ecx, DWORD PTR [edx]
	sbb	eax, eax
	neg	eax
; Line 126
	pop	ebp
	ret	8
??R?$less@I@std@@QBE_NABI0@Z ENDP			; std::less<unsigned int>::operator()
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@PAVframe@@V?$allocator@PAVframe@@@std@@@std@@QAE@XZ ; std::_Vector_val<frame *,std::allocator<frame *> >::~_Vector_val<frame *,std::allocator<frame *> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Vector_val@PAVframe@@V?$allocator@PAVframe@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@PAVframe@@V?$allocator@PAVframe@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<frame *,std::allocator<frame *> >::~_Vector_val<frame *,std::allocator<frame *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 434
	ret	0
??1?$_Vector_val@PAVframe@@V?$allocator@PAVframe@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<frame *,std::allocator<frame *> >::~_Vector_val<frame *,std::allocator<frame *> >
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVframe@@@std@@QAE@XZ		; std::allocator<frame *>::allocator<frame *>
; Function compile flags: /Ogtp
;	COMDAT ??0?$allocator@PAVframe@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@PAVframe@@@std@@QAE@XZ PROC		; std::allocator<frame *>::allocator<frame *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 161
	mov	eax, ecx
; Line 163
	ret	0
??0?$allocator@PAVframe@@@std@@QAE@XZ ENDP		; std::allocator<frame *>::allocator<frame *>
_TEXT	ENDS
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::operator==
; Function compile flags: /Ogtp
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 316
	push	ebp
	mov	ebp, esp
; Line 330
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	al
; Line 331
	pop	ebp
	ret	4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::operator==
_TEXT	ENDS
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >,std::_Iterator_base0>::_Mynode
; Function compile flags: /Ogtp
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx
; Line 122
	mov	eax, DWORD PTR [ecx]
; Line 123
	ret	0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogtp
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 2002
	mov	eax, ecx
; Line 2004
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN4@Myptr@2
	mov	eax, DWORD PTR [eax]
$LN4@Myptr@2:
; Line 2005
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx
; Line 2020
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN4@Xran:
$LN3@Xran:
	int	3
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
; Function compile flags: /Ogtp
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 181
	push	ebp
	mov	ebp, esp
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Color
; Function compile flags: /Ogtp
;	COMDAT ?_Color@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Color, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 606
	push	ebp
	mov	ebp, esp
; Line 607
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 20					; 00000014H
; Line 608
	pop	ebp
	ret	0
?_Color@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Isnil
; Function compile flags: /Ogtp
;	COMDAT ?_Isnil@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Isnil, COMDAT
; Line 611
	push	ebp
	mov	ebp, esp
; Line 612
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 21					; 00000015H
; Line 613
	pop	ebp
	ret	0
?_Isnil@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Left
; Function compile flags: /Ogtp
;	COMDAT ?_Left@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Left, COMDAT
; Line 621
	push	ebp
	mov	ebp, esp
; Line 622
	mov	eax, DWORD PTR __Pnode$[ebp]
; Line 623
	pop	ebp
	ret	0
?_Left@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Parent
; Function compile flags: /Ogtp
;	COMDAT ?_Parent@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Parent, COMDAT
; Line 626
	push	ebp
	mov	ebp, esp
; Line 627
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4
; Line 628
	pop	ebp
	ret	0
?_Parent@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Right
; Function compile flags: /Ogtp
;	COMDAT ?_Right@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Right, COMDAT
; Line 631
	push	ebp
	mov	ebp, esp
; Line 632
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8
; Line 633
	pop	ebp
	ret	0
?_Right@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBIPAVManagedItem@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Myval
; Function compile flags: /Ogtp
;	COMDAT ?_Myval@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBIPAVManagedItem@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBIPAVManagedItem@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Myval, COMDAT
; Line 636
	push	ebp
	mov	ebp, esp
; Line 637
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 12					; 0000000cH
; Line 638
	pop	ebp
	ret	0
?_Myval@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBIPAVManagedItem@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Max
; Function compile flags: /Ogtp
;	COMDAT ?_Max@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Max, COMDAT
; Line 641
	push	ebp
	mov	ebp, esp
; Line 642
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	BYTE PTR [ecx+21], 0
	jne	SHORT $LN1@Max
	npad	1
$LL2@Max:
; Line 643
	mov	eax, ecx
	mov	ecx, DWORD PTR [eax+8]
	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LL2@Max
$LN1@Max:
; Line 645
	pop	ebp
	ret	0
?_Max@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Min
; Function compile flags: /Ogtp
;	COMDAT ?_Min@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Min, COMDAT
; Line 648
	push	ebp
	mov	ebp, esp
; Line 649
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	BYTE PTR [ecx+21], 0
	jne	SHORT $LN1@Min
	npad	2
$LL2@Min:
; Line 650
	mov	eax, ecx
	mov	ecx, DWORD PTR [eax]
	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LL2@Min
$LN1@Min:
; Line 652
	pop	ebp
	ret	0
?_Min@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Node>::deallocate
; Function compile flags: /Ogtp
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 181
	push	ebp
	mov	ebp, esp
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVframe@@@std@@QAE@ABV01@@Z	; std::allocator<frame *>::allocator<frame *>
; Function compile flags: /Ogtp
;	COMDAT ??0?$allocator@PAVframe@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@PAVframe@@@std@@QAE@ABV01@@Z PROC	; std::allocator<frame *>::allocator<frame *>, COMDAT
; _this$ = ecx
; Line 165
	mov	eax, ecx
; Line 167
	ret	4
??0?$allocator@PAVframe@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<frame *>::allocator<frame *>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAVframe@@@std@@QAEXPAPAVframe@@I@Z ; std::allocator<frame *>::deallocate
; Function compile flags: /Ogtp
;	COMDAT ?deallocate@?$allocator@PAVframe@@@std@@QAEXPAPAVframe@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAVframe@@@std@@QAEXPAPAVframe@@I@Z PROC ; std::allocator<frame *>::deallocate, COMDAT
; _this$ = ecx
; Line 181
	push	ebp
	mov	ebp, esp
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	pop	ebp
	ret	8
?deallocate@?$allocator@PAVframe@@@std@@QAEXPAPAVframe@@I@Z ENDP ; std::allocator<frame *>::deallocate
_TEXT	ENDS
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBIPAVManagedItem@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::operator*
; Function compile flags: /Ogtp
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBIPAVManagedItem@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBIPAVManagedItem@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 246
	mov	eax, DWORD PTR [ecx]
	add	eax, 12					; 0000000cH
; Line 247
	ret	0
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBIPAVManagedItem@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Ogtp
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1972
	push	ebp
	mov	ebp, esp
	push	esi
; Line 1973
	mov	esi, DWORD PTR __Ptr$[ebp]
	test	esi, esi
	je	SHORT $LN2@Inside
	mov	edx, DWORD PTR [ecx+20]
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN8@Inside
	mov	eax, DWORD PTR [ecx]
	jmp	SHORT $LN9@Inside
$LN8@Inside:
	mov	eax, ecx
$LN9@Inside:
	cmp	esi, eax
	jb	SHORT $LN2@Inside
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN12@Inside
	mov	eax, DWORD PTR [ecx]
	jmp	SHORT $LN13@Inside
$LN12@Inside:
	mov	eax, ecx
$LN13@Inside:
	mov	ecx, DWORD PTR [ecx+16]
	add	ecx, eax
	cmp	ecx, esi
	jbe	SHORT $LN2@Inside
; Line 1976
	mov	al, 1
	pop	esi
; Line 1977
	pop	ebp
	ret	4
$LN2@Inside:
; Line 1974
	xor	al, al
	pop	esi
; Line 1977
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx
; Line 2015
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen:
$LN3@Xlen:
	int	3
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >,std::_Iterator_base0>
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 43
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 45
	pop	ebp
	ret	8
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >,std::_Iterator_base0>
_TEXT	ENDS
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >,std::_Iterator_base0>::operator++
; Function compile flags: /Ogtp
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx
; Line 58
	mov	eax, ecx
; Line 59
	mov	edx, DWORD PTR [eax]
	cmp	BYTE PTR [edx+21], 0
	jne	SHORT $LN3@operator
; Line 61
	mov	ecx, DWORD PTR [edx+8]
	cmp	BYTE PTR [ecx+21], 0
	jne	SHORT $LN34@operator
; Line 63
	mov	edx, DWORD PTR [ecx]
	cmp	BYTE PTR [edx+21], 0
	jne	SHORT $LN17@operator
	npad	5
$LL18@operator:
	mov	ecx, edx
	mov	edx, DWORD PTR [ecx]
	cmp	BYTE PTR [edx+21], 0
	je	SHORT $LL18@operator
$LN17@operator:
	mov	DWORD PTR [eax], ecx
; Line 73
	ret	0
$LN34@operator:
; Line 68
	mov	edx, DWORD PTR [edx+4]
	cmp	BYTE PTR [edx+21], 0
	jne	SHORT $LN1@operator
$LL2@operator:
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR [edx+8]
	jne	SHORT $LN1@operator
; Line 69
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [edx+4]
	cmp	BYTE PTR [edx+21], 0
	je	SHORT $LL2@operator
$LN1@operator:
; Line 70
	mov	DWORD PTR [eax], edx
$LN3@operator:
; Line 73
	ret	0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >,std::_Iterator_base0>::operator++
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 219
	or	eax, -1
; Line 220
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
PUBLIC	??$min@M@std@@YAABMABM0@Z			; std::min<float>
; Function compile flags: /Ogtp
;	COMDAT ??$min@M@std@@YAABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@M@std@@YAABMABM0@Z PROC				; std::min<float>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 2106
	push	ebp
	mov	ebp, esp
; Line 2107
	mov	ecx, DWORD PTR __Right$[ebp]
	fld	DWORD PTR [ecx]
	mov	edx, DWORD PTR __Left$[ebp]
	fld	DWORD PTR [edx]
	fcompp
	fnstsw	ax
	test	ah, 65					; 00000041H
	mov	eax, ecx
	je	SHORT $LN4@min
	mov	eax, edx
$LN4@min:
; Line 2108
	pop	ebp
	ret	0
??$min@M@std@@YAABMABM0@Z ENDP				; std::min<float>
_TEXT	ENDS
PUBLIC	??$addressof@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@YAPAU?$pair@$$CBIPAVManagedItem@@@0@AAU10@@Z ; std::addressof<std::pair<unsigned int const ,ManagedItem *> >
; Function compile flags: /Ogtp
;	COMDAT ??$addressof@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@YAPAU?$pair@$$CBIPAVManagedItem@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@YAPAU?$pair@$$CBIPAVManagedItem@@@0@AAU10@@Z PROC ; std::addressof<std::pair<unsigned int const ,ManagedItem *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 110
	push	ebp
	mov	ebp, esp
; Line 111
	mov	eax, DWORD PTR __Val$[ebp]
; Line 112
	pop	ebp
	ret	0
??$addressof@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@YAPAU?$pair@$$CBIPAVManagedItem@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<unsigned int const ,ManagedItem *> >
_TEXT	ENDS
PUBLIC	??$_Kfn@$$CBIPAVManagedItem@@@?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@SAABIABU?$pair@$$CBIPAVManagedItem@@@1@@Z ; std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0>::_Kfn<unsigned int const ,ManagedItem *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Kfn@$$CBIPAVManagedItem@@@?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@SAABIABU?$pair@$$CBIPAVManagedItem@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@$$CBIPAVManagedItem@@@?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@SAABIABU?$pair@$$CBIPAVManagedItem@@@1@@Z PROC ; std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0>::_Kfn<unsigned int const ,ManagedItem *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
; Line 66
	push	ebp
	mov	ebp, esp
; Line 68
	mov	eax, DWORD PTR __Val$[ebp]
; Line 69
	pop	ebp
	ret	0
??$_Kfn@$$CBIPAVManagedItem@@@?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@SAABIABU?$pair@$$CBIPAVManagedItem@@@1@@Z ENDP ; std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0>::_Kfn<unsigned int const ,ManagedItem *>
_TEXT	ENDS
PUBLIC	??$move@AAPAVManagedItem@@@std@@YA$$QAPAVManagedItem@@AAPAV1@@Z ; std::move<ManagedItem * &>
; Function compile flags: /Ogtp
;	COMDAT ??$move@AAPAVManagedItem@@@std@@YA$$QAPAVManagedItem@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAPAVManagedItem@@@std@@YA$$QAPAVManagedItem@@AAPAV1@@Z PROC ; std::move<ManagedItem * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 86
	push	ebp
	mov	ebp, esp
; Line 87
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 88
	pop	ebp
	ret	0
??$move@AAPAVManagedItem@@@std@@YA$$QAPAVManagedItem@@AAPAV1@@Z ENDP ; std::move<ManagedItem * &>
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
$T95463 = -12						; size = 12
$T95468 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 30
	push	ebp
	mov	ebp, esp
; Line 33
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
; Line 35
	je	SHORT $LN5@Allocate
; Line 36
	cmp	ecx, -1
	ja	SHORT $LN1@Allocate
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
; Line 39
	jne	SHORT $LN5@Allocate
$LN1@Allocate:
; Line 37
	lea	eax, DWORD PTR $T95468[ebp]
	push	eax
	lea	ecx, DWORD PTR $T95463[ebp]
	mov	DWORD PTR $T95468[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T95463[ebp]
	push	ecx
	mov	DWORD PTR $T95463[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN10@Allocate:
$LN5@Allocate:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@Allocate:
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
; Function compile flags: /Ogtp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	esi
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::size
; Function compile flags: /Ogtp
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 869
	mov	eax, DWORD PTR [ecx+8]
; Line 870
	ret	0
?size@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::size
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >,std::_Iterator_base0>
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx
; Line 38
	mov	eax, ecx
	mov	DWORD PTR [eax], 0
; Line 39
	ret	0
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >,std::_Iterator_base0>
_TEXT	ENDS
PUBLIC	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >,std::_Iterator_base0>::operator--
; Function compile flags: /Ogtp
;	COMDAT ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >,std::_Iterator_base0>::operator--, COMDAT
; _this$ = ecx
; Line 83
	mov	eax, ecx
; Line 84
	mov	ecx, DWORD PTR [eax]
	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LN8@operator@2
; Line 85
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax], ecx
; Line 101
	ret	0
$LN8@operator@2:
; Line 86
	mov	edx, DWORD PTR [ecx]
	cmp	BYTE PTR [edx+21], 0
	jne	SHORT $LN40@operator@2
; Line 88
	mov	ecx, DWORD PTR [edx+8]
	cmp	BYTE PTR [ecx+21], 0
	jne	SHORT $LN21@operator@2
$LL22@operator@2:
	mov	edx, ecx
	mov	ecx, DWORD PTR [edx+8]
	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LL22@operator@2
; Line 98
	mov	DWORD PTR [eax], edx
; Line 101
	ret	0
$LN40@operator@2:
; Line 93
	mov	edx, DWORD PTR [ecx+4]
	cmp	BYTE PTR [edx+21], 0
	jne	SHORT $LN3@operator@2
$LL4@operator@2:
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR [edx]
	jne	SHORT $LN3@operator@2
; Line 94
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [edx+4]
	cmp	BYTE PTR [edx+21], 0
	je	SHORT $LL4@operator@2
$LN3@operator@2:
; Line 95
	mov	ecx, DWORD PTR [eax]
	cmp	BYTE PTR [ecx+21], 0
	jne	SHORT $LN1@operator@2
; Line 88
$LN21@operator@2:
; Line 98
	mov	DWORD PTR [eax], edx
$LN1@operator@2:
; Line 101
	ret	0
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >,std::_Iterator_base0>::operator--
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned int const ,ManagedItem *> >::max_size
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<unsigned int const ,ManagedItem *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 219
	mov	eax, 536870911				; 1fffffffH
; Line 220
	ret	0
?max_size@?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned int const ,ManagedItem *> >::max_size
_TEXT	ENDS
PUBLIC	??$forward@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@YA$$QAU?$pair@$$CBIPAVManagedItem@@@0@AAU10@@Z ; std::forward<std::pair<unsigned int const ,ManagedItem *> >
; Function compile flags: /Ogtp
;	COMDAT ??$forward@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@YA$$QAU?$pair@$$CBIPAVManagedItem@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@YA$$QAU?$pair@$$CBIPAVManagedItem@@@0@AAU10@@Z PROC ; std::forward<std::pair<unsigned int const ,ManagedItem *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@YA$$QAU?$pair@$$CBIPAVManagedItem@@@0@AAU10@@Z ENDP ; std::forward<std::pair<unsigned int const ,ManagedItem *> >
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAVframe@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVframe@@0@Z ; std::_Ptr_cat<frame *,frame *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Ptr_cat@PAVframe@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVframe@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAVframe@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVframe@@0@Z PROC ; std::_Ptr_cat<frame *,frame *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 528
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 530
	mov	al, BYTE PTR __Cat$[ebp]
; Line 531
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@PAVframe@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVframe@@0@Z ENDP ; std::_Ptr_cat<frame *,frame *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVframe@@@std@@@std@@YAXPAPAVframe@@0AAV?$allocator@PAVframe@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<frame *> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy_range@V?$allocator@PAVframe@@@std@@@std@@YAXPAPAVframe@@0AAV?$allocator@PAVframe@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@PAVframe@@@std@@@std@@YAXPAPAVframe@@0AAV?$allocator@PAVframe@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<frame *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 105
	ret	0
??$_Destroy_range@V?$allocator@PAVframe@@@std@@@std@@YAXPAPAVframe@@0AAV?$allocator@PAVframe@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<frame *> >
_TEXT	ENDS
PUBLIC	??$_Destroy@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@YAXPAU?$pair@$$CBIPAVManagedItem@@@0@@Z ; std::_Destroy<std::pair<unsigned int const ,ManagedItem *> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@YAXPAU?$pair@$$CBIPAVManagedItem@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@YAXPAU?$pair@$$CBIPAVManagedItem@@@0@@Z PROC ; std::_Destroy<std::pair<unsigned int const ,ManagedItem *> >, COMDAT
; Line 64
	ret	0
??$_Destroy@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@YAXPAU?$pair@$$CBIPAVManagedItem@@@0@@Z ENDP ; std::_Destroy<std::pair<unsigned int const ,ManagedItem *> >
_TEXT	ENDS
PUBLIC	??$move@AA_N@std@@YA$$QA_NAA_N@Z		; std::move<bool &>
; Function compile flags: /Ogtp
;	COMDAT ??$move@AA_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AA_N@std@@YA$$QA_NAA_N@Z PROC			; std::move<bool &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 86
	push	ebp
	mov	ebp, esp
; Line 87
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 88
	pop	ebp
	ret	0
??$move@AA_N@std@@YA$$QA_NAA_N@Z ENDP			; std::move<bool &>
_TEXT	ENDS
PUBLIC	??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > > &>
; Function compile flags: /Ogtp
;	COMDAT ??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > > &>, COMDAT
; Line 86
	push	ebp
	mov	ebp, esp
; Line 87
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 88
	pop	ebp
	ret	0
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > > &>
_TEXT	ENDS
PUBLIC	??$forward@_N@std@@YA$$QA_NAA_N@Z		; std::forward<bool>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@_N@std@@YA$$QA_NAA_N@Z PROC			; std::forward<bool>, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@_N@std@@YA$$QA_NAA_N@Z ENDP			; std::forward<bool>
_TEXT	ENDS
PUBLIC	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > > &>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > > &>, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > > &>
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > > &,bool>
; Function compile flags: /Ogtp
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > > &,bool>, COMDAT
; _this$ = ecx
; Line 163
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
	mov	ecx, DWORD PTR __Val1$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Val2$[ebp]
	mov	DWORD PTR [eax], edx
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax+4], dl
; Line 164
	pop	ebp
	ret	8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > > &,bool>
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Node>
; Function compile flags: /Ogtp
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T95571 = -12						; size = 12
$T95575 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Node>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 30
	push	ebp
	mov	ebp, esp
; Line 33
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
; Line 35
	je	SHORT $LN5@Allocate@2
; Line 36
	cmp	ecx, 178956970				; 0aaaaaaaH
	ja	SHORT $LN1@Allocate@2
	lea	eax, DWORD PTR [ecx+ecx*2]
	add	eax, eax
	add	eax, eax
	add	eax, eax
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
; Line 39
	jne	SHORT $LN5@Allocate@2
$LN1@Allocate@2:
; Line 37
	lea	ecx, DWORD PTR $T95575[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T95571[ebp]
	mov	DWORD PTR $T95575[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T95571[ebp]
	push	edx
	mov	DWORD PTR $T95571[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN10@Allocate@2:
$LN5@Allocate@2:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@Allocate@2:
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$forward@PAVManagedItem@@@std@@YA$$QAPAVManagedItem@@AAPAV1@@Z ; std::forward<ManagedItem *>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@PAVManagedItem@@@std@@YA$$QAPAVManagedItem@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAVManagedItem@@@std@@YA$$QAPAVManagedItem@@AAPAV1@@Z PROC ; std::forward<ManagedItem *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@PAVManagedItem@@@std@@YA$$QAPAVManagedItem@@AAPAV1@@Z ENDP ; std::forward<ManagedItem *>
_TEXT	ENDS
PUBLIC	??$forward@$$CBI@std@@YA$$QBIABI@Z		; std::forward<unsigned int const >
; Function compile flags: /Ogtp
;	COMDAT ??$forward@$$CBI@std@@YA$$QBIABI@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@$$CBI@std@@YA$$QBIABI@Z PROC			; std::forward<unsigned int const >, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@$$CBI@std@@YA$$QBIABI@Z ENDP			; std::forward<unsigned int const >
_TEXT	ENDS
PUBLIC	??$move@ABI@std@@YA$$QBIABI@Z			; std::move<unsigned int const &>
; Function compile flags: /Ogtp
;	COMDAT ??$move@ABI@std@@YA$$QBIABI@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@ABI@std@@YA$$QBIABI@Z PROC			; std::move<unsigned int const &>, COMDAT
; Line 86
	push	ebp
	mov	ebp, esp
; Line 87
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 88
	pop	ebp
	ret	0
??$move@ABI@std@@YA$$QBIABI@Z ENDP			; std::move<unsigned int const &>
_TEXT	ENDS
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Ogtp
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1495
	mov	eax, ecx
; Line 1496
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN6@c_str
	mov	eax, DWORD PTR [eax]
$LN6@c_str:
; Line 1497
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::operator!=
; Function compile flags: /Ogtp
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::operator!=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 334
	push	ebp
	mov	ebp, esp
; Line 335
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	al
; Line 336
	pop	ebp
	ret	4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::operator!=
_TEXT	ENDS
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z PROC ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 454
	mov	eax, ecx
; Line 455
	ret	4
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAAAIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Key
; Function compile flags: /Ogtp
;	COMDAT ?_Key@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAAAIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAAAIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Key, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 616
	push	ebp
	mov	ebp, esp
; Line 617
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 12					; 0000000cH
; Line 618
	pop	ebp
	ret	0
?_Key@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@SAAAIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@PAVframe@@V?$allocator@PAVframe@@@std@@@std@@QAE@V?$allocator@PAVframe@@@1@@Z ; std::_Vector_val<frame *,std::allocator<frame *> >::_Vector_val<frame *,std::allocator<frame *> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Vector_val@PAVframe@@V?$allocator@PAVframe@@@std@@@std@@QAE@V?$allocator@PAVframe@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@PAVframe@@V?$allocator@PAVframe@@@std@@@std@@QAE@V?$allocator@PAVframe@@@1@@Z PROC ; std::_Vector_val<frame *,std::allocator<frame *> >::_Vector_val<frame *,std::allocator<frame *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 426
	mov	eax, ecx
; Line 427
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
; Line 428
	mov	DWORD PTR [eax+4], ecx
; Line 429
	mov	DWORD PTR [eax+8], ecx
; Line 430
	ret	4
??0?$_Vector_val@PAVframe@@V?$allocator@PAVframe@@@std@@@std@@QAE@V?$allocator@PAVframe@@@1@@Z ENDP ; std::_Vector_val<frame *,std::allocator<frame *> >::_Vector_val<frame *,std::allocator<frame *> >
_TEXT	ENDS
PUBLIC	??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBIPAVManagedItem@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::operator*
; Function compile flags: /Ogtp
;	COMDAT ??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBIPAVManagedItem@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBIPAVManagedItem@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 396
	mov	eax, DWORD PTR [ecx]
	add	eax, 12					; 0000000cH
; Line 397
	ret	0
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBIPAVManagedItem@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Ogtp
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1952
	push	ebp
	mov	ebp, esp
; Line 1953
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [ecx+16], eax
	jb	SHORT $LN5@Eos
	mov	ecx, DWORD PTR [ecx]
$LN5@Eos:
	mov	BYTE PTR [ecx+eax], 0
; Line 1954
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Lmost
; Function compile flags: /Ogtp
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Lmost, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 1759
	mov	eax, DWORD PTR [ecx+4]
; Line 1760
	ret	0
?_Lmost@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Rmost
; Function compile flags: /Ogtp
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Rmost, COMDAT
; _this$ = ecx
; Line 1784
	mov	eax, DWORD PTR [ecx+4]
	add	eax, 8
; Line 1785
	ret	0
?_Rmost@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Root
; Function compile flags: /Ogtp
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Root, COMDAT
; _this$ = ecx
; Line 1789
	mov	eax, DWORD PTR [ecx+4]
	add	eax, 4
; Line 1790
	ret	0
?_Root@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Rrotate
; Function compile flags: /Ogtp
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx
; Line 1793
	push	ebp
	mov	ebp, esp
; Line 1794
	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR [edx]
	push	esi
; Line 1795
	mov	esi, DWORD PTR [eax+8]
	mov	DWORD PTR [edx], esi
; Line 1797
	mov	esi, DWORD PTR [eax+8]
	cmp	BYTE PTR [esi+21], 0
	jne	SHORT $LN5@Rrotate
; Line 1798
	mov	DWORD PTR [esi+4], edx
$LN5@Rrotate:
; Line 1799
	mov	esi, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], esi
; Line 1801
	mov	ecx, DWORD PTR [ecx+4]
	pop	esi
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN4@Rrotate
; Line 1802
	mov	DWORD PTR [ecx+4], eax
; Line 1808
	mov	DWORD PTR [eax+8], edx
; Line 1809
	mov	DWORD PTR [edx+4], eax
; Line 1810
	pop	ebp
	ret	4
$LN4@Rrotate:
; Line 1803
	mov	ecx, DWORD PTR [edx+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN2@Rrotate
; Line 1804
	mov	DWORD PTR [ecx+8], eax
; Line 1808
	mov	DWORD PTR [eax+8], edx
; Line 1809
	mov	DWORD PTR [edx+4], eax
; Line 1810
	pop	ebp
	ret	4
$LN2@Rrotate:
; Line 1806
	mov	DWORD PTR [ecx], eax
; Line 1808
	mov	DWORD PTR [eax+8], edx
; Line 1809
	mov	DWORD PTR [edx+4], eax
; Line 1810
	pop	ebp
	ret	4
?_Rrotate@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >, COMDAT
; _this$ = ecx
; Line 213
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 214
	pop	ebp
	ret	8
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::operator++
; Function compile flags: /Ogtp
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::operator++, COMDAT
; _this$ = ecx
; Line 250
	push	esi
	mov	esi, ecx
; Line 265
	call	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >,std::_Iterator_base0>::operator++
; Line 266
	mov	eax, esi
	pop	esi
; Line 267
	ret	0
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@$$CBIPAVManagedItem@@@std@@QAE@ABI$$QAPAVManagedItem@@@Z ; std::_Pair_base<unsigned int const ,ManagedItem *>::_Pair_base<unsigned int const ,ManagedItem *>
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Pair_base@$$CBIPAVManagedItem@@@std@@QAE@ABI$$QAPAVManagedItem@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@$$CBIPAVManagedItem@@@std@@QAE@ABI$$QAPAVManagedItem@@@Z PROC ; std::_Pair_base<unsigned int const ,ManagedItem *>::_Pair_base<unsigned int const ,ManagedItem *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 150
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
	mov	ecx, DWORD PTR __Val1$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Val2$[ebp]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
; Line 151
	pop	ebp
	ret	8
??0?$_Pair_base@$$CBIPAVManagedItem@@@std@@QAE@ABI$$QAPAVManagedItem@@@Z ENDP ; std::_Pair_base<unsigned int const ,ManagedItem *>::_Pair_base<unsigned int const ,ManagedItem *>
_TEXT	ENDS
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1517
	mov	eax, -2					; fffffffeH
; Line 1518
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
; Function compile flags: /Ogtp
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
$T95779 = -12						; size = 12
$T95771 = 8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 186
	push	ebp
	mov	ebp, esp
; Line 187
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
	je	SHORT $LN1@allocate
	cmp	ecx, -1
	ja	SHORT $LN3@allocate
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@allocate
$LN3@allocate:
	lea	eax, DWORD PTR $T95771[ebp]
	push	eax
	lea	ecx, DWORD PTR $T95779[ebp]
	mov	DWORD PTR $T95771[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T95779[ebp]
	push	ecx
	mov	DWORD PTR $T95779[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN13@allocate:
$LN1@allocate:
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
$LN12@allocate:
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVframe@@@std@@@std@@YAXPAPAVframe@@0AAV?$allocator@PAVframe@@@0@@Z ; std::_Destroy_range<std::allocator<frame *> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy_range@V?$allocator@PAVframe@@@std@@@std@@YAXPAPAVframe@@0AAV?$allocator@PAVframe@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVframe@@@std@@@std@@YAXPAPAVframe@@0AAV?$allocator@PAVframe@@@0@@Z PROC ; std::_Destroy_range<std::allocator<frame *> >, COMDAT
; Line 89
	ret	0
??$_Destroy_range@V?$allocator@PAVframe@@@std@@@std@@YAXPAPAVframe@@0AAV?$allocator@PAVframe@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<frame *> >
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@QAEXPAU?$pair@$$CBIPAVManagedItem@@@2@@Z ; std::allocator<std::pair<unsigned int const ,ManagedItem *> >::destroy
; Function compile flags: /Ogtp
;	COMDAT ?destroy@?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@QAEXPAU?$pair@$$CBIPAVManagedItem@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@QAEXPAU?$pair@$$CBIPAVManagedItem@@@2@@Z PROC ; std::allocator<std::pair<unsigned int const ,ManagedItem *> >::destroy, COMDAT
; _this$ = ecx
; Line 214
	ret	4
?destroy@?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@QAEXPAU?$pair@$$CBIPAVManagedItem@@@2@@Z ENDP ; std::allocator<std::pair<unsigned int const ,ManagedItem *> >::destroy
_TEXT	ENDS
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 208
	mov	eax, ecx
	mov	DWORD PTR [eax], 0
; Line 209
	ret	0
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >
_TEXT	ENDS
PUBLIC	??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::operator--
; Function compile flags: /Ogtp
;	COMDAT ??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::operator--, COMDAT
; _this$ = ecx
; Line 277
	push	esi
	mov	esi, ecx
; Line 302
	call	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >,std::_Iterator_base0>::operator--
; Line 305
	mov	eax, esi
	pop	esi
; Line 306
	ret	0
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::operator--
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::max_size
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::max_size, COMDAT
; _this$ = ecx
; Line 874
	mov	eax, 536870911				; 1fffffffH
; Line 875
	ret	0
?max_size@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::operator--
; Function compile flags: /Ogtp
;	COMDAT ??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::operator--, COMDAT
; _this$ = ecx
; Line 418
	push	esi
	mov	esi, ecx
; Line 419
	call	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >,std::_Iterator_base0>::operator--
; Line 420
	mov	eax, esi
	pop	esi
; Line 421
	ret	0
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::operator--
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >,bool>
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >,bool>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 145
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
	mov	ecx, DWORD PTR __Val1$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Val2$[ebp]
	mov	DWORD PTR [eax], edx
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax+4], dl
; Line 146
	pop	ebp
	ret	8
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >,bool>
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > > &,bool>
; Function compile flags: /Ogtp
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > > &,bool>, COMDAT
; _this$ = ecx
; Line 247
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
	mov	ecx, DWORD PTR __Val1$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Val2$[ebp]
	mov	DWORD PTR [eax], edx
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax+4], dl
; Line 248
	pop	ebp
	ret	8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > > &,bool>
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Node>::allocate
; Function compile flags: /Ogtp
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
$T95874 = -12						; size = 12
$T95866 = 8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 186
	push	ebp
	mov	ebp, esp
; Line 187
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
	je	SHORT $LN1@allocate@2
	cmp	ecx, 178956970				; 0aaaaaaaH
	ja	SHORT $LN3@allocate@2
	lea	eax, DWORD PTR [ecx+ecx*2]
	add	eax, eax
	add	eax, eax
	add	eax, eax
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@allocate@2
$LN3@allocate@2:
	lea	ecx, DWORD PTR $T95866[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T95874[ebp]
	mov	DWORD PTR $T95866[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T95874[ebp]
	push	edx
	mov	DWORD PTR $T95874[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN13@allocate@2:
$LN1@allocate@2:
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
$LN12@allocate@2:
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@$$CBIPAVManagedItem@@@std@@QAE@$$QBI$$QAPAVManagedItem@@@Z ; std::_Pair_base<unsigned int const ,ManagedItem *>::_Pair_base<unsigned int const ,ManagedItem *>
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Pair_base@$$CBIPAVManagedItem@@@std@@QAE@$$QBI$$QAPAVManagedItem@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@$$CBIPAVManagedItem@@@std@@QAE@$$QBI$$QAPAVManagedItem@@@Z PROC ; std::_Pair_base<unsigned int const ,ManagedItem *>::_Pair_base<unsigned int const ,ManagedItem *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 145
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
	mov	ecx, DWORD PTR __Val1$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Val2$[ebp]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
; Line 146
	pop	ebp
	ret	8
??0?$_Pair_base@$$CBIPAVManagedItem@@@std@@QAE@$$QBI$$QAPAVManagedItem@@@Z ENDP ; std::_Pair_base<unsigned int const ,ManagedItem *>::_Pair_base<unsigned int const ,ManagedItem *>
_TEXT	ENDS
PUBLIC	?returnName@nameEntry@@QAEPBDXZ			; nameEntry::returnName
; Function compile flags: /Ogtp
;	COMDAT ?returnName@nameEntry@@QAEPBDXZ
_TEXT	SEGMENT
?returnName@nameEntry@@QAEPBDXZ PROC			; nameEntry::returnName, COMDAT
; _this$ = ecx
; File c:\programovani\wow editor\test\src\editor\selection.h
; Line 51
	mov	eax, ecx
; Line 52
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN8@returnName
	mov	eax, DWORD PTR [eax]
$LN8@returnName:
; Line 53
	ret	0
?returnName@nameEntry@@QAEPBDXZ ENDP			; nameEntry::returnName
_TEXT	ENDS
PUBLIC	??0?$vector@PAVframe@@V?$allocator@PAVframe@@@std@@@std@@QAE@XZ ; std::vector<frame *,std::allocator<frame *> >::vector<frame *,std::allocator<frame *> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$vector@PAVframe@@V?$allocator@PAVframe@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@PAVframe@@V?$allocator@PAVframe@@@std@@@std@@QAE@XZ PROC ; std::vector<frame *,std::allocator<frame *> >::vector<frame *,std::allocator<frame *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 507
	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
; Line 508
	ret	0
??0?$vector@PAVframe@@V?$allocator@PAVframe@@@std@@@std@@QAE@XZ ENDP ; std::vector<frame *,std::allocator<frame *> >::vector<frame *,std::allocator<frame *> >
_TEXT	ENDS
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Ogtp
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1987
	push	ebp
	mov	ebp, esp
; Line 1988
	cmp	BYTE PTR __Built$[ebp], 0
	push	esi
	push	edi
	mov	edi, DWORD PTR __Newsize$[ebp]
	mov	esi, ecx
	je	SHORT $LN9@Tidy
; Line 1990
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN9@Tidy
; Line 1992
	push	ebx
	mov	ebx, DWORD PTR [esi]
; Line 1993
	test	edi, edi
	je	SHORT $LN7@Tidy
; Line 1994
	push	edi
	push	ebx
	push	esi
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN7@Tidy:
; Line 1995
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	pop	ebx
$LN9@Tidy:
; Line 1998
	mov	DWORD PTR [esi+16], edi
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	BYTE PTR [edi+esi], 0
	pop	edi
	pop	esi
; Line 1999
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 378
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 379
	pop	ebp
	ret	8
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBIPAVManagedItem@@@std@@QAE@ABI$$QAPAVManagedItem@@@Z ; std::pair<unsigned int const ,ManagedItem *>::pair<unsigned int const ,ManagedItem *>
; Function compile flags: /Ogtp
;	COMDAT ??0?$pair@$$CBIPAVManagedItem@@@std@@QAE@ABI$$QAPAVManagedItem@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBIPAVManagedItem@@@std@@QAE@ABI$$QAPAVManagedItem@@@Z PROC ; std::pair<unsigned int const ,ManagedItem *>::pair<unsigned int const ,ManagedItem *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 233
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
	mov	ecx, DWORD PTR __Val1$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Val2$[ebp]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
; Line 234
	pop	ebp
	ret	8
??0?$pair@$$CBIPAVManagedItem@@@std@@QAE@ABI$$QAPAVManagedItem@@@Z ENDP ; std::pair<unsigned int const ,ManagedItem *>::pair<unsigned int const ,ManagedItem *>
_TEXT	ENDS
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
; Function compile flags: /Ogtp
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1108
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
; Line 1109
	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR __Off$[ebp]
	push	edi
	cmp	eax, ecx
	jae	SHORT $LN3@erase
; Line 1110
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN28@erase:
$LN3@erase:
; Line 1111
	mov	edi, DWORD PTR __Count$[ebp]
	sub	eax, ecx
	cmp	eax, edi
	jae	SHORT $LN2@erase
; Line 1112
	mov	edi, eax
$LN2@erase:
; Line 1113
	test	edi, edi
	je	SHORT $LN25@erase
; Line 1116
	mov	edx, DWORD PTR [esi+20]
	push	ebx
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN11@erase
	mov	ebx, DWORD PTR [esi]
	jmp	SHORT $LN12@erase
$LN11@erase:
	mov	ebx, esi
$LN12@erase:
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN15@erase
	mov	edx, DWORD PTR [esi]
	jmp	SHORT $LN16@erase
$LN15@erase:
	mov	edx, esi
$LN16@erase:
	sub	eax, edi
	add	ebx, ecx
	push	eax
	add	ebx, edi
	add	edx, ecx
	push	ebx
	push	edx
	call	DWORD PTR __imp__memmove
; Line 1117
	mov	eax, DWORD PTR [esi+16]
	add	esp, 12					; 0000000cH
	sub	eax, edi
; Line 1118
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], eax
	pop	ebx
	jb	SHORT $LN23@erase
	mov	ecx, DWORD PTR [esi]
	mov	BYTE PTR [ecx+eax], 0
	pop	edi
; Line 1120
	mov	eax, esi
	pop	esi
; Line 1121
	pop	ebp
	ret	8
; Line 1118
$LN23@erase:
	mov	ecx, esi
	mov	BYTE PTR [ecx+eax], 0
$LN25@erase:
; Line 1120
	pop	edi
	mov	eax, esi
	pop	esi
; Line 1121
	pop	ebp
	ret	8
$LN27@erase:
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Lbound
; Function compile flags: /Ogtp
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@ABI@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@ABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Lbound, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 1741
	push	ebp
	mov	ebp, esp
; Line 1742
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [eax+4]
; Line 1745
	cmp	BYTE PTR [ecx+21], 0
	jne	SHORT $LN3@Lbound
	mov	edx, DWORD PTR __Keyval$[ebp]
	mov	edx, DWORD PTR [edx]
$LL4@Lbound:
; Line 1746
	cmp	DWORD PTR [ecx+12], edx
	jae	SHORT $LN2@Lbound
; Line 1747
	mov	ecx, DWORD PTR [ecx+8]
; Line 1748
	jmp	SHORT $LN1@Lbound
$LN2@Lbound:
; Line 1750
	mov	eax, ecx
; Line 1751
	mov	ecx, DWORD PTR [ecx]
$LN1@Lbound:
; Line 1745
	cmp	BYTE PTR [ecx+21], 0
	je	SHORT $LL4@Lbound
$LN3@Lbound:
; Line 1755
	pop	ebp
	ret	4
?_Lbound@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@ABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Lrotate
; Function compile flags: /Ogtp
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx
; Line 1763
	push	ebp
	mov	ebp, esp
; Line 1764
	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	esi
; Line 1765
	mov	esi, DWORD PTR [eax]
	mov	DWORD PTR [edx+8], esi
; Line 1767
	mov	esi, DWORD PTR [eax]
	cmp	BYTE PTR [esi+21], 0
	jne	SHORT $LN5@Lrotate
; Line 1768
	mov	DWORD PTR [esi+4], edx
$LN5@Lrotate:
; Line 1769
	mov	esi, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], esi
; Line 1771
	mov	ecx, DWORD PTR [ecx+4]
	pop	esi
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN4@Lrotate
; Line 1772
	mov	DWORD PTR [ecx+4], eax
; Line 1778
	mov	DWORD PTR [eax], edx
; Line 1779
	mov	DWORD PTR [edx+4], eax
; Line 1780
	pop	ebp
	ret	4
$LN4@Lrotate:
; Line 1773
	mov	ecx, DWORD PTR [edx+4]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN2@Lrotate
; Line 1774
	mov	DWORD PTR [ecx], eax
; Line 1778
	mov	DWORD PTR [eax], edx
; Line 1779
	mov	DWORD PTR [edx+4], eax
; Line 1780
	pop	ebp
	ret	4
$LN2@Lrotate:
; Line 1776
	mov	DWORD PTR [ecx+8], eax
; Line 1778
	mov	DWORD PTR [eax], edx
; Line 1779
	mov	DWORD PTR [edx+4], eax
; Line 1780
	pop	ebp
	ret	4
?_Lrotate@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@PAVframe@@V?$allocator@PAVframe@@@std@@@std@@IAEXPAPAVframe@@0@Z ; std::vector<frame *,std::allocator<frame *> >::_Destroy
; Function compile flags: /Ogtp
;	COMDAT ?_Destroy@?$vector@PAVframe@@V?$allocator@PAVframe@@@std@@@std@@IAEXPAPAVframe@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVframe@@V?$allocator@PAVframe@@@std@@@std@@IAEXPAPAVframe@@0@Z PROC ; std::vector<frame *,std::allocator<frame *> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1271
	ret	8
?_Destroy@?$vector@PAVframe@@V?$allocator@PAVframe@@@std@@@std@@IAEXPAPAVframe@@0@Z ENDP ; std::vector<frame *,std::allocator<frame *> >::_Destroy
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
$T96245 = -40						; size = 12
__Newres$ = -28						; size = 4
$T96222 = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ptr$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1918
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	edi, ecx
	mov	DWORD PTR _this$[ebp], edi
; Line 1919
	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	esi, eax
	or	esi, 15					; 0000000fH
; Line 1920
	cmp	esi, -2					; fffffffeH
	jbe	SHORT $LN9@Copy
; Line 1921
	mov	esi, eax
	jmp	SHORT $LN39@Copy
$LN9@Copy:
; Line 1922
	mov	ebx, DWORD PTR [edi+20]
	mov	eax, -1431655765			; aaaaaaabH
	mul	esi
	mov	ecx, ebx
	shr	ecx, 1
	shr	edx, 1
	cmp	ecx, edx
	jbe	SHORT $LN39@Copy
; Line 1924
	mov	eax, -2					; fffffffeH
	sub	eax, ecx
; Line 1926
	lea	esi, DWORD PTR [ecx+ebx]
	cmp	ebx, eax
	jbe	SHORT $LN39@Copy
; Line 1928
	mov	esi, -2					; fffffffeH
$LN39@Copy:
; Line 1931
	xor	eax, eax
; Line 1932
	lea	ecx, DWORD PTR [esi+1]
	mov	DWORD PTR __$EHRec$[ebp+12], eax
	cmp	ecx, eax
	jbe	SHORT $LN47@Copy
	cmp	ecx, -1
	ja	SHORT $LN46@Copy
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN46@Copy
$LN47@Copy:
	mov	DWORD PTR __Ptr$[ebp], eax
	jmp	SHORT $LN19@Copy
$LN46@Copy:
	lea	ecx, DWORD PTR $T96222[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T96245[ebp]
	mov	DWORD PTR $T96222[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T96245[ebp]
	push	edx
	mov	DWORD PTR $T96245[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN112@Copy:
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:
; Line 1934
	mov	eax, DWORD PTR __Newsize$[ebp]
; Line 1936
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR __Newres$[ebp], eax
	inc	eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	push	eax
	add	ecx, 24					; 00000018H
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 1941
	mov	eax, $LN107@Copy
	ret	0
$LN107@Copy:
	mov	edi, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR __Newres$[ebp]
$LN19@Copy:
; Line 1943
	mov	ebx, DWORD PTR __Oldlen$[ebp]
	test	ebx, ebx
	je	SHORT $LN78@Copy
; Line 1944
	cmp	DWORD PTR [edi+20], 16			; 00000010H
	jb	SHORT $LN76@Copy
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN77@Copy
$LN76@Copy:
	mov	eax, edi
$LN77@Copy:
	push	ebx
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN78@Copy:
; Line 1945
	cmp	DWORD PTR [edi+20], 16			; 00000010H
	jb	SHORT $LN88@Copy
	mov	ecx, DWORD PTR [edi]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN88@Copy:
; Line 1946
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	BYTE PTR [edi], 0
	mov	DWORD PTR [edi], eax
; Line 1947
	mov	DWORD PTR [edi+20], esi
; Line 1948
	mov	DWORD PTR [edi+16], ebx
	cmp	esi, 16					; 00000010H
	jb	SHORT $LN102@Copy
	mov	edi, eax
$LN102@Copy:
	mov	BYTE PTR [edi+ebx], 0
; Line 1949
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:
; Line 1938
	mov	esi, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN64@Copy
	mov	edx, DWORD PTR [esi]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN64@Copy:
; Line 1939
	push	0
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	push	0
	mov	BYTE PTR [esi], 0
	call	__CxxThrowException@8
$LN113@Copy:
$LN111@Copy:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	??$_Dest_val@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@U?$pair@$$CBIPAVManagedItem@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@0@PAU?$pair@$$CBIPAVManagedItem@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<unsigned int const ,ManagedItem *> >,std::pair<unsigned int const ,ManagedItem *> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Dest_val@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@U?$pair@$$CBIPAVManagedItem@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@0@PAU?$pair@$$CBIPAVManagedItem@@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@U?$pair@$$CBIPAVManagedItem@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@0@PAU?$pair@$$CBIPAVManagedItem@@@0@@Z PROC ; std::_Dest_val<std::allocator<std::pair<unsigned int const ,ManagedItem *> >,std::pair<unsigned int const ,ManagedItem *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 288
	ret	0
??$_Dest_val@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@U?$pair@$$CBIPAVManagedItem@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@0@PAU?$pair@$$CBIPAVManagedItem@@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::pair<unsigned int const ,ManagedItem *> >,std::pair<unsigned int const ,ManagedItem *> >
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::begin
; Function compile flags: /Ogtp
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 806
	push	ebp
	mov	ebp, esp
; Line 807
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 808
	pop	ebp
	ret	4
?begin@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::begin
_TEXT	ENDS
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Insert
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@1@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@1@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Insert, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 1631
	push	ebp
	mov	ebp, esp
; Line 1632
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, 536870910				; 1ffffffeH
	jb	SHORT $LN17@Insert
; Line 1637
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 1639
	push	OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN377@Insert:
$LN17@Insert:
; Line 1641
	inc	eax
	push	ebx
	mov	DWORD PTR [ecx+8], eax
; Line 1642
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	edi
	mov	edi, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [edi+4], eax
; Line 1644
	mov	edx, DWORD PTR [ecx+4]
	xor	bl, bl
	cmp	eax, edx
	jne	SHORT $LN16@Insert
; Line 1646
	mov	DWORD PTR [edx+4], edi
; Line 1647
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], edi
; Line 1648
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+8], edi
	jmp	SHORT $LN11@Insert
$LN16@Insert:
; Line 1650
	cmp	BYTE PTR __Addleft$[ebp], bl
	je	SHORT $LN14@Insert
; Line 1652
	mov	DWORD PTR [eax], edi
; Line 1653
	mov	edx, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN11@Insert
; Line 1654
	mov	DWORD PTR [edx], edi
; Line 1656
	jmp	SHORT $LN11@Insert
$LN14@Insert:
; Line 1658
	mov	DWORD PTR [eax+8], edi
; Line 1659
	mov	edx, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN11@Insert
; Line 1660
	mov	DWORD PTR [edx+8], edi
$LN11@Insert:
; Line 1664
	mov	edx, DWORD PTR [edi+4]
	mov	eax, edi
	cmp	BYTE PTR [edx+20], bl
	jne	$LN9@Insert
	push	esi
	npad	5
$LL10@Insert:
; Line 1666
	mov	edx, DWORD PTR [eax+4]
	mov	esi, DWORD PTR [edx+4]
	cmp	edx, DWORD PTR [esi]
	jne	$LN8@Insert
; Line 1669
	mov	esi, DWORD PTR [esi+8]
; Line 1670
	cmp	BYTE PTR [esi+20], bl
	jne	SHORT $LN7@Insert
; Line 1672
	mov	BYTE PTR [edx+20], 1
; Line 1673
	mov	BYTE PTR [esi+20], 1
; Line 1675
	mov	edx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [edx+4]
	mov	BYTE PTR [edx+20], bl
; Line 1676
	mov	eax, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [eax+4]
; Line 1678
	jmp	$LN316@Insert
$LN7@Insert:
; Line 1680
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN111@Insert
; Line 1682
	mov	eax, edx
; Line 1683
	mov	edx, DWORD PTR [eax+8]
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [eax+8], esi
	mov	esi, DWORD PTR [edx]
	cmp	BYTE PTR [esi+21], bl
	jne	SHORT $LN110@Insert
	mov	DWORD PTR [esi+4], eax
$LN110@Insert:
	mov	esi, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], esi
	mov	esi, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [esi+4]
	jne	SHORT $LN109@Insert
	mov	DWORD PTR [esi+4], edx
	jmp	SHORT $LN106@Insert
$LN109@Insert:
	mov	esi, DWORD PTR [eax+4]
	cmp	eax, DWORD PTR [esi]
	jne	SHORT $LN107@Insert
	mov	DWORD PTR [esi], edx
	jmp	SHORT $LN106@Insert
$LN107@Insert:
	mov	DWORD PTR [esi+8], edx
$LN106@Insert:
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [eax+4], edx
$LN111@Insert:
; Line 1686
	mov	edx, DWORD PTR [eax+4]
	mov	BYTE PTR [edx+20], 1
; Line 1688
	mov	edx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [edx+4]
	mov	BYTE PTR [edx+20], bl
; Line 1689
	mov	edx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [edx+4]
	mov	esi, DWORD PTR [edx]
	mov	edi, DWORD PTR [esi+8]
	mov	DWORD PTR [edx], edi
	mov	edi, DWORD PTR [esi+8]
	cmp	BYTE PTR [edi+21], bl
	jne	SHORT $LN173@Insert
	mov	DWORD PTR [edi+4], edx
$LN173@Insert:
	mov	edi, DWORD PTR [edx+4]
	mov	DWORD PTR [esi+4], edi
	mov	edi, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR [edi+4]
	jne	SHORT $LN172@Insert
	mov	DWORD PTR [edi+4], esi
	mov	DWORD PTR [esi+8], edx
; Line 1692
	jmp	$LN376@Insert
; Line 1689
$LN172@Insert:
	mov	edi, DWORD PTR [edx+4]
	cmp	edx, DWORD PTR [edi+8]
	jne	SHORT $LN170@Insert
	mov	DWORD PTR [edi+8], esi
	mov	DWORD PTR [esi+8], edx
; Line 1692
	jmp	$LN376@Insert
; Line 1689
$LN170@Insert:
	mov	DWORD PTR [edi], esi
	mov	DWORD PTR [esi+8], edx
; Line 1692
	jmp	$LN376@Insert
$LN8@Insert:
; Line 1695
	mov	esi, DWORD PTR [esi]
; Line 1696
	cmp	BYTE PTR [esi+20], bl
	jne	SHORT $LN3@Insert
; Line 1698
	mov	BYTE PTR [edx+20], 1
; Line 1699
	mov	BYTE PTR [esi+20], 1
; Line 1701
	mov	edx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [edx+4]
	mov	BYTE PTR [edx+20], bl
; Line 1702
	mov	eax, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [eax+4]
; Line 1704
	jmp	$LN316@Insert
$LN3@Insert:
; Line 1706
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN253@Insert
; Line 1708
	mov	eax, edx
; Line 1709
	mov	edx, DWORD PTR [eax]
	mov	esi, DWORD PTR [edx+8]
	mov	DWORD PTR [eax], esi
	mov	esi, DWORD PTR [edx+8]
	cmp	BYTE PTR [esi+21], bl
	jne	SHORT $LN252@Insert
	mov	DWORD PTR [esi+4], eax
$LN252@Insert:
	mov	esi, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], esi
	mov	esi, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [esi+4]
	jne	SHORT $LN251@Insert
	mov	DWORD PTR [esi+4], edx
	jmp	SHORT $LN248@Insert
$LN251@Insert:
	mov	esi, DWORD PTR [eax+4]
	cmp	eax, DWORD PTR [esi+8]
	jne	SHORT $LN249@Insert
	mov	DWORD PTR [esi+8], edx
	jmp	SHORT $LN248@Insert
$LN249@Insert:
	mov	DWORD PTR [esi], edx
$LN248@Insert:
	mov	DWORD PTR [edx+8], eax
	mov	DWORD PTR [eax+4], edx
$LN253@Insert:
; Line 1712
	mov	edx, DWORD PTR [eax+4]
	mov	BYTE PTR [edx+20], 1
; Line 1714
	mov	edx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [edx+4]
	mov	BYTE PTR [edx+20], bl
; Line 1715
	mov	edx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [edx+4]
	mov	esi, DWORD PTR [edx+8]
	mov	edi, DWORD PTR [esi]
	mov	DWORD PTR [edx+8], edi
	mov	edi, DWORD PTR [esi]
	cmp	BYTE PTR [edi+21], bl
	jne	SHORT $LN315@Insert
	mov	DWORD PTR [edi+4], edx
$LN315@Insert:
	mov	edi, DWORD PTR [edx+4]
	mov	DWORD PTR [esi+4], edi
	mov	edi, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR [edi+4]
	jne	SHORT $LN314@Insert
	mov	DWORD PTR [edi+4], esi
	jmp	SHORT $LN311@Insert
$LN314@Insert:
	mov	edi, DWORD PTR [edx+4]
	cmp	edx, DWORD PTR [edi]
	jne	SHORT $LN312@Insert
	mov	DWORD PTR [edi], esi
	jmp	SHORT $LN311@Insert
$LN312@Insert:
	mov	DWORD PTR [edi+8], esi
$LN311@Insert:
	mov	DWORD PTR [esi], edx
$LN376@Insert:
	mov	edi, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [edx+4], esi
$LN316@Insert:
; Line 1664
	mov	edx, DWORD PTR [eax+4]
	cmp	BYTE PTR [edx+20], bl
	je	$LL10@Insert
	pop	esi
$LN9@Insert:
; Line 1719
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [eax+4]
; Line 1720
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], edi
	pop	edi
	mov	BYTE PTR [ecx+20], 1
	pop	ebx
; Line 1721
	pop	ebp
	ret	16					; 00000010H
$LN375@Insert:
?_Insert@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@1@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Insert
_TEXT	ENDS
PUBLIC	??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >,bool>
; Function compile flags: /Ogtp
;	COMDAT ??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >,bool>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 227
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
	mov	ecx, DWORD PTR __Val1$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Val2$[ebp]
	mov	DWORD PTR [eax], edx
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax+4], dl
; Line 228
	pop	ebp
	ret	8
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> > >,bool>
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Buynode
; Function compile flags: /Ogtp
;	COMDAT ?_Buynode@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
$T97255 = -16						; size = 12
$T97232 = -4						; size = 4
?_Buynode@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Buynode, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 559
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
; Line 560
	push	24					; 00000018H
	mov	esi, ecx
	call	??2@YAPAXI@Z				; operator new
	xor	ecx, ecx
	add	esp, 4
	cmp	eax, ecx
	je	SHORT $LN5@Buynode
; Line 562
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR [eax], edx
; Line 563
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+4], edx
; Line 564
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+8], edx
; Line 565
	mov	WORD PTR [eax+20], cx
	pop	esi
; Line 568
	mov	esp, ebp
	pop	ebp
	ret	0
; Line 560
$LN5@Buynode:
	lea	eax, DWORD PTR $T97232[ebp]
	mov	DWORD PTR $T97232[ebp], ecx
	push	eax
	lea	ecx, DWORD PTR $T97255[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T97255[ebp]
	push	ecx
	mov	DWORD PTR $T97255[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN27@Buynode:
$LN26@Buynode:
	int	3
?_Buynode@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??$?0$$CBIPAVManagedItem@@@?$pair@$$CBIPAVManagedItem@@@std@@QAE@$$QAU01@@Z ; std::pair<unsigned int const ,ManagedItem *>::pair<unsigned int const ,ManagedItem *><unsigned int const ,ManagedItem *>
; Function compile flags: /Ogtp
;	COMDAT ??$?0$$CBIPAVManagedItem@@@?$pair@$$CBIPAVManagedItem@@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0$$CBIPAVManagedItem@@@?$pair@$$CBIPAVManagedItem@@@std@@QAE@$$QAU01@@Z PROC ; std::pair<unsigned int const ,ManagedItem *>::pair<unsigned int const ,ManagedItem *><unsigned int const ,ManagedItem *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 255
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
; Line 256
	pop	ebp
	ret	4
??$?0$$CBIPAVManagedItem@@@?$pair@$$CBIPAVManagedItem@@@std@@QAE@$$QAU01@@Z ENDP ; std::pair<unsigned int const ,ManagedItem *>::pair<unsigned int const ,ManagedItem *><unsigned int const ,ManagedItem *>
_TEXT	ENDS
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 752
	push	esi
	mov	esi, ecx
; Line 753
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN11@basic_stri
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN11@basic_stri:
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
	pop	esi
; Line 754
	ret	0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::end
; Function compile flags: /Ogtp
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 816
	push	ebp
	mov	ebp, esp
; Line 817
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 818
	pop	ebp
	ret	4
?end@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::end
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::lower_bound
; Function compile flags: /Ogtp
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@ABI@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@ABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::lower_bound, COMDAT
; _this$ = ecx
; Line 1449
	push	ebp
	mov	ebp, esp
; Line 1450
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [ecx+4]
	cmp	BYTE PTR [eax+21], 0
	jne	SHORT $LN36@lower_boun
	mov	edx, DWORD PTR __Keyval$[ebp]
	mov	edx, DWORD PTR [edx]
$LL6@lower_boun:
	cmp	DWORD PTR [eax+12], edx
	jae	SHORT $LN4@lower_boun
	mov	eax, DWORD PTR [eax+8]
	jmp	SHORT $LN3@lower_boun
$LN4@lower_boun:
	mov	ecx, eax
	mov	eax, DWORD PTR [eax]
$LN3@lower_boun:
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL6@lower_boun
$LN36@lower_boun:
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1451
	pop	ebp
	ret	8
?lower_bound@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@ABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@PAVframe@@V?$allocator@PAVframe@@@std@@@std@@IAEXXZ ; std::vector<frame *,std::allocator<frame *> >::_Tidy
; Function compile flags: /Ogtp
;	COMDAT ?_Tidy@?$vector@PAVframe@@V?$allocator@PAVframe@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@PAVframe@@V?$allocator@PAVframe@@@std@@@std@@IAEXXZ PROC ; std::vector<frame *,std::allocator<frame *> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1301
	push	esi
	mov	esi, ecx
; Line 1302
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN6@Tidy@2
; Line 1307
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@Tidy@2:
; Line 1309
	mov	DWORD PTR [esi], 0
; Line 1310
	mov	DWORD PTR [esi+4], 0
; Line 1311
	mov	DWORD PTR [esi+8], 0
	pop	esi
; Line 1312
	ret	0
?_Tidy@?$vector@PAVframe@@V?$allocator@PAVframe@@@std@@@std@@IAEXXZ ENDP ; std::vector<frame *,std::allocator<frame *> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
; Function compile flags: /Ogtp
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1958
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 1959
	mov	ebx, DWORD PTR __Newsize$[ebp]
	push	esi
	mov	esi, ecx
	cmp	ebx, -2					; fffffffeH
	jbe	SHORT $LN6@Grow
; Line 1960
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN49@Grow:
$LN6@Grow:
; Line 1961
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, ebx
	jae	SHORT $LN5@Grow
; Line 1962
	mov	eax, DWORD PTR [esi+16]
	push	eax
	push	ebx
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Line 1968
	xor	ecx, ecx
	cmp	ecx, ebx
	sbb	eax, eax
	pop	esi
	neg	eax
	pop	ebx
; Line 1969
	pop	ebp
	ret	8
$LN5@Grow:
; Line 1963
	cmp	BYTE PTR __Trim$[ebp], 0
	je	SHORT $LN3@Grow
	cmp	ebx, 16					; 00000010H
	jae	SHORT $LN3@Grow
; Line 1965
	push	edi
	mov	edi, DWORD PTR [esi+16]
	cmp	ebx, edi
	jae	SHORT $LN9@Grow
	mov	edi, ebx
$LN9@Grow:
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN30@Grow
	mov	ebx, DWORD PTR [esi]
	test	edi, edi
	je	SHORT $LN28@Grow
	push	edi
	push	ebx
	push	esi
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN28@Grow:
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	mov	ebx, DWORD PTR __Newsize$[ebp]
	add	esp, 4
$LN30@Grow:
	mov	DWORD PTR [esi+16], edi
	mov	DWORD PTR [esi+20], 15			; 0000000fH
; Line 1968
	xor	ecx, ecx
	mov	BYTE PTR [edi+esi], 0
	cmp	ecx, ebx
	pop	edi
	sbb	eax, eax
	pop	esi
	neg	eax
	pop	ebx
; Line 1969
	pop	ebp
	ret	8
$LN3@Grow:
; Line 1966
	test	ebx, ebx
	jne	SHORT $LN46@Grow
; Line 1967
	mov	DWORD PTR [esi+16], ebx
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN44@Grow
	mov	esi, DWORD PTR [esi]
$LN44@Grow:
	mov	BYTE PTR [esi], 0
$LN46@Grow:
; Line 1968
	xor	ecx, ecx
	cmp	ecx, ebx
	sbb	eax, eax
	pop	esi
	neg	eax
	pop	ebx
; Line 1969
	pop	ebp
	ret	8
$LN48@Grow:
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
PUBLIC	?_Linsert@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Linsert
; Function compile flags: /Ogtp
;	COMDAT ?_Linsert@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@_N@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Node$ = 12						; size = 4
$T97591 = 16						; size = 4
$T97589 = 16						; size = 4
__Where$91954 = 16					; size = 4
__Leftish$ = 16						; size = 1
?_Linsert@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@_N@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Linsert, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 944
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 950
	mov	edx, DWORD PTR __Node$[ebp]
	push	ebx
	mov	ebx, ecx
	mov	ecx, DWORD PTR [ebx+4]
	mov	eax, DWORD PTR [ecx+4]
	cmp	BYTE PTR [eax+21], 0
	push	esi
	mov	esi, ecx
	mov	cl, 1
	push	edi
	mov	BYTE PTR __Addleft$[ebp], cl
	jne	SHORT $LN11@Linsert
	mov	edi, DWORD PTR [edx+12]
$LL12@Linsert:
; Line 953
	cmp	BYTE PTR __Leftish$[ebp], 0
	mov	esi, eax
	je	SHORT $LN10@Linsert
; Line 954
	cmp	DWORD PTR [eax+12], edi
	setae	cl
; Line 957
	jmp	SHORT $LN146@Linsert
$LN10@Linsert:
; Line 958
	cmp	edi, DWORD PTR [eax+12]
	setb	cl
$LN146@Linsert:
	mov	BYTE PTR __Addleft$[ebp], cl
; Line 962
	test	cl, cl
	je	SHORT $LN15@Linsert
	mov	eax, DWORD PTR [eax]
	jmp	SHORT $LN16@Linsert
$LN15@Linsert:
	mov	eax, DWORD PTR [eax+8]
$LN16@Linsert:
; Line 950
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL12@Linsert
$LN11@Linsert:
; Line 969
	mov	edi, esi
	mov	DWORD PTR __Where$91954[ebp], edi
; Line 970
	test	cl, cl
	je	SHORT $LN99@Linsert
; Line 972
	mov	eax, DWORD PTR [ebx+4]
; Line 973
	lea	ecx, DWORD PTR $T97589[ebp]
	cmp	esi, DWORD PTR [eax]
	jne	SHORT $LN4@Linsert
	push	edx
	push	esi
	push	1
	push	ecx
	mov	ecx, ebx
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Insert
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	mov	DWORD PTR [eax], edx
	mov	BYTE PTR [eax+4], 1
	pop	ebx
; Line 991
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN4@Linsert:
; Line 975
	call	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >,std::_Iterator_base0>::operator--
	mov	edi, DWORD PTR __Where$91954[ebp]
	mov	edx, DWORD PTR __Node$[ebp]
$LN99@Linsert:
; Line 977
	mov	eax, DWORD PTR [edi+12]
; Line 980
	push	edx
	cmp	eax, DWORD PTR [edx+12]
	jae	SHORT $LN2@Linsert
	mov	ecx, DWORD PTR __Addleft$[ebp]
	push	esi
	push	ecx
	lea	edx, DWORD PTR $T97591[ebp]
	push	edx
	mov	ecx, ebx
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Insert
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	mov	DWORD PTR [eax], ecx
	mov	BYTE PTR [eax+4], 1
	pop	ebx
; Line 991
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN2@Linsert:
; Line 986
	call	??3@YAXPAX@Z				; operator delete
; Line 988
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	add	esp, 4
	mov	DWORD PTR [eax], edi
	pop	edi
	pop	esi
	mov	BYTE PTR [eax+4], 0
	pop	ebx
; Line 991
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Linsert@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@_N@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Linsert
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@QAEXPAU?$pair@$$CBIPAVManagedItem@@@2@$$QAU32@@Z ; std::allocator<std::pair<unsigned int const ,ManagedItem *> >::construct
; Function compile flags: /Ogtp
;	COMDAT ?construct@?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@QAEXPAU?$pair@$$CBIPAVManagedItem@@@2@$$QAU32@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@QAEXPAU?$pair@$$CBIPAVManagedItem@@@2@$$QAU32@@Z PROC ; std::allocator<std::pair<unsigned int const ,ManagedItem *> >::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 201
	push	ebp
	mov	ebp, esp
; Line 202
	mov	eax, DWORD PTR __Ptr$[ebp]
	test	eax, eax
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
$LN3@construct:
; Line 203
	pop	ebp
	ret	8
?construct@?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@QAEXPAU?$pair@$$CBIPAVManagedItem@@@2@$$QAU32@@Z ENDP ; std::allocator<std::pair<unsigned int const ,ManagedItem *> >::construct
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::find
; Function compile flags: /Ogtp
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@ABI@Z
_TEXT	SEGMENT
$T97951 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@ABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::find, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 1423
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 1424
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+4]
	cmp	BYTE PTR [eax+21], 0
	push	edi
	mov	edi, DWORD PTR __Keyval$[ebp]
	jne	SHORT $LN9@find
	push	esi
	mov	esi, DWORD PTR [edi]
$LL10@find:
	cmp	DWORD PTR [eax+12], esi
	jae	SHORT $LN8@find
	mov	eax, DWORD PTR [eax+8]
	jmp	SHORT $LN7@find
$LN8@find:
	mov	edx, eax
	mov	eax, DWORD PTR [eax]
$LN7@find:
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL10@find
	pop	esi
$LN9@find:
; Line 1428
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR __Where$[ebp], edx
	cmp	edx, eax
	je	SHORT $LN3@find
	mov	ecx, DWORD PTR [edi]
	cmp	ecx, DWORD PTR [edx+12]
	jb	SHORT $LN3@find
	lea	eax, DWORD PTR __Where$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], edx
	pop	edi
; Line 1429
	mov	esp, ebp
	pop	ebp
	ret	8
$LN3@find:
; Line 1428
	mov	DWORD PTR $T97951[ebp], eax
	lea	eax, DWORD PTR $T97951[ebp]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], edx
	pop	edi
; Line 1429
	mov	esp, ebp
	pop	ebp
	ret	8
?find@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@ABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::find
_TEXT	ENDS
PUBLIC	??1?$vector@PAVframe@@V?$allocator@PAVframe@@@std@@@std@@QAE@XZ ; std::vector<frame *,std::allocator<frame *> >::~vector<frame *,std::allocator<frame *> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$vector@PAVframe@@V?$allocator@PAVframe@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVframe@@V?$allocator@PAVframe@@@std@@@std@@QAE@XZ PROC ; std::vector<frame *,std::allocator<frame *> >::~vector<frame *,std::allocator<frame *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 704
	push	esi
	mov	esi, ecx
; Line 705
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN8@vector@2
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@vector@2:
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	pop	esi
; Line 706
	ret	0
??1?$vector@PAVframe@@V?$allocator@PAVframe@@@std@@@std@@QAE@XZ ENDP ; std::vector<frame *,std::allocator<frame *> >::~vector<frame *,std::allocator<frame *> >
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 892
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 893
	mov	ebx, DWORD PTR __Roff$[ebp]
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	push	edi
	mov	edi, DWORD PTR [ecx+16]
	cmp	edi, ebx
	jae	SHORT $LN5@assign
; Line 894
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN83@assign:
$LN5@assign:
; Line 896
	mov	eax, DWORD PTR __Count$[ebp]
	sub	edi, ebx
	cmp	eax, edi
	jae	SHORT $LN4@assign
; Line 897
	mov	edi, eax
$LN4@assign:
; Line 899
	cmp	esi, ecx
	jne	SHORT $LN3@assign
; Line 900
	push	-1
	add	edi, ebx
	push	edi
	mov	ecx, esi
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	push	ebx
	push	0
	mov	ecx, esi
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	pop	edi
; Line 906
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 907
	pop	ebp
	ret	12					; 0000000cH
$LN3@assign:
; Line 901
	cmp	edi, -2					; fffffffeH
	jbe	SHORT $LN20@assign
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN84@assign:
$LN20@assign:
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, edi
	jae	SHORT $LN19@assign
	mov	eax, DWORD PTR [esi+16]
	push	eax
	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	mov	ecx, DWORD PTR __Right$[ebp]
	test	edi, edi
	je	SHORT $LN78@assign
$LN82@assign:
; Line 903
	mov	eax, 16					; 00000010H
	cmp	DWORD PTR [ecx+20], eax
	jb	SHORT $LN64@assign
	mov	ecx, DWORD PTR [ecx]
$LN64@assign:
	cmp	DWORD PTR [esi+20], eax
	jb	SHORT $LN68@assign
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN69@assign
; Line 901
$LN19@assign:
	test	edi, edi
	jne	SHORT $LN82@assign
	mov	DWORD PTR [esi+16], edi
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN58@assign
	mov	eax, DWORD PTR [esi]
	pop	edi
	mov	BYTE PTR [eax], 0
; Line 906
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 907
	pop	ebp
	ret	12					; 0000000cH
; Line 901
$LN58@assign:
	pop	edi
	mov	eax, esi
	pop	esi
	mov	BYTE PTR [eax], 0
	pop	ebx
; Line 907
	pop	ebp
	ret	12					; 0000000cH
; Line 903
$LN68@assign:
	mov	eax, esi
$LN69@assign:
	push	edi
	add	ecx, ebx
	push	ecx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 904
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], edi
	jb	SHORT $LN76@assign
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax+edi], 0
	pop	edi
; Line 906
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 907
	pop	ebp
	ret	12					; 0000000cH
; Line 904
$LN76@assign:
	mov	eax, esi
	mov	BYTE PTR [eax+edi], 0
$LN78@assign:
; Line 906
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 907
	pop	ebp
	ret	12					; 0000000cH
$LN80@assign:
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 910
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 916
	mov	ebx, DWORD PTR __Ptr$[ebp]
	push	esi
	mov	esi, ecx
	test	ebx, ebx
	je	SHORT $LN85@assign@2
	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN12@assign@2
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN13@assign@2
$LN12@assign@2:
	mov	eax, esi
$LN13@assign@2:
	cmp	ebx, eax
	jb	SHORT $LN85@assign@2
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN16@assign@2
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN17@assign@2
$LN16@assign@2:
	mov	eax, esi
$LN17@assign@2:
	mov	edx, DWORD PTR [esi+16]
	add	edx, eax
	cmp	edx, ebx
	jbe	SHORT $LN85@assign@2
; Line 917
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN20@assign@2
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	sub	ebx, eax
	push	ebx
	push	esi
	mov	ecx, esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	esi
	pop	ebx
; Line 925
	pop	ebp
	ret	8
; Line 917
$LN20@assign@2:
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	eax, esi
	push	ecx
	sub	ebx, eax
	push	ebx
	push	esi
	mov	ecx, esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	esi
	pop	ebx
; Line 925
	pop	ebp
	ret	8
$LN85@assign@2:
	push	edi
; Line 919
	mov	edi, DWORD PTR __Count$[ebp]
	cmp	edi, -2					; fffffffeH
	jbe	SHORT $LN27@assign@2
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN89@assign@2:
$LN27@assign@2:
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, edi
	jae	SHORT $LN26@assign@2
	mov	edx, DWORD PTR [esi+16]
	push	edx
	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	test	edi, edi
	je	SHORT $LN82@assign@2
$LN88@assign@2:
; Line 921
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN72@assign@2
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN73@assign@2
; Line 919
$LN26@assign@2:
	test	edi, edi
	jne	SHORT $LN88@assign@2
	mov	DWORD PTR [esi+16], edi
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN65@assign@2
	mov	eax, DWORD PTR [esi]
	pop	edi
	mov	BYTE PTR [eax], 0
; Line 924
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 925
	pop	ebp
	ret	8
; Line 919
$LN65@assign@2:
	pop	edi
	mov	eax, esi
	pop	esi
	mov	BYTE PTR [eax], 0
	pop	ebx
; Line 925
	pop	ebp
	ret	8
; Line 921
$LN72@assign@2:
	mov	eax, esi
$LN73@assign@2:
	push	edi
	push	ebx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 922
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], edi
	jb	SHORT $LN80@assign@2
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax+edi], 0
	pop	edi
; Line 924
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 925
	pop	ebp
	ret	8
; Line 922
$LN80@assign@2:
	mov	eax, esi
	mov	BYTE PTR [eax+edi], 0
$LN82@assign@2:
; Line 924
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 925
	pop	ebp
	ret	8
$LN86@assign@2:
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Insert
; Function compile flags: /Ogtp
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
$T98636 = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Next$ = 16						; size = 4
__Node$ = 16						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Insert, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 1089
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	esi, ecx
; Line 1100
	cmp	DWORD PTR [esi+8], 0
; Line 1101
	mov	eax, DWORD PTR [esi+4]
	push	edi
	mov	edi, DWORD PTR __Node$[ebp]
	jne	SHORT $LN33@Insert@2
	push	edi
	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	push	1
	push	edi
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Insert
	mov	eax, edi
	pop	edi
	pop	esi
; Line 1181
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN33@Insert@2:
	push	ebx
; Line 1144
	mov	ebx, DWORD PTR __Where$[ebp]
	cmp	ebx, DWORD PTR [eax]
	jne	SHORT $LN14@Insert@2
; Line 1146
	mov	ecx, DWORD PTR [edi+12]
	cmp	ecx, DWORD PTR [ebx+12]
	jae	$LN333@Insert@2
; Line 1148
	push	edi
	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
	push	ebx
	push	1
	push	edi
	mov	ecx, esi
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Insert
	pop	ebx
	mov	eax, edi
	pop	edi
	pop	esi
; Line 1181
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN14@Insert@2:
; Line 1150
	cmp	ebx, eax
	jne	SHORT $LN11@Insert@2
; Line 1152
	mov	eax, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [edi+12]
	jae	$LN333@Insert@2
; Line 1154
	push	edi
	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	push	0
	push	edi
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Insert
	pop	ebx
	mov	eax, edi
	pop	edi
	pop	esi
; Line 1181
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN11@Insert@2:
; Line 1158
	mov	eax, DWORD PTR [edi+12]
	cmp	eax, DWORD PTR [ebx+12]
	jae	SHORT $LN332@Insert@2
	lea	ecx, DWORD PTR __Next$[ebp]
	mov	DWORD PTR __Next$[ebp], ebx
	call	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >,std::_Iterator_base0>::operator--
	mov	eax, DWORD PTR __Next$[ebp]
	mov	ecx, DWORD PTR [edi+12]
	cmp	DWORD PTR [eax+12], ecx
	jae	SHORT $LN332@Insert@2
; Line 1162
	mov	ecx, DWORD PTR [eax+8]
	cmp	BYTE PTR [ecx+21], 0
; Line 1163
	push	edi
	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, esi
	je	SHORT $LN7@Insert@2
	push	eax
	push	0
	push	edi
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Insert
	pop	ebx
	mov	eax, edi
	pop	edi
	pop	esi
; Line 1181
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN7@Insert@2:
; Line 1165
	push	ebx
	push	1
	push	edi
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Insert
	pop	ebx
	mov	eax, edi
	pop	edi
	pop	esi
; Line 1181
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN332@Insert@2:
; Line 1170
	mov	eax, DWORD PTR [edi+12]
	cmp	DWORD PTR [ebx+12], eax
	jae	SHORT $LN333@Insert@2
	lea	ecx, DWORD PTR __Next$[ebp]
	mov	DWORD PTR __Next$[ebp], ebx
	call	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >,std::_Iterator_base0>::operator++
	mov	eax, DWORD PTR __Next$[ebp]
	cmp	eax, DWORD PTR [esi+4]
	je	SHORT $LN3@Insert@2
	mov	ecx, DWORD PTR [edi+12]
	cmp	ecx, DWORD PTR [eax+12]
	jae	SHORT $LN333@Insert@2
$LN3@Insert@2:
; Line 1173
	mov	edx, DWORD PTR [ebx+8]
	cmp	BYTE PTR [edx+21], 0
; Line 1174
	push	edi
	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, esi
	je	SHORT $LN2@Insert@2
	push	ebx
	push	0
	push	edi
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Insert
	pop	ebx
	mov	eax, edi
	pop	edi
	pop	esi
; Line 1181
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN2@Insert@2:
; Line 1176
	push	eax
	push	1
	push	edi
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Insert
	pop	ebx
	mov	eax, edi
	pop	edi
	pop	esi
; Line 1181
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN333@Insert@2:
; Line 1180
	push	0
	push	edi
	lea	eax, DWORD PTR $T98636[ebp]
	push	eax
	mov	ecx, esi
	call	?_Linsert@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Linsert
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	ebx
	pop	edi
	mov	DWORD PTR [eax], ecx
	pop	esi
; Line 1181
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Insert@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Insert
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@U?$pair@$$CBIPAVManagedItem@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@0@PAU?$pair@$$CBIPAVManagedItem@@@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::pair<unsigned int const ,ManagedItem *> >,std::pair<unsigned int const ,ManagedItem *>,std::pair<unsigned int const ,ManagedItem *> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Cons_val@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@U?$pair@$$CBIPAVManagedItem@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@0@PAU?$pair@$$CBIPAVManagedItem@@@0@$$QAU20@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@U?$pair@$$CBIPAVManagedItem@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@0@PAU?$pair@$$CBIPAVManagedItem@@@0@$$QAU20@@Z PROC ; std::_Cons_val<std::allocator<std::pair<unsigned int const ,ManagedItem *> >,std::pair<unsigned int const ,ManagedItem *>,std::pair<unsigned int const ,ManagedItem *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Pdest$[ebp]
	test	eax, eax
	je	SHORT $LN7@Cons_val
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
$LN7@Cons_val:
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@std@@U?$pair@$$CBIPAVManagedItem@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@0@PAU?$pair@$$CBIPAVManagedItem@@@0@$$QAU20@@Z ENDP ; std::_Cons_val<std::allocator<std::pair<unsigned int const ,ManagedItem *> >,std::pair<unsigned int const ,ManagedItem *>,std::pair<unsigned int const ,ManagedItem *> >
_TEXT	ENDS
PUBLIC	??_7frame@@6B@					; frame::`vftable'
PUBLIC	??0frame@@QAE@XZ				; frame::frame
PUBLIC	??_R4frame@@6B@					; frame::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVframe@@@8				; frame `RTTI Type Descriptor'
PUBLIC	??_R3frame@@8					; frame::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2frame@@8					; frame::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@frame@@8				; frame::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?processUnclick@frame@@UAEXXZ			; frame::processUnclick
EXTRN	?render@frame@@UAEXXZ:PROC			; frame::render
EXTRN	?processLeftClick@frame@@UAEPAV1@MM@Z:PROC	; frame::processLeftClick
EXTRN	?processLeftDrag@frame@@UAE_NMMMM@Z:PROC	; frame::processLeftDrag
EXTRN	?processRightClick@frame@@UAE_NMM@Z:PROC	; frame::processRightClick
EXTRN	?processKey@frame@@UAE_ND_N00@Z:PROC		; frame::processKey
;	COMDAT ??_R1A@?0A@EA@frame@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@frame@@8 DD FLAT:??_R0?AVframe@@@8	; frame::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3frame@@8
rdata$r	ENDS
;	COMDAT ??_R2frame@@8
rdata$r	SEGMENT
??_R2frame@@8 DD FLAT:??_R1A@?0A@EA@frame@@8		; frame::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3frame@@8
rdata$r	SEGMENT
??_R3frame@@8 DD 00H					; frame::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2frame@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVframe@@@8
_DATA	SEGMENT
??_R0?AVframe@@@8 DD FLAT:??_7type_info@@6B@		; frame `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVframe@@', 00H
_DATA	ENDS
;	COMDAT ??_R4frame@@6B@
rdata$r	SEGMENT
??_R4frame@@6B@ DD 00H					; frame::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVframe@@@8
	DD	FLAT:??_R3frame@@8
rdata$r	ENDS
;	COMDAT ??_7frame@@6B@
CONST	SEGMENT
??_7frame@@6B@ DD FLAT:??_R4frame@@6B@			; frame::`vftable'
	DD	FLAT:?render@frame@@UAEXXZ
	DD	FLAT:?processLeftClick@frame@@UAEPAV1@MM@Z
	DD	FLAT:?processLeftDrag@frame@@UAE_NMMMM@Z
	DD	FLAT:?processUnclick@frame@@UAEXXZ
	DD	FLAT:?processRightClick@frame@@UAE_NMM@Z
	DD	FLAT:?processKey@frame@@UAE_ND_N00@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??0frame@@QAE@XZ
_TEXT	SEGMENT
??0frame@@QAE@XZ PROC					; frame::frame, COMDAT
; _this$ = ecx
; File c:\programovani\wow editor\test\src\editor\ui.h
; Line 25
	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], OFFSET ??_7frame@@6B@
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	WORD PTR [eax+45], cx
	mov	BYTE PTR [eax+47], cl
	mov	DWORD PTR [eax+36], ecx
	ret	0
??0frame@@QAE@XZ ENDP					; frame::frame
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?processUnclick@frame@@UAEXXZ
_TEXT	SEGMENT
?processUnclick@frame@@UAEXXZ PROC			; frame::processUnclick, COMDAT
; _this$ = ecx
; Line 31
	ret	0
?processUnclick@frame@@UAEXXZ ENDP			; frame::processUnclick
_TEXT	ENDS
PUBLIC	??1frame@@QAE@XZ				; frame::~frame
; Function compile flags: /Ogtp
;	COMDAT ??1frame@@QAE@XZ
_TEXT	SEGMENT
??1frame@@QAE@XZ PROC					; frame::~frame, COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN11@frame
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN11@frame:
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	mov	DWORD PTR [esi+12], 0
	pop	esi
	ret	0
??1frame@@QAE@XZ ENDP					; frame::~frame
_TEXT	ENDS
PUBLIC	??_7gradient@@6B@				; gradient::`vftable'
PUBLIC	??0gradient@@QAE@XZ				; gradient::gradient
PUBLIC	??_R4gradient@@6B@				; gradient::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVgradient@@@8				; gradient `RTTI Type Descriptor'
PUBLIC	??_R3gradient@@8				; gradient::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2gradient@@8				; gradient::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@gradient@@8			; gradient::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	?render@gradient@@UAEXXZ:PROC			; gradient::render
EXTRN	?processLeftClick@gradient@@UAEPAVframe@@MM@Z:PROC ; gradient::processLeftClick
EXTRN	?processLeftDrag@gradient@@UAE_NMMMM@Z:PROC	; gradient::processLeftDrag
;	COMDAT ??_R1A@?0A@EA@gradient@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@gradient@@8 DD FLAT:??_R0?AVgradient@@@8	; gradient::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3gradient@@8
rdata$r	ENDS
;	COMDAT ??_R2gradient@@8
rdata$r	SEGMENT
??_R2gradient@@8 DD FLAT:??_R1A@?0A@EA@gradient@@8	; gradient::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@frame@@8
rdata$r	ENDS
;	COMDAT ??_R3gradient@@8
rdata$r	SEGMENT
??_R3gradient@@8 DD 00H					; gradient::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2gradient@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVgradient@@@8
_DATA	SEGMENT
??_R0?AVgradient@@@8 DD FLAT:??_7type_info@@6B@		; gradient `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVgradient@@', 00H
_DATA	ENDS
;	COMDAT ??_R4gradient@@6B@
rdata$r	SEGMENT
??_R4gradient@@6B@ DD 00H				; gradient::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVgradient@@@8
	DD	FLAT:??_R3gradient@@8
rdata$r	ENDS
;	COMDAT ??_7gradient@@6B@
CONST	SEGMENT
??_7gradient@@6B@ DD FLAT:??_R4gradient@@6B@		; gradient::`vftable'
	DD	FLAT:?render@gradient@@UAEXXZ
	DD	FLAT:?processLeftClick@gradient@@UAEPAVframe@@MM@Z
	DD	FLAT:?processLeftDrag@gradient@@UAE_NMMMM@Z
	DD	FLAT:?processUnclick@frame@@UAEXXZ
	DD	FLAT:?processRightClick@frame@@UAE_NMM@Z
	DD	FLAT:?processKey@frame@@UAE_ND_N00@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??0gradient@@QAE@XZ
_TEXT	SEGMENT
??0gradient@@QAE@XZ PROC				; gradient::gradient, COMDAT
; _this$ = ecx
	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	WORD PTR [eax+45], cx
	mov	BYTE PTR [eax+47], cl
	mov	DWORD PTR [eax+36], ecx
	mov	DWORD PTR [eax], OFFSET ??_7gradient@@6B@
	mov	DWORD PTR [eax+52], ecx
	mov	DWORD PTR [eax+56], ecx
	mov	DWORD PTR [eax+60], ecx
	mov	DWORD PTR [eax+64], ecx
	mov	DWORD PTR [eax+68], ecx
	mov	DWORD PTR [eax+72], ecx
	mov	DWORD PTR [eax+76], ecx
	mov	DWORD PTR [eax+80], ecx
	mov	DWORD PTR [eax+84], ecx
	mov	DWORD PTR [eax+88], ecx
	mov	DWORD PTR [eax+92], ecx
	mov	DWORD PTR [eax+96], ecx
	ret	0
??0gradient@@QAE@XZ ENDP				; gradient::gradient
_TEXT	ENDS
PUBLIC	??_7MapViewer@@6B@				; MapViewer::`vftable'
PUBLIC	??1MapViewer@@UAE@XZ				; MapViewer::~MapViewer
PUBLIC	??_R4MapViewer@@6B@				; MapViewer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVMapViewer@@@8				; MapViewer `RTTI Type Descriptor'
PUBLIC	??_R3MapViewer@@8				; MapViewer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MapViewer@@8				; MapViewer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MapViewer@@8			; MapViewer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?tick@MapViewer@@UAEXMM@Z			; MapViewer::tick
PUBLIC	?display@MapViewer@@UAEXMM@Z			; MapViewer::display
PUBLIC	?keypressed@MapViewer@@UAEXPAUSDL_KeyboardEvent@@@Z ; MapViewer::keypressed
EXTRN	??_EMapViewer@@UAEPAXI@Z:PROC			; MapViewer::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@MapViewer@@8
; File c:\programovani\wow editor\test\src\editor\appstate.h
rdata$r	SEGMENT
??_R1A@?0A@EA@MapViewer@@8 DD FLAT:??_R0?AVMapViewer@@@8 ; MapViewer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MapViewer@@8
rdata$r	ENDS
;	COMDAT ??_R2MapViewer@@8
rdata$r	SEGMENT
??_R2MapViewer@@8 DD FLAT:??_R1A@?0A@EA@MapViewer@@8	; MapViewer::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@AppState@@8
rdata$r	ENDS
;	COMDAT ??_R3MapViewer@@8
rdata$r	SEGMENT
??_R3MapViewer@@8 DD 00H				; MapViewer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2MapViewer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMapViewer@@@8
_DATA	SEGMENT
??_R0?AVMapViewer@@@8 DD FLAT:??_7type_info@@6B@	; MapViewer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMapViewer@@', 00H
_DATA	ENDS
;	COMDAT ??_R4MapViewer@@6B@
rdata$r	SEGMENT
??_R4MapViewer@@6B@ DD 00H				; MapViewer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMapViewer@@@8
	DD	FLAT:??_R3MapViewer@@8
rdata$r	ENDS
;	COMDAT ??_7MapViewer@@6B@
CONST	SEGMENT
??_7MapViewer@@6B@ DD FLAT:??_R4MapViewer@@6B@		; MapViewer::`vftable'
	DD	FLAT:??_EMapViewer@@UAEPAXI@Z
	DD	FLAT:?tick@MapViewer@@UAEXMM@Z
	DD	FLAT:?display@MapViewer@@UAEXMM@Z
	DD	FLAT:?mousemove@MapViewer@@UAEXPAUSDL_MouseMotionEvent@@@Z
	DD	FLAT:?mouseclick@MapViewer@@UAEXPAUSDL_MouseButtonEvent@@@Z
	DD	FLAT:?keypressed@MapViewer@@UAEXPAUSDL_KeyboardEvent@@@Z
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$??1MapViewer@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1MapViewer@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1MapViewer@@UAE@XZ$1
__ehfuncinfo$??1MapViewer@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1MapViewer@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1MapViewer@@UAE@XZ PROC				; MapViewer::~MapViewer
; _this$ = ecx
; File c:\programovani\wow editor\test\src\editor\mapviewer.cpp
; Line 169
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1MapViewer@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	mov	DWORD PTR [esi], OFFSET ??_7MapViewer@@6B@
; Line 170
	mov	edi, DWORD PTR [esi+40]
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	test	edi, edi
	je	SHORT $LN7@MapViewer
	mov	ecx, edi
	call	??1World@@QAE@XZ			; World::~World
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN7@MapViewer:
; Line 171
	mov	eax, DWORD PTR [esi+48]
	test	eax, eax
	je	SHORT $LN19@MapViewer
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN19@MapViewer:
	mov	DWORD PTR [esi+48], 0
	mov	DWORD PTR [esi+52], 0
	mov	DWORD PTR [esi+56], 0
	mov	DWORD PTR [esi], OFFSET ??_7AppState@@6B@
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1MapViewer@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1AppState@@UAE@XZ			; AppState::~AppState
__unwindfunclet$??1MapViewer@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1frame@@QAE@XZ
__ehhandler$??1MapViewer@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1MapViewer@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1MapViewer@@UAE@XZ ENDP				; MapViewer::~MapViewer
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 928
	push	ebp
	mov	ebp, esp
	push	esi
; Line 930
	mov	esi, DWORD PTR __Ptr$[ebp]
	mov	eax, esi
	push	edi
	lea	edi, DWORD PTR [eax+1]
	npad	3
$LL5@assign@3:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL5@assign@3
	sub	eax, edi
	push	eax
	push	esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	edi
	pop	esi
; Line 931
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	??$_Buynode@U?$pair@$$CBIPAVManagedItem@@@std@@@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBIPAVManagedItem@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Buynode<std::pair<unsigned int const ,ManagedItem *> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Buynode@U?$pair@$$CBIPAVManagedItem@@@std@@@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBIPAVManagedItem@@@1@@Z
_TEXT	SEGMENT
$T99602 = -12						; size = 12
$T99557 = 8						; size = 4
__Val$ = 8						; size = 4
??$_Buynode@U?$pair@$$CBIPAVManagedItem@@@std@@@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBIPAVManagedItem@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Buynode<std::pair<unsigned int const ,ManagedItem *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 586
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
; Line 588
	push	24					; 00000018H
	mov	esi, ecx
	call	??2@YAPAXI@Z				; operator new
	xor	edx, edx
	add	esp, 4
	cmp	eax, edx
	je	SHORT $LN12@Buynode@2
	mov	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+8], ecx
; Line 592
	lea	ecx, DWORD PTR [eax+12]
	mov	WORD PTR [eax+20], dx
	cmp	ecx, edx
	je	SHORT $LN45@Buynode@2
	mov	edx, DWORD PTR __Val$[ebp]
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [ecx], esi
	mov	edx, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], edx
$LN45@Buynode@2:
	pop	esi
; Line 599
	mov	esp, ebp
	pop	ebp
	ret	4
; Line 588
$LN12@Buynode@2:
	lea	eax, DWORD PTR $T99557[ebp]
	push	eax
	lea	ecx, DWORD PTR $T99602[ebp]
	mov	DWORD PTR $T99557[ebp], edx
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T99602[ebp]
	push	ecx
	mov	DWORD PTR $T99602[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN68@Buynode@2:
$LN67@Buynode@2:
	int	3
??$_Buynode@U?$pair@$$CBIPAVManagedItem@@@std@@@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBIPAVManagedItem@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Buynode<std::pair<unsigned int const ,ManagedItem *> >
_TEXT	ENDS
PUBLIC	__real@4034000000000000
PUBLIC	__real@4010000000000000
PUBLIC	__real@4066c00000000000
PUBLIC	??0MapViewer@@QAE@PAVWorld@@MM@Z		; MapViewer::MapViewer
EXTRN	?init@brush@@QAEXXZ:PROC			; brush::init
EXTRN	?CreateTextureFilter@@YAPAVframe@@XZ:PROC	; CreateTextureFilter
EXTRN	?CreateTilesetLoader@@YAPAVframe@@XZ:PROC	; CreateTilesetLoader
EXTRN	?CreateSelectedTexture@@YAPAVframe@@XZ:PROC	; CreateSelectedTexture
EXTRN	?CreateTexturePalette@@YAPAVframe@@XZ:PROC	; CreateTexturePalette
EXTRN	?setText@slider@@QAEXPBD@Z:PROC			; slider::setText
EXTRN	?setValue@slider@@QAEXM@Z:PROC			; slider::setValue
EXTRN	?setFunc@slider@@QAEXP6AXM@Z@Z:PROC		; slider::setFunc
EXTRN	??0slider@@QAE@MMMMM@Z:PROC			; slider::slider
EXTRN	?setValue@gradient@@QAEXM@Z:PROC		; gradient::setValue
EXTRN	?setClickFunc@gradient@@QAEXP6AXM@Z@Z:PROC	; gradient::setClickFunc
EXTRN	?setClickColor@gradient@@QAEXMMMM@Z:PROC	; gradient::setClickColor
EXTRN	?setMinColor@gradient@@QAEXMMMM@Z:PROC		; gradient::setMinColor
EXTRN	?setMaxColor@gradient@@QAEXMMMM@Z:PROC		; gradient::setMaxColor
EXTRN	?setJustify@textUI@@QAEXH@Z:PROC		; textUI::setJustify
EXTRN	?setFont@textUI@@QAEXPAUfont_data@freetype@@@Z:PROC ; textUI::setFont
EXTRN	?arial14@@3Ufont_data@freetype@@A:BYTE		; arial14
EXTRN	??0textUI@@QAE@MMPBD@Z:PROC			; textUI::textUI
EXTRN	?addChild@frame@@QAEXPAV1@@Z:PROC		; frame::addChild
EXTRN	??0window@@QAE@MMMM@Z:PROC			; window::window
;	COMDAT __real@4034000000000000
; File c:\programovani\wow editor\test\src\editor\quaternion.h
CONST	SEGMENT
__real@4034000000000000 DQ 04034000000000000r	; 20
CONST	ENDS
;	COMDAT __real@4010000000000000
CONST	SEGMENT
__real@4010000000000000 DQ 04010000000000000r	; 4
CONST	ENDS
;	COMDAT __real@4066c00000000000
CONST	SEGMENT
__real@4066c00000000000 DQ 04066c00000000000r	; 182
CONST	ENDS
xdata$x	SEGMENT
__ehfuncinfo$??0MapViewer@@QAE@PAVWorld@@MM@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$??0MapViewer@@QAE@PAVWorld@@MM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0MapViewer@@QAE@PAVWorld@@MM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0MapViewer@@QAE@PAVWorld@@MM@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0MapViewer@@QAE@PAVWorld@@MM@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0MapViewer@@QAE@PAVWorld@@MM@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$??0MapViewer@@QAE@PAVWorld@@MM@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$??0MapViewer@@QAE@PAVWorld@@MM@Z$5
	DD	01H
	DD	FLAT:__unwindfunclet$??0MapViewer@@QAE@PAVWorld@@MM@Z$6
	DD	01H
	DD	FLAT:__unwindfunclet$??0MapViewer@@QAE@PAVWorld@@MM@Z$7
; Function compile flags: /Ogtp
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_w$ = 8							; size = 4
tv844 = 12						; size = 4
$T99740 = 12						; size = 4
_ah0$ = 12						; size = 4
$T99761 = 16						; size = 4
$T99757 = 16						; size = 4
$T99753 = 16						; size = 4
$T99745 = 16						; size = 4
$T99741 = 16						; size = 4
_av0$ = 16						; size = 4
??0MapViewer@@QAE@PAVWorld@@MM@Z PROC			; MapViewer::MapViewer
; _this$ = ecx
; File c:\programovani\wow editor\test\src\editor\mapviewer.cpp
; Line 77
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0MapViewer@@QAE@PAVWorld@@MM@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	mov	eax, DWORD PTR _ah0$[ebp]
	mov	ecx, DWORD PTR _av0$[ebp]
	mov	edx, DWORD PTR _w$[ebp]
	xor	ebx, ebx
	mov	DWORD PTR [esi], OFFSET ??_7MapViewer@@6B@
	mov	DWORD PTR [esi+8], eax
	mov	DWORD PTR [esi+12], ecx
	mov	DWORD PTR [esi+40], edx
	mov	DWORD PTR [esi+44], OFFSET ??_7frame@@6B@
	mov	DWORD PTR [esi+48], ebx
	mov	DWORD PTR [esi+52], ebx
	mov	DWORD PTR [esi+56], ebx
	mov	DWORD PTR __$EHRec$[ebp+8], ebx
	mov	WORD PTR [esi+89], bx
	mov	BYTE PTR [esi+91], bl
	mov	DWORD PTR [esi+80], ebx
; Line 78
	mov	DWORD PTR ?LastClicked@@3PAVframe@@A, ebx ; LastClicked
; Line 89
	mov	eax, DWORD PTR [esi+40]
	mov	DWORD PTR [esi+24], ebx
	mov	DWORD PTR [esi+20], ebx
	mov	DWORD PTR [esi+16], ebx
	mov	DWORD PTR [esi+28], 1065353216		; 3f800000H
	mov	DWORD PTR [esi+32], 1116025651		; 42853333H
	mov	WORD PTR [esi+36], bx
	mov	BYTE PTR [esi+38], 1
	mov	BYTE PTR [eax+20897], bl
; Line 90
	mov	ecx, DWORD PTR [esi+40]
	mov	BYTE PTR [ecx+20898], 1
; Line 91
	mov	edx, DWORD PTR [esi+40]
	mov	BYTE PTR [edx+20899], 1
; Line 92
	mov	eax, DWORD PTR [esi+40]
	mov	BYTE PTR [eax+20900], 1
; Line 93
	mov	ecx, DWORD PTR [esi+40]
	mov	BYTE PTR [ecx+20901], 1
; Line 94
	mov	edx, DWORD PTR [esi+40]
	mov	BYTE PTR [edx+20906], bl
; Line 95
	mov	eax, DWORD PTR [esi+40]
	mov	BYTE PTR [eax+20902], 1
; Line 96
	mov	ecx, DWORD PTR [esi+40]
	mov	BYTE PTR [ecx+20904], 1
; Line 97
	mov	edx, DWORD PTR [esi+40]
	mov	BYTE PTR [edx+20905], 1
; Line 101
	mov	eax, DWORD PTR [esi+40]
	mov	DWORD PTR [eax+20868], 1140850688	; 44000000H
; Line 103
	mov	ecx, DWORD PTR [esi+40]
	mov	DWORD PTR [ecx+20872], ebx
; Line 104
	mov	edx, DWORD PTR [esi+40]
	mov	DWORD PTR [edx+20876], 1060320051	; 3f333333H
; Line 105
	mov	eax, DWORD PTR [esi+40]
	mov	DWORD PTR [eax+20880], 1022739087	; 3cf5c28fH
; Line 107
	mov	DWORD PTR [esi+64], ebx
; Line 108
	mov	DWORD PTR [esi+68], ebx
; Line 109
	fild	DWORD PTR ?video@@3VVideo@@A+56
; Line 113
	push	56					; 00000038H
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	fstp	DWORD PTR [esi+76]
	fild	DWORD PTR ?video@@3VVideo@@A+52
	fstp	DWORD PTR [esi+72]
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T99741[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	eax, ebx
	je	SHORT $LN3@MapViewer@2
	fild	DWORD PTR ?video@@3VVideo@@A+52
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [esp+12], 1120403456		; 42c80000H
	mov	DWORD PTR [esp+8], 1127481344		; 43340000H
	fsub	QWORD PTR __real@4066c00000000000
	mov	DWORD PTR [esp+4], 1073741824		; 40000000H
	mov	ecx, eax
	fstp	DWORD PTR tv844[ebp]
	fld	DWORD PTR tv844[ebp]
	fstp	DWORD PTR [esp]
	call	??0window@@QAE@MMMM@Z			; window::window
	mov	DWORD PTR $T99740[ebp], eax
	jmp	SHORT $LN4@MapViewer@2
$LN3@MapViewer@2:
	mov	DWORD PTR $T99740[ebp], ebx
	mov	eax, ebx
$LN4@MapViewer@2:
; Line 116
	push	eax
	lea	ecx, DWORD PTR [esi+44]
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	BYTE PTR [eax+45], 1
	call	?addChild@frame@@QAEXPAV1@@Z		; frame::addChild
; Line 119
	push	336					; 00000150H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T99745[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	eax, ebx
	je	SHORT $LN5@MapViewer@2
	push	OFFSET $SG82267
	sub	esp, 8
	mov	DWORD PTR [esp+4], 1073741824		; 40000000H
	mov	ecx, eax
	mov	DWORD PTR [esp], 1117585408		; 429d0000H
	call	??0textUI@@QAE@MMPBD@Z			; textUI::textUI
	mov	edi, eax
	jmp	SHORT $LN6@MapViewer@2
$LN5@MapViewer@2:
	xor	edi, edi
$LN6@MapViewer@2:
; Line 120
	push	OFFSET ?arial14@@3Ufont_data@freetype@@A ; arial14
	mov	ecx, edi
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	?setFont@textUI@@QAEXPAUfont_data@freetype@@@Z ; textUI::setFont
; Line 121
	push	1
	mov	ecx, edi
	call	?setJustify@textUI@@QAEXH@Z		; textUI::setJustify
; Line 122
	mov	ecx, DWORD PTR $T99740[ebp]
	push	edi
	call	?addChild@frame@@QAEXPAV1@@Z		; frame::addChild
; Line 125
	push	112					; 00000070H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	cmp	eax, ebx
	je	SHORT $LN7@MapViewer@2
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax+8], ebx
	mov	DWORD PTR [eax+12], ebx
	mov	WORD PTR [eax+45], bx
	mov	BYTE PTR [eax+47], bl
	mov	DWORD PTR [eax+36], ebx
	mov	DWORD PTR [eax], OFFSET ??_7gradient@@6B@
	mov	DWORD PTR [eax+52], ebx
	mov	DWORD PTR [eax+56], ebx
	mov	DWORD PTR [eax+60], ebx
	mov	DWORD PTR [eax+64], ebx
	mov	DWORD PTR [eax+68], ebx
	mov	DWORD PTR [eax+72], ebx
	mov	DWORD PTR [eax+76], ebx
	mov	DWORD PTR [eax+80], ebx
	mov	DWORD PTR [eax+84], ebx
	mov	DWORD PTR [eax+88], ebx
	mov	DWORD PTR [eax+92], ebx
	mov	DWORD PTR [eax+96], ebx
	mov	edi, eax
	jmp	SHORT $LN8@MapViewer@2
$LN7@MapViewer@2:
	xor	edi, edi
$LN8@MapViewer@2:
; Line 127
	mov	ecx, DWORD PTR $T99740[ebp]
	mov	DWORD PTR [edi+28], 1101004800		; 41a00000H
	fld	DWORD PTR [ecx+28]
	fsub	QWORD PTR __real@4010000000000000
; Line 130
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [esp+12], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+8], 1065353216		; 3f800000H
	fsub	QWORD PTR __real@4034000000000000
	mov	DWORD PTR [esp+4], 1065353216		; 3f800000H
	mov	ecx, edi
	mov	DWORD PTR [edi+24], 1082130432		; 40800000H
	fstp	DWORD PTR [edi+20]
	mov	DWORD PTR [edi+32], 1119354880		; 42b80000H
	mov	DWORD PTR [esp], 1065353216		; 3f800000H
	call	?setMaxColor@gradient@@QAEXMMMM@Z	; gradient::setMaxColor
; Line 131
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [esp+12], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+8], ebx
	mov	DWORD PTR [esp+4], ebx
	mov	ecx, edi
	mov	DWORD PTR [esp], ebx
	call	?setMinColor@gradient@@QAEXMMMM@Z	; gradient::setMinColor
; Line 133
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [esp+12], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+8], ebx
	mov	DWORD PTR [esp+4], ebx
	mov	ecx, edi
	mov	BYTE PTR [edi+108], bl
	mov	DWORD PTR [esp], 1065353216		; 3f800000H
	call	?setClickColor@gradient@@QAEXMMMM@Z	; gradient::setClickColor
; Line 134
	push	OFFSET ?setTextureBrushLevel@@YAXM@Z	; setTextureBrushLevel
	mov	ecx, edi
	call	?setClickFunc@gradient@@QAEXP6AXM@Z@Z	; gradient::setClickFunc
; Line 135
	push	ecx
	mov	ecx, edi
	mov	DWORD PTR [esp], ebx
	call	?setValue@gradient@@QAEXM@Z		; gradient::setValue
; Line 137
	mov	ecx, DWORD PTR $T99740[ebp]
	push	edi
	call	?addChild@frame@@QAEXPAV1@@Z		; frame::addChild
; Line 140
	push	332					; 0000014cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T99753[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	cmp	eax, ebx
	je	SHORT $LN9@MapViewer@2
	sub	esp, 20					; 00000014H
	mov	DWORD PTR [esp+16], ebx
	mov	DWORD PTR [esp+12], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+8], 1125187584		; 43110000H
	mov	DWORD PTR [esp+4], 1107558400		; 42040000H
	mov	ecx, eax
	mov	DWORD PTR [esp], 1086324736		; 40c00000H
	call	??0slider@@QAE@MMMMM@Z			; slider::slider
	mov	edi, eax
	jmp	SHORT $LN10@MapViewer@2
$LN9@MapViewer@2:
	xor	edi, edi
$LN10@MapViewer@2:
; Line 141
	push	OFFSET ?setTextureBrushHardness@@YAXM@Z	; setTextureBrushHardness
	mov	ecx, edi
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	?setFunc@slider@@QAEXP6AXM@Z@Z		; slider::setFunc
; Line 142
	push	ecx
	mov	ecx, edi
	mov	DWORD PTR [esp], 1056964608		; 3f000000H
	call	?setValue@slider@@QAEXM@Z		; slider::setValue
; Line 143
	push	OFFSET $SG82278
	mov	ecx, edi
	call	?setText@slider@@QAEXPBD@Z		; slider::setText
; Line 144
	mov	ecx, DWORD PTR $T99740[ebp]
	push	edi
	call	?addChild@frame@@QAEXPAV1@@Z		; frame::addChild
; Line 146
	push	332					; 0000014cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T99757[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	cmp	eax, ebx
	je	SHORT $LN11@MapViewer@2
	sub	esp, 20					; 00000014H
	mov	DWORD PTR [esp+16], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+12], 1111752704		; 42440000H
	mov	DWORD PTR [esp+8], 1125187584		; 43110000H
	mov	DWORD PTR [esp+4], 1114374144		; 426c0000H
	mov	ecx, eax
	mov	DWORD PTR [esp], 1086324736		; 40c00000H
	call	??0slider@@QAE@MMMMM@Z			; slider::slider
	mov	edi, eax
	jmp	SHORT $LN12@MapViewer@2
$LN11@MapViewer@2:
	xor	edi, edi
$LN12@MapViewer@2:
; Line 147
	push	OFFSET ?setTextureBrushRadius@@YAXM@Z	; setTextureBrushRadius
	mov	ecx, edi
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	?setFunc@slider@@QAEXP6AXM@Z@Z		; slider::setFunc
; Line 148
	push	ecx
	mov	ecx, edi
	mov	DWORD PTR [esp], 1056964608		; 3f000000H
	call	?setValue@slider@@QAEXM@Z		; slider::setValue
; Line 149
	push	OFFSET $SG82283
	mov	ecx, edi
	call	?setText@slider@@QAEXPBD@Z		; slider::setText
; Line 150
	mov	ecx, DWORD PTR $T99740[ebp]
	push	edi
	call	?addChild@frame@@QAEXPAV1@@Z		; frame::addChild
; Line 152
	push	332					; 0000014cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T99761[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	cmp	eax, ebx
	je	SHORT $LN13@MapViewer@2
	sub	esp, 20					; 00000014H
	mov	DWORD PTR [esp+16], 1008981770		; 3c23d70aH
	mov	DWORD PTR [esp+12], 1065185444		; 3f7d70a4H
	mov	DWORD PTR [esp+8], 1125187584		; 43110000H
	mov	DWORD PTR [esp+4], 1118437376		; 42aa0000H
	mov	ecx, eax
	mov	DWORD PTR [esp], 1086324736		; 40c00000H
	call	??0slider@@QAE@MMMMM@Z			; slider::slider
	mov	edi, eax
	jmp	SHORT $LN14@MapViewer@2
$LN13@MapViewer@2:
	xor	edi, edi
$LN14@MapViewer@2:
; Line 153
	push	OFFSET ?setTextureBrushPressure@@YAXM@Z	; setTextureBrushPressure
	mov	ecx, edi
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	?setFunc@slider@@QAEXP6AXM@Z@Z		; slider::setFunc
; Line 154
	push	ecx
	mov	ecx, edi
	mov	DWORD PTR [esp], 1063675494		; 3f666666H
	call	?setValue@slider@@QAEXM@Z		; slider::setValue
; Line 155
	push	OFFSET $SG82288
	mov	ecx, edi
	call	?setText@slider@@QAEXPBD@Z		; slider::setText
; Line 156
	mov	ecx, DWORD PTR $T99740[ebp]
	push	edi
	call	?addChild@frame@@QAEXPAV1@@Z		; frame::addChild
; Line 158
	call	?CreateTexturePalette@@YAPAVframe@@XZ	; CreateTexturePalette
	push	eax
	lea	ecx, DWORD PTR [esi+44]
	call	?addChild@frame@@QAEXPAV1@@Z		; frame::addChild
; Line 159
	call	?CreateSelectedTexture@@YAPAVframe@@XZ	; CreateSelectedTexture
	push	eax
	lea	ecx, DWORD PTR [esi+44]
	call	?addChild@frame@@QAEXPAV1@@Z		; frame::addChild
; Line 160
	call	?CreateTilesetLoader@@YAPAVframe@@XZ	; CreateTilesetLoader
	push	eax
	lea	ecx, DWORD PTR [esi+44]
	call	?addChild@frame@@QAEXPAV1@@Z		; frame::addChild
; Line 161
	call	?CreateTextureFilter@@YAPAVframe@@XZ	; CreateTextureFilter
	push	eax
	lea	ecx, DWORD PTR [esi+44]
	call	?addChild@frame@@QAEXPAV1@@Z		; frame::addChild
; Line 165
	mov	ecx, OFFSET ?textureBrush@@3Vbrush@@A	; textureBrush
	mov	DWORD PTR [esi+96], ebx
	call	?init@brush@@QAEXXZ			; brush::init
; Line 166
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0MapViewer@@QAE@PAVWorld@@MM@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1AppState@@UAE@XZ			; AppState::~AppState
__unwindfunclet$??0MapViewer@@QAE@PAVWorld@@MM@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1frame@@QAE@XZ
__unwindfunclet$??0MapViewer@@QAE@PAVWorld@@MM@Z$2:
	mov	eax, DWORD PTR $T99741[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0MapViewer@@QAE@PAVWorld@@MM@Z$3:
	mov	eax, DWORD PTR $T99745[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0MapViewer@@QAE@PAVWorld@@MM@Z$5:
	mov	eax, DWORD PTR $T99753[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0MapViewer@@QAE@PAVWorld@@MM@Z$6:
	mov	eax, DWORD PTR $T99757[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0MapViewer@@QAE@PAVWorld@@MM@Z$7:
	mov	eax, DWORD PTR $T99761[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0MapViewer@@QAE@PAVWorld@@MM@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0MapViewer@@QAE@PAVWorld@@MM@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0MapViewer@@QAE@PAVWorld@@MM@Z ENDP			; MapViewer::MapViewer
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GMapViewer@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??_GMapViewer@@UAEPAXI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??_GMapViewer@@UAEPAXI@Z$1
__ehfuncinfo$??_GMapViewer@@UAEPAXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??_GMapViewer@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??_GMapViewer@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_GMapViewer@@UAEPAXI@Z PROC				; MapViewer::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??_GMapViewer@@UAEPAXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	mov	DWORD PTR [esi], OFFSET ??_7MapViewer@@6B@
	mov	edi, DWORD PTR [esi+40]
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	test	edi, edi
	je	SHORT $LN10@scalar@4
	mov	ecx, edi
	call	??1World@@QAE@XZ			; World::~World
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN10@scalar@4:
	mov	eax, DWORD PTR [esi+48]
	test	eax, eax
	je	SHORT $LN22@scalar@4
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN22@scalar@4:
	test	BYTE PTR ___flags$[ebp], 1
	mov	DWORD PTR [esi+48], 0
	mov	DWORD PTR [esi+52], 0
	mov	DWORD PTR [esi+56], 0
	mov	DWORD PTR [esi], OFFSET ??_7AppState@@6B@
	je	SHORT $LN28@scalar@4
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN28@scalar@4:
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??_GMapViewer@@UAEPAXI@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1AppState@@UAE@XZ			; AppState::~AppState
__unwindfunclet$??_GMapViewer@@UAEPAXI@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1frame@@QAE@XZ
__ehhandler$??_GMapViewer@@UAEPAXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??_GMapViewer@@UAEPAXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??_GMapViewer@@UAEPAXI@Z ENDP				; MapViewer::`scalar deleting destructor'
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 592
	push	ebp
	mov	ebp, esp
; Line 594
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	esi
	mov	esi, ecx
	mov	eax, edx
	push	edi
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
	lea	edi, DWORD PTR [eax+1]
$LL31@basic_stri@2:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL31@basic_stri@2
	sub	eax, edi
	push	eax
	push	edx
	mov	ecx, esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	edi
; Line 595
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Function compile flags: /Ogtp
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx
; Line 767
	push	ebp
	mov	ebp, esp
	push	esi
; Line 768
	mov	esi, DWORD PTR __Ptr$[ebp]
	mov	eax, esi
	push	edi
	lea	edi, DWORD PTR [eax+1]
	npad	3
$LL7@operator@3:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL7@operator@3
	sub	eax, edi
	push	eax
	push	esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	edi
	pop	esi
; Line 769
	pop	ebp
	ret	4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
PUBLIC	??$insert@U?$pair@$$CBIPAVManagedItem@@@std@@@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@1@$$QAU?$pair@$$CBIPAVManagedItem@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::insert<std::pair<unsigned int const ,ManagedItem *> >
; Function compile flags: /Ogtp
;	COMDAT ??$insert@U?$pair@$$CBIPAVManagedItem@@@std@@@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@1@$$QAU?$pair@$$CBIPAVManagedItem@@@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
??$insert@U?$pair@$$CBIPAVManagedItem@@@std@@@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@1@$$QAU?$pair@$$CBIPAVManagedItem@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::insert<std::pair<unsigned int const ,ManagedItem *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 760
	push	ebp
	mov	ebp, esp
; Line 767
	mov	eax, DWORD PTR __Val$[ebp]
	push	esi
	push	edi
	push	eax
	mov	esi, ecx
	call	??$_Buynode@U?$pair@$$CBIPAVManagedItem@@@std@@@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBIPAVManagedItem@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Buynode<std::pair<unsigned int const ,ManagedItem *> >
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	push	ecx
	push	edi
	mov	ecx, esi
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Insert
	mov	eax, edi
	pop	edi
	pop	esi
; Line 768
	pop	ebp
	ret	12					; 0000000cH
??$insert@U?$pair@$$CBIPAVManagedItem@@@std@@@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@1@$$QAU?$pair@$$CBIPAVManagedItem@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::insert<std::pair<unsigned int const ,ManagedItem *> >
_TEXT	ENDS
PUBLIC	__real@408f400000000000
PUBLIC	__real@4056800000000000
PUBLIC	__real@4024000000000000
PUBLIC	__real@4060aaaaa0000000
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3fb999999999999a
PUBLIC	__real@40000000
PUBLIC	__real@3ff8000000000000
PUBLIC	__real@403e000000000000
PUBLIC	__real@3fc99999a0000000
PUBLIC	__real@c01e000000000000
PUBLIC	__real@401e000000000000
PUBLIC	__real@c3b40000
PUBLIC	__real@4076800000000000
PUBLIC	__real@43b40000
PUBLIC	__real@3f500e6afcce1c58
PUBLIC	__real@404ff33333333333
PUBLIC	__real@4000000000000000
PUBLIC	__real@4044000000000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@4066800000000000
PUBLIC	__real@400921fb60000000
PUBLIC	__real@00000000
EXTRN	?tick@World@@QAEXM@Z:PROC			; World::tick
EXTRN	?globalTime@@3HA:DWORD				; globalTime
EXTRN	?eraseTextures@World@@QAEXMM@Z:PROC		; World::eraseTextures
EXTRN	?paintTexture@World@@QAEXMMPAVbrush@@MMH@Z:PROC	; World::paintTexture
EXTRN	?add@TextureManager@@UAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; TextureManager::add
EXTRN	?GenerateTexture@brush@@QAEXXZ:PROC		; brush::GenerateTexture
EXTRN	?selectedTexture@@3PAVManagedItem@@A:DWORD	; selectedTexture
EXTRN	?blurTerrain@World@@QAEXMMMMH@Z:PROC		; World::blurTerrain
EXTRN	?flattenTerrain@World@@QAEXMMMMMH@Z:PROC	; World::flattenTerrain
EXTRN	?getSelectionHeight@MapChunk@@QAEMXZ:PROC	; MapChunk::getSelectionHeight
EXTRN	?changeTerrain@World@@QAEXMMMMH@Z:PROC		; World::changeTerrain
EXTRN	?getSelectionCoord@MapChunk@@QAEXPAM0@Z:PROC	; MapChunk::getSelectionCoord
EXTRN	_SDL_GetAppState:PROC
EXTRN	?onTheFlyLoading@World@@QAEXXZ:PROC		; World::onTheFlyLoading
EXTRN	__ftol2_sse_excpt:PROC
;	COMDAT __real@408f400000000000
; File c:\programovani\wow editor\test\src\editor\brush.h
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT __real@4056800000000000
CONST	SEGMENT
__real@4056800000000000 DQ 04056800000000000r	; 90
CONST	ENDS
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
CONST	ENDS
;	COMDAT __real@4060aaaaa0000000
CONST	SEGMENT
__real@4060aaaaa0000000 DQ 04060aaaaa0000000r	; 133.333
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fb999999999999a
CONST	SEGMENT
__real@3fb999999999999a DQ 03fb999999999999ar	; 0.1
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff8000000000000
CONST	SEGMENT
__real@3ff8000000000000 DQ 03ff8000000000000r	; 1.5
CONST	ENDS
;	COMDAT __real@403e000000000000
CONST	SEGMENT
__real@403e000000000000 DQ 0403e000000000000r	; 30
CONST	ENDS
;	COMDAT __real@3fc99999a0000000
CONST	SEGMENT
__real@3fc99999a0000000 DQ 03fc99999a0000000r	; 0.2
CONST	ENDS
;	COMDAT __real@c01e000000000000
CONST	SEGMENT
__real@c01e000000000000 DQ 0c01e000000000000r	; -7.5
CONST	ENDS
;	COMDAT __real@401e000000000000
CONST	SEGMENT
__real@401e000000000000 DQ 0401e000000000000r	; 7.5
CONST	ENDS
;	COMDAT __real@c3b40000
CONST	SEGMENT
__real@c3b40000 DD 0c3b40000r			; -360
CONST	ENDS
;	COMDAT __real@4076800000000000
CONST	SEGMENT
__real@4076800000000000 DQ 04076800000000000r	; 360
CONST	ENDS
;	COMDAT __real@43b40000
CONST	SEGMENT
__real@43b40000 DD 043b40000r			; 360
CONST	ENDS
;	COMDAT __real@3f500e6afcce1c58
CONST	SEGMENT
__real@3f500e6afcce1c58 DQ 03f500e6afcce1c58r	; 0.00098
CONST	ENDS
;	COMDAT __real@404ff33333333333
CONST	SEGMENT
__real@404ff33333333333 DQ 0404ff33333333333r	; 63.9
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@4044000000000000
CONST	SEGMENT
__real@4044000000000000 DQ 04044000000000000r	; 40
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@4066800000000000
CONST	SEGMENT
__real@4066800000000000 DQ 04066800000000000r	; 180
CONST	ENDS
;	COMDAT __real@400921fb60000000
CONST	SEGMENT
__real@400921fb60000000 DQ 0400921fb60000000r	; 3.14159
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
; Function compile flags: /Ogtp
CONST	ENDS
_TEXT	SEGMENT
$T100090 = -72						; size = 12
$T100089 = -72						; size = 12
$T100087 = -72						; size = 12
_right$82385 = -72					; size = 12
$T100084 = -72						; size = 12
$T100082 = -72						; size = 12
$T100079 = -72						; size = 12
$T100077 = -72						; size = 12
$T100076 = -72						; size = 12
_dir$82318 = -60					; size = 12
$T100088 = -48						; size = 12
$T100086 = -48						; size = 12
$T100083 = -48						; size = 12
$T100080 = -48						; size = 12
_dirRight$82320 = -48					; size = 12
$T100078 = -36						; size = 12
_dirUp$82319 = -36					; size = 12
tv2933 = -24						; size = 4
tv2596 = -24						; size = 4
tv2575 = -24						; size = 4
tv2568 = -24						; size = 4
tv2517 = -24						; size = 4
tv2505 = -24						; size = 4
tv2486 = -24						; size = 4
tv2465 = -24						; size = 4
tv2373 = -24						; size = 4
tv2366 = -24						; size = 4
tv2338 = -24						; size = 4
tv2334 = -24						; size = 4
tv2327 = -24						; size = 4
tv2321 = -24						; size = 4
$T100449 = -24						; size = 4
$T100392 = -24						; size = 4
$T100379 = -24						; size = 4
_xa$100222 = -24					; size = 4
_xa$100194 = -24					; size = 4
$T100436 = -24						; size = 4
_ya$100147 = -24					; size = 4
$T100091 = -24						; size = 4
$T100081 = -24						; size = 4
tv2126 = -20						; size = 4
tv2098 = -20						; size = 4
tv2020 = -20						; size = 4
tv2014 = -20						; size = 4
_ya$100119 = -20					; size = 4
_yPos$82361 = -20					; size = 4
_ya$100223 = -16					; size = 4
_ya$100195 = -16					; size = 4
_xa$100146 = -16					; size = 4
_xa$100118 = -16					; size = 4
tv2923 = -12						; size = 4
tv2133 = -12						; size = 4
tv2105 = -12						; size = 4
tv2027 = -12						; size = 4
tv1985 = -12						; size = 4
tv1992 = -8						; size = 4
$T100233 = -8						; size = 4
$T100205 = -8						; size = 4
$T100157 = -8						; size = 4
$T100129 = -8						; size = 4
_mY$82403 = -8						; size = 4
_xPos$82360 = -8					; size = 4
tv1976 = -4						; size = 4
_mX$82402 = -4						; size = 4
_zPos$82362 = -4					; size = 4
_t$ = 8							; size = 4
_dt$ = 12						; size = 4
?tick@MapViewer@@UAEXMM@Z PROC				; MapViewer::tick
; _this$ = ecx
; File c:\programovani\wow editor\test\src\editor\mapviewer.cpp
; Line 176
	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	ebx
	push	esi
	mov	esi, ecx
; Line 177
	mov	ecx, DWORD PTR [esi+40]
	push	edi
	call	?onTheFlyLoading@World@@QAEXXZ		; World::onTheFlyLoading
; Line 178
	fld1
	fcomp	DWORD PTR _dt$[ebp]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN229@tick
; Line 179
	mov	DWORD PTR _dt$[ebp], 1065353216		; 3f800000H
$LN229@tick:
; Line 180
	call	_SDL_GetAppState
	test	al, 2
	je	$LN64@tick
; Line 182
	fldz
	mov	ecx, DWORD PTR [esi+40]
	fcom	DWORD PTR [ecx+252]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN241@tick
; Line 184
	fld	DWORD PTR _dt$[ebp]
	fmul	QWORD PTR __real@4014000000000000
	fadd	DWORD PTR [ecx+252]
	fstp	DWORD PTR [ecx+252]
; Line 185
	mov	ecx, DWORD PTR [esi+40]
	fcomp	DWORD PTR [ecx+252]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN62@tick
; Line 186
	mov	DWORD PTR [ecx+252], 0
	jmp	SHORT $LN62@tick
$LN241@tick:
	fstp	ST(0)
$LN62@tick:
; Line 192
	fld	DWORD PTR [esi+12]
	xor	eax, eax
	fmul	QWORD PTR __real@400921fb60000000
	mov	DWORD PTR _dirUp$82319[ebp+4], eax
	mov	DWORD PTR _dirUp$82319[ebp+8], eax
	mov	DWORD PTR _dirRight$82320[ebp], eax
	fdiv	QWORD PTR __real@4066800000000000
	mov	DWORD PTR _dirRight$82320[ebp+4], eax
	mov	ecx, 1065353216				; 3f800000H
	mov	DWORD PTR _dirUp$82319[ebp], ecx
	mov	DWORD PTR _dirRight$82320[ebp+8], ecx
	fstp	DWORD PTR tv1976[ebp]
	fld1
	mov	eax, DWORD PTR tv1976[ebp]
	fldz
	mov	DWORD PTR $T100129[ebp], eax
	fsub	ST(1), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR _xa$100118[ebp]
	fsubr	ST(0), ST(0)
	fstp	DWORD PTR tv2923[ebp]
	mov	edi, DWORD PTR tv2923[ebp]
	fld	DWORD PTR $T100129[ebp]
	mov	DWORD PTR _ya$100119[ebp], edi
	call	__CIcos
	fstp	DWORD PTR tv1985[ebp]
	fld	DWORD PTR $T100129[ebp]
	call	__CIsin
	fstp	DWORD PTR tv1992[ebp]
	fld	DWORD PTR tv1985[ebp]
; Line 193
	mov	DWORD PTR _ya$100147[ebp], edi
	fld	ST(0)
	fld	DWORD PTR _xa$100118[ebp]
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fld	DWORD PTR tv1992[ebp]
	fld	ST(0)
	fld	DWORD PTR _ya$100119[ebp]
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fxch	ST(4)
	fsubrp	ST(1), ST(0)
	fldz
	fadd	ST(1), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR _dir$82318[ebp]
	fxch	ST(1)
	fmulp	ST(2), ST(0)
	fxch	ST(3)
	fmulp	ST(2), ST(0)
	faddp	ST(1), ST(0)
	fadd	ST(0), ST(1)
	fstp	DWORD PTR _dir$82318[ebp+4]
	fld	DWORD PTR [esi+8]
	fmul	QWORD PTR __real@400921fb60000000
	fdiv	QWORD PTR __real@4066800000000000
	fstp	DWORD PTR tv2014[ebp]
	mov	ebx, DWORD PTR tv2014[ebp]
	fsubr	DWORD PTR _dir$82318[ebp]
	mov	DWORD PTR $T100157[ebp], ebx
	fstp	DWORD PTR _xa$100146[ebp]
	fld	DWORD PTR $T100157[ebp]
	call	__CIcos
	fstp	DWORD PTR tv2020[ebp]
	fld	DWORD PTR $T100157[ebp]
	call	__CIsin
	fstp	DWORD PTR tv2027[ebp]
	fld	DWORD PTR tv2020[ebp]
	fld	ST(0)
	fld	DWORD PTR _xa$100146[ebp]
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fld	DWORD PTR tv2027[ebp]
	fld	ST(0)
	fld	DWORD PTR _ya$100147[ebp]
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fxch	ST(4)
	fsubrp	ST(1), ST(0)
	fldz
	fadd	ST(1), ST(0)
; Line 195
	cmp	BYTE PTR ?LShiftDown@@3_NA, 0		; LShiftDown
	fxch	ST(1)
	fstp	DWORD PTR _dir$82318[ebp]
	fxch	ST(1)
	fmulp	ST(2), ST(0)
	fxch	ST(3)
	fmulp	ST(2), ST(0)
	faddp	ST(1), ST(0)
	fadd	ST(0), ST(1)
	fstp	DWORD PTR _dir$82318[ebp+8]
	jne	$LN60@tick
	cmp	BYTE PTR ?RShiftDown@@3_NA, 0		; RShiftDown
	jne	$LN60@tick
; Line 201
	cmp	BYTE PTR ?LCtrlDown@@3_NA, 0		; LCtrlDown
	fstp	ST(0)
	jne	SHORT $LN57@tick
	cmp	BYTE PTR ?RCtrlDown@@3_NA, 0		; RCtrlDown
	jne	SHORT $LN57@tick
; Line 213
	push	ecx
	mov	DWORD PTR [esp], ebx
	lea	ecx, DWORD PTR _dirUp$82319[ebp+8]
	push	ecx
	lea	edx, DWORD PTR _dirUp$82319[ebp]
	push	edx
	sub	esp, 8
	mov	DWORD PTR [esp+4], 0
	mov	DWORD PTR [esp], 0
	call	?rotate@@YAXMMPAM0M@Z			; rotate
; Line 214
	add	esp, 16					; 00000010H
	mov	DWORD PTR [esp], ebx
	lea	eax, DWORD PTR _dirRight$82320[ebp+8]
	push	eax
	lea	ecx, DWORD PTR _dirRight$82320[ebp]
	push	ecx
	jmp	$LN372@tick
$LN57@tick:
; Line 205
	mov	edi, DWORD PTR tv1976[ebp]
	push	ecx
	mov	DWORD PTR [esp], edi
	lea	edx, DWORD PTR _dirUp$82319[ebp+4]
	push	edx
	lea	eax, DWORD PTR _dirUp$82319[ebp]
	push	eax
	sub	esp, 8
	mov	DWORD PTR [esp+4], 0
	mov	DWORD PTR _dirUp$82319[ebp], 0
	mov	DWORD PTR _dirUp$82319[ebp+4], 1065353216 ; 3f800000H
	mov	DWORD PTR [esp], 0
	call	?rotate@@YAXMMPAM0M@Z			; rotate
; Line 206
	add	esp, 16					; 00000010H
	mov	DWORD PTR [esp], edi
	lea	ecx, DWORD PTR _dirRight$82320[ebp+4]
	push	ecx
	lea	edx, DWORD PTR _dirRight$82320[ebp]
	push	edx
	sub	esp, 8
	mov	DWORD PTR [esp+4], 0
	mov	DWORD PTR [esp], 0
	call	?rotate@@YAXMMPAM0M@Z			; rotate
; Line 207
	add	esp, 16					; 00000010H
	mov	DWORD PTR [esp], ebx
	lea	eax, DWORD PTR _dirUp$82319[ebp+8]
	push	eax
	lea	ecx, DWORD PTR _dirUp$82319[ebp]
	push	ecx
	sub	esp, 8
	mov	DWORD PTR [esp+4], 0
	mov	DWORD PTR [esp], 0
	call	?rotate@@YAXMMPAM0M@Z			; rotate
; Line 208
	add	esp, 16					; 00000010H
	mov	DWORD PTR [esp], ebx
	lea	edx, DWORD PTR _dirRight$82320[ebp+8]
	push	edx
	lea	eax, DWORD PTR _dirRight$82320[ebp]
	push	eax
$LN372@tick:
	sub	esp, 8
	mov	DWORD PTR [esp+4], 0
	mov	DWORD PTR [esp], 0
	call	?rotate@@YAXMMPAM0M@Z			; rotate
; Line 211
	fldz
	add	esp, 20					; 00000014H
	jmp	SHORT $LN56@tick
$LN60@tick:
; Line 199
	fld	ST(0)
	xor	ecx, ecx
	fmul	ST(0), ST(1)
	mov	DWORD PTR _dirUp$82319[ebp], ecx
	mov	DWORD PTR _dirUp$82319[ebp+4], 1065353216 ; 3f800000H
	mov	DWORD PTR _dirRight$82320[ebp+8], ecx
	fstp	DWORD PTR tv2933[ebp]
	mov	eax, DWORD PTR tv2933[ebp]
	mov	DWORD PTR _dirRight$82320[ebp], eax
	mov	DWORD PTR _dirRight$82320[ebp+4], eax
$LN56@tick:
; Line 217
	mov	edi, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	test	edi, edi
	je	$LN55@tick
; Line 219
	mov	ecx, DWORD PTR [edi+32]
	mov	eax, DWORD PTR [esi+40]
	fld	DWORD PTR [ecx+16]
	fsub	DWORD PTR [eax+20928]
	fstp	DWORD PTR $T100076[ebp]
	fld	DWORD PTR [ecx+20]
	fsub	DWORD PTR [eax+20932]
	fstp	DWORD PTR $T100076[ebp+4]
	mov	edx, DWORD PTR $T100076[ebp+4]
	fld	DWORD PTR [ecx+24]
	mov	ecx, DWORD PTR $T100076[ebp]
	fsub	DWORD PTR [eax+20936]
	mov	DWORD PTR ?ObjPos@@3VVec3D@@A, ecx
	mov	DWORD PTR ?ObjPos@@3VVec3D@@A+4, edx
	fstp	DWORD PTR $T100076[ebp+8]
	mov	eax, DWORD PTR $T100076[ebp+8]
	mov	DWORD PTR ?ObjPos@@3VVec3D@@A+8, eax
; Line 220
	fld	DWORD PTR [esi+12]
	fmul	QWORD PTR __real@400921fb60000000
	fdiv	QWORD PTR __real@4066800000000000
	fstp	DWORD PTR $T100205[ebp]
	fld	DWORD PTR $T100076[ebp]
	fsub	ST(0), ST(1)
	fstp	DWORD PTR _xa$100194[ebp]
	fsubr	DWORD PTR $T100076[ebp+4]
	fstp	DWORD PTR _ya$100195[ebp]
	fld	DWORD PTR $T100205[ebp]
	call	__CIcos
	fstp	DWORD PTR tv2098[ebp]
	fld	DWORD PTR $T100205[ebp]
	call	__CIsin
	fstp	DWORD PTR tv2105[ebp]
	fld	DWORD PTR _xa$100194[ebp]
	fld	ST(0)
	fld	DWORD PTR tv2098[ebp]
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fld	DWORD PTR _ya$100195[ebp]
	fld	ST(0)
	fld	DWORD PTR tv2105[ebp]
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fxch	ST(4)
	fsubrp	ST(1), ST(0)
	fldz
	fadd	ST(1), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR ?ObjPos@@3VVec3D@@A
	fxch	ST(4)
	fmulp	ST(3), ST(0)
	fmulp	ST(1), ST(0)
	faddp	ST(1), ST(0)
	fadd	ST(0), ST(1)
	fstp	DWORD PTR ?ObjPos@@3VVec3D@@A+4
; Line 221
	fld	DWORD PTR [esi+8]
	fmul	QWORD PTR __real@400921fb60000000
	fdiv	QWORD PTR __real@4066800000000000
	fstp	DWORD PTR $T100233[ebp]
	fld	DWORD PTR ?ObjPos@@3VVec3D@@A
	fsub	ST(0), ST(1)
	fstp	DWORD PTR _xa$100222[ebp]
	fsubr	DWORD PTR $T100076[ebp+8]
	fstp	DWORD PTR _ya$100223[ebp]
	fld	DWORD PTR $T100233[ebp]
	call	__CIcos
	fstp	DWORD PTR tv2126[ebp]
	fld	DWORD PTR $T100233[ebp]
	call	__CIsin
	fstp	DWORD PTR tv2133[ebp]
	fld	DWORD PTR _xa$100222[ebp]
	fld	ST(0)
	fld	DWORD PTR tv2126[ebp]
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fld	DWORD PTR _ya$100223[ebp]
	fld	ST(0)
	fld	DWORD PTR tv2133[ebp]
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fxch	ST(4)
	fsubrp	ST(1), ST(0)
	fldz
	fadd	ST(1), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR ?ObjPos@@3VVec3D@@A
	fxch	ST(4)
	fmulp	ST(3), ST(0)
	fmulp	ST(1), ST(0)
	faddp	ST(1), ST(0)
	fadd	ST(0), ST(1)
	fstp	DWORD PTR ?ObjPos@@3VVec3D@@A+8
; Line 222
	fld	DWORD PTR ?ObjPos@@3VVec3D@@A
	fabs
	fstp	DWORD PTR tv2596[ebp]
	fld	DWORD PTR tv2596[ebp]
	fstp	DWORD PTR ?ObjPos@@3VVec3D@@A
$LN55@tick:
; Line 225
	cmp	BYTE PTR ?MoveObj@@3_NA, 0		; MoveObj
	mov	ebx, 1
	je	$LN49@tick
	test	edi, edi
	je	$LN49@tick
	cmp	DWORD PTR [edi+28], ebx
	jne	$LN49@tick
; Line 227
	cmp	BYTE PTR ?LAltDown@@3_NA, 0		; LAltDown
	jne	$LN263@tick
	cmp	BYTE PTR ?RAltDown@@3_NA, 0		; RAltDown
	jne	$LN263@tick
; Line 240
	fld	DWORD PTR ?mv@@3MA			; mv
	mov	DWORD PTR ?ObjPos@@3VVec3D@@A, 1109393408 ; 42200000H
	fld	ST(0)
	mov	eax, DWORD PTR [edi+32]
	fmul	DWORD PTR _dirUp$82319[ebp]
	fstp	DWORD PTR $T100077[ebp]
	fld	ST(0)
	fmul	DWORD PTR _dirUp$82319[ebp+4]
	fstp	DWORD PTR $T100077[ebp+4]
	fmul	DWORD PTR _dirUp$82319[ebp+8]
	fstp	DWORD PTR $T100077[ebp+8]
	fld	DWORD PTR $T100077[ebp]
	fld	QWORD PTR __real@4044000000000000
	fmul	ST(1), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR $T100078[ebp]
	fld	DWORD PTR $T100077[ebp+4]
	fmul	ST(0), ST(1)
	fstp	DWORD PTR $T100078[ebp+4]
	fmul	DWORD PTR $T100077[ebp+8]
	fstp	DWORD PTR $T100078[ebp+8]
	fld	DWORD PTR $T100078[ebp]
	fadd	DWORD PTR [eax+16]
	fstp	DWORD PTR [eax+16]
	fld	DWORD PTR $T100078[ebp+4]
	fadd	DWORD PTR [eax+20]
	fstp	DWORD PTR [eax+20]
	fld	DWORD PTR $T100078[ebp+8]
	fadd	DWORD PTR [eax+24]
	fstp	DWORD PTR [eax+24]
; Line 241
	fld	DWORD PTR _dirRight$82320[ebp]
	fld	DWORD PTR ?mh@@3MA			; mh
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR $T100079[ebp]
	fld	DWORD PTR _dirRight$82320[ebp+4]
	fmul	ST(0), ST(1)
	fstp	DWORD PTR $T100079[ebp+4]
	fmul	DWORD PTR _dirRight$82320[ebp+8]
	fstp	DWORD PTR $T100079[ebp+8]
	fld	DWORD PTR $T100079[ebp]
	fld	DWORD PTR ?ObjPos@@3VVec3D@@A
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR $T100080[ebp]
	fld	DWORD PTR $T100079[ebp+4]
	fmul	ST(0), ST(1)
	fstp	DWORD PTR $T100080[ebp+4]
	fmul	DWORD PTR $T100079[ebp+8]
	fstp	DWORD PTR $T100080[ebp+8]
	fld	DWORD PTR [eax+16]
	fsub	DWORD PTR $T100080[ebp]
	fstp	DWORD PTR [eax+16]
	fld	DWORD PTR [eax+20]
	fsub	DWORD PTR $T100080[ebp+4]
	fstp	DWORD PTR [eax+20]
	fld	DWORD PTR [eax+24]
	fsub	DWORD PTR $T100080[ebp+8]
	fstp	DWORD PTR [eax+24]
	mov	edi, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	jmp	SHORT $LN49@tick
$LN263@tick:
; Line 231
	mov	edi, DWORD PTR [edi+32]
	fstp	ST(0)
	fld	DWORD PTR ?mv@@3MA			; mv
	fmul	QWORD PTR __real@4010000000000000
	fstp	DWORD PTR tv2575[ebp]
	fld	QWORD PTR __real@4000000000000000
	fld	DWORD PTR tv2575[ebp]
	call	__CIpow
	fstp	DWORD PTR tv2568[ebp]
	fld	DWORD PTR tv2568[ebp]
	fmul	DWORD PTR [edi+56]
	fstp	DWORD PTR [edi+56]
; Line 232
	mov	edi, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	ecx, DWORD PTR [edi+32]
	fld	DWORD PTR [ecx+56]
	fcomp	QWORD PTR __real@404ff33333333333
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN51@tick
; Line 233
	mov	DWORD PTR [ecx+56], 1115658650		; 427f999aH
	jmp	SHORT $LN376@tick
$LN51@tick:
; Line 234
	fld	DWORD PTR [ecx+56]
	fcomp	QWORD PTR __real@3f500e6afcce1c58
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN230@tick
; Line 235
	mov	DWORD PTR [ecx+56], 981496664		; 3a807358H
$LN376@tick:
	mov	edi, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
$LN230@tick:
	fldz
$LN49@tick:
; Line 245
	cmp	BYTE PTR [esi+36], 0
	je	$LN231@tick
	test	edi, edi
	je	$LN231@tick
; Line 247
	cmp	BYTE PTR ?LShiftDown@@3_NA, 0		; LShiftDown
	jne	SHORT $LN45@tick
	cmp	BYTE PTR ?RShiftDown@@3_NA, 0		; RShiftDown
	je	SHORT $LN46@tick
$LN45@tick:
	cmp	DWORD PTR [edi+28], ebx
	jne	SHORT $LN46@tick
; Line 249
	fld	DWORD PTR ?rv@@3MA			; rv
	mov	edi, DWORD PTR [edi+32]
	fadd	DWORD PTR ?rh@@3MA			; rh
	fadd	DWORD PTR [edi+32]
	fstp	DWORD PTR [edi+32]
; Line 251
	mov	ecx, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	edx, DWORD PTR [ecx+32]
	fld	DWORD PTR __real@43b40000
	fcomp	DWORD PTR [edx+32]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN44@tick
; Line 252
	mov	eax, edx
	fld	DWORD PTR [eax+32]
	fsub	QWORD PTR __real@4076800000000000
	fstp	DWORD PTR [eax+32]
	jmp	$LN231@tick
$LN44@tick:
; Line 253
	fld	DWORD PTR __real@c3b40000
	fcomp	DWORD PTR [edx+32]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	$LN231@tick
; Line 254
	mov	eax, edx
	fld	DWORD PTR [eax+32]
	fadd	QWORD PTR __real@4076800000000000
	fstp	DWORD PTR [eax+32]
; Line 255
	jmp	$LN231@tick
$LN46@tick:
; Line 256
	cmp	BYTE PTR ?LCtrlDown@@3_NA, 0		; LCtrlDown
	jne	SHORT $LN39@tick
	cmp	BYTE PTR ?RCtrlDown@@3_NA, 0		; RCtrlDown
	je	SHORT $LN40@tick
$LN39@tick:
	cmp	DWORD PTR [edi+28], ebx
	jne	SHORT $LN40@tick
; Line 258
	fld	DWORD PTR ?rv@@3MA			; rv
	mov	edi, DWORD PTR [edi+32]
	fadd	DWORD PTR ?rh@@3MA			; rh
	fadd	DWORD PTR [edi+28]
	fstp	DWORD PTR [edi+28]
; Line 260
	mov	ecx, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	edx, DWORD PTR [ecx+32]
	fld	DWORD PTR __real@43b40000
	fcomp	DWORD PTR [edx+28]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN38@tick
; Line 261
	mov	eax, edx
	fld	DWORD PTR [eax+28]
	fsub	QWORD PTR __real@4076800000000000
	fstp	DWORD PTR [eax+28]
	jmp	$LN231@tick
$LN38@tick:
; Line 262
	fld	DWORD PTR __real@c3b40000
	fcomp	DWORD PTR [edx+28]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	$LN231@tick
; Line 263
	mov	eax, edx
	fld	DWORD PTR [eax+28]
	fadd	QWORD PTR __real@4076800000000000
	fstp	DWORD PTR [eax+28]
; Line 264
	jmp	SHORT $LN231@tick
$LN40@tick:
; Line 265
	cmp	BYTE PTR ?LAltDown@@3_NA, 0		; LAltDown
	jne	SHORT $LN33@tick
	cmp	BYTE PTR ?RAltDown@@3_NA, 0		; RAltDown
	je	SHORT $LN231@tick
$LN33@tick:
	cmp	DWORD PTR [edi+28], ebx
	jne	SHORT $LN231@tick
; Line 267
	fld	DWORD PTR ?rv@@3MA			; rv
	mov	edi, DWORD PTR [edi+32]
	fadd	DWORD PTR ?rh@@3MA			; rh
	fadd	DWORD PTR [edi+36]
	fstp	DWORD PTR [edi+36]
; Line 269
	mov	ecx, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	edx, DWORD PTR [ecx+32]
	fld	DWORD PTR __real@43b40000
	fcomp	DWORD PTR [edx+36]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN32@tick
; Line 270
	mov	eax, edx
	fld	DWORD PTR [eax+36]
	fsub	QWORD PTR __real@4076800000000000
	jmp	SHORT $LN373@tick
$LN32@tick:
; Line 271
	fld	DWORD PTR __real@c3b40000
	fcomp	DWORD PTR [edx+36]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN231@tick
; Line 272
	mov	eax, edx
	fld	DWORD PTR [eax+36]
	fadd	QWORD PTR __real@4076800000000000
$LN373@tick:
	fstp	DWORD PTR [eax+36]
$LN231@tick:
; Line 276
	xor	ebx, ebx
	mov	DWORD PTR ?mh@@3MA, ebx
; Line 277
	mov	DWORD PTR ?mv@@3MA, ebx
; Line 278
	mov	DWORD PTR ?rh@@3MA, ebx
; Line 279
	mov	DWORD PTR ?rv@@3MA, ebx
; Line 281
	cmp	BYTE PTR ?leftMouse@@3_NA, bl		; leftMouse
	je	$LN236@tick
	mov	eax, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	cmp	eax, ebx
	je	$LN236@tick
	cmp	DWORD PTR [eax+28], 3
	jne	$LN236@tick
; Line 284
	cmp	DWORD PTR ?terrainMode@@3HA, ebx	; terrainMode
	jne	$LN28@tick
; Line 286
	cmp	BYTE PTR ?LShiftDown@@3_NA, bl		; LShiftDown
	jne	SHORT $LN315@tick
	cmp	BYTE PTR ?RShiftDown@@3_NA, bl		; RShiftDown
	je	SHORT $LN234@tick
$LN315@tick:
; Line 288
	lea	ecx, DWORD PTR _zPos$82362[ebp]
	fstp	ST(0)
	push	ecx
	mov	ecx, DWORD PTR [eax+32]
	lea	edx, DWORD PTR _xPos$82360[ebp]
	push	edx
	call	?getSelectionCoord@MapChunk@@QAEXPAM0@Z	; MapChunk::getSelectionCoord
; Line 289
	fld	DWORD PTR _dt$[ebp]
	mov	eax, DWORD PTR ?BrushType@@3HA		; BrushType
	fmul	QWORD PTR __real@401e000000000000
	mov	ecx, DWORD PTR ?BrushRadius@@3MA
	mov	edx, DWORD PTR _zPos$82362[ebp]
	push	eax
	fstp	DWORD PTR tv2517[ebp]
	fld	DWORD PTR tv2517[ebp]
	mov	eax, DWORD PTR _xPos$82360[ebp]
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [esp+12], ecx
	fstp	DWORD PTR [esp+8]
	mov	ecx, DWORD PTR [esi+40]
	mov	DWORD PTR [esp+4], edx
	mov	DWORD PTR [esp], eax
	call	?changeTerrain@World@@QAEXMMMMH@Z	; World::changeTerrain
	fldz
	mov	eax, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
$LN234@tick:
; Line 291
	cmp	BYTE PTR ?LCtrlDown@@3_NA, bl		; LCtrlDown
	jne	SHORT $LN320@tick
	cmp	BYTE PTR ?RCtrlDown@@3_NA, bl		; RCtrlDown
	je	$LN236@tick
$LN320@tick:
; Line 293
	lea	ecx, DWORD PTR _zPos$82362[ebp]
	fstp	ST(0)
	push	ecx
	mov	ecx, DWORD PTR [eax+32]
	lea	edx, DWORD PTR _xPos$82360[ebp]
	push	edx
	call	?getSelectionCoord@MapChunk@@QAEXPAM0@Z	; MapChunk::getSelectionCoord
; Line 294
	fld	DWORD PTR _dt$[ebp]
	mov	eax, DWORD PTR ?BrushType@@3HA		; BrushType
	fmul	QWORD PTR __real@c01e000000000000
	mov	ecx, DWORD PTR ?BrushRadius@@3MA
	mov	edx, DWORD PTR _zPos$82362[ebp]
	push	eax
	fstp	DWORD PTR tv2505[ebp]
	fld	DWORD PTR tv2505[ebp]
	mov	eax, DWORD PTR _xPos$82360[ebp]
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [esp+12], ecx
	fstp	DWORD PTR [esp+8]
	mov	ecx, DWORD PTR [esi+40]
	mov	DWORD PTR [esp+4], edx
	mov	DWORD PTR [esp], eax
	call	?changeTerrain@World@@QAEXMMMMH@Z	; World::changeTerrain
; Line 297
	jmp	$LN374@tick
$LN28@tick:
; Line 299
	cmp	BYTE PTR ?LShiftDown@@3_NA, bl		; LShiftDown
	jne	SHORT $LN324@tick
	cmp	BYTE PTR ?RShiftDown@@3_NA, bl		; RShiftDown
	je	SHORT $LN235@tick
$LN324@tick:
; Line 301
	lea	ecx, DWORD PTR _zPos$82362[ebp]
	fstp	ST(0)
	push	ecx
	mov	ecx, DWORD PTR [eax+32]
	lea	edx, DWORD PTR _xPos$82360[ebp]
	push	edx
	call	?getSelectionCoord@MapChunk@@QAEXPAM0@Z	; MapChunk::getSelectionCoord
; Line 302
	mov	eax, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	mov	ecx, DWORD PTR [eax+32]
	call	?getSelectionHeight@MapChunk@@QAEMXZ	; MapChunk::getSelectionHeight
	fstp	DWORD PTR _yPos$82361[ebp]
; Line 303
	mov	ecx, DWORD PTR ?BrushType@@3HA		; BrushType
	fld	QWORD PTR __real@3fc99999a0000000
	mov	edx, DWORD PTR ?BrushRadius@@3MA
	fld	DWORD PTR _dt$[ebp]
	push	ecx
	push	ecx
	mov	DWORD PTR [esp], edx
	call	__CIpow
	fstp	DWORD PTR tv2486[ebp]
	fld	DWORD PTR tv2486[ebp]
	mov	eax, DWORD PTR _yPos$82361[ebp]
	mov	ecx, DWORD PTR _zPos$82362[ebp]
	mov	edx, DWORD PTR _xPos$82360[ebp]
	sub	esp, 16					; 00000010H
	fstp	DWORD PTR [esp+12]
	mov	DWORD PTR [esp+8], eax
	mov	DWORD PTR [esp+4], ecx
	mov	ecx, DWORD PTR [esi+40]
	mov	DWORD PTR [esp], edx
	call	?flattenTerrain@World@@QAEXMMMMMH@Z	; World::flattenTerrain
	fldz
	mov	eax, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
$LN235@tick:
; Line 305
	cmp	BYTE PTR ?LCtrlDown@@3_NA, bl		; LCtrlDown
	jne	SHORT $LN329@tick
	cmp	BYTE PTR ?RCtrlDown@@3_NA, bl		; RCtrlDown
	je	SHORT $LN236@tick
$LN329@tick:
; Line 307
	lea	ecx, DWORD PTR _zPos$82362[ebp]
	fstp	ST(0)
	push	ecx
	mov	ecx, DWORD PTR [eax+32]
	lea	edx, DWORD PTR _xPos$82360[ebp]
	push	edx
	call	?getSelectionCoord@MapChunk@@QAEXPAM0@Z	; MapChunk::getSelectionCoord
; Line 308
	fld	DWORD PTR ?BrushRadius@@3MA		; BrushRadius
	fcomp	QWORD PTR __real@403e000000000000
	mov	DWORD PTR $T100081[ebp], 1106247680	; 41f00000H
	fnstsw	ax
	test	ah, 65					; 00000041H
	lea	eax, DWORD PTR $T100081[ebp]
	je	SHORT $LN162@tick
	mov	eax, OFFSET ?BrushRadius@@3MA		; BrushRadius
$LN162@tick:
	mov	ecx, DWORD PTR ?BrushType@@3HA		; BrushType
	fld	QWORD PTR __real@3fc99999a0000000
	mov	edx, DWORD PTR [eax]
	fld	DWORD PTR _dt$[ebp]
	push	ecx
	push	ecx
	mov	DWORD PTR [esp], edx
	call	__CIpow
	fstp	DWORD PTR tv2465[ebp]
	fld	DWORD PTR tv2465[ebp]
	mov	eax, DWORD PTR _zPos$82362[ebp]
	mov	ecx, DWORD PTR _xPos$82360[ebp]
	sub	esp, 12					; 0000000cH
	fstp	DWORD PTR [esp+8]
	mov	DWORD PTR [esp+4], eax
	mov	DWORD PTR [esp], ecx
	mov	ecx, DWORD PTR [esi+40]
	call	?blurTerrain@World@@QAEXMMMMH@Z		; World::blurTerrain
$LN374@tick:
	fldz
$LN236@tick:
; Line 313
	cmp	BYTE PTR ?TileMode@@3_NA, bl		; TileMode
	jne	$LN331@tick
; Line 315
	fld	DWORD PTR [esi+16]
	fldz
	fucompp
	fnstsw	ax
	fld	DWORD PTR _dir$82318[ebp+8]
	fld	DWORD PTR _dir$82318[ebp+4]
	fld	DWORD PTR _dir$82318[ebp]
	test	ah, 68					; 00000044H
	jnp	$LN232@tick
	fld	ST(0)
	mov	edx, DWORD PTR [esi+32]
	fld	DWORD PTR _dt$[ebp]
	mov	eax, DWORD PTR [esi+16]
	fld	ST(0)
	mov	DWORD PTR $T100379[ebp], edx
	fmulp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR $T100082[ebp]
	fld	ST(2)
	fmul	ST(0), ST(1)
	fstp	DWORD PTR $T100082[ebp+4]
	fld	ST(3)
	fmul	ST(0), ST(1)
	fstp	DWORD PTR $T100082[ebp+8]
	fld	DWORD PTR $T100082[ebp]
	fld	DWORD PTR $T100379[ebp]
	mov	DWORD PTR $T100392[ebp], eax
	fld	ST(0)
	mov	eax, DWORD PTR [esi+40]
	fmulp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR $T100083[ebp]
	fld	DWORD PTR $T100082[ebp+4]
	fmul	ST(0), ST(1)
	fstp	DWORD PTR $T100083[ebp+4]
	fmul	DWORD PTR $T100082[ebp+8]
	fstp	DWORD PTR $T100083[ebp+8]
	fld	DWORD PTR $T100083[ebp]
	fld	DWORD PTR $T100392[ebp]
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR $T100084[ebp]
	fld	DWORD PTR $T100083[ebp+4]
	fmul	ST(0), ST(1)
	fstp	DWORD PTR $T100084[ebp+4]
	fmul	DWORD PTR $T100083[ebp+8]
	fstp	DWORD PTR $T100084[ebp+8]
	fld	DWORD PTR $T100084[ebp]
	fadd	DWORD PTR [eax+20928]
	fstp	DWORD PTR [eax+20928]
	fld	DWORD PTR $T100084[ebp+4]
	fadd	DWORD PTR [eax+20932]
	fstp	DWORD PTR [eax+20932]
	fld	DWORD PTR $T100084[ebp+8]
	fadd	DWORD PTR [eax+20936]
	fstp	DWORD PTR [eax+20936]
	jmp	SHORT $LN179@tick
$LN232@tick:
	fld	DWORD PTR _dt$[ebp]
$LN179@tick:
; Line 316
	fld	DWORD PTR [esi+20]
	fldz
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	$LN239@tick
; Line 320
	fstp	ST(0)
	lea	ecx, DWORD PTR _right$82385[ebp]
	fxch	ST(1)
	fmul	ST(0), ST(3)
	fld	ST(2)
	fsubr	ST(0), ST(1)
	fstp	DWORD PTR _right$82385[ebp]
	fxch	ST(2)
	fmul	ST(0), ST(3)
	fld	ST(1)
	fmulp	ST(4), ST(0)
	fsubrp	ST(3), ST(0)
	fxch	ST(2)
	fstp	DWORD PTR _right$82385[ebp+4]
	fsubp	ST(1), ST(0)
	fstp	DWORD PTR _right$82385[ebp+8]
	call	?normalize@Vec3D@@QAEAAV1@XZ		; Vec3D::normalize
	fld	DWORD PTR _right$82385[ebp]
	mov	ecx, DWORD PTR [esi+32]
	fld	DWORD PTR _dt$[ebp]
	mov	edx, DWORD PTR [esi+20]
	fld	ST(0)
	mov	DWORD PTR $T100436[ebp], ecx
	fmulp	ST(2), ST(0)
	mov	eax, DWORD PTR [esi+40]
	fxch	ST(1)
	fstp	DWORD PTR $T100086[ebp]
	fld	DWORD PTR _right$82385[ebp+4]
	fmul	ST(0), ST(1)
	fstp	DWORD PTR $T100086[ebp+4]
	fld	DWORD PTR _right$82385[ebp+8]
	fmul	ST(0), ST(1)
	fstp	DWORD PTR $T100086[ebp+8]
	fld	DWORD PTR $T100086[ebp]
	fld	DWORD PTR $T100436[ebp]
	mov	DWORD PTR $T100449[ebp], edx
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR $T100087[ebp]
	fld	DWORD PTR $T100086[ebp+4]
	fmul	ST(0), ST(1)
	fstp	DWORD PTR $T100087[ebp+4]
	fmul	DWORD PTR $T100086[ebp+8]
	fstp	DWORD PTR $T100087[ebp+8]
	fld	DWORD PTR $T100087[ebp]
	fld	DWORD PTR $T100449[ebp]
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR $T100088[ebp]
	fld	DWORD PTR $T100087[ebp+4]
	fmul	ST(0), ST(1)
	fstp	DWORD PTR $T100088[ebp+4]
	fmul	DWORD PTR $T100087[ebp+8]
	fstp	DWORD PTR $T100088[ebp+8]
	fld	DWORD PTR $T100088[ebp]
	fadd	DWORD PTR [eax+20928]
	fstp	DWORD PTR [eax+20928]
	fld	DWORD PTR $T100088[ebp+4]
	fadd	DWORD PTR [eax+20932]
	fstp	DWORD PTR [eax+20932]
	fld	DWORD PTR $T100088[ebp+8]
	fadd	DWORD PTR [eax+20936]
	fstp	DWORD PTR [eax+20936]
	fldz
	fld	DWORD PTR _dir$82318[ebp+8]
	fld	DWORD PTR _dir$82318[ebp+4]
	fld	DWORD PTR _dir$82318[ebp]
	fxch	ST(3)
	fxch	ST(4)
	fxch	ST(2)
	fxch	ST(3)
	fxch	ST(1)
	fxch	ST(2)
$LN239@tick:
; Line 322
	fld	DWORD PTR [esi+24]
	fldz
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN342@tick
	fld	DWORD PTR [esi+32]
	mov	eax, DWORD PTR [esi+40]
	fmul	ST(0), ST(1)
	fmul	DWORD PTR [esi+24]
	fstp	DWORD PTR $T100089[ebp+4]
	fld	DWORD PTR [eax+20928]
	fadd	ST(0), ST(5)
	fstp	DWORD PTR [eax+20928]
	fld	DWORD PTR $T100089[ebp+4]
	fadd	DWORD PTR [eax+20932]
	fstp	DWORD PTR [eax+20932]
	fld	DWORD PTR [eax+20936]
	faddp	ST(5), ST(0)
	fxch	ST(4)
	fstp	DWORD PTR [eax+20936]
	jmp	SHORT $LN203@tick
$LN342@tick:
	fstp	ST(4)
$LN203@tick:
; Line 323
	mov	eax, DWORD PTR [esi+40]
	fadd	DWORD PTR [eax+20928]
	fstp	DWORD PTR $T100090[ebp]
	mov	ecx, DWORD PTR $T100090[ebp]
	fadd	DWORD PTR [eax+20932]
	fstp	DWORD PTR $T100090[ebp+4]
	mov	edx, DWORD PTR $T100090[ebp+4]
	fadd	DWORD PTR [eax+20936]
	mov	DWORD PTR [eax+20940], ecx
	mov	DWORD PTR [eax+20944], edx
	fstp	DWORD PTR $T100090[ebp+8]
	mov	ecx, DWORD PTR $T100090[ebp+8]
	mov	DWORD PTR [eax+20948], ecx
; Line 325
	jmp	$LN238@tick
$LN331@tick:
; Line 313
	fstp	ST(0)
; Line 327
	fld	DWORD PTR [esi+16]
	fldz
	fld	ST(0)
	fucomp	ST(2)
	fnstsw	ax
	fstp	ST(1)
	test	ah, 68					; 00000044H
	jnp	SHORT $LN233@tick
	fld	DWORD PTR [esi+32]
	mov	eax, DWORD PTR [esi+40]
	fld	DWORD PTR _dt$[ebp]
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fld	DWORD PTR [esi+16]
	fmulp	ST(2), ST(0)
	fld	DWORD PTR [eax+260]
	fmul	QWORD PTR __real@3ff8000000000000
	fdivp	ST(2), ST(0)
	fxch	ST(1)
	fsubr	DWORD PTR [eax+20936]
	fstp	DWORD PTR [eax+20936]
	jmp	SHORT $LN13@tick
$LN233@tick:
	fld	DWORD PTR _dt$[ebp]
$LN13@tick:
; Line 328
	fld	DWORD PTR [esi+20]
	fld	ST(2)
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN12@tick
	fld	DWORD PTR [esi+32]
	mov	eax, DWORD PTR [esi+40]
	fmul	ST(0), ST(1)
	fmul	DWORD PTR [esi+20]
	fld	DWORD PTR [eax+260]
	fmul	QWORD PTR __real@3ff8000000000000
	fdivp	ST(1), ST(0)
	fadd	DWORD PTR [eax+20928]
	fstp	DWORD PTR [eax+20928]
$LN12@tick:
; Line 329
	fld	DWORD PTR [esi+24]
	fucomp	ST(2)
	fnstsw	ax
	fstp	ST(1)
	test	ah, 68					; 00000044H
	jnp	SHORT $LN11@tick
	fmul	DWORD PTR [esi+24]
	mov	edi, DWORD PTR [esi+40]
	fmul	QWORD PTR __real@4010000000000000
	fstp	DWORD PTR tv2373[ebp]
	fld	QWORD PTR __real@4000000000000000
	fld	DWORD PTR tv2373[ebp]
	call	__CIpow
	fstp	DWORD PTR tv2366[ebp]
	fld	DWORD PTR tv2366[ebp]
	fmul	DWORD PTR [edi+260]
	fstp	DWORD PTR [edi+260]
	fld	DWORD PTR _dt$[ebp]
$LN11@tick:
; Line 330
	mov	ecx, DWORD PTR [esi+40]
	fld	DWORD PTR __real@40000000
	fcomp	DWORD PTR [ecx+260]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN10@tick
; Line 331
	mov	DWORD PTR [ecx+260], 1073741824		; 40000000H
	jmp	SHORT $LN8@tick
$LN10@tick:
; Line 332
	fld	DWORD PTR [ecx+260]
	fcomp	QWORD PTR __real@3fb999999999999a
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN8@tick
; Line 333
	mov	DWORD PTR [ecx+260], 1036831949		; 3dcccccdH
$LN8@tick:
; Line 335
	cmp	BYTE PTR ?leftMouse@@3_NA, bl		; leftMouse
	je	$LN238@tick
	cmp	DWORD PTR ?LastClicked@@3PAVframe@@A, ebx ; LastClicked
	jne	$LN238@tick
	cmp	DWORD PTR ?selectedTexture@@3PAVManagedItem@@A, ebx ; selectedTexture
	je	$LN238@tick
; Line 338
	mov	ecx, DWORD PTR [esi+40]
	fstp	ST(0)
	fild	DWORD PTR ?MouseX@@3HA			; MouseX
	fidiv	DWORD PTR ?video@@3VVideo@@A+52
	fld	QWORD PTR __real@3fe0000000000000
	fsub	ST(1), ST(0)
	fld	DWORD PTR ?video@@3VVideo@@A+68
	fld	QWORD PTR __real@4060aaaaa0000000
	fmul	ST(1), ST(0)
	fxch	ST(3)
	fmulp	ST(1), ST(0)
	fdiv	DWORD PTR [ecx+260]
	fadd	DWORD PTR [ecx+20928]
	fstp	DWORD PTR _mX$82402[ebp]
; Line 339
	fild	DWORD PTR ?MouseY@@3HA			; MouseY
	fidiv	DWORD PTR ?video@@3VVideo@@A+56
	fsubrp	ST(1), ST(0)
	fmulp	ST(1), ST(0)
	fdiv	DWORD PTR [ecx+260]
	fadd	DWORD PTR [ecx+20936]
	fstp	DWORD PTR _mY$82403[ebp]
; Line 341
	cmp	BYTE PTR ?LCtrlDown@@3_NA, bl		; LCtrlDown
	jne	$LN5@tick
	cmp	BYTE PTR ?RCtrlDown@@3_NA, bl		; RCtrlDown
	jne	$LN5@tick
; Line 345
	cmp	BYTE PTR ?textureBrush@@3Vbrush@@A+65556, bl
	je	SHORT $LN237@tick
; Line 346
	mov	ecx, OFFSET ?textureBrush@@3Vbrush@@A	; textureBrush
	call	?GenerateTexture@brush@@QAEXXZ		; brush::GenerateTexture
$LN237@tick:
; Line 348
	mov	eax, DWORD PTR ?selectedTexture@@3PAVManagedItem@@A ; selectedTexture
	add	eax, 8
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN221@tick
	mov	eax, DWORD PTR [eax]
$LN221@tick:
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T100091[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, OFFSET ?video@@3VVideo@@A+16
	call	?add@TextureManager@@UAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; TextureManager::add
	fld	DWORD PTR ?brushPressure@@3MA		; brushPressure
	fld1
	push	eax
	fsubrp	ST(1), ST(0)
	fstp	DWORD PTR tv2338[ebp]
	fld	DWORD PTR tv2338[ebp]
	fld	DWORD PTR _dt$[ebp]
	fmul	QWORD PTR __real@4024000000000000
	fstp	DWORD PTR tv2334[ebp]
	fld	DWORD PTR tv2334[ebp]
	call	__CIpow
	fstp	DWORD PTR tv2327[ebp]
	fld	DWORD PTR tv2327[ebp]
	mov	edx, DWORD PTR ?brushLevel@@3MA
	fld1
	mov	eax, DWORD PTR _mY$82403[ebp]
	mov	ecx, DWORD PTR _mX$82402[ebp]
	fsubrp	ST(1), ST(0)
	sub	esp, 8
	fstp	DWORD PTR tv2321[ebp]
	fld	DWORD PTR tv2321[ebp]
	fstp	DWORD PTR [esp+4]
	mov	DWORD PTR [esp], edx
	push	OFFSET ?textureBrush@@3Vbrush@@A	; textureBrush
	sub	esp, 8
	mov	DWORD PTR [esp+4], eax
	mov	DWORD PTR [esp], ecx
	mov	ecx, DWORD PTR [esi+40]
	call	?paintTexture@World@@QAEXMMPAVbrush@@MMH@Z ; World::paintTexture
	jmp	SHORT $LN375@tick
$LN5@tick:
; Line 342
	mov	edx, DWORD PTR _mY$82403[ebp]
	mov	eax, DWORD PTR _mX$82402[ebp]
	sub	esp, 8
	mov	DWORD PTR [esp+4], edx
	mov	DWORD PTR [esp], eax
	call	?eraseTextures@World@@QAEXMM@Z		; World::eraseTextures
; Line 353
	jmp	SHORT $LN375@tick
$LN64@tick:
; Line 355
	xor	eax, eax
	mov	BYTE PTR ?leftMouse@@3_NA, al		; leftMouse
; Line 356
	mov	BYTE PTR [esi+36], al
; Line 357
	mov	BYTE PTR ?MoveObj@@3_NA, al		; MoveObj
; Line 358
	mov	DWORD PTR [esi+16], eax
; Line 359
	mov	DWORD PTR [esi+20], eax
; Line 360
	mov	DWORD PTR [esi+24], eax
$LN375@tick:
	fld	DWORD PTR _dt$[ebp]
$LN238@tick:
; Line 363
	fld	DWORD PTR _t$[ebp]
	fsub	DWORD PTR [esi+96]
	fcomp	QWORD PTR __real@3fb999999999999a
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN1@tick
	cmp	BYTE PTR ?textureBrush@@3Vbrush@@A+65556, 0
	je	SHORT $LN1@tick
; Line 364
	mov	ecx, OFFSET ?textureBrush@@3Vbrush@@A	; textureBrush
	fstp	ST(0)
	call	?GenerateTexture@brush@@QAEXXZ		; brush::GenerateTexture
	fld	DWORD PTR _dt$[ebp]
$LN1@tick:
; Line 366
	mov	eax, DWORD PTR [esi+40]
	fild	DWORD PTR [eax+21140]
	fmul	QWORD PTR __real@4056800000000000
	fmul	ST(0), ST(1)
	fadd	DWORD PTR [eax+20888]
	fstp	DWORD PTR [eax+20888]
; Line 367
	mov	eax, DWORD PTR [esi+40]
	fmul	QWORD PTR __real@408f400000000000
	fadd	DWORD PTR [eax+20892]
	fstp	DWORD PTR [eax+20892]
; Line 368
	mov	ecx, DWORD PTR [esi+40]
	fld	DWORD PTR [ecx+20892]
	call	__ftol2_sse_excpt
; Line 370
	mov	edx, DWORD PTR _dt$[ebp]
	push	ecx
	mov	DWORD PTR ?globalTime@@3HA, eax		; globalTime
	mov	ecx, DWORD PTR [esi+40]
	mov	DWORD PTR [esp], edx
	call	?tick@World@@QAEXM@Z			; World::tick
; Line 371
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?tick@MapViewer@@UAEXMM@Z ENDP				; MapViewer::tick
_TEXT	ENDS
PUBLIC	__real@404e000000000000
PUBLIC	__real@4080aaaaa0000000
PUBLIC	__real@bff0000000000000
PUBLIC	_e$GSCopy$
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	??_R0?AVNotFound@DBCFile@@@8			; DBCFile::NotFound `RTTI Type Descriptor'
EXTRN	__imp__fclose:PROC
EXTRN	__imp__fprintf:PROC
EXTRN	?getByAreaID@AreaDB@@QAE?AVRecord@DBCFile@@I@Z:PROC ; AreaDB::getByAreaID
EXTRN	?gAreaDB@@3VAreaDB@@A:BYTE			; gAreaDB
EXTRN	?getAreaID@World@@QAEIXZ:PROC			; World::getAreaID
EXTRN	__imp__fopen:PROC
EXTRN	?drawFlags@@3_NA:BYTE				; drawFlags
EXTRN	?reload@WMOManager@@QAEXXZ:PROC			; WMOManager::reload
EXTRN	?reload@ModelManager@@QAEXXZ:PROC		; ModelManager::reload
EXTRN	?reload@TextureManager@@QAEXXZ:PROC		; TextureManager::reload
EXTRN	?saveTile@World@@QAEXHH@Z:PROC			; World::saveTile
EXTRN	?reloadTile@World@@QAEXHH@Z:PROC		; World::reloadTile
EXTRN	?DrawMapContour@@3_NA:BYTE			; DrawMapContour
EXTRN	?gPop@@3_NA:BYTE				; gPop
;	COMDAT ??_R0?AVNotFound@DBCFile@@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
_DATA	SEGMENT
??_R0?AVNotFound@DBCFile@@@8 DD FLAT:??_7type_info@@6B@	; DBCFile::NotFound `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNotFound@DBCFile@@', 00H
_DATA	ENDS
;	COMDAT __real@404e000000000000
CONST	SEGMENT
__real@404e000000000000 DQ 0404e000000000000r	; 60
CONST	ENDS
;	COMDAT __real@4080aaaaa0000000
CONST	SEGMENT
__real@4080aaaaa0000000 DQ 04080aaaaa0000000r	; 533.333
CONST	ENDS
;	COMDAT __real@bff0000000000000
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
CONST	ENDS
xdata$x	SEGMENT
__catchsym$?keypressed@MapViewer@@UAEXPAUSDL_KeyboardEvent@@@Z$5 DD 00H
	DD	FLAT:??_R0?AVNotFound@DBCFile@@@8
	DD	00H
	DD	FLAT:__catch$?keypressed@MapViewer@@UAEXPAUSDL_KeyboardEvent@@@Z$0
__tryblocktable$?keypressed@MapViewer@@UAEXPAUSDL_KeyboardEvent@@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?keypressed@MapViewer@@UAEXPAUSDL_KeyboardEvent@@@Z$5
__ehfuncinfo$?keypressed@MapViewer@@UAEXPAUSDL_KeyboardEvent@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?keypressed@MapViewer@@UAEXPAUSDL_KeyboardEvent@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?keypressed@MapViewer@@UAEXPAUSDL_KeyboardEvent@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?keypressed@MapViewer@@UAEXPAUSDL_KeyboardEvent@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?keypressed@MapViewer@@UAEXPAUSDL_KeyboardEvent@@@Z$4
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
; Function compile flags: /Ogtp
xdata$x	ENDS
_TEXT	SEGMENT
_rec$82917 = -68					; size = 8
_e$GSCopy$ = -60					; size = 4
_this$GSCopy$ = -56					; size = 4
tv1448 = -52						; size = 4
tv1438 = -52						; size = 4
tv1428 = -52						; size = 4
tv1418 = -52						; size = 4
tv1356 = -52						; size = 4
_bf$82909 = -52						; size = 4
_areaName$82914 = -48					; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_e$ = 8							; size = 4
?keypressed@MapViewer@@UAEXPAUSDL_KeyboardEvent@@@Z PROC ; MapViewer::keypressed
; _this$ = ecx
; File c:\programovani\wow editor\test\src\editor\mapviewer.cpp
; Line 899
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?keypressed@MapViewer@@UAEXPAUSDL_KeyboardEvent@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	ebx, DWORD PTR _e$[ebp]
; Line 901
	cmp	BYTE PTR [ebx], 2
	mov	esi, ecx
	mov	DWORD PTR _this$GSCopy$[ebp], esi
	mov	DWORD PTR _e$GSCopy$[ebp], ebx
	jne	$LN90@keypressed
; Line 903
	mov	ecx, DWORD PTR ?LastClicked@@3PAVframe@@A ; LastClicked
	xor	edi, edi
	cmp	ecx, edi
	je	SHORT $LN89@keypressed
	mov	eax, DWORD PTR [ebx+12]
	test	eax, 768				; 00000300H
	setne	dl
	movzx	edx, dl
	push	edx
	test	al, -64					; ffffffc0H
	setne	dl
	movzx	edx, dl
	test	al, 3
	push	edx
	setne	al
	movzx	edx, al
	movzx	eax, BYTE PTR [ebx+8]
	push	edx
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+20]
	call	eax
	test	al, al
	jne	$LN1@keypressed
$LN89@keypressed:
; Line 908
	cmp	DWORD PTR [ebx+8], 27			; 0000001bH
	jne	SHORT $LN88@keypressed
; Line 910
	mov	BYTE PTR ?gPop@@3_NA, 1			; gPop
$LN88@keypressed:
; Line 914
	cmp	DWORD PTR [ebx+8], 119			; 00000077H
; Line 916
	mov	ecx, 1065353216				; 3f800000H
	jne	SHORT $LN87@keypressed
	mov	DWORD PTR [esi+16], ecx
$LN87@keypressed:
; Line 919
	cmp	DWORD PTR [ebx+8], 115			; 00000073H
; Line 921
	mov	eax, -1082130432			; bf800000H
	jne	SHORT $LN86@keypressed
	mov	DWORD PTR [esi+16], eax
$LN86@keypressed:
; Line 924
	cmp	DWORD PTR [ebx+8], 97			; 00000061H
	jne	SHORT $LN85@keypressed
; Line 926
	mov	DWORD PTR [esi+20], eax
$LN85@keypressed:
; Line 929
	cmp	DWORD PTR [ebx+8], 100			; 00000064H
	jne	SHORT $LN84@keypressed
; Line 931
	mov	DWORD PTR [esi+20], ecx
$LN84@keypressed:
; Line 934
	cmp	DWORD PTR [ebx+8], 101			; 00000065H
	jne	SHORT $LN83@keypressed
; Line 936
	mov	DWORD PTR [esi+24], eax
$LN83@keypressed:
; Line 939
	cmp	DWORD PTR [ebx+8], 113			; 00000071H
	jne	SHORT $LN82@keypressed
; Line 941
	mov	DWORD PTR [esi+24], ecx
$LN82@keypressed:
; Line 945
	cmp	DWORD PTR [ebx+8], 105			; 00000069H
	jne	SHORT $LN81@keypressed
; Line 947
	fld	DWORD PTR [esi+28]
	fmul	QWORD PTR __real@bff0000000000000
	fstp	DWORD PTR [esi+28]
$LN81@keypressed:
; Line 951
	cmp	DWORD PTR [ebx+8], 112			; 00000070H
	jne	SHORT $LN76@keypressed
; Line 953
	cmp	BYTE PTR ?LCtrlDown@@3_NA, 0		; LCtrlDown
	jne	SHORT $LN78@keypressed
	cmp	BYTE PTR ?RCtrlDown@@3_NA, 0		; RCtrlDown
	je	SHORT $LN79@keypressed
$LN78@keypressed:
	cmp	BYTE PTR ?LShiftDown@@3_NA, 0		; LShiftDown
	jne	SHORT $LN77@keypressed
	cmp	BYTE PTR ?RShiftDown@@3_NA, 0		; RShiftDown
	jne	SHORT $LN77@keypressed
$LN79@keypressed:
; Line 956
	fld	DWORD PTR [esi+32]
	fadd	ST(0), ST(0)
	fstp	DWORD PTR [esi+32]
	jmp	SHORT $LN76@keypressed
$LN77@keypressed:
; Line 954
	mov	BYTE PTR ?Saving@@3_NA, 1		; Saving
$LN76@keypressed:
; Line 959
	cmp	DWORD PTR [ebx+8], 111			; 0000006fH
	jne	SHORT $LN75@keypressed
; Line 961
	fld	DWORD PTR [esi+32]
	fmul	QWORD PTR __real@3fe0000000000000
	fstp	DWORD PTR [esi+32]
$LN75@keypressed:
; Line 965
	cmp	DWORD PTR [ebx+8], 114			; 00000072H
	jne	SHORT $LN74@keypressed
; Line 967
	fld	DWORD PTR [esi+8]
	fadd	QWORD PTR __real@4066800000000000
	fstp	DWORD PTR [esi+8]
$LN74@keypressed:
; Line 971
	cmp	DWORD PTR [ebx+8], 110			; 0000006eH
	jne	SHORT $LN73@keypressed
; Line 973
	mov	eax, DWORD PTR [esi+40]
	inc	DWORD PTR [eax+21140]
$LN73@keypressed:
; Line 976
	cmp	DWORD PTR [ebx+8], 98			; 00000062H
	jne	SHORT $LN71@keypressed
; Line 978
	mov	eax, DWORD PTR [esi+40]
	dec	DWORD PTR [eax+21140]
; Line 979
	mov	eax, DWORD PTR [esi+40]
	cmp	DWORD PTR [eax+21140], edi
	jge	SHORT $LN71@keypressed
	mov	DWORD PTR [eax+21140], edi
$LN71@keypressed:
; Line 983
	cmp	DWORD PTR [ebx+8], 116			; 00000074H
	jne	SHORT $LN69@keypressed
; Line 985
	mov	eax, DWORD PTR ?terrainMode@@3HA	; terrainMode
	inc	eax
	mov	DWORD PTR ?terrainMode@@3HA, eax	; terrainMode
; Line 986
	cmp	eax, 1
	jle	SHORT $LN69@keypressed
; Line 987
	mov	DWORD PTR ?terrainMode@@3HA, edi	; terrainMode
$LN69@keypressed:
; Line 990
	cmp	DWORD PTR [ebx+8], 108			; 0000006cH
	jne	SHORT $LN68@keypressed
; Line 992
	mov	eax, DWORD PTR [esi+40]
	cmp	BYTE PTR [eax+20898], 0
	sete	cl
	mov	BYTE PTR [eax+20898], cl
$LN68@keypressed:
; Line 995
	cmp	DWORD PTR [ebx+8], 282			; 0000011aH
	jne	SHORT $LN67@keypressed
; Line 997
	mov	eax, DWORD PTR [esi+40]
	cmp	BYTE PTR [eax+20899], 0
	sete	dl
	mov	BYTE PTR [eax+20899], dl
$LN67@keypressed:
; Line 1000
	cmp	DWORD PTR [ebx+8], 283			; 0000011bH
	jne	SHORT $LN66@keypressed
; Line 1002
	mov	eax, DWORD PTR [esi+40]
	cmp	BYTE PTR [eax+20900], 0
	sete	cl
	mov	BYTE PTR [eax+20900], cl
$LN66@keypressed:
; Line 1005
	cmp	DWORD PTR [ebx+8], 284			; 0000011cH
	jne	SHORT $LN65@keypressed
; Line 1007
	mov	eax, DWORD PTR [esi+40]
	cmp	BYTE PTR [eax+20901], 0
	sete	dl
	mov	BYTE PTR [eax+20901], dl
$LN65@keypressed:
; Line 1010
	cmp	DWORD PTR [ebx+8], 285			; 0000011dH
	jne	SHORT $LN61@keypressed
; Line 1012
	cmp	BYTE PTR ?LShiftDown@@3_NA, 0		; LShiftDown
	jne	SHORT $LN62@keypressed
	cmp	BYTE PTR ?RShiftDown@@3_NA, 0		; RShiftDown
	jne	SHORT $LN62@keypressed
; Line 1015
	cmp	BYTE PTR [esi+38], 0
	sete	al
	mov	BYTE PTR [esi+38], al
	jmp	SHORT $LN61@keypressed
$LN62@keypressed:
; Line 1013
	cmp	BYTE PTR ?Selecting@@3_NA, 0		; Selecting
	sete	cl
	mov	BYTE PTR ?Selecting@@3_NA, cl		; Selecting
$LN61@keypressed:
; Line 1018
	cmp	DWORD PTR [ebx+8], 288			; 00000120H
	jne	SHORT $LN60@keypressed
; Line 1020
	mov	eax, DWORD PTR [esi+40]
	cmp	BYTE PTR [eax+20906], 0
	sete	dl
	mov	BYTE PTR [eax+20906], dl
$LN60@keypressed:
; Line 1023
	cmp	DWORD PTR [ebx+8], 287			; 0000011fH
	jne	SHORT $LN59@keypressed
; Line 1025
	mov	eax, DWORD PTR [esi+40]
	cmp	BYTE PTR [eax+20902], 0
	sete	cl
	mov	BYTE PTR [eax+20902], cl
$LN59@keypressed:
; Line 1028
	cmp	DWORD PTR [ebx+8], 289			; 00000121H
	jne	SHORT $LN58@keypressed
; Line 1030
	cmp	BYTE PTR ?DetailSelection@@3_NA, 0	; DetailSelection
	sete	dl
	mov	BYTE PTR ?DetailSelection@@3_NA, dl	; DetailSelection
$LN58@keypressed:
; Line 1033
	cmp	DWORD PTR [ebx+8], 290			; 00000122H
	jne	SHORT $LN57@keypressed
; Line 1035
	cmp	BYTE PTR ?DrawMapContour@@3_NA, 0	; DrawMapContour
	sete	al
	mov	BYTE PTR ?DrawMapContour@@3_NA, al	; DrawMapContour
$LN57@keypressed:
; Line 1038
	cmp	DWORD PTR [ebx+8], 104			; 00000068H
	jne	SHORT $LN56@keypressed
; Line 1040
	mov	eax, DWORD PTR [esi+40]
	cmp	BYTE PTR [eax+20904], 0
	sete	cl
	mov	BYTE PTR [eax+20904], cl
$LN56@keypressed:
; Line 1043
	cmp	DWORD PTR [ebx+8], 102			; 00000066H
	jne	SHORT $LN55@keypressed
; Line 1045
	mov	eax, DWORD PTR [esi+40]
	cmp	BYTE PTR [eax+20905], 0
	sete	dl
	mov	BYTE PTR [eax+20905], dl
$LN55@keypressed:
; Line 1048
	cmp	DWORD PTR [ebx+8], 106			; 0000006aH
	jne	SHORT $LN54@keypressed
; Line 1050
	mov	edi, DWORD PTR [esi+40]
	fld	DWORD PTR [edi+20936]
	call	__ftol2_sse_excpt
	mov	DWORD PTR tv1448[ebp], eax
	fild	DWORD PTR tv1448[ebp]
	fld	QWORD PTR __real@4080aaaaa0000000
	fdiv	ST(1), ST(0)
	fxch	ST(1)
	call	__ftol2_sse_excpt
	fld	DWORD PTR [edi+20928]
	push	eax
	call	__ftol2_sse_excpt
	mov	DWORD PTR tv1438[ebp], eax
	fidivr	DWORD PTR tv1438[ebp]
	call	__ftol2_sse_excpt
	push	eax
	mov	ecx, edi
	call	?reloadTile@World@@QAEXHH@Z		; World::reloadTile
	xor	edi, edi
$LN54@keypressed:
; Line 1053
	cmp	DWORD PTR [ebx+8], 107			; 0000006bH
	jne	SHORT $LN53@keypressed
; Line 1055
	mov	edi, DWORD PTR [esi+40]
	fld	DWORD PTR [edi+20936]
	call	__ftol2_sse_excpt
	mov	DWORD PTR tv1428[ebp], eax
	fild	DWORD PTR tv1428[ebp]
	fld	QWORD PTR __real@4080aaaaa0000000
	fdiv	ST(1), ST(0)
	fxch	ST(1)
	call	__ftol2_sse_excpt
	fld	DWORD PTR [edi+20928]
	push	eax
	call	__ftol2_sse_excpt
	mov	DWORD PTR tv1418[ebp], eax
	fidivr	DWORD PTR tv1418[ebp]
	call	__ftol2_sse_excpt
	push	eax
	mov	ecx, edi
	call	?saveTile@World@@QAEXHH@Z		; World::saveTile
	xor	edi, edi
$LN53@keypressed:
; Line 1058
	cmp	DWORD PTR [ebx+8], 291			; 00000123H
	jne	SHORT $LN52@keypressed
; Line 1060
	mov	ecx, OFFSET ?video@@3VVideo@@A+16
	call	?reload@TextureManager@@QAEXXZ		; TextureManager::reload
$LN52@keypressed:
; Line 1063
	cmp	DWORD PTR [ebx+8], 292			; 00000124H
	jne	SHORT $LN51@keypressed
; Line 1065
	mov	ecx, DWORD PTR [esi+40]
	add	ecx, 21100				; 0000526cH
	call	?reload@ModelManager@@QAEXXZ		; ModelManager::reload
$LN51@keypressed:
; Line 1068
	cmp	DWORD PTR [ebx+8], 293			; 00000125H
	jne	SHORT $LN50@keypressed
; Line 1070
	mov	ecx, DWORD PTR [esi+40]
	add	ecx, 21060				; 00005244H
	call	?reload@WMOManager@@QAEXXZ		; WMOManager::reload
$LN50@keypressed:
; Line 1073
	mov	eax, DWORD PTR [ebx+8]
	cmp	eax, 270				; 0000010eH
	je	SHORT $LN48@keypressed
	cmp	eax, 43					; 0000002bH
	jne	SHORT $LN49@keypressed
$LN48@keypressed:
; Line 1075
	mov	eax, DWORD PTR [esi+40]
	fld	DWORD PTR [eax+20868]
	fadd	QWORD PTR __real@404e000000000000
	fstp	DWORD PTR [eax+20868]
$LN49@keypressed:
; Line 1078
	mov	eax, DWORD PTR [ebx+8]
	cmp	eax, 269				; 0000010dH
	je	SHORT $LN46@keypressed
	cmp	eax, 45					; 0000002dH
	jne	SHORT $LN47@keypressed
$LN46@keypressed:
; Line 1080
	mov	eax, DWORD PTR [esi+40]
	fld	DWORD PTR [eax+20868]
	fsub	QWORD PTR __real@404e000000000000
	fstp	DWORD PTR [eax+20868]
$LN47@keypressed:
; Line 1084
	cmp	DWORD PTR [ebx+8], 109			; 0000006dH
	jne	SHORT $LN45@keypressed
; Line 1086
	cmp	BYTE PTR [esi+37], 0
	sete	al
	mov	BYTE PTR [esi+37], al
$LN45@keypressed:
; Line 1089
	cmp	DWORD PTR [ebx+8], 118			; 00000076H
	jne	SHORT $LN44@keypressed
; Line 1091
	cmp	BYTE PTR ?TestSelection@@3_NA, 0	; TestSelection
	sete	cl
	mov	BYTE PTR ?TestSelection@@3_NA, cl	; TestSelection
$LN44@keypressed:
; Line 1095
	cmp	DWORD PTR [ebx+8], 121			; 00000079H
	jne	SHORT $LN42@keypressed
; Line 1097
	mov	eax, DWORD PTR ?BrushType@@3HA		; BrushType
	inc	eax
	mov	DWORD PTR ?BrushType@@3HA, eax		; BrushType
; Line 1098
	cmp	eax, 2
	jle	SHORT $LN42@keypressed
; Line 1099
	mov	DWORD PTR ?BrushType@@3HA, edi		; BrushType
$LN42@keypressed:
; Line 1102
	cmp	DWORD PTR [ebx+8], 103			; 00000067H
	jne	SHORT $LN41@keypressed
; Line 1103
	cmp	BYTE PTR ?drawFlags@@3_NA, 0		; drawFlags
	sete	dl
	mov	BYTE PTR ?drawFlags@@3_NA, dl		; drawFlags
$LN41@keypressed:
; Line 1105
	cmp	DWORD PTR [ebx+8], 117			; 00000075H
	jne	SHORT $LN40@keypressed
; Line 1107
	cmp	BYTE PTR ?TileMode@@3_NA, 0		; TileMode
; Line 1108
	mov	DWORD PTR ?Selection@@3PAVnameEntry@@A, edi ; Selection
	sete	al
	mov	BYTE PTR ?TileMode@@3_NA, al		; TileMode
; Line 1109
	mov	DWORD PTR ?CurSelection@@3PAVnameEntry@@A, edi ; CurSelection
$LN40@keypressed:
; Line 1112
	cmp	DWORD PTR [ebx+8], 48			; 00000030H
	jne	SHORT $LN39@keypressed
; Line 1113
	mov	ecx, DWORD PTR [esi+40]
	mov	DWORD PTR [ecx+252], -1024458752	; c2f00000H
$LN39@keypressed:
; Line 1145
	cmp	DWORD PTR [ebx+8], 286			; 0000011eH
	jne	$LN180@keypressed
; Line 1147
	push	OFFSET $SG82910
	push	OFFSET $SG82911
	call	DWORD PTR __imp__fopen
; Line 1149
	mov	ecx, DWORD PTR [esi+40]
	mov	ebx, eax
	add	esp, 8
	mov	DWORD PTR _bf$82909[ebp], ebx
	call	?getAreaID@World@@QAEIXZ		; World::getAreaID
; Line 1151
	push	0
	push	OFFSET $SG82915
	lea	ecx, DWORD PTR _areaName$82914[ebp]
	mov	edi, eax
	mov	DWORD PTR _areaName$82914[ebp+20], 15	; 0000000fH
	mov	DWORD PTR _areaName$82914[ebp+16], 0
	mov	BYTE PTR _areaName$82914[ebp], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 1154
	push	edi
	lea	edx, DWORD PTR _rec$82917[ebp]
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	push	edx
	mov	ecx, OFFSET ?gAreaDB@@3VAreaDB@@A	; gAreaDB
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	call	?getByAreaID@AreaDB@@QAE?AVRecord@DBCFile@@I@Z ; AreaDB::getByAreaID
; Line 1155
	mov	eax, DWORD PTR _rec$82917[ebp]
	mov	ecx, DWORD PTR _rec$82917[ebp+4]
	mov	eax, DWORD PTR [eax+44]
	mov	ecx, DWORD PTR [ecx+48]
	add	ecx, eax
	mov	eax, ecx
	lea	edi, DWORD PTR [eax+1]
$LL194@keypressed:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL194@keypressed
	sub	eax, edi
	push	eax
	push	ecx
	lea	ecx, DWORD PTR _areaName$82914[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN101@keypressed
__catch$?keypressed@MapViewer@@UAEXPAUSDL_KeyboardEvent@@@Z$0:
; Line 1159
	mov	edx, DWORD PTR _this$GSCopy$[ebp]
	mov	eax, DWORD PTR [edx+40]
	cmp	DWORD PTR [eax+20820], 0
	jne	SHORT $LN142@keypressed
	push	16					; 00000010H
	push	OFFSET $SG82921
	lea	ecx, DWORD PTR _areaName$82914[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN142@keypressed:
; Line 1160
	mov	eax, $LN201@keypressed
	ret	0
$LN201@keypressed:
	mov	ebx, DWORD PTR _bf$82909[ebp]
	mov	esi, DWORD PTR _this$GSCopy$[ebp]
$LN101@keypressed:
; Line 1174
	mov	edx, DWORD PTR _areaName$82914[ebp]
	mov	edi, 16					; 00000010H
	cmp	DWORD PTR _areaName$82914[ebp+20], edi
	jae	SHORT $LN163@keypressed
	lea	edx, DWORD PTR _areaName$82914[ebp]
$LN163@keypressed:
	mov	eax, DWORD PTR [esi+40]
	cmp	DWORD PTR [eax+296], edi
	lea	ecx, DWORD PTR [eax+276]
	jb	SHORT $LN168@keypressed
	mov	ecx, DWORD PTR [ecx]
$LN168@keypressed:
	fld	DWORD PTR [esi+12]
	push	edx
	sub	esp, 40					; 00000028H
	fstp	QWORD PTR [esp+32]
	fld	DWORD PTR [esi+8]
	fstp	QWORD PTR [esp+24]
	fld	DWORD PTR [eax+20936]
	fstp	QWORD PTR [esp+16]
	fld	DWORD PTR [eax+20932]
	fstp	QWORD PTR [esp+8]
	fld	DWORD PTR [eax+20928]
	fstp	QWORD PTR [esp]
	push	ecx
	push	OFFSET $SG82927
	push	ebx
	call	DWORD PTR __imp__fprintf
; Line 1175
	push	ebx
	call	DWORD PTR __imp__fclose
	add	esp, 60					; 0000003cH
; Line 1176
	cmp	DWORD PTR _areaName$82914[ebp+20], edi
	jb	SHORT $LN180@keypressed
	mov	ecx, DWORD PTR _areaName$82914[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN180@keypressed:
; Line 1178
	mov	eax, DWORD PTR _e$GSCopy$[ebp]
	cmp	DWORD PTR [eax+8], 304			; 00000130H
	jne	SHORT $LN33@keypressed
; Line 1179
	mov	BYTE PTR ?LShiftDown@@3_NA, 1		; LShiftDown
$LN33@keypressed:
; Line 1180
	cmp	DWORD PTR [eax+8], 303			; 0000012fH
	jne	SHORT $LN32@keypressed
; Line 1181
	mov	BYTE PTR ?RShiftDown@@3_NA, 1		; RShiftDown
$LN32@keypressed:
; Line 1182
	cmp	DWORD PTR [eax+8], 308			; 00000134H
	jne	SHORT $LN31@keypressed
; Line 1183
	mov	BYTE PTR ?LAltDown@@3_NA, 1		; LAltDown
$LN31@keypressed:
; Line 1184
	cmp	DWORD PTR [eax+8], 307			; 00000133H
	jne	SHORT $LN30@keypressed
; Line 1185
	mov	BYTE PTR ?RAltDown@@3_NA, 1		; RAltDown
$LN30@keypressed:
; Line 1186
	cmp	DWORD PTR [eax+8], 306			; 00000132H
	jne	SHORT $LN29@keypressed
; Line 1187
	mov	BYTE PTR ?LCtrlDown@@3_NA, 1		; LCtrlDown
$LN29@keypressed:
; Line 1188
	cmp	DWORD PTR [eax+8], 305			; 00000131H
	jne	$LN1@keypressed
; Line 1189
	mov	BYTE PTR ?RCtrlDown@@3_NA, 1		; RCtrlDown
; Line 1192
	jmp	$LN1@keypressed
$LN90@keypressed:
; Line 1196
	cmp	DWORD PTR [ebx+8], 119			; 00000077H
	jne	SHORT $LN202@keypressed
; Line 1198
	fldz
	fcomp	DWORD PTR [esi+16]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN202@keypressed
	xor	ecx, ecx
	mov	DWORD PTR [esi+16], ecx
	jmp	SHORT $LN25@keypressed
$LN202@keypressed:
	xor	ecx, ecx
$LN25@keypressed:
; Line 1200
	cmp	DWORD PTR [ebx+8], 115			; 00000073H
	jne	SHORT $LN23@keypressed
; Line 1202
	fldz
	fcomp	DWORD PTR [esi+16]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN23@keypressed
	mov	DWORD PTR [esi+16], ecx
$LN23@keypressed:
; Line 1204
	cmp	DWORD PTR [ebx+8], 100			; 00000064H
	jne	SHORT $LN21@keypressed
; Line 1206
	fldz
	fcomp	DWORD PTR [esi+20]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN21@keypressed
	mov	DWORD PTR [esi+20], ecx
$LN21@keypressed:
; Line 1208
	cmp	DWORD PTR [ebx+8], 97			; 00000061H
	jne	SHORT $LN19@keypressed
; Line 1210
	fldz
	fcomp	DWORD PTR [esi+20]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN19@keypressed
	mov	DWORD PTR [esi+20], ecx
$LN19@keypressed:
; Line 1212
	cmp	DWORD PTR [ebx+8], 113			; 00000071H
	jne	SHORT $LN17@keypressed
; Line 1214
	fldz
	fcomp	DWORD PTR [esi+24]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN17@keypressed
	mov	DWORD PTR [esi+24], ecx
$LN17@keypressed:
; Line 1216
	cmp	DWORD PTR [ebx+8], 101			; 00000065H
	jne	SHORT $LN15@keypressed
; Line 1218
	fldz
	fcomp	DWORD PTR [esi+24]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN15@keypressed
	mov	DWORD PTR [esi+24], ecx
$LN15@keypressed:
; Line 1220
	cmp	DWORD PTR [ebx+8], 264			; 00000108H
; Line 1222
	mov	ecx, 1065353216				; 3f800000H
	jne	SHORT $LN14@keypressed
	mov	DWORD PTR ?ObjMove@@3VVec3D@@A+8, ecx
$LN14@keypressed:
; Line 1224
	cmp	DWORD PTR [ebx+8], 258			; 00000102H
; Line 1226
	mov	eax, -1082130432			; bf800000H
	jne	SHORT $LN13@keypressed
	mov	DWORD PTR ?ObjMove@@3VVec3D@@A+8, eax
$LN13@keypressed:
; Line 1228
	cmp	DWORD PTR [ebx+8], 262			; 00000106H
	jne	SHORT $LN12@keypressed
; Line 1230
	mov	DWORD PTR ?ObjMove@@3VVec3D@@A, ecx
$LN12@keypressed:
; Line 1232
	cmp	DWORD PTR [ebx+8], 260			; 00000104H
	jne	SHORT $LN11@keypressed
; Line 1234
	mov	DWORD PTR ?ObjMove@@3VVec3D@@A, eax
$LN11@keypressed:
; Line 1236
	cmp	DWORD PTR [ebx+8], 265			; 00000109H
	jne	SHORT $LN10@keypressed
; Line 1238
	mov	DWORD PTR ?ObjMove@@3VVec3D@@A+4, ecx
$LN10@keypressed:
; Line 1240
	cmp	DWORD PTR [ebx+8], 259			; 00000103H
	jne	SHORT $LN9@keypressed
; Line 1242
	mov	DWORD PTR ?ObjMove@@3VVec3D@@A+4, eax
$LN9@keypressed:
; Line 1244
	cmp	DWORD PTR [ebx+8], 263			; 00000107H
	jne	SHORT $LN8@keypressed
; Line 1246
	mov	DWORD PTR ?ObjRot@@3VVec3D@@A+4, ecx
$LN8@keypressed:
; Line 1248
	cmp	DWORD PTR [ebx+8], 257			; 00000101H
	jne	SHORT $LN7@keypressed
; Line 1250
	mov	DWORD PTR ?ObjRot@@3VVec3D@@A+4, eax
$LN7@keypressed:
; Line 1252
	cmp	DWORD PTR [ebx+8], 304			; 00000130H
	jne	SHORT $LN6@keypressed
; Line 1253
	mov	BYTE PTR ?LShiftDown@@3_NA, 0		; LShiftDown
$LN6@keypressed:
; Line 1254
	cmp	DWORD PTR [ebx+8], 303			; 0000012fH
	jne	SHORT $LN5@keypressed
; Line 1255
	mov	BYTE PTR ?RShiftDown@@3_NA, 0		; RShiftDown
$LN5@keypressed:
; Line 1256
	cmp	DWORD PTR [ebx+8], 306			; 00000132H
	jne	SHORT $LN4@keypressed
; Line 1257
	mov	BYTE PTR ?LCtrlDown@@3_NA, 0		; LCtrlDown
$LN4@keypressed:
; Line 1258
	cmp	DWORD PTR [ebx+8], 305			; 00000131H
	jne	SHORT $LN3@keypressed
; Line 1259
	mov	BYTE PTR ?RCtrlDown@@3_NA, 0		; RCtrlDown
$LN3@keypressed:
; Line 1260
	cmp	DWORD PTR [ebx+8], 308			; 00000134H
	jne	SHORT $LN2@keypressed
; Line 1261
	mov	BYTE PTR ?LAltDown@@3_NA, 0		; LAltDown
$LN2@keypressed:
; Line 1262
	cmp	DWORD PTR [ebx+8], 307			; 00000133H
	jne	SHORT $LN1@keypressed
; Line 1263
	mov	BYTE PTR ?RAltDown@@3_NA, 0		; RAltDown
$LN1@keypressed:
; Line 1265
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?keypressed@MapViewer@@UAEXPAUSDL_KeyboardEvent@@@Z$4:
	lea	ecx, DWORD PTR _areaName$82914[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?keypressed@MapViewer@@UAEXPAUSDL_KeyboardEvent@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?keypressed@MapViewer@@UAEXPAUSDL_KeyboardEvent@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?keypressed@MapViewer@@UAEXPAUSDL_KeyboardEvent@@@Z ENDP ; MapViewer::keypressed
PUBLIC	??A?$map@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@@std@@QAEAAPAVManagedItem@@ABI@Z ; std::map<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> > >::operator[]
; Function compile flags: /Ogtp
;	COMDAT ??A?$map@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@@std@@QAEAAPAVManagedItem@@ABI@Z
_TEXT	SEGMENT
$T101035 = -8						; size = 8
$T101038 = 8						; size = 4
__Keyval$ = 8						; size = 4
??A?$map@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@@std@@QAEAAPAVManagedItem@@ABI@Z PROC ; std::map<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> > >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
; Line 210
	push	ebp
	mov	ebp, esp
; Line 211
	mov	edx, DWORD PTR __Keyval$[ebp]
	sub	esp, 8
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [ecx+4]
	cmp	BYTE PTR [eax+21], 0
	push	edi
	mov	edi, ecx
	jne	SHORT $LN9@operator@4
	mov	ecx, DWORD PTR [edx]
	npad	3
$LL10@operator@4:
	cmp	DWORD PTR [eax+12], ecx
	jae	SHORT $LN8@operator@4
	mov	eax, DWORD PTR [eax+8]
	jmp	SHORT $LN7@operator@4
$LN8@operator@4:
	mov	edi, eax
	mov	eax, DWORD PTR [eax]
$LN7@operator@4:
	cmp	BYTE PTR [eax+21], 0
	je	SHORT $LL10@operator@4
$LN9@operator@4:
; Line 213
	cmp	edi, DWORD PTR [esi+4]
	je	SHORT $LN1@operator@4
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR [edi+12]
	jae	SHORT $LN80@operator@4
$LN1@operator@4:
; Line 215
	mov	ecx, DWORD PTR [edx]
	lea	edx, DWORD PTR $T101035[ebp]
	mov	DWORD PTR $T101035[ebp], ecx
	push	edx
	mov	ecx, esi
	mov	DWORD PTR $T101035[ebp+4], 0
	call	??$_Buynode@U?$pair@$$CBIPAVManagedItem@@@std@@@?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBIPAVManagedItem@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Buynode<std::pair<unsigned int const ,ManagedItem *> >
	push	eax
	push	edi
	lea	eax, DWORD PTR $T101038[ebp]
	push	eax
	mov	ecx, esi
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::_Insert
	mov	eax, DWORD PTR $T101038[ebp]
	pop	edi
; Line 216
	add	eax, 16					; 00000010H
	pop	esi
; Line 217
	mov	esp, ebp
	pop	ebp
	ret	4
$LN80@operator@4:
; Line 216
	lea	eax, DWORD PTR [edi+16]
	pop	edi
	pop	esi
; Line 217
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$map@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@@std@@QAEAAPAVManagedItem@@ABI@Z ENDP ; std::map<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> > >::operator[]
_TEXT	ENDS
PUBLIC	__real@40d0aaaaa0000000
PUBLIC	__real@4070aaaaa0000000
PUBLIC	__real@4090000000000000
PUBLIC	__real@4040aaaaa0000000
PUBLIC	__real@4069000000000000
PUBLIC	__real@4028000000000000
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
EXTRN	?setChunkWindow@@YAXPAVMapChunk@@@Z:PROC	; setChunkWindow
EXTRN	?getGroundEffectDoodad@@YAPBDIH@Z:PROC		; getGroundEffectDoodad
EXTRN	?draw@World@@QAEXXZ:PROC			; World::draw
EXTRN	?set3D@Video@@QAEXXZ:PROC			; Video::set3D
EXTRN	?textwidth@Font@@QAEHPBD@Z:PROC			; Font::textwidth
EXTRN	?shprint@Font@@QAAXHHPBDZZ:PROC			; Font::shprint
EXTRN	?f16@@3PAVFont@@A:DWORD				; f16
EXTRN	?gFPS@@3MA:DWORD				; gFPS
EXTRN	__imp__glBlendFunc@8:PROC
EXTRN	__imp__glPopMatrix@0:PROC
EXTRN	__imp__glVertex3f@12:PROC
EXTRN	?glActiveTextureARB@@3P6GXI@ZA:DWORD		; glActiveTextureARB
EXTRN	__imp__glTranslatef@12:PROC
EXTRN	__imp__glScalef@12:PROC
EXTRN	__imp__glPushMatrix@0:PROC
EXTRN	?drawTileMode@World@@QAEXM@Z:PROC		; World::drawTileMode
EXTRN	?ResetUniques@@YAXXZ:PROC			; ResetUniques
EXTRN	__imp__glVertex2f@8:PROC
EXTRN	__imp__glDisable@4:PROC
EXTRN	__imp__glEnd@0:PROC
EXTRN	__imp__glVertex2i@8:PROC
EXTRN	__imp__glTexCoord2f@8:PROC
EXTRN	__imp__glBegin@4:PROC
EXTRN	__imp__glBindTexture@8:PROC
EXTRN	__imp__glEnable@4:PROC
EXTRN	__imp__glColor4f@16:PROC
EXTRN	?set2D@Video@@QAEXXZ:PROC			; Video::set2D
EXTRN	?clearScreen@Video@@QAEXXZ:PROC			; Video::clearScreen
EXTRN	?saveMap@World@@QAEXXZ:PROC			; World::saveMap
EXTRN	?setTileMode@Video@@QAEXXZ:PROC			; Video::setTileMode
;	COMDAT __real@40d0aaaaa0000000
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
CONST	SEGMENT
__real@40d0aaaaa0000000 DQ 040d0aaaaa0000000r	; 17066.7
CONST	ENDS
;	COMDAT __real@4070aaaaa0000000
CONST	SEGMENT
__real@4070aaaaa0000000 DQ 04070aaaaa0000000r	; 266.667
CONST	ENDS
;	COMDAT __real@4090000000000000
CONST	SEGMENT
__real@4090000000000000 DQ 04090000000000000r	; 1024
CONST	ENDS
;	COMDAT __real@4040aaaaa0000000
CONST	SEGMENT
__real@4040aaaaa0000000 DQ 04040aaaaa0000000r	; 33.3333
CONST	ENDS
;	COMDAT __real@4069000000000000
CONST	SEGMENT
__real@4069000000000000 DQ 04069000000000000r	; 200
CONST	ENDS
;	COMDAT __real@4028000000000000
CONST	SEGMENT
__real@4028000000000000 DQ 04028000000000000r	; 12
CONST	ENDS
xdata$x	SEGMENT
__catchsym$?display@MapViewer@@UAEXMM@Z$15 DD 00H
	DD	FLAT:??_R0?AVNotFound@DBCFile@@@8
	DD	00H
	DD	FLAT:__catch$?display@MapViewer@@UAEXMM@Z$6
__catchsym$?display@MapViewer@@UAEXMM@Z$14 DD 00H
	DD	FLAT:??_R0?AVNotFound@DBCFile@@@8
	DD	00H
	DD	FLAT:__catch$?display@MapViewer@@UAEXMM@Z$4
__catchsym$?display@MapViewer@@UAEXMM@Z$13 DD 00H
	DD	FLAT:??_R0?AVNotFound@DBCFile@@@8
	DD	00H
	DD	FLAT:__catch$?display@MapViewer@@UAEXMM@Z$2
__catchsym$?display@MapViewer@@UAEXMM@Z$12 DD 00H
	DD	FLAT:??_R0?AVNotFound@DBCFile@@@8
	DD	00H
	DD	FLAT:__catch$?display@MapViewer@@UAEXMM@Z$0
__ehfuncinfo$?display@MapViewer@@UAEXMM@Z DD 019930522H
	DD	0cH
	DD	FLAT:__unwindtable$?display@MapViewer@@UAEXMM@Z
	DD	04H
	DD	FLAT:__tryblocktable$?display@MapViewer@@UAEXMM@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?display@MapViewer@@UAEXMM@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?display@MapViewer@@UAEXMM@Z$12
	DD	03H
	DD	04H
	DD	05H
	DD	01H
	DD	FLAT:__catchsym$?display@MapViewer@@UAEXMM@Z$13
	DD	06H
	DD	07H
	DD	08H
	DD	01H
	DD	FLAT:__catchsym$?display@MapViewer@@UAEXMM@Z$14
	DD	09H
	DD	0aH
	DD	0bH
	DD	01H
	DD	FLAT:__catchsym$?display@MapViewer@@UAEXMM@Z$15
__unwindtable$?display@MapViewer@@UAEXMM@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?display@MapViewer@@UAEXMM@Z$8
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	03H
	DD	FLAT:__unwindfunclet$?display@MapViewer@@UAEXMM@Z$9
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	06H
	DD	FLAT:__unwindfunclet$?display@MapViewer@@UAEXMM@Z$10
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	09H
	DD	FLAT:__unwindfunclet$?display@MapViewer@@UAEXMM@Z$11
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Ogtp
xdata$x	ENDS
_TEXT	SEGMENT
$T101268 = -84						; size = 4
tv3107 = -80						; size = 4
_rec$82486 = -76					; size = 8
_rec$82454 = -76					; size = 8
tv3114 = -72						; size = 4
_mY$82439 = -72						; size = 4
tv3112 = -68						; size = 4
_mX$82438 = -68						; size = 4
_fx$82434 = -68						; size = 4
tv3012 = -64						; size = 4
_this$GSCopy$ = -64					; size = 4
_q$82790 = -60						; size = 4
_q$82568 = -60						; size = 4
_tRadius$82440 = -60					; size = 4
_fz$82435 = -60						; size = 4
_rec$82493 = -56					; size = 8
_rec$82462 = -56					; size = 8
tv4107 = -52						; size = 4
tv4103 = -52						; size = 4
tv4097 = -52						; size = 4
tv4094 = -52						; size = 4
tv4084 = -52						; size = 4
tv4077 = -52						; size = 4
tv4066 = -52						; size = 4
tv4063 = -52						; size = 4
tv3110 = -52						; size = 4
_SelTex$82582 = -52					; size = 4
_regionID$82484 = -52					; size = 4
_regionID$82452 = -52					; size = 4
_regionName$82495 = -48					; size = 28
_areaName$82488 = -48					; size = 28
_regionName$82464 = -48					; size = 28
_areaName$82456 = -48					; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_t$ = 8							; size = 4
_dt$ = 12						; size = 4
?display@MapViewer@@UAEXMM@Z PROC			; MapViewer::display
; _this$ = ecx
; File c:\programovani\wow editor\test\src\editor\mapviewer.cpp
; Line 394
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?display@MapViewer@@UAEXMM@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 395
	cmp	BYTE PTR ?Saving@@3_NA, 0		; Saving
	mov	esi, ecx
	mov	DWORD PTR _this$GSCopy$[ebp], esi
	je	SHORT $LN89@display
; Line 397
	mov	ecx, OFFSET ?video@@3VVideo@@A		; video
	call	?setTileMode@Video@@QAEXXZ		; Video::setTileMode
; Line 398
	mov	ecx, DWORD PTR [esi+40]
	call	?saveMap@World@@QAEXXZ			; World::saveMap
; Line 399
	mov	BYTE PTR ?Saving@@3_NA, 0		; Saving
$LN89@display:
; Line 402
	cmp	BYTE PTR [esi+37], 0
	je	$LN88@display
	mov	eax, DWORD PTR [esi+40]
	cmp	DWORD PTR [eax+21244], 0
	je	$LN88@display
; Line 406
	mov	ecx, OFFSET ?video@@3VVideo@@A		; video
	call	?clearScreen@Video@@QAEXXZ		; Video::clearScreen
; Line 407
	mov	ecx, OFFSET ?video@@3VVideo@@A		; video
	call	?set2D@Video@@QAEXXZ			; Video::set2D
; Line 412
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [esp+12], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+8], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+4], 1065353216		; 3f800000H
	mov	DWORD PTR [esp], 1065353216		; 3f800000H
	call	DWORD PTR __imp__glColor4f@16
; Line 413
	push	3553					; 00000de1H
	call	DWORD PTR __imp__glEnable@4
; Line 414
	mov	ecx, DWORD PTR [esi+40]
	mov	edx, DWORD PTR [ecx+21244]
	push	edx
	push	3553					; 00000de1H
	call	DWORD PTR __imp__glBindTexture@8
; Line 415
	push	7
	call	DWORD PTR __imp__glBegin@4
; Line 416
	mov	edi, DWORD PTR __imp__glTexCoord2f@8
	sub	esp, 8
	mov	DWORD PTR [esp+4], 0
	mov	DWORD PTR [esp], 0
	call	edi
; Line 417
	mov	ebx, DWORD PTR __imp__glVertex2i@8
	push	0
	push	200					; 000000c8H
	call	ebx
; Line 418
	sub	esp, 8
	mov	DWORD PTR [esp+4], 0
	mov	DWORD PTR [esp], 1065353216		; 3f800000H
	call	edi
; Line 419
	push	0
	push	968					; 000003c8H
	call	ebx
; Line 420
	sub	esp, 8
	mov	DWORD PTR [esp+4], 1065353216		; 3f800000H
	mov	DWORD PTR [esp], 1065353216		; 3f800000H
	call	edi
; Line 421
	push	768					; 00000300H
	push	968					; 000003c8H
	call	ebx
; Line 422
	sub	esp, 8
	mov	DWORD PTR [esp+4], 1065353216		; 3f800000H
	mov	DWORD PTR [esp], 0
	call	edi
; Line 423
	push	768					; 00000300H
	push	200					; 000000c8H
	call	ebx
; Line 424
	mov	edi, DWORD PTR __imp__glEnd@0
	call	edi
; Line 426
	push	3553					; 00000de1H
	call	DWORD PTR __imp__glDisable@4
; Line 427
	push	1
	call	DWORD PTR __imp__glBegin@4
; Line 429
	mov	eax, DWORD PTR [esi+40]
	fld	DWORD PTR [eax+20928]
; Line 431
	mov	ebx, DWORD PTR __imp__glVertex2f@8
	fld	QWORD PTR __real@4080aaaaa0000000
	sub	esp, 8
	fdiv	ST(1), ST(0)
	fld	QWORD PTR __real@4028000000000000
	fmul	ST(2), ST(0)
	fxch	ST(2)
	fadd	QWORD PTR __real@4069000000000000
	fstp	DWORD PTR _fx$82434[ebp]
	mov	ecx, DWORD PTR _fx$82434[ebp]
	fdivr	DWORD PTR [eax+20936]
	fmulp	ST(1), ST(0)
	fadd	QWORD PTR __real@0000000000000000
	fstp	DWORD PTR _fz$82435[ebp]
	mov	eax, DWORD PTR _fz$82435[ebp]
	mov	DWORD PTR [esp+4], eax
	mov	DWORD PTR [esp], ecx
	call	ebx
; Line 432
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [esp+12], 0
	mov	DWORD PTR [esp+8], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+4], 1065353216		; 3f800000H
	mov	DWORD PTR [esp], 1065353216		; 3f800000H
	call	DWORD PTR __imp__glColor4f@16
; Line 433
	fld	DWORD PTR [esi+8]
	fdiv	QWORD PTR __real@4066800000000000
	fmul	QWORD PTR __real@400921fb60000000
	fstp	DWORD PTR tv3012[ebp]
	fld	DWORD PTR tv3012[ebp]
	call	__CIsin
	fstp	DWORD PTR tv4107[ebp]
	fld	DWORD PTR tv4107[ebp]
	push	ecx
	fmul	QWORD PTR __real@4024000000000000
	fadd	DWORD PTR _fz$82435[ebp]
	fstp	DWORD PTR tv4103[ebp]
	fld	DWORD PTR tv4103[ebp]
	fstp	DWORD PTR [esp]
	fld	DWORD PTR tv3012[ebp]
	call	__CIcos
	fstp	DWORD PTR tv4097[ebp]
	fld	DWORD PTR tv4097[ebp]
	push	ecx
	fmul	QWORD PTR __real@4024000000000000
	fadd	DWORD PTR _fx$82434[ebp]
	fstp	DWORD PTR tv4094[ebp]
	fld	DWORD PTR tv4094[ebp]
	fstp	DWORD PTR [esp]
	call	ebx
; Line 434
	call	edi
	jmp	$LN1@display
$LN88@display:
; Line 436
	cmp	BYTE PTR ?TileMode@@3_NA, 0		; TileMode
	je	$LN86@display
; Line 438
	call	?ResetUniques@@YAXXZ			; ResetUniques
; Line 439
	mov	ecx, OFFSET ?video@@3VVideo@@A		; video
	call	?setTileMode@Video@@QAEXXZ		; Video::setTileMode
; Line 440
	mov	edx, DWORD PTR [esi+8]
	push	ecx
	mov	ecx, DWORD PTR [esi+40]
	mov	DWORD PTR [esp], edx
	call	?drawTileMode@World@@QAEXM@Z		; World::drawTileMode
; Line 450
	fild	DWORD PTR ?MouseX@@3HA			; MouseX
	mov	eax, DWORD PTR [esi+40]
	fidiv	DWORD PTR ?video@@3VVideo@@A+52
	fld	QWORD PTR __real@3fe0000000000000
	fsub	ST(1), ST(0)
	fld	DWORD PTR ?video@@3VVideo@@A+68
	fld	QWORD PTR __real@4060aaaaa0000000
	fmul	ST(1), ST(0)
	fxch	ST(3)
	fmulp	ST(1), ST(0)
	fdiv	DWORD PTR [eax+260]
	fadd	DWORD PTR [eax+20928]
	fstp	DWORD PTR tv4084[ebp]
	fld	DWORD PTR tv4084[ebp]
	fld	QWORD PTR __real@4040aaaaa0000000
	fdiv	ST(1), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR _mX$82438[ebp]
; Line 451
	fild	DWORD PTR ?MouseY@@3HA			; MouseY
	fidiv	DWORD PTR ?video@@3VVideo@@A+56
	fsubrp	ST(2), ST(0)
	fxch	ST(1)
	fmulp	ST(2), ST(0)
	fld	DWORD PTR [eax+260]
	fdivp	ST(2), ST(0)
	fld	DWORD PTR [eax+20936]
	faddp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR tv4077[ebp]
	fdivr	DWORD PTR tv4077[ebp]
	fstp	DWORD PTR _mY$82439[ebp]
; Line 453
	call	DWORD PTR __imp__glPushMatrix@0
; Line 454
	mov	eax, DWORD PTR [esi+40]
	mov	ecx, DWORD PTR [eax+260]
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [esp+8], 1065353216		; 3f800000H
	mov	edx, ecx
	mov	DWORD PTR [esp+4], ecx
	mov	DWORD PTR [esp], edx
	call	DWORD PTR __imp__glScalef@12
; Line 455
	mov	esi, DWORD PTR [esi+40]
	fld	DWORD PTR [esi+20936]
	sub	esp, 12					; 0000000cH
	fchs
	mov	DWORD PTR [esp+8], 0
	fld	QWORD PTR __real@4040aaaaa0000000
	fdiv	ST(1), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR tv4066[ebp]
	fld	DWORD PTR tv4066[ebp]
	fstp	DWORD PTR [esp+4]
	fld	DWORD PTR [esi+20928]
	fchs
	fdivrp	ST(1), ST(0)
	fstp	DWORD PTR tv4063[ebp]
	fld	DWORD PTR tv4063[ebp]
	fstp	DWORD PTR [esp]
	call	DWORD PTR __imp__glTranslatef@12
; Line 457
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [esp+12], 1056964608		; 3f000000H
	mov	DWORD PTR [esp+8], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+4], 1065353216		; 3f800000H
	mov	DWORD PTR [esp], 1065353216		; 3f800000H
	call	DWORD PTR __imp__glColor4f@16
; Line 458
	push	33985					; 000084c1H
	call	DWORD PTR ?glActiveTextureARB@@3P6GXI@ZA ; glActiveTextureARB
; Line 459
	mov	esi, DWORD PTR __imp__glDisable@4
	push	3553					; 00000de1H
	call	esi
; Line 460
	push	33984					; 000084c0H
	call	DWORD PTR ?glActiveTextureARB@@3P6GXI@ZA ; glActiveTextureARB
; Line 461
	mov	edi, DWORD PTR __imp__glEnable@4
	push	3553					; 00000de1H
	call	edi
; Line 463
	mov	eax, DWORD PTR ?textureBrush@@3Vbrush@@A+16
	push	eax
	push	3553					; 00000de1H
	call	DWORD PTR __imp__glBindTexture@8
; Line 464
	fld	DWORD PTR ?textureBrush@@3Vbrush@@A+12
	fdiv	QWORD PTR __real@4040aaaaa0000000
; Line 465
	push	7
	fstp	DWORD PTR _tRadius$82440[ebp]
	call	DWORD PTR __imp__glBegin@4
; Line 466
	mov	ebx, DWORD PTR __imp__glTexCoord2f@8
	sub	esp, 8
	mov	DWORD PTR [esp+4], 0
	mov	DWORD PTR [esp], 0
	call	ebx
; Line 467
	fld	DWORD PTR _tRadius$82440[ebp]
	fld	ST(0)
	sub	esp, 12					; 0000000cH
	fadd	DWORD PTR _mY$82439[ebp]
	mov	DWORD PTR [esp+8], 0
	fstp	DWORD PTR tv3107[ebp]
	mov	ecx, DWORD PTR tv3107[ebp]
	fsubr	DWORD PTR _mX$82438[ebp]
	mov	DWORD PTR [esp+4], ecx
	fstp	DWORD PTR tv3110[ebp]
	mov	edx, DWORD PTR tv3110[ebp]
	mov	DWORD PTR [esp], edx
	call	DWORD PTR __imp__glVertex3f@12
; Line 468
	sub	esp, 8
	mov	DWORD PTR [esp+4], 0
	mov	DWORD PTR [esp], 1065353216		; 3f800000H
	call	ebx
; Line 469
	fld	DWORD PTR _tRadius$82440[ebp]
	fadd	DWORD PTR _mX$82438[ebp]
	mov	eax, DWORD PTR tv3107[ebp]
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [esp+8], 0
	fstp	DWORD PTR tv3112[ebp]
	mov	DWORD PTR [esp+4], eax
	mov	ecx, DWORD PTR tv3112[ebp]
	mov	DWORD PTR [esp], ecx
	call	DWORD PTR __imp__glVertex3f@12
; Line 470
	sub	esp, 8
	mov	DWORD PTR [esp+4], 1065353216		; 3f800000H
	mov	DWORD PTR [esp], 1065353216		; 3f800000H
	call	ebx
; Line 471
	fld	DWORD PTR _mY$82439[ebp]
	fsub	DWORD PTR _tRadius$82440[ebp]
	mov	eax, DWORD PTR tv3112[ebp]
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [esp+8], 0
	fstp	DWORD PTR tv3114[ebp]
	mov	edx, DWORD PTR tv3114[ebp]
	mov	DWORD PTR [esp+4], edx
	mov	DWORD PTR [esp], eax
	call	DWORD PTR __imp__glVertex3f@12
; Line 472
	sub	esp, 8
	mov	DWORD PTR [esp+4], 1065353216		; 3f800000H
	mov	DWORD PTR [esp], 0
	call	ebx
; Line 473
	mov	ecx, DWORD PTR tv3114[ebp]
	mov	edx, DWORD PTR tv3110[ebp]
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [esp+8], 0
	mov	DWORD PTR [esp+4], ecx
	mov	DWORD PTR [esp], edx
	call	DWORD PTR __imp__glVertex3f@12
; Line 474
	call	DWORD PTR __imp__glEnd@0
; Line 476
	call	DWORD PTR __imp__glPopMatrix@0
; Line 478
	mov	ecx, OFFSET ?video@@3VVideo@@A		; video
	call	?set2D@Video@@QAEXXZ			; Video::set2D
; Line 480
	push	3042					; 00000be2H
	call	edi
; Line 481
	push	771					; 00000303H
	push	770					; 00000302H
	call	DWORD PTR __imp__glBlendFunc@8
; Line 483
	push	33985					; 000084c1H
	call	DWORD PTR ?glActiveTextureARB@@3P6GXI@ZA ; glActiveTextureARB
; Line 484
	push	3553					; 00000de1H
	call	esi
; Line 485
	push	33984					; 000084c0H
	call	DWORD PTR ?glActiveTextureARB@@3P6GXI@ZA ; glActiveTextureARB
; Line 486
	push	3553					; 00000de1H
	call	edi
; Line 487
	push	2929					; 00000b71H
	call	esi
; Line 488
	push	2884					; 00000b44H
	call	esi
; Line 489
	push	2896					; 00000b50H
	call	esi
; Line 490
	mov	ebx, DWORD PTR __imp__glColor4f@16
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [esp+12], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+8], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+4], 1065353216		; 3f800000H
	mov	DWORD PTR [esp], 1065353216		; 3f800000H
	call	ebx
; Line 492
	push	33984					; 000084c0H
	call	DWORD PTR ?glActiveTextureARB@@3P6GXI@ZA ; glActiveTextureARB
; Line 493
	push	3553					; 00000de1H
	call	esi
; Line 494
	mov	esi, DWORD PTR _this$GSCopy$[ebp]
	mov	eax, DWORD PTR [esi+44]
	mov	edx, DWORD PTR [eax]
	lea	ecx, DWORD PTR [esi+44]
	call	edx
; Line 495
	push	33984					; 000084c0H
	call	DWORD PTR ?glActiveTextureARB@@3P6GXI@ZA ; glActiveTextureARB
; Line 496
	push	3553					; 00000de1H
	call	edi
; Line 498
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [esp+12], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+8], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+4], 1065353216		; 3f800000H
	mov	DWORD PTR [esp], 1065353216		; 3f800000H
	call	ebx
; Line 500
	cmp	BYTE PTR [esi+38], 0
	je	$LN111@display
; Line 502
	fld	DWORD PTR ?gFPS@@3MA			; gFPS
	mov	eax, DWORD PTR ?f16@@3PAVFont@@A	; f16
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG82450
	xor	esi, esi
	push	esi
	push	5
	push	eax
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 508
	mov	ecx, DWORD PTR _this$GSCopy$[ebp]
	mov	ecx, DWORD PTR [ecx+40]
	add	esp, 24					; 00000018H
	call	?getAreaID@World@@QAEIXZ		; World::getAreaID
; Line 513
	push	eax
	lea	edx, DWORD PTR _rec$82454[ebp]
	push	edx
	mov	ecx, OFFSET ?gAreaDB@@3VAreaDB@@A	; gAreaDB
	mov	DWORD PTR _regionID$82452[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+12], esi
	call	?getByAreaID@AreaDB@@QAE?AVRecord@DBCFile@@I@Z ; AreaDB::getByAreaID
; Line 514
	mov	eax, DWORD PTR _rec$82454[ebp]
	mov	eax, DWORD PTR [eax+44]
	mov	ecx, DWORD PTR _rec$82454[ebp+4]
	mov	ecx, DWORD PTR [ecx+48]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR _areaName$82456[ebp+16], esi
	mov	DWORD PTR _areaName$82456[ebp+20], 15	; 0000000fH
	mov	BYTE PTR _areaName$82456[ebp], 0
	lea	esi, DWORD PTR [eax+1]
$LL454@display:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL454@display
	sub	eax, esi
	push	eax
	push	ecx
	lea	ecx, DWORD PTR _areaName$82456[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 515
	mov	edx, DWORD PTR _rec$82454[ebp]
	mov	esi, DWORD PTR [edx+8]
; Line 516
	mov	eax, DWORD PTR _areaName$82456[ebp]
	mov	edi, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	mov	DWORD PTR _regionID$82452[ebp], esi
	cmp	DWORD PTR _areaName$82456[ebp+20], edi
	jae	SHORT $LN165@display
	lea	eax, DWORD PTR _areaName$82456[ebp]
$LN165@display:
	push	eax
	mov	eax, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	OFFSET $SG82457
	push	20					; 00000014H
	push	5
	push	eax
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	add	esp, 20					; 00000014H
; Line 517
	cmp	DWORD PTR _areaName$82456[ebp+20], edi
	jb	SHORT $LN176@display
	mov	ecx, DWORD PTR _areaName$82456[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN176@display:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN109@display
__catch$?display@MapViewer@@UAEXMM@Z$0:
; Line 521
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN457@display
	ret	0
$LN457@display:
	mov	esi, DWORD PTR _regionID$82452[ebp]
$LN109@display:
; Line 522
	test	esi, esi
	je	SHORT $LN111@display
; Line 527
	push	esi
	lea	edx, DWORD PTR _rec$82462[ebp]
	push	edx
	mov	ecx, OFFSET ?gAreaDB@@3VAreaDB@@A	; gAreaDB
	mov	DWORD PTR __$EHRec$[ebp+12], 3
	call	?getByAreaID@AreaDB@@QAE?AVRecord@DBCFile@@I@Z ; AreaDB::getByAreaID
; Line 528
	mov	eax, DWORD PTR _rec$82462[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR _rec$82462[ebp+4]
	mov	eax, DWORD PTR [edx+48]
	add	eax, ecx
	push	eax
	lea	ecx, DWORD PTR _regionName$82464[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 529
	mov	eax, DWORD PTR _regionName$82464[ebp]
	mov	esi, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	cmp	DWORD PTR _regionName$82464[ebp+20], esi
	jae	SHORT $LN197@display
	lea	eax, DWORD PTR _regionName$82464[ebp]
$LN197@display:
	push	eax
	mov	eax, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	OFFSET $SG82465
	push	40					; 00000028H
	push	5
	push	eax
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	add	esp, 20					; 00000014H
; Line 530
	cmp	DWORD PTR _regionName$82464[ebp+20], esi
	jb	SHORT $LN208@display
	mov	ecx, DWORD PTR _regionName$82464[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN208@display:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN111@display:
; Line 537
	mov	edx, DWORD PTR _this$GSCopy$[ebp]
	mov	eax, DWORD PTR [edx+40]
	cmp	BYTE PTR [eax+20903], 0
	je	$LN1@display
; Line 542
	cmp	BYTE PTR [eax+21056], 0
	mov	eax, OFFSET $SG82471
	jne	SHORT $LN93@display
	mov	eax, OFFSET $SG82469
$LN93@display:
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	eax
	push	0
	push	OFFSET $SG82469
	call	?textwidth@Font@@QAEHPBD@Z		; Font::textwidth
	cdq
	sub	eax, edx
	mov	ecx, eax
	mov	eax, DWORD PTR ?video@@3VVideo@@A+52
	cdq
	sub	eax, edx
	mov	edx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	sar	ecx, 1
	sar	eax, 1
	sub	eax, ecx
	push	eax
	push	edx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	add	esp, 16					; 00000010H
; Line 545
	jmp	$LN1@display
__catch$?display@MapViewer@@UAEXMM@Z$2:
; Line 533
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN111@display
	ret	0
$LN86@display:
; Line 547
	call	?ResetUniques@@YAXXZ			; ResetUniques
; Line 549
	mov	ecx, OFFSET ?video@@3VVideo@@A		; video
	call	?set3D@Video@@QAEXXZ			; Video::set3D
; Line 550
	mov	edi, DWORD PTR __imp__glGetError@0
	call	edi
; Line 551
	test	eax, eax
	je	SHORT $LN79@display
; Line 552
	push	eax
	push	OFFSET $SG82475
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 8
$LN79@display:
; Line 555
	cmp	BYTE PTR ?Selecting@@3_NA, 0		; Selecting
	je	SHORT $LN78@display
; Line 556
	mov	ecx, esi
	call	?doSelection@MapViewer@@AAEXXZ		; MapViewer::doSelection
$LN78@display:
; Line 557
	call	edi
; Line 558
	test	eax, eax
	je	SHORT $LN77@display
; Line 559
	push	eax
	push	OFFSET $SG82480
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 8
$LN77@display:
; Line 561
	mov	ecx, OFFSET ?video@@3VVideo@@A		; video
	call	?set3D@Video@@QAEXXZ			; Video::set3D
; Line 563
	push	33985					; 000084c1H
	call	DWORD PTR ?glActiveTextureARB@@3P6GXI@ZA ; glActiveTextureARB
; Line 564
	mov	edi, DWORD PTR __imp__glDisable@4
	push	3553					; 00000de1H
	call	edi
; Line 565
	push	33984					; 000084c0H
	call	DWORD PTR ?glActiveTextureARB@@3P6GXI@ZA ; glActiveTextureARB
; Line 566
	mov	ebx, DWORD PTR __imp__glEnable@4
	push	3553					; 00000de1H
	call	ebx
; Line 567
	mov	ecx, DWORD PTR [esi+40]
	call	?draw@World@@QAEXXZ			; World::draw
; Line 569
	call	?ResetUniques@@YAXXZ			; ResetUniques
; Line 570
	mov	ecx, OFFSET ?video@@3VVideo@@A		; video
	call	?set3D@Video@@QAEXXZ			; Video::set3D
; Line 572
	cmp	BYTE PTR [esi+38], 0
	je	$LN4@display
; Line 574
	mov	ecx, OFFSET ?video@@3VVideo@@A		; video
	call	?set2D@Video@@QAEXXZ			; Video::set2D
; Line 575
	push	3042					; 00000be2H
	call	ebx
; Line 576
	push	771					; 00000303H
	push	770					; 00000302H
	call	DWORD PTR __imp__glBlendFunc@8
; Line 578
	push	33985					; 000084c1H
	call	DWORD PTR ?glActiveTextureARB@@3P6GXI@ZA ; glActiveTextureARB
; Line 579
	push	3553					; 00000de1H
	call	edi
; Line 580
	push	33984					; 000084c0H
	call	DWORD PTR ?glActiveTextureARB@@3P6GXI@ZA ; glActiveTextureARB
; Line 581
	push	3553					; 00000de1H
	call	ebx
; Line 582
	push	2929					; 00000b71H
	call	edi
; Line 583
	push	2884					; 00000b44H
	call	edi
; Line 584
	push	2896					; 00000b50H
	call	edi
; Line 585
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [esp+12], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+8], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+4], 1065353216		; 3f800000H
	mov	DWORD PTR [esp], 1065353216		; 3f800000H
	call	DWORD PTR __imp__glColor4f@16
; Line 587
	fld	DWORD PTR ?gFPS@@3MA			; gFPS
	mov	eax, DWORD PTR ?f16@@3PAVFont@@A	; f16
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG82482
	push	0
	push	5
	push	eax
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 593
	mov	ecx, DWORD PTR [esi+40]
	add	esp, 24					; 00000018H
	call	?getAreaID@World@@QAEIXZ		; World::getAreaID
; Line 598
	push	eax
	lea	ecx, DWORD PTR _rec$82486[ebp]
	push	ecx
	mov	ecx, OFFSET ?gAreaDB@@3VAreaDB@@A	; gAreaDB
	mov	DWORD PTR _regionID$82484[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+12], 6
	call	?getByAreaID@AreaDB@@QAE?AVRecord@DBCFile@@I@Z ; AreaDB::getByAreaID
; Line 599
	mov	ecx, DWORD PTR _rec$82486[ebp+4]
	mov	ecx, DWORD PTR [ecx+48]
	mov	edx, DWORD PTR _rec$82486[ebp]
	add	ecx, DWORD PTR [edx+44]
	mov	DWORD PTR _areaName$82488[ebp+20], 15	; 0000000fH
	mov	eax, ecx
	mov	DWORD PTR _areaName$82488[ebp+16], 0
	mov	BYTE PTR _areaName$82488[ebp], 0
	lea	esi, DWORD PTR [eax+1]
$LL455@display:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL455@display
	sub	eax, esi
	push	eax
	push	ecx
	lea	ecx, DWORD PTR _areaName$82488[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 600
	mov	edx, DWORD PTR _rec$82486[ebp]
	mov	esi, DWORD PTR [edx+8]
; Line 601
	mov	eax, DWORD PTR _areaName$82488[ebp]
	mov	edi, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	mov	DWORD PTR _regionID$82484[ebp], esi
	cmp	DWORD PTR _areaName$82488[ebp+20], edi
	jae	SHORT $LN261@display
	lea	eax, DWORD PTR _areaName$82488[ebp]
$LN261@display:
	push	eax
	mov	eax, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	OFFSET $SG82489
	push	20					; 00000014H
	push	5
	push	eax
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	add	esp, 20					; 00000014H
; Line 602
	cmp	DWORD PTR _areaName$82488[ebp+20], edi
	jb	SHORT $LN272@display
	mov	ecx, DWORD PTR _areaName$82488[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN272@display:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	ebx, edi
	jmp	SHORT $LN113@display
__catch$?display@MapViewer@@UAEXMM@Z$4:
; Line 607
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN459@display
	ret	0
$LN459@display:
	mov	esi, DWORD PTR _regionID$82484[ebp]
	mov	ebx, 16					; 00000010H
$LN113@display:
; Line 608
	test	esi, esi
	je	$LN115@display
; Line 612
	push	esi
	lea	edx, DWORD PTR _rec$82493[ebp]
	push	edx
	mov	ecx, OFFSET ?gAreaDB@@3VAreaDB@@A	; gAreaDB
	mov	DWORD PTR __$EHRec$[ebp+12], 9
	call	?getByAreaID@AreaDB@@QAE?AVRecord@DBCFile@@I@Z ; AreaDB::getByAreaID
; Line 613
	mov	eax, DWORD PTR _rec$82493[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR _rec$82493[ebp+4]
	mov	eax, DWORD PTR [edx+48]
	add	eax, ecx
	push	eax
	lea	ecx, DWORD PTR _regionName$82495[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 614
	mov	eax, DWORD PTR _regionName$82495[ebp]
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	cmp	DWORD PTR _regionName$82495[ebp+20], ebx
	jae	SHORT $LN293@display
	lea	eax, DWORD PTR _regionName$82495[ebp]
$LN293@display:
	push	eax
	mov	eax, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	OFFSET $SG82496
	push	40					; 00000028H
	push	5
	push	eax
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	add	esp, 20					; 00000014H
; Line 615
	cmp	DWORD PTR _regionName$82495[ebp+20], ebx
	jb	SHORT $LN304@display
	mov	ecx, DWORD PTR _regionName$82495[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN304@display:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN115@display
__catch$?display@MapViewer@@UAEXMM@Z$6:
; Line 619
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN460@display
	ret	0
$LN460@display:
	mov	ebx, 16					; 00000010H
$LN115@display:
; Line 624
	mov	edx, DWORD PTR _this$GSCopy$[ebp]
	mov	eax, DWORD PTR [edx+40]
	fld	DWORD PTR [eax+20888]
	call	__ftol2_sse_excpt
	cdq
	mov	ecx, 2880				; 00000b40H
	idiv	ecx
; Line 628
	mov	eax, -2004318071			; 88888889H
	mov	esi, edx
	imul	esi
	add	edx, esi
	sar	edx, 6
	mov	ecx, edx
	shr	ecx, 31					; 0000001fH
	add	ecx, edx
	mov	edx, ecx
	shl	edx, 4
	sub	edx, ecx
	add	edx, edx
	add	edx, edx
	add	edx, edx
	mov	eax, esi
	sub	eax, edx
	cdq
	sub	eax, edx
	sar	eax, 1
; Line 631
	push	eax
	mov	eax, DWORD PTR ?video@@3VVideo@@A+52
	push	ecx
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	OFFSET $SG82502
	push	60					; 0000003cH
	add	eax, -50				; ffffffceH
	push	eax
	push	ecx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 632
	mov	eax, DWORD PTR ?BrushType@@3HA		; BrushType
	add	esp, 24					; 00000018H
	test	eax, eax
	jne	SHORT $LN72@display
; Line 633
	mov	edx, DWORD PTR ?video@@3VVideo@@A+52
	mov	eax, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	OFFSET $SG82504
	push	20					; 00000014H
	add	edx, -250				; ffffff06H
	push	edx
	push	eax
	jmp	SHORT $LN490@display
$LN72@display:
; Line 634
	cmp	eax, 1
	jne	SHORT $LN70@display
; Line 635
	mov	ecx, DWORD PTR ?video@@3VVideo@@A+52
	mov	edx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	OFFSET $SG82507
	push	20					; 00000014H
	add	ecx, -250				; ffffff06H
	push	ecx
	push	edx
	jmp	SHORT $LN490@display
$LN70@display:
; Line 636
	cmp	eax, 2
	jne	SHORT $LN68@display
; Line 637
	mov	eax, DWORD PTR ?video@@3VVideo@@A+52
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	OFFSET $SG82510
	push	20					; 00000014H
	add	eax, -250				; ffffff06H
	push	eax
	push	ecx
$LN490@display:
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	add	esp, 16					; 00000010H
$LN68@display:
; Line 639
	cmp	DWORD PTR ?terrainMode@@3HA, 0		; terrainMode
	jne	SHORT $LN67@display
; Line 641
	mov	edx, DWORD PTR ?video@@3VVideo@@A+52
	mov	eax, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	OFFSET $SG82512
	push	0
	add	edx, -250				; ffffff06H
	push	edx
	push	eax
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 642
	fld	DWORD PTR ?BrushRadius@@3MA		; BrushRadius
	add	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG82513
; Line 644
	jmp	SHORT $LN491@display
$LN67@display:
; Line 646
	mov	eax, DWORD PTR ?video@@3VVideo@@A+52
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	OFFSET $SG82515
	push	0
	add	eax, -250				; ffffff06H
	push	eax
	push	ecx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 647
	fld	DWORD PTR ?BrushRadius@@3MA		; BrushRadius
	fcom	QWORD PTR __real@403e000000000000
	add	esp, 16					; 00000010H
; Line 648
	sub	esp, 8
	fnstsw	ax
	fstp	QWORD PTR [esp]
	test	ah, 65					; 00000041H
	jne	SHORT $LN65@display
	mov	edx, DWORD PTR ?video@@3VVideo@@A+52
	mov	eax, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	OFFSET $SG82517
	push	40					; 00000028H
	add	edx, -250				; ffffff06H
	push	edx
	push	eax
; Line 649
	jmp	SHORT $LN492@display
$LN65@display:
; Line 650
	push	OFFSET $SG82519
$LN491@display:
	mov	ecx, DWORD PTR ?video@@3VVideo@@A+52
	mov	edx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	40					; 00000028H
	add	ecx, -250				; ffffff06H
	push	ecx
	push	edx
$LN492@display:
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 654
	mov	ecx, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	add	esp, 24					; 00000018H
	test	ecx, ecx
	je	$LN41@display
; Line 656
	cmp	BYTE PTR ?DetailSelection@@3_NA, 0	; DetailSelection
	je	$LN41@display
; Line 658
	mov	eax, DWORD PTR [ecx+28]
	cmp	eax, 1
	jne	$LN61@display
; Line 660
	cmp	DWORD PTR [ecx+20], ebx
	jb	SHORT $LN322@display
	mov	ecx, DWORD PTR [ecx]
$LN322@display:
	mov	eax, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	ecx
	push	OFFSET $SG82523
	push	63					; 0000003fH
	push	5
	push	eax
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 661
	mov	ecx, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [edx+40]
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	eax
	push	OFFSET $SG82524
	push	83					; 00000053H
	push	10					; 0000000aH
	push	ecx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 662
	mov	edx, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	eax, DWORD PTR [edx+32]
	fld	DWORD PTR [eax+24]
	add	esp, 16					; 00000010H
	fstp	QWORD PTR [esp+16]
	fld	DWORD PTR [eax+20]
	fstp	QWORD PTR [esp+8]
	fld	DWORD PTR [eax+16]
	mov	eax, DWORD PTR ?f16@@3PAVFont@@A	; f16
	fstp	QWORD PTR [esp]
	push	OFFSET $SG82525
	push	103					; 00000067H
	push	10					; 0000000aH
	push	eax
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 663
	mov	ecx, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	eax, DWORD PTR [ecx+32]
	fld	DWORD PTR [eax+36]
	mov	edx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	add	esp, 16					; 00000010H
	fstp	QWORD PTR [esp+16]
	fld	DWORD PTR [eax+32]
	fstp	QWORD PTR [esp+8]
	fld	DWORD PTR [eax+28]
	fstp	QWORD PTR [esp]
	push	OFFSET $SG82526
	push	123					; 0000007bH
	push	10					; 0000000aH
	push	edx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 664
	mov	eax, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	ecx, DWORD PTR [eax+32]
	fld	DWORD PTR [ecx+56]
	fmul	QWORD PTR __real@4090000000000000
	call	__ftol2_sse_excpt
	mov	edx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	eax
	push	OFFSET $SG82528
	push	143					; 0000008fH
	push	10					; 0000000aH
	push	edx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 665
	mov	eax, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+584]
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	eax
	push	OFFSET $SG82529
	push	163					; 000000a3H
	push	10					; 0000000aH
	push	ecx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 666
	mov	ecx, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [edx]
	xor	esi, esi
	add	esp, 80					; 00000050H
	cmp	DWORD PTR [eax+584], esi
	jbe	$LN41@display
; Line 660
	mov	edi, 183				; 000000b7H
	npad	1
$LL60@display:
; Line 666
	mov	eax, DWORD PTR [eax+488]
	lea	ecx, DWORD PTR [eax+esi*4]
; Line 667
	push	ecx
	mov	ecx, OFFSET ?video@@3VVideo@@A+36
	call	??A?$map@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@@std@@QAEAAPAVManagedItem@@ABI@Z ; std::map<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> > >::operator[]
	mov	eax, DWORD PTR [eax]
	add	eax, 8
	cmp	DWORD PTR [eax+20], ebx
	jb	SHORT $LN328@display
	mov	eax, DWORD PTR [eax]
$LN328@display:
	mov	edx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	eax
	push	esi
	push	OFFSET $SG82534
	push	edi
	push	15					; 0000000fH
	push	edx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	mov	ecx, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	eax, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [eax]
	inc	esi
	add	esp, 24					; 00000018H
	add	edi, 20					; 00000014H
	cmp	esi, DWORD PTR [eax+584]
	jb	SHORT $LL60@display
; Line 669
	jmp	$LN41@display
$LN61@display:
	cmp	eax, 2
	jne	$LN56@display
; Line 671
	cmp	DWORD PTR [ecx+20], ebx
	jb	SHORT $LN336@display
	mov	ecx, DWORD PTR [ecx]
$LN336@display:
	push	ecx
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	OFFSET $SG82537
	push	63					; 0000003fH
	push	5
	push	ecx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 672
	mov	edx, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR [eax+52]
	mov	edx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	ecx
	push	OFFSET $SG82538
	push	83					; 00000053H
	push	10					; 0000000aH
	push	edx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 673
	mov	eax, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	eax, DWORD PTR [eax+32]
	fld	DWORD PTR [eax+12]
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	add	esp, 16					; 00000010H
	fstp	QWORD PTR [esp+16]
	fld	DWORD PTR [eax+8]
	fstp	QWORD PTR [esp+8]
	fld	DWORD PTR [eax+4]
	fstp	QWORD PTR [esp]
	push	OFFSET $SG82539
	push	103					; 00000067H
	push	10					; 0000000aH
	push	ecx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 674
	mov	edx, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	eax, DWORD PTR [edx+32]
	fld	DWORD PTR [eax+48]
	add	esp, 16					; 00000010H
	fstp	QWORD PTR [esp+16]
	fld	DWORD PTR [eax+44]
	fstp	QWORD PTR [esp+8]
	fld	DWORD PTR [eax+40]
	mov	eax, DWORD PTR ?f16@@3PAVFont@@A	; f16
	fstp	QWORD PTR [esp]
	push	OFFSET $SG82540
	push	123					; 0000007bH
	push	10					; 0000000aH
	push	eax
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 675
	mov	ecx, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	eax, DWORD PTR [ecx+32]
	fld	DWORD PTR [eax+24]
	mov	edx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	add	esp, 16					; 00000010H
	fstp	QWORD PTR [esp+16]
	fld	DWORD PTR [eax+20]
	fstp	QWORD PTR [esp+8]
	fld	DWORD PTR [eax+16]
	fstp	QWORD PTR [esp]
	push	OFFSET $SG82541
	push	143					; 0000008fH
	push	10					; 0000000aH
	push	edx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 676
	mov	eax, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	eax, DWORD PTR [eax+32]
	fld	DWORD PTR [eax+36]
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	add	esp, 16					; 00000010H
	fstp	QWORD PTR [esp+16]
	fld	DWORD PTR [eax+32]
	fstp	QWORD PTR [esp+8]
	fld	DWORD PTR [eax+28]
	fstp	QWORD PTR [esp]
	push	OFFSET $SG82542
	push	163					; 000000a3H
	push	10					; 0000000aH
	push	ecx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 677
	mov	edx, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+76]
	mov	eax, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	edx
	push	OFFSET $SG82543
	push	183					; 000000b7H
	push	10					; 0000000aH
	push	eax
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 678
	mov	ecx, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [edx]
	xor	esi, esi
	add	esp, 60					; 0000003cH
	cmp	DWORD PTR [eax+76], esi
	jle	$LN41@display
; Line 671
	xor	ebx, ebx
	mov	edi, -297				; fffffed7H
$LN55@display:
; Line 681
	mov	eax, DWORD PTR [eax+140]
	add	eax, ebx
	cmp	esi, 25					; 00000019H
	jge	SHORT $LN52@display
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN344@display
	mov	eax, DWORD PTR [eax]
$LN344@display:
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	eax
	push	esi
	push	OFFSET $SG82549
	lea	eax, DWORD PTR [edi+500]
	push	eax
	push	15					; 0000000fH
	push	ecx
; Line 682
	jmp	SHORT $LN493@display
$LN52@display:
; Line 683
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN352@display
	mov	eax, DWORD PTR [eax]
$LN352@display:
	push	eax
	mov	eax, DWORD PTR ?video@@3VVideo@@A+52
	add	eax, -15				; fffffff1H
	push	esi
	cdq
	push	OFFSET $SG82551
	sub	eax, edx
	mov	edx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	edi
	sar	eax, 1
	push	eax
	push	edx
$LN493@display:
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	mov	ecx, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	eax, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [eax]
	inc	esi
	add	esp, 24					; 00000018H
	add	ebx, 28					; 0000001cH
	add	edi, 20					; 00000014H
	cmp	esi, DWORD PTR [eax+76]
	jl	SHORT $LN55@display
; Line 686
	jmp	$LN494@display
$LN56@display:
	cmp	eax, 3
	jne	$LN41@display
; Line 689
	mov	ecx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [ecx+68]
	mov	edx, DWORD PTR [eax+2248]
	mov	eax, DWORD PTR [eax+2244]
	push	edx
	mov	edx, DWORD PTR [ecx+8]
	push	eax
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	edx
	push	eax
	push	OFFSET $SG82555
	push	63					; 0000003fH
	push	5
	push	ecx
	xor	esi, esi
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 690
	mov	edx, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR [eax+228]
	mov	edx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	ecx
	push	OFFSET $SG82556
	push	83					; 00000053H
	push	10					; 0000000aH
	push	edx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 691
	mov	eax, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	ecx, DWORD PTR [eax+32]
	add	esp, 52					; 00000034H
	test	BYTE PTR [ecx+228], 1
	je	SHORT $LN48@display
; Line 693
	mov	edx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	OFFSET $SG82558
	push	103					; 00000067H
	push	15					; 0000000fH
	push	edx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	add	esp, 16					; 00000010H
; Line 694
	mov	esi, 20					; 00000014H
$LN48@display:
; Line 696
	mov	eax, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	ecx, DWORD PTR [eax+32]
	test	BYTE PTR [ecx+228], 2
	je	SHORT $LN47@display
; Line 698
	mov	eax, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	OFFSET $SG82560
	lea	edx, DWORD PTR [esi+103]
	push	edx
	push	15					; 0000000fH
	push	eax
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	add	esp, 16					; 00000010H
; Line 699
	add	esi, 20					; 00000014H
$LN47@display:
; Line 701
	mov	ecx, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	edx, DWORD PTR [ecx+32]
	test	BYTE PTR [edx+228], 4
	je	SHORT $LN46@display
; Line 703
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	OFFSET $SG82562
	lea	eax, DWORD PTR [esi+103]
	push	eax
	push	15					; 0000000fH
	push	ecx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	add	esp, 16					; 00000010H
; Line 704
	add	esi, 20					; 00000014H
$LN46@display:
; Line 706
	mov	edx, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	eax, DWORD PTR [edx+32]
	test	BYTE PTR [eax+228], 8
	je	SHORT $LN45@display
; Line 708
	mov	edx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	OFFSET $SG82564
	lea	ecx, DWORD PTR [esi+103]
	push	ecx
	push	15					; 0000000fH
	push	edx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	add	esp, 16					; 00000010H
; Line 709
	add	esi, 20					; 00000014H
$LN45@display:
; Line 711
	mov	eax, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	ecx, DWORD PTR [eax+32]
	test	BYTE PTR [ecx+228], 16			; 00000010H
	je	SHORT $LN44@display
; Line 713
	mov	eax, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	OFFSET $SG82566
	lea	edx, DWORD PTR [esi+103]
	push	edx
	push	15					; 0000000fH
	push	eax
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	add	esp, 16					; 00000010H
; Line 714
	add	esi, 20					; 00000014H
$LN44@display:
; Line 716
	mov	ecx, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [edx+204]
	mov	edx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	eax
	push	OFFSET $SG82567
	lea	ecx, DWORD PTR [esi+103]
	push	ecx
	push	10					; 0000000aH
	push	edx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 718
	mov	ecx, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	eax, DWORD PTR [ecx+32]
	add	esp, 20					; 00000014H
	add	esi, 20					; 00000014H
	cmp	DWORD PTR [eax+204], 0
	mov	DWORD PTR _q$82568[ebp], 0
	jle	$LN41@display
; Line 716
	mov	edi, 300				; 0000012cH
	npad	6
$LL43@display:
; Line 721
	lea	eax, DWORD PTR [eax+edi-32]
	push	eax
	mov	ecx, OFFSET ?video@@3VVideo@@A+36
	call	??A?$map@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@@std@@QAEAAPAVManagedItem@@ABI@Z ; std::map<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> > >::operator[]
	mov	eax, DWORD PTR [eax]
	add	eax, 8
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN358@display
	mov	eax, DWORD PTR [eax]
$LN358@display:
	mov	ecx, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	ecx, DWORD PTR [ecx+32]
	mov	edx, DWORD PTR [ecx+edi]
	mov	ecx, DWORD PTR [ecx+edi-16]
	push	edx
	mov	edx, DWORD PTR _q$82568[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	eax
	push	edx
	push	OFFSET $SG82573
	lea	eax, DWORD PTR [esi+103]
	push	eax
	push	20					; 00000014H
	push	ecx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 723
	mov	edx, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	mov	eax, DWORD PTR [edx+32]
	add	esp, 32					; 00000020H
	add	esi, 20					; 00000014H
	cmp	DWORD PTR [edi+eax], 0
	je	SHORT $LN37@display
; Line 724
	xor	ebx, ebx
$LL39@display:
; Line 726
	mov	ecx, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [edx+edi]
	push	ebx
	push	eax
	call	?getGroundEffectDoodad@@YAPBDIH@Z	; getGroundEffectDoodad
	add	esp, 8
; Line 727
	test	eax, eax
	je	SHORT $LN38@display
; Line 729
	mov	edx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	eax
	push	ebx
	push	OFFSET $SG82580
	lea	ecx, DWORD PTR [esi+103]
	push	ecx
	push	30					; 0000001eH
	push	edx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	add	esp, 24					; 00000018H
; Line 730
	add	esi, 20					; 00000014H
$LN38@display:
; Line 724
	inc	ebx
	cmp	ebx, 4
	jl	SHORT $LL39@display
$LN37@display:
; Line 718
	mov	edx, DWORD PTR _q$82568[ebp]
	mov	ecx, DWORD PTR ?CurSelection@@3PAVnameEntry@@A ; CurSelection
	mov	eax, DWORD PTR [ecx+32]
	inc	edx
; Line 733
	add	esi, 5
	add	edi, 4
	mov	DWORD PTR _q$82568[ebp], edx
	cmp	edx, DWORD PTR [eax+204]
	jl	$LL43@display
$LN494@display:
; Line 718
	mov	ebx, 16					; 00000010H
$LN41@display:
; Line 740
	mov	eax, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	test	eax, eax
	je	$LN35@display
	mov	eax, DWORD PTR [eax+28]
	test	eax, eax
	je	$LN35@display
; Line 743
	mov	edi, DWORD PTR _this$GSCopy$[ebp]
	mov	ecx, DWORD PTR [edi+40]
	mov	ecx, DWORD PTR [ecx+21248]
; Line 744
	xor	esi, esi
	mov	DWORD PTR _SelTex$82582[ebp], ecx
; Line 746
	cmp	eax, 3
	je	SHORT $LN34@display
	cmp	ecx, -1
	je	SHORT $LN34@display
	lea	edx, DWORD PTR _SelTex$82582[ebp]
	push	edx
	lea	eax, DWORD PTR $T101268[ebp]
	push	eax
	mov	ecx, OFFSET ?video@@3VVideo@@A+36
	call	?find@?$_Tree@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@$0A@@std@@@std@@@2@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> >,0> >::find
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR ?video@@3VVideo@@A+40
	je	SHORT $LN34@display
; Line 749
	lea	edx, DWORD PTR _SelTex$82582[ebp]
	push	edx
	mov	ecx, OFFSET ?video@@3VVideo@@A+36
	mov	esi, -20				; ffffffecH
	call	??A?$map@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@@std@@QAEAAPAVManagedItem@@ABI@Z ; std::map<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> > >::operator[]
	mov	eax, DWORD PTR [eax]
	add	eax, 8
	cmp	DWORD PTR [eax+20], ebx
	jb	SHORT $LN380@display
	mov	eax, DWORD PTR [eax]
$LN380@display:
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	eax
	mov	eax, DWORD PTR ?video@@3VVideo@@A+56
	push	OFFSET $SG82739
	add	eax, -20				; ffffffecH
	push	eax
	push	5
	push	ecx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	add	esp, 20					; 00000014H
$LN34@display:
; Line 752
	mov	eax, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	cmp	DWORD PTR [eax+20], ebx
	jb	SHORT $LN388@display
	mov	eax, DWORD PTR [eax]
$LN388@display:
	mov	edx, DWORD PTR ?video@@3VVideo@@A+56
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	eax
	push	OFFSET $SG82740
	lea	eax, DWORD PTR [esi+edx-20]
	push	eax
	push	5
	push	ecx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 760
	mov	eax, DWORD PTR [edi+40]
	fld	DWORD PTR [eax+20936]
	sub	esp, 12					; 0000000cH
	fstp	QWORD PTR [esp+24]
	mov	edx, DWORD PTR ?video@@3VVideo@@A+56
	fld	DWORD PTR [eax+20928]
	mov	ecx, esp
	fstp	QWORD PTR [esp+16]
	sub	esp, 24					; 00000018H
	fld	DWORD PTR [eax+20936]
	fsub	QWORD PTR __real@4070aaaaa0000000
	fdiv	QWORD PTR __real@4080aaaaa0000000
	fstp	QWORD PTR [esp+32]
	fld	DWORD PTR [eax+20932]
	mov	DWORD PTR [ecx], 0
	mov	DWORD PTR [ecx+4], -1075838976		; bfe00000H
	fstp	QWORD PTR [esp+16]
	fld	DWORD PTR [eax+20936]
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	fld	QWORD PTR __real@40d0aaaaa0000000
	fsub	ST(1), ST(0)
	fxch	ST(1)
	fchs
	fstp	QWORD PTR [esp+8]
	fsubr	DWORD PTR [eax+20928]
	lea	eax, DWORD PTR [esi+edx-40]
	fchs
	fstp	QWORD PTR [esp]
	push	OFFSET $SG82741
	push	eax
	push	5
	push	ecx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	add	esp, 72					; 00000048H
; Line 762
	cmp	BYTE PTR ?DetailSelection@@3_NA, 0	; DetailSelection
	je	$LN4@display
; Line 764
	cmp	DWORD PTR ?CurSelection@@3PAVnameEntry@@A, 0 ; CurSelection
	jne	$LN4@display
; Line 766
	mov	eax, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	mov	ecx, DWORD PTR [eax+28]
	cmp	ecx, 1
	jne	$LN31@display
; Line 768
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN396@display
	mov	eax, DWORD PTR [eax]
$LN396@display:
	mov	edx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	eax
	push	OFFSET $SG82745
	push	63					; 0000003fH
	push	5
	push	edx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 769
	mov	eax, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	edx
	push	OFFSET $SG82746
	push	83					; 00000053H
	push	10					; 0000000aH
	push	eax
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 770
	mov	ecx, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	mov	eax, DWORD PTR [ecx+32]
	fld	DWORD PTR [eax+24]
	mov	edx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	add	esp, 16					; 00000010H
	fstp	QWORD PTR [esp+16]
	fld	DWORD PTR [eax+20]
	fstp	QWORD PTR [esp+8]
	fld	DWORD PTR [eax+16]
	fstp	QWORD PTR [esp]
	push	OFFSET $SG82747
	push	103					; 00000067H
	push	10					; 0000000aH
	push	edx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 771
	mov	eax, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	mov	eax, DWORD PTR [eax+32]
	fld	DWORD PTR [eax+36]
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	add	esp, 16					; 00000010H
	fstp	QWORD PTR [esp+16]
	fld	DWORD PTR [eax+32]
	fstp	QWORD PTR [esp+8]
	fld	DWORD PTR [eax+28]
	fstp	QWORD PTR [esp]
	push	OFFSET $SG82748
	push	123					; 0000007bH
	push	10					; 0000000aH
	push	ecx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 772
	mov	edx, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	mov	eax, DWORD PTR [edx+32]
	fld	DWORD PTR [eax+56]
	fmul	QWORD PTR __real@4090000000000000
	call	__ftol2_sse_excpt
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	eax
	push	OFFSET $SG82750
	push	143					; 0000008fH
	push	10					; 0000000aH
	push	ecx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 773
	mov	edx, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+584]
	mov	eax, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	edx
	push	OFFSET $SG82751
	push	163					; 000000a3H
	push	10					; 0000000aH
	push	eax
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 774
	mov	ecx, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [edx]
	xor	esi, esi
	add	esp, 80					; 00000050H
	cmp	DWORD PTR [eax+584], esi
	jbe	$LN4@display
; Line 768
	mov	edi, 183				; 000000b7H
	lea	ebx, DWORD PTR [esi+16]
	npad	3
$LL30@display:
; Line 774
	mov	eax, DWORD PTR [eax+488]
	lea	ecx, DWORD PTR [eax+esi*4]
; Line 775
	push	ecx
	mov	ecx, OFFSET ?video@@3VVideo@@A+36
	call	??A?$map@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@@std@@QAEAAPAVManagedItem@@ABI@Z ; std::map<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> > >::operator[]
	mov	eax, DWORD PTR [eax]
	add	eax, 8
	cmp	DWORD PTR [eax+20], ebx
	jb	SHORT $LN402@display
	mov	eax, DWORD PTR [eax]
$LN402@display:
	mov	edx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	eax
	push	esi
	push	OFFSET $SG82756
	push	edi
	push	15					; 0000000fH
	push	edx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	mov	eax, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	mov	ecx, DWORD PTR [eax+32]
	mov	eax, DWORD PTR [ecx]
	inc	esi
	add	esp, 24					; 00000018H
	add	edi, 20					; 00000014H
	cmp	esi, DWORD PTR [eax+584]
	jb	SHORT $LL30@display
; Line 777
	jmp	$LN4@display
$LN31@display:
	cmp	ecx, 2
	jne	$LN26@display
; Line 779
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN410@display
	mov	eax, DWORD PTR [eax]
$LN410@display:
	mov	edx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	eax
	push	OFFSET $SG82759
	push	63					; 0000003fH
	push	5
	push	edx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 780
	mov	eax, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR [ecx+52]
	mov	eax, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	edx
	push	OFFSET $SG82760
	push	83					; 00000053H
	push	10					; 0000000aH
	push	eax
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 781
	mov	ecx, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	mov	eax, DWORD PTR [ecx+32]
	fld	DWORD PTR [eax+12]
	mov	edx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	add	esp, 16					; 00000010H
	fstp	QWORD PTR [esp+16]
	fld	DWORD PTR [eax+8]
	fstp	QWORD PTR [esp+8]
	fld	DWORD PTR [eax+4]
	fstp	QWORD PTR [esp]
	push	OFFSET $SG82761
	push	103					; 00000067H
	push	10					; 0000000aH
	push	edx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 782
	mov	eax, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	mov	eax, DWORD PTR [eax+32]
	fld	DWORD PTR [eax+48]
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	add	esp, 16					; 00000010H
	fstp	QWORD PTR [esp+16]
	fld	DWORD PTR [eax+44]
	fstp	QWORD PTR [esp+8]
	fld	DWORD PTR [eax+40]
	fstp	QWORD PTR [esp]
	push	OFFSET $SG82762
	push	123					; 0000007bH
	push	10					; 0000000aH
	push	ecx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 783
	mov	edx, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	mov	eax, DWORD PTR [edx+32]
	fld	DWORD PTR [eax+24]
	add	esp, 16					; 00000010H
	fstp	QWORD PTR [esp+16]
	fld	DWORD PTR [eax+20]
	fstp	QWORD PTR [esp+8]
	fld	DWORD PTR [eax+16]
	mov	eax, DWORD PTR ?f16@@3PAVFont@@A	; f16
	fstp	QWORD PTR [esp]
	push	OFFSET $SG82763
	push	143					; 0000008fH
	push	10					; 0000000aH
	push	eax
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 784
	mov	ecx, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	mov	eax, DWORD PTR [ecx+32]
	fld	DWORD PTR [eax+36]
	mov	edx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	add	esp, 16					; 00000010H
	fstp	QWORD PTR [esp+16]
	fld	DWORD PTR [eax+32]
	fstp	QWORD PTR [esp+8]
	fld	DWORD PTR [eax+28]
	fstp	QWORD PTR [esp]
	push	OFFSET $SG82764
	push	163					; 000000a3H
	push	10					; 0000000aH
	push	edx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 785
	mov	eax, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+76]
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	eax
	push	OFFSET $SG82765
	push	183					; 000000b7H
	push	10					; 0000000aH
	push	ecx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 786
	mov	edx, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	mov	eax, DWORD PTR [edx+32]
	mov	eax, DWORD PTR [eax]
	xor	esi, esi
	add	esp, 60					; 0000003cH
	cmp	DWORD PTR [eax+76], esi
	jle	$LN4@display
; Line 779
	xor	ebx, ebx
	mov	edi, -297				; fffffed7H
	npad	7
$LL25@display:
; Line 789
	mov	eax, DWORD PTR [eax+140]
	add	eax, ebx
	cmp	esi, 25					; 00000019H
	jge	SHORT $LN22@display
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN418@display
	mov	eax, DWORD PTR [eax]
$LN418@display:
	mov	edx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	eax
	push	esi
	push	OFFSET $SG82771
	lea	ecx, DWORD PTR [edi+500]
	push	ecx
	push	15					; 0000000fH
	push	edx
; Line 790
	jmp	SHORT $LN495@display
$LN22@display:
; Line 791
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN426@display
	mov	eax, DWORD PTR [eax]
$LN426@display:
	push	eax
	mov	eax, DWORD PTR ?video@@3VVideo@@A+52
	add	eax, -15				; fffffff1H
	push	esi
	cdq
	push	OFFSET $SG82773
	sub	eax, edx
	push	edi
	sar	eax, 1
	push	eax
	mov	eax, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	eax
$LN495@display:
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	mov	ecx, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [edx]
	inc	esi
	add	esp, 24					; 00000018H
	add	ebx, 28					; 0000001cH
	add	edi, 20					; 00000014H
	cmp	esi, DWORD PTR [eax+76]
	jl	SHORT $LL25@display
; Line 794
	jmp	$LN4@display
$LN26@display:
	cmp	ecx, 3
	jne	$LN4@display
; Line 797
	mov	eax, DWORD PTR [eax+32]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR [ecx+2248]
	mov	ecx, DWORD PTR [ecx+2244]
	push	edx
	mov	edx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	edx
	push	eax
	push	OFFSET $SG82777
	push	63					; 0000003fH
	push	5
	push	ecx
	xor	esi, esi
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 798
	mov	edx, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR [eax+228]
	mov	edx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	ecx
	push	OFFSET $SG82778
	push	83					; 00000053H
	push	10					; 0000000aH
	push	edx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 799
	mov	eax, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	mov	ecx, DWORD PTR [eax+32]
	add	esp, 52					; 00000034H
	test	BYTE PTR [ecx+228], 1
	je	SHORT $LN18@display
; Line 801
	mov	edx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	OFFSET $SG82780
	push	103					; 00000067H
	push	15					; 0000000fH
	push	edx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	add	esp, 16					; 00000010H
; Line 802
	mov	esi, 20					; 00000014H
$LN18@display:
; Line 804
	mov	eax, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	mov	ecx, DWORD PTR [eax+32]
	test	BYTE PTR [ecx+228], 2
	je	SHORT $LN17@display
; Line 806
	mov	eax, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	OFFSET $SG82782
	lea	edx, DWORD PTR [esi+103]
	push	edx
	push	15					; 0000000fH
	push	eax
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	add	esp, 16					; 00000010H
; Line 807
	add	esi, 20					; 00000014H
$LN17@display:
; Line 809
	mov	ecx, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	mov	edx, DWORD PTR [ecx+32]
	test	BYTE PTR [edx+228], 4
	je	SHORT $LN16@display
; Line 811
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	OFFSET $SG82784
	lea	eax, DWORD PTR [esi+103]
	push	eax
	push	15					; 0000000fH
	push	ecx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	add	esp, 16					; 00000010H
; Line 812
	add	esi, 20					; 00000014H
$LN16@display:
; Line 814
	mov	edx, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	mov	eax, DWORD PTR [edx+32]
	test	BYTE PTR [eax+228], 8
	je	SHORT $LN15@display
; Line 816
	mov	edx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	OFFSET $SG82786
	lea	ecx, DWORD PTR [esi+103]
	push	ecx
	push	15					; 0000000fH
	push	edx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	add	esp, 16					; 00000010H
; Line 817
	add	esi, 20					; 00000014H
$LN15@display:
; Line 819
	mov	eax, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	mov	ecx, DWORD PTR [eax+32]
	test	BYTE PTR [ecx+228], 16			; 00000010H
	je	SHORT $LN14@display
; Line 821
	mov	eax, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	OFFSET $SG82788
	lea	edx, DWORD PTR [esi+103]
	push	edx
	push	15					; 0000000fH
	push	eax
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	add	esp, 16					; 00000010H
; Line 822
	add	esi, 20					; 00000014H
$LN14@display:
; Line 824
	mov	ecx, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [edx+204]
	mov	edx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	eax
	push	OFFSET $SG82789
	lea	ecx, DWORD PTR [esi+103]
	push	ecx
	push	10					; 0000000aH
	push	edx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 826
	mov	eax, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	mov	ecx, DWORD PTR [eax+32]
	add	esp, 20					; 00000014H
	add	esi, 20					; 00000014H
	cmp	DWORD PTR [ecx+204], 0
	mov	DWORD PTR _q$82790[ebp], 0
	jle	$LN11@display
; Line 824
	mov	edi, 300				; 0000012cH
	npad	2
$LL13@display:
; Line 829
	lea	eax, DWORD PTR [ecx+edi-32]
	push	eax
	mov	ecx, OFFSET ?video@@3VVideo@@A+36
	call	??A?$map@IPAVManagedItem@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIPAVManagedItem@@@std@@@3@@std@@QAEAAPAVManagedItem@@ABI@Z ; std::map<unsigned int,ManagedItem *,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,ManagedItem *> > >::operator[]
	mov	eax, DWORD PTR [eax]
	add	eax, 8
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN432@display
	mov	eax, DWORD PTR [eax]
$LN432@display:
	mov	ecx, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	mov	ecx, DWORD PTR [ecx+32]
	mov	edx, DWORD PTR [ecx+edi]
	mov	ecx, DWORD PTR [ecx+edi-16]
	push	edx
	mov	edx, DWORD PTR _q$82790[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	eax
	push	edx
	push	OFFSET $SG82795
	lea	eax, DWORD PTR [esi+103]
	push	eax
	push	20					; 00000014H
	push	ecx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
; Line 831
	mov	eax, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	mov	edx, DWORD PTR [eax+32]
	add	esp, 32					; 00000020H
	add	esi, 20					; 00000014H
	cmp	DWORD PTR [edi+edx], 0
	je	SHORT $LN7@display
; Line 832
	xor	ebx, ebx
$LL9@display:
; Line 834
	mov	eax, DWORD PTR [eax+32]
	mov	ecx, DWORD PTR [eax+edi]
	push	ebx
	push	ecx
	call	?getGroundEffectDoodad@@YAPBDIH@Z	; getGroundEffectDoodad
	add	esp, 8
; Line 835
	test	eax, eax
	je	SHORT $LN8@display
; Line 837
	push	eax
	mov	eax, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	ebx
	push	OFFSET $SG82802
	lea	edx, DWORD PTR [esi+103]
	push	edx
	push	30					; 0000001eH
	push	eax
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	add	esp, 24					; 00000018H
; Line 838
	add	esi, 20					; 00000014H
$LN8@display:
; Line 832
	mov	eax, DWORD PTR ?Selection@@3PAVnameEntry@@A ; Selection
	inc	ebx
	cmp	ebx, 4
	jl	SHORT $LL9@display
$LN7@display:
; Line 826
	mov	edx, DWORD PTR _q$82790[ebp]
	mov	ecx, DWORD PTR [eax+32]
	inc	edx
; Line 841
	add	esi, 5
	add	edi, 4
	mov	DWORD PTR _q$82790[ebp], edx
	cmp	edx, DWORD PTR [ecx+204]
	jl	$LL13@display
$LN11@display:
; Line 843
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	call	?setChunkWindow@@YAXPAVMapChunk@@@Z	; setChunkWindow
	add	esp, 4
; Line 847
	jmp	$LN4@display
$LN35@display:
; Line 848
	test	ecx, ecx
	je	SHORT $LN3@display
	cmp	BYTE PTR ?DetailSelection@@3_NA, 0	; DetailSelection
	jne	$LN4@display
$LN3@display:
; Line 857
	mov	edx, DWORD PTR _this$GSCopy$[ebp]
	mov	eax, DWORD PTR [edx+40]
	fld	DWORD PTR [eax+20936]
	sub	esp, 56					; 00000038H
	fstp	QWORD PTR [esp+48]
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	fld	DWORD PTR [eax+20928]
	fstp	QWORD PTR [esp+40]
	fld	DWORD PTR [eax+20936]
	fld	QWORD PTR __real@4070aaaaa0000000
	fsub	ST(1), ST(0)
	fld	QWORD PTR __real@4080aaaaa0000000
	fdiv	ST(2), ST(0)
	fxch	ST(2)
	fstp	QWORD PTR [esp+32]
	fsubr	DWORD PTR [eax+20928]
	fdivrp	ST(1), ST(0)
	fstp	QWORD PTR [esp+24]
	fld	DWORD PTR [eax+20932]
	fstp	QWORD PTR [esp+16]
	fld	DWORD PTR [eax+20936]
	fld	QWORD PTR __real@40d0aaaaa0000000
	fsub	ST(1), ST(0)
	fxch	ST(1)
	fchs
	fstp	QWORD PTR [esp+8]
	fsubr	DWORD PTR [eax+20928]
	mov	eax, DWORD PTR ?video@@3VVideo@@A+56
	add	eax, -22				; ffffffeaH
	fchs
	fstp	QWORD PTR [esp]
	push	OFFSET $SG82806
	push	eax
	push	5
	push	ecx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	add	esp, 72					; 00000048H
$LN4@display:
; Line 862
	mov	edi, DWORD PTR _this$GSCopy$[ebp]
	mov	edx, DWORD PTR [edi+40]
	cmp	BYTE PTR [edx+20903], 0
	je	$LN2@display
; Line 867
	mov	ecx, OFFSET ?video@@3VVideo@@A		; video
	call	?set2D@Video@@QAEXXZ			; Video::set2D
; Line 868
	mov	ebx, DWORD PTR __imp__glEnable@4
	push	3042					; 00000be2H
	call	ebx
; Line 869
	push	771					; 00000303H
	push	770					; 00000302H
	call	DWORD PTR __imp__glBlendFunc@8
; Line 871
	push	33985					; 000084c1H
	call	DWORD PTR ?glActiveTextureARB@@3P6GXI@ZA ; glActiveTextureARB
; Line 872
	mov	esi, DWORD PTR __imp__glDisable@4
	push	3553					; 00000de1H
	call	esi
; Line 873
	push	33984					; 000084c0H
	call	DWORD PTR ?glActiveTextureARB@@3P6GXI@ZA ; glActiveTextureARB
; Line 874
	push	3553					; 00000de1H
	call	ebx
; Line 875
	push	2929					; 00000b71H
	call	esi
; Line 876
	push	2884					; 00000b44H
	call	esi
; Line 877
	push	2896					; 00000b50H
	call	esi
; Line 878
	sub	esp, 16					; 00000010H
	mov	DWORD PTR [esp+12], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+8], 1065353216		; 3f800000H
	mov	DWORD PTR [esp+4], 1065353216		; 3f800000H
	mov	DWORD PTR [esp], 1065353216		; 3f800000H
	call	DWORD PTR __imp__glColor4f@16
; Line 880
	mov	eax, DWORD PTR [edi+40]
	cmp	BYTE PTR [eax+21056], 0
	mov	eax, OFFSET $SG82811
	jne	SHORT $LN95@display
	mov	eax, OFFSET $SG82809
$LN95@display:
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	push	eax
	push	0
	push	OFFSET $SG82809
	call	?textwidth@Font@@QAEHPBD@Z		; Font::textwidth
	cdq
	sub	eax, edx
	mov	ecx, eax
	mov	eax, DWORD PTR ?video@@3VVideo@@A+52
	cdq
	sub	eax, edx
	mov	edx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	sar	ecx, 1
	sar	eax, 1
	sub	eax, ecx
	push	eax
	push	edx
	call	?shprint@Font@@QAAXHHPBDZZ		; Font::shprint
	add	esp, 16					; 00000010H
$LN2@display:
; Line 888
	call	DWORD PTR __imp__glGetError@0
; Line 889
	test	eax, eax
	je	SHORT $LN1@display
; Line 890
	push	eax
	push	OFFSET $SG82813
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 8
$LN1@display:
; Line 893
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?display@MapViewer@@UAEXMM@Z$8:
	lea	ecx, DWORD PTR _areaName$82456[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?display@MapViewer@@UAEXMM@Z$9:
	lea	ecx, DWORD PTR _regionName$82464[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?display@MapViewer@@UAEXMM@Z$10:
	lea	ecx, DWORD PTR _areaName$82488[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?display@MapViewer@@UAEXMM@Z$11:
	lea	ecx, DWORD PTR _regionName$82495[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?display@MapViewer@@UAEXMM@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-88]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?display@MapViewer@@UAEXMM@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?display@MapViewer@@UAEXMM@Z ENDP			; MapViewer::display
PUBLIC	?ObjMove@@3VVec3D@@A				; ObjMove
_BSS	SEGMENT
	ALIGN	4

?ObjMove@@3VVec3D@@A DB 0cH DUP (?)			; ObjMove
_BSS	ENDS
PUBLIC	?ObjRot@@3VVec3D@@A				; ObjRot
_BSS	SEGMENT
?ObjRot@@3VVec3D@@A DB 0cH DUP (?)			; ObjRot
_BSS	ENDS
PUBLIC	?ObjPos@@3VVec3D@@A				; ObjPos
_BSS	SEGMENT
?ObjPos@@3VVec3D@@A DB 0cH DUP (?)			; ObjPos
_BSS	ENDS
END
