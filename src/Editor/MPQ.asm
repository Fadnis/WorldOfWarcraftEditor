; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\programovani\WoW Editor\Test\src\Editor\MPQ.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?_EEM_DS@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@2HB ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::_EEM_DS
CONST	SEGMENT
$SG98079 DB	'[World of Warcraft Studio - Editor] - Opening : %s', 0aH
	DB	00H
$SG98109 DB	'rb', 00H
	ORG $+1
$SG98086 DB	'[World of Warcraft Studio - Editor] - Error opening arch'
	DB	'ive : ''%s'': Does file really exist?', 0aH, 00H
	ORG $+3
$SG98088 DB	'[World of Warcraft Studio - Editor] - Error opening arch'
	DB	'ive : ''%s'': Bad file format', 0aH, 00H
	ORG $+3
$SG98090 DB	'[World of Warcraft Studio - Editor] - Error opening arch'
	DB	'ive : ''%s'': Seeking in file failed', 0aH, 00H
$SG98114 DB	'%s\data\%s', 00H
	ORG $+1
$SG98092 DB	'[World of Warcraft Studio - Editor] - Error opening arch'
	DB	'ive : ''%s'': Read error in archive', 0aH, 00H
	ORG $+1
$SG98115 DB	'rb', 00H
	ORG $+1
$SG98094 DB	'[World of Warcraft Studio - Editor] - Error opening arch'
	DB	'ive : ''%s'': Maybe not enough memory', 0aH, 00H
	ORG $+3
$SG98096 DB	'[World of Warcraft Studio - Editor] - Error opening arch'
	DB	'ive : %s', 0aH, 00H
	ORG $+2
$SG98338 DB	'wb', 00H
	ORG $+1
$SG98106 DB	'[World of Warcraft Studio - Editor] - Attempting to Load'
	DB	' File : %s', 0aH, 00H
$SG98107 DB	'%s\%s', 00H
	ORG $+2
$SG98340 DB	'[World of Warcraft Studio - Editor] - Saving File : %s', 0aH
	DB	00H
	ORG $+4
$SG98111 DB	'[World of Warcraft Studio - Editor] - File : %s found in'
	DB	' root directory', 0aH, 00H
	ORG $+3
$SG98283 DB	'[World of Warcraft Studio - Editor] - Unable to find fil'
	DB	'e %s', 0aH, 00H
	ORG $+6
$SG98117 DB	'[World of Warcraft Studio - Editor] - File : %s found in'
	DB	' data directory', 0aH, 00H
	ORG $+3
$SG98294 DB	'%s\%s', 00H
	ORG $+6
$SG98277 DB	'[World of Warcraft Studio - Editor] - File : %s found in'
	DB	'side : %s', 0aH, 00H
	ORG $+5
$SG98279 DB	'[World of Warcraft Studio - Editor] - Invalid File of si'
	DB	'ze 1 for file : %s (damn Blizzard :-p)', 0aH, 00H
CONST	ENDS
;	COMDAT ?_EEM_DS@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@2HB
CONST	SEGMENT
?_EEM_DS@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@2HB DD 04H ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::_EEM_DS
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
; Line 345
	push	ebp
	mov	ebp, esp
	push	esi
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
; Line 346
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Ogtp
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx
; Line 354
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
; Line 355
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN6@scalar
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogtp
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
; Line 56
	push	ebp
	mov	ebp, esp
; Line 57
	mov	eax, DWORD PTR __Where$[ebp]
; Line 58
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; Line 62
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
; Function compile flags: /Ogtp
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 65
	mov	eax, ecx
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
; Line 66
	ret	0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
; Function compile flags: /Ogtp
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx
; Line 111
	mov	eax, ecx
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
; Line 112
	ret	0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
; Function compile flags: /Ogtp
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx
; Line 140
	ret	0
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
_TEXT	ENDS
PUBLIC	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
; Function compile flags: /Ogtp
;	COMDAT ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ
_TEXT	SEGMENT
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT
; _this$ = ecx
; Line 175
	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	jne	SHORT $LN3@Getcont
; Line 176
	ret	0
$LN3@Getcont:
; Line 175
	mov	eax, DWORD PTR [eax]
; Line 176
	ret	0
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Orphan_me
; Function compile flags: /Ogtp
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_me@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT
; _this$ = ecx
; Line 198
	ret	0
?_Orphan_me@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
PUBLIC	?close@MPQArchive@@QAEXXZ			; MPQArchive::close
EXTRN	_libmpq__archive_close:PROC
; Function compile flags: /Ogtp
_TEXT	SEGMENT
?close@MPQArchive@@QAEXXZ PROC				; MPQArchive::close
; _this$ = ecx
; File c:\programovani\wow editor\test\src\editor\mpq.cpp
; Line 51
	mov	eax, DWORD PTR [ecx]
	push	eax
	call	_libmpq__archive_close
	pop	ecx
; Line 52
	ret	0
?close@MPQArchive@@QAEXXZ ENDP				; MPQArchive::close
_TEXT	ENDS
PUBLIC	??1?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::~_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ PROC ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::~_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ ENDP ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::~_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >
_TEXT	ENDS
PUBLIC	?read@MPQFile@@QAEIPAXI@Z			; MPQFile::read
EXTRN	_memcpy:PROC
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_dest$ = 8						; size = 4
_rpos$ = 12						; size = 4
_bytes$ = 12						; size = 4
?read@MPQFile@@QAEIPAXI@Z PROC				; MPQFile::read
; _this$ = ecx
; Line 166
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
; Line 167
	cmp	BYTE PTR [esi+1024], 0
	je	SHORT $LN2@read
	xor	eax, eax
	pop	esi
; Line 181
	pop	ebp
	ret	8
$LN2@read:
; Line 169
	mov	eax, DWORD PTR [esi+1032]
	push	ebx
	push	edi
	mov	edi, DWORD PTR _bytes$[ebp]
; Line 170
	xor	ebx, ebx
	lea	ecx, DWORD PTR [eax+edi]
	mov	DWORD PTR _rpos$[ebp], ecx
	cmp	ebx, DWORD PTR [esi+1044]
	jl	SHORT $LN1@read
	jg	SHORT $LN5@read
	cmp	ecx, DWORD PTR [esi+1040]
	jbe	SHORT $LN1@read
$LN5@read:
; Line 172
	mov	edi, DWORD PTR [esi+1040]
	sub	edi, eax
; Line 173
	mov	BYTE PTR [esi+1024], 1
$LN1@read:
; Line 176
	mov	ecx, DWORD PTR [esi+1028]
	mov	edx, DWORD PTR _dest$[ebp]
	push	edi
	add	ecx, eax
	push	ecx
	push	edx
	call	_memcpy
; Line 178
	mov	eax, DWORD PTR _rpos$[ebp]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+1032], eax
; Line 180
	mov	eax, edi
	pop	edi
	mov	DWORD PTR [esi+1036], ebx
	pop	ebx
	pop	esi
; Line 181
	pop	ebp
	ret	8
?read@MPQFile@@QAEIPAXI@Z ENDP				; MPQFile::read
_TEXT	ENDS
PUBLIC	?seek@MPQFile@@QAEXH@Z				; MPQFile::seek
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_offset$ = 8						; size = 4
?seek@MPQFile@@QAEXH@Z PROC				; MPQFile::seek
; _this$ = ecx
; Line 184
	push	ebp
	mov	ebp, esp
; Line 185
	mov	eax, DWORD PTR _offset$[ebp]
	cdq
	mov	DWORD PTR [ecx+1032], eax
	mov	DWORD PTR [ecx+1036], edx
; Line 186
	cmp	edx, DWORD PTR [ecx+1044]
	jl	SHORT $LN3@seek
	jg	SHORT $LN5@seek
	cmp	eax, DWORD PTR [ecx+1040]
	jb	SHORT $LN3@seek
$LN5@seek:
	mov	eax, 1
	mov	BYTE PTR [ecx+1024], al
; Line 187
	pop	ebp
	ret	4
$LN3@seek:
; Line 186
	xor	eax, eax
	mov	BYTE PTR [ecx+1024], al
; Line 187
	pop	ebp
	ret	4
?seek@MPQFile@@QAEXH@Z ENDP				; MPQFile::seek
_TEXT	ENDS
PUBLIC	?seekRelative@MPQFile@@QAEXH@Z			; MPQFile::seekRelative
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_offset$ = 8						; size = 4
?seekRelative@MPQFile@@QAEXH@Z PROC			; MPQFile::seekRelative
; _this$ = ecx
; Line 190
	push	ebp
	mov	ebp, esp
; Line 191
	mov	eax, DWORD PTR _offset$[ebp]
	cdq
	add	DWORD PTR [ecx+1032], eax
	adc	DWORD PTR [ecx+1036], edx
; Line 192
	mov	eax, DWORD PTR [ecx+1036]
	cmp	eax, DWORD PTR [ecx+1044]
	jl	SHORT $LN3@seekRelati
	jg	SHORT $LN5@seekRelati
	mov	edx, DWORD PTR [ecx+1032]
	cmp	edx, DWORD PTR [ecx+1040]
	jb	SHORT $LN3@seekRelati
$LN5@seekRelati:
	mov	eax, 1
	mov	BYTE PTR [ecx+1024], al
; Line 193
	pop	ebp
	ret	4
$LN3@seekRelati:
; Line 192
	xor	eax, eax
	mov	BYTE PTR [ecx+1024], al
; Line 193
	pop	ebp
	ret	4
?seekRelative@MPQFile@@QAEXH@Z ENDP			; MPQFile::seekRelative
_TEXT	ENDS
PUBLIC	?close@MPQFile@@QAEXXZ				; MPQFile::close
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
; Function compile flags: /Ogtp
_TEXT	SEGMENT
?close@MPQFile@@QAEXXZ PROC				; MPQFile::close
; _this$ = ecx
; Line 196
	push	esi
	mov	esi, ecx
; Line 197
	mov	eax, DWORD PTR [esi+1028]
	test	eax, eax
	je	SHORT $LN4@close
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN4@close:
; Line 199
	mov	BYTE PTR [esi+1024], 1
	mov	DWORD PTR [esi+1028], 0
	pop	esi
; Line 200
	ret	0
?close@MPQFile@@QAEXXZ ENDP				; MPQFile::close
_TEXT	ENDS
PUBLIC	?SaveFile@MPQFile@@QAEXXZ			; MPQFile::SaveFile
EXTRN	__imp__fclose:PROC
EXTRN	__imp__fwrite:PROC
EXTRN	__imp__fseek:PROC
EXTRN	?gLog@@YAXPADZZ:PROC				; gLog
EXTRN	__imp__fopen:PROC
EXTRN	?CreatePath@@YAXPBD@Z:PROC			; CreatePath
; Function compile flags: /Ogtp
_TEXT	SEGMENT
?SaveFile@MPQFile@@QAEXXZ PROC				; MPQFile::SaveFile
; _this$ = ecx
; Line 203
	push	esi
	mov	esi, ecx
	push	edi
; Line 206
	push	esi
	call	?CreatePath@@YAXPBD@Z			; CreatePath
; Line 208
	push	OFFSET $SG98338
	push	esi
	call	DWORD PTR __imp__fopen
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 210
	test	edi, edi
	je	SHORT $LN1@SaveFile
; Line 212
	push	esi
	push	OFFSET $SG98340
	call	?gLog@@YAXPADZZ				; gLog
; Line 213
	push	0
	push	0
	push	edi
	call	DWORD PTR __imp__fseek
; Line 214
	mov	eax, DWORD PTR [esi+1040]
	mov	ecx, DWORD PTR [esi+1028]
	push	edi
	push	eax
	push	1
	push	ecx
	call	DWORD PTR __imp__fwrite
; Line 215
	push	edi
	call	DWORD PTR __imp__fclose
	add	esp, 40					; 00000028H
; Line 216
	mov	BYTE PTR [esi+1048], 1
$LN1@SaveFile:
; Line 219
	pop	edi
	pop	esi
	ret	0
?SaveFile@MPQFile@@QAEXXZ ENDP				; MPQFile::SaveFile
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVMPQArchive@@@std@@QAE@XZ	; std::allocator<MPQArchive *>::allocator<MPQArchive *>
; Function compile flags: /Ogtp
;	COMDAT ??0?$allocator@PAVMPQArchive@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@PAVMPQArchive@@@std@@QAE@XZ PROC		; std::allocator<MPQArchive *>::allocator<MPQArchive *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 161
	mov	eax, ecx
; Line 163
	ret	0
??0?$allocator@PAVMPQArchive@@@std@@QAE@XZ ENDP		; std::allocator<MPQArchive *>::allocator<MPQArchive *>
_TEXT	ENDS
PUBLIC	??D?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBEABQAVMPQArchive@@XZ ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator*
; Function compile flags: /Ogtp
;	COMDAT ??D?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBEABQAVMPQArchive@@XZ
_TEXT	SEGMENT
??D?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBEABQAVMPQArchive@@XZ PROC ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
; Line 331
	mov	eax, DWORD PTR [ecx]
	push	esi
	test	eax, eax
	jne	SHORT $LN6@operator
	xor	esi, esi
	jmp	SHORT $LN7@operator
$LN6@operator:
	mov	esi, DWORD PTR [eax]
$LN7@operator:
; Line 350
	mov	eax, DWORD PTR [ecx+8]
; Line 353
	mov	edx, DWORD PTR [esi+8]
	mov	ecx, eax
	shr	ecx, 2
	and	eax, 3
	cmp	edx, ecx
	ja	SHORT $LN1@operator
; Line 354
	sub	ecx, edx
$LN1@operator:
; Line 355
	mov	edx, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [edx+ecx*4]
	lea	eax, DWORD PTR [ecx+eax*4]
	pop	esi
; Line 356
	ret	0
??D?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBEABQAVMPQArchive@@XZ ENDP ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEAAV01@XZ ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator++
; Function compile flags: /Ogtp
;	COMDAT ??E?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator++, COMDAT
; _this$ = ecx
; Line 364
	mov	eax, ecx
; Line 381
	inc	DWORD PTR [eax+8]
; Line 383
	ret	0
??E?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator++
_TEXT	ENDS
PUBLIC	?empty@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBE_NXZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::empty
; Function compile flags: /Ogtp
;	COMDAT ?empty@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBE_NXZ PROC ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::empty, COMDAT
; _this$ = ecx
; Line 1160
	xor	eax, eax
	cmp	DWORD PTR [ecx+16], eax
	sete	al
; Line 1161
	ret	0
?empty@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBE_NXZ ENDP ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::empty
_TEXT	ENDS
PUBLIC	??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@IBEXXZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::_Xlen
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long?$AA@ DB 'deque<T> too long', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?_Xlen@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@IBEXXZ PROC ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::_Xlen, COMDAT
; _this$ = ecx
; Line 1580
	push	OFFSET ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen:
$LN3@Xlen:
	int	3
?_Xlen@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@IBEXXZ ENDP ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::_Xlen
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVMPQArchive@@@std@@QAE@ABV01@@Z ; std::allocator<MPQArchive *>::allocator<MPQArchive *>
; Function compile flags: /Ogtp
;	COMDAT ??0?$allocator@PAVMPQArchive@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@PAVMPQArchive@@@std@@QAE@ABV01@@Z PROC	; std::allocator<MPQArchive *>::allocator<MPQArchive *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 165
	mov	eax, ecx
; Line 167
	ret	4
??0?$allocator@PAVMPQArchive@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<MPQArchive *>::allocator<MPQArchive *>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAVMPQArchive@@@std@@QAEXPAPAVMPQArchive@@I@Z ; std::allocator<MPQArchive *>::deallocate
; Function compile flags: /Ogtp
;	COMDAT ?deallocate@?$allocator@PAVMPQArchive@@@std@@QAEXPAPAVMPQArchive@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAVMPQArchive@@@std@@QAEXPAPAVMPQArchive@@I@Z PROC ; std::allocator<MPQArchive *>::deallocate, COMDAT
; _this$ = ecx
; Line 181
	push	ebp
	mov	ebp, esp
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	pop	ebp
	ret	8
?deallocate@?$allocator@PAVMPQArchive@@@std@@QAEXPAPAVMPQArchive@@I@Z ENDP ; std::allocator<MPQArchive *>::deallocate
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAPAVMPQArchive@@@std@@QAEXPAPAPAVMPQArchive@@I@Z ; std::allocator<MPQArchive * *>::deallocate
; Function compile flags: /Ogtp
;	COMDAT ?deallocate@?$allocator@PAPAVMPQArchive@@@std@@QAEXPAPAPAVMPQArchive@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAPAVMPQArchive@@@std@@QAEXPAPAPAVMPQArchive@@I@Z PROC ; std::allocator<MPQArchive * *>::deallocate, COMDAT
; _this$ = ecx
; Line 181
	push	ebp
	mov	ebp, esp
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	pop	ebp
	ret	8
?deallocate@?$allocator@PAPAVMPQArchive@@@std@@QAEXPAPAPAVMPQArchive@@I@Z ENDP ; std::allocator<MPQArchive * *>::deallocate
_TEXT	ENDS
PUBLIC	?_Compat@?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBEXABV12@@Z ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::_Compat
; Function compile flags: /Ogtp
;	COMDAT ?_Compat@?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::_Compat, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
; Line 538
	ret	4
?_Compat@?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::_Compat
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Function compile flags: /Ogtp
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 181
	push	ebp
	mov	ebp, esp
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAVMPQArchive@@@std@@QBEIXZ ; std::allocator<MPQArchive *>::max_size
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$allocator@PAVMPQArchive@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@PAVMPQArchive@@@std@@QBEIXZ PROC	; std::allocator<MPQArchive *>::max_size, COMDAT
; _this$ = ecx
; Line 219
	mov	eax, 1073741823				; 3fffffffH
; Line 220
	ret	0
?max_size@?$allocator@PAVMPQArchive@@@std@@QBEIXZ ENDP	; std::allocator<MPQArchive *>::max_size
_TEXT	ENDS
PUBLIC	??$?0PAVMPQArchive@@@?$allocator@PAPAVMPQArchive@@@std@@QAE@ABV?$allocator@PAVMPQArchive@@@1@@Z ; std::allocator<MPQArchive * *>::allocator<MPQArchive * *><MPQArchive *>
; Function compile flags: /Ogtp
;	COMDAT ??$?0PAVMPQArchive@@@?$allocator@PAPAVMPQArchive@@@std@@QAE@ABV?$allocator@PAVMPQArchive@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0PAVMPQArchive@@@?$allocator@PAPAVMPQArchive@@@std@@QAE@ABV?$allocator@PAVMPQArchive@@@1@@Z PROC ; std::allocator<MPQArchive * *>::allocator<MPQArchive * *><MPQArchive *>, COMDAT
; _this$ = ecx
; Line 170
	mov	eax, ecx
; Line 172
	ret	4
??$?0PAVMPQArchive@@@?$allocator@PAPAVMPQArchive@@@std@@QAE@ABV?$allocator@PAVMPQArchive@@@1@@Z ENDP ; std::allocator<MPQArchive * *>::allocator<MPQArchive * *><MPQArchive *>
_TEXT	ENDS
PUBLIC	??$?0PAVMPQArchive@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVMPQArchive@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><MPQArchive *>
; Function compile flags: /Ogtp
;	COMDAT ??$?0PAVMPQArchive@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVMPQArchive@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0PAVMPQArchive@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVMPQArchive@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><MPQArchive *>, COMDAT
; _this$ = ecx
; Line 170
	mov	eax, ecx
; Line 172
	ret	4
??$?0PAVMPQArchive@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVMPQArchive@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><MPQArchive *>
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@PAVMPQArchive@@@std@@YAPAPAVMPQArchive@@IPAPAV1@@Z ; std::_Allocate<MPQArchive *>
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$_Allocate@PAVMPQArchive@@@std@@YAPAPAVMPQArchive@@IPAPAV1@@Z
_TEXT	SEGMENT
$T104800 = -12						; size = 12
$T104805 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAVMPQArchive@@@std@@YAPAPAVMPQArchive@@IPAPAV1@@Z PROC ; std::_Allocate<MPQArchive *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 30
	push	ebp
	mov	ebp, esp
; Line 33
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
; Line 35
	je	SHORT $LN5@Allocate
; Line 36
	cmp	ecx, 1073741823				; 3fffffffH
	ja	SHORT $LN1@Allocate
	lea	eax, DWORD PTR [ecx*4]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
; Line 39
	jne	SHORT $LN5@Allocate
$LN1@Allocate:
; Line 37
	lea	ecx, DWORD PTR $T104805[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T104800[ebp]
	mov	DWORD PTR $T104805[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T104800[ebp]
	push	edx
	mov	DWORD PTR $T104800[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN10@Allocate:
$LN5@Allocate:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@Allocate:
??$_Allocate@PAVMPQArchive@@@std@@YAPAPAVMPQArchive@@IPAPAV1@@Z ENDP ; std::_Allocate<MPQArchive *>
_TEXT	ENDS
PUBLIC	??$_Allocate@PAPAVMPQArchive@@@std@@YAPAPAPAVMPQArchive@@IPAPAPAV1@@Z ; std::_Allocate<MPQArchive * *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Allocate@PAPAVMPQArchive@@@std@@YAPAPAPAVMPQArchive@@IPAPAPAV1@@Z
_TEXT	SEGMENT
$T104810 = -12						; size = 12
$T104814 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAPAVMPQArchive@@@std@@YAPAPAPAVMPQArchive@@IPAPAPAV1@@Z PROC ; std::_Allocate<MPQArchive * *>, COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
; Line 33
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
; Line 35
	je	SHORT $LN5@Allocate@2
; Line 36
	cmp	ecx, 1073741823				; 3fffffffH
	ja	SHORT $LN1@Allocate@2
	lea	eax, DWORD PTR [ecx*4]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
; Line 39
	jne	SHORT $LN5@Allocate@2
$LN1@Allocate@2:
; Line 37
	lea	ecx, DWORD PTR $T104814[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T104810[ebp]
	mov	DWORD PTR $T104814[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T104810[ebp]
	push	edx
	mov	DWORD PTR $T104810[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN10@Allocate@2:
$LN5@Allocate@2:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@Allocate@2:
??$_Allocate@PAPAVMPQArchive@@@std@@YAPAPAPAVMPQArchive@@IPAPAPAV1@@Z ENDP ; std::_Allocate<MPQArchive * *>
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
; Function compile flags: /Ogtp
;	COMDAT ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z
_TEXT	SEGMENT
$T104819 = -12						; size = 12
$T104823 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z PROC ; std::_Allocate<std::_Container_proxy>, COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
; Line 33
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
; Line 35
	je	SHORT $LN5@Allocate@3
; Line 36
	cmp	ecx, 536870911				; 1fffffffH
	ja	SHORT $LN1@Allocate@3
	lea	eax, DWORD PTR [ecx*8]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
; Line 39
	jne	SHORT $LN5@Allocate@3
$LN1@Allocate@3:
; Line 37
	lea	ecx, DWORD PTR $T104823[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T104819[ebp]
	mov	DWORD PTR $T104823[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T104819[ebp]
	push	edx
	mov	DWORD PTR $T104819[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN10@Allocate@3:
$LN5@Allocate@3:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@Allocate@3:
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ENDP ; std::_Allocate<std::_Container_proxy>
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
; Function compile flags: /Ogtp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	esi
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??$forward@ABQAVMPQArchive@@@std@@YAABQAVMPQArchive@@ABQAV1@@Z ; std::forward<MPQArchive * const &>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@ABQAVMPQArchive@@@std@@YAABQAVMPQArchive@@ABQAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAVMPQArchive@@@std@@YAABQAVMPQArchive@@ABQAV1@@Z PROC ; std::forward<MPQArchive * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@ABQAVMPQArchive@@@std@@YAABQAVMPQArchive@@ABQAV1@@Z ENDP ; std::forward<MPQArchive * const &>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAPAVMPQArchive@@PAPAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAPAVMPQArchive@@0@Z ; std::_Ptr_cat<MPQArchive * *,MPQArchive * *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Ptr_cat@PAPAVMPQArchive@@PAPAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAPAVMPQArchive@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAPAVMPQArchive@@PAPAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAPAVMPQArchive@@0@Z PROC ; std::_Ptr_cat<MPQArchive * *,MPQArchive * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 528
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 530
	mov	al, BYTE PTR __Cat$[ebp]
; Line 531
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@PAPAVMPQArchive@@PAPAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAPAVMPQArchive@@0@Z ENDP ; std::_Ptr_cat<MPQArchive * *,MPQArchive * *>
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAPAVMPQArchive@@PAPAV1@@std@@YAPAPAPAVMPQArchive@@PAPAPAV1@00AAV?$allocator@PAPAVMPQArchive@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<MPQArchive * *,MPQArchive * *>
EXTRN	__imp__memmove:PROC
; Function compile flags: /Ogtp
;	COMDAT ??$_Uninit_copy@PAPAVMPQArchive@@PAPAV1@@std@@YAPAPAPAVMPQArchive@@PAPAPAV1@00AAV?$allocator@PAPAVMPQArchive@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@PAPAVMPQArchive@@PAPAV1@@std@@YAPAPAPAVMPQArchive@@PAPAPAV1@00AAV?$allocator@PAPAVMPQArchive@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<MPQArchive * *,MPQArchive * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
; Line 399
	push	ebp
	mov	ebp, esp
; Line 402
	mov	ecx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, ecx
	push	esi
	sar	eax, 2
; Line 404
	lea	esi, DWORD PTR [eax*4]
	mov	eax, DWORD PTR __Dest$[ebp]
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
	pop	esi
; Line 405
	pop	ebp
	ret	0
??$_Uninit_copy@PAPAVMPQArchive@@PAPAV1@@std@@YAPAPAPAVMPQArchive@@PAPAPAV1@00AAV?$allocator@PAPAVMPQArchive@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<MPQArchive * *,MPQArchive * *>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAPAPAVMPQArchive@@@std@@YAPAPAPAVMPQArchive@@PAPAPAV1@@Z ; std::_Val_type<MPQArchive * * *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Val_type@PAPAPAVMPQArchive@@@std@@YAPAPAPAVMPQArchive@@PAPAPAV1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAPAVMPQArchive@@@std@@YAPAPAPAVMPQArchive@@PAPAPAV1@@Z PROC ; std::_Val_type<MPQArchive * * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 802
	xor	eax, eax
; Line 803
	ret	0
??$_Val_type@PAPAPAVMPQArchive@@@std@@YAPAPAPAVMPQArchive@@PAPAPAV1@@Z ENDP ; std::_Val_type<MPQArchive * * *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAPAVMPQArchive@@@std@@@std@@YAXPAPAPAVMPQArchive@@0AAV?$allocator@PAPAVMPQArchive@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<MPQArchive * *> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy_range@V?$allocator@PAPAVMPQArchive@@@std@@@std@@YAXPAPAPAVMPQArchive@@0AAV?$allocator@PAPAVMPQArchive@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@PAPAVMPQArchive@@@std@@@std@@YAXPAPAPAVMPQArchive@@0AAV?$allocator@PAPAVMPQArchive@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<MPQArchive * *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 105
	ret	0
??$_Destroy_range@V?$allocator@PAPAVMPQArchive@@@std@@@std@@YAXPAPAPAVMPQArchive@@0AAV?$allocator@PAPAVMPQArchive@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<MPQArchive * *> >
_TEXT	ENDS
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
PUBLIC	??$_Construct@PAVMPQArchive@@ABQAV1@@std@@YAXPAPAVMPQArchive@@ABQAV1@@Z ; std::_Construct<MPQArchive *,MPQArchive * const &>
; Function compile flags: /Ogtp
;	COMDAT ??$_Construct@PAVMPQArchive@@ABQAV1@@std@@YAXPAPAVMPQArchive@@ABQAV1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAVMPQArchive@@ABQAV1@@std@@YAXPAPAVMPQArchive@@ABQAV1@@Z PROC ; std::_Construct<MPQArchive *,MPQArchive * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 46
	push	ebp
	mov	ebp, esp
; Line 48
	mov	eax, DWORD PTR __Ptr$[ebp]
	test	eax, eax
	je	SHORT $LN3@Construct
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN3@Construct:
; Line 49
	pop	ebp
	ret	0
??$_Construct@PAVMPQArchive@@ABQAV1@@std@@YAXPAPAVMPQArchive@@ABQAV1@@Z ENDP ; std::_Construct<MPQArchive *,MPQArchive * const &>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAVMPQArchive@@@std@@YAXPAPAVMPQArchive@@@Z ; std::_Destroy<MPQArchive *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy@PAVMPQArchive@@@std@@YAXPAPAVMPQArchive@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAVMPQArchive@@@std@@YAXPAPAVMPQArchive@@@Z PROC ; std::_Destroy<MPQArchive *>, COMDAT
; Line 64
	ret	0
??$_Destroy@PAVMPQArchive@@@std@@YAXPAPAVMPQArchive@@@Z ENDP ; std::_Destroy<MPQArchive *>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAPAVMPQArchive@@@std@@YAXPAPAPAVMPQArchive@@@Z ; std::_Destroy<MPQArchive * *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy@PAPAVMPQArchive@@@std@@YAXPAPAPAVMPQArchive@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAPAVMPQArchive@@@std@@YAXPAPAPAVMPQArchive@@@Z PROC ; std::_Destroy<MPQArchive * *>, COMDAT
; Line 64
	ret	0
??$_Destroy@PAPAVMPQArchive@@@std@@YAXPAPAPAVMPQArchive@@@Z ENDP ; std::_Destroy<MPQArchive * *>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z ; std::_Destroy<std::_Container_proxy>
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z PROC ; std::_Destroy<std::_Container_proxy>, COMDAT
; Line 64
	ret	0
??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z ENDP ; std::_Destroy<std::_Container_proxy>
_TEXT	ENDS
PUBLIC	??$_Fill_n@PAPAPAVMPQArchive@@IPAPAV1@@std@@YAXPAPAPAVMPQArchive@@IABQAPAV1@@Z ; std::_Fill_n<MPQArchive * * *,unsigned int,MPQArchive * *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Fill_n@PAPAPAVMPQArchive@@IPAPAV1@@std@@YAXPAPAPAVMPQArchive@@IABQAPAV1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill_n@PAPAPAVMPQArchive@@IPAPAV1@@std@@YAXPAPAPAVMPQArchive@@IABQAPAV1@@Z PROC ; std::_Fill_n<MPQArchive * * *,unsigned int,MPQArchive * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 2735
	push	ebp
	mov	ebp, esp
; Line 2736
	mov	eax, DWORD PTR __Count$[ebp]
	test	eax, eax
	je	SHORT $LN1@Fill_n
	mov	edx, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	esi
$LL3@Fill_n:
; Line 2737
	mov	esi, DWORD PTR [edx]
	mov	DWORD PTR [ecx], esi
	add	ecx, 4
	dec	eax
	jne	SHORT $LL3@Fill_n
	pop	esi
$LN1@Fill_n:
; Line 2738
	pop	ebp
	ret	0
??$_Fill_n@PAPAPAVMPQArchive@@IPAPAV1@@std@@YAXPAPAPAVMPQArchive@@IABQAPAV1@@Z ENDP ; std::_Fill_n<MPQArchive * * *,unsigned int,MPQArchive * *>
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
EXTRN	__imp_??1_Lockit@std@@QAE@XZ:PROC
EXTRN	__imp_??0_Lockit@std@@QAE@H@Z:PROC
; Function compile flags: /Ogtp
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Lock$11584 = 8					; size = 4
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx
; Line 143
	push	ebp
	mov	ebp, esp
; Line 144
	mov	eax, DWORD PTR __Parent$[ebp]
	test	eax, eax
	jne	SHORT $LN2@Adopt
; Line 146
	push	3
	lea	ecx, DWORD PTR __Lock$11584[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
; Line 148
	lea	ecx, DWORD PTR __Lock$11584[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
; Line 166
	pop	ebp
	ret	4
$LN2@Adopt:
; Line 163
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
; Line 166
	pop	ebp
	ret	4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
_TEXT	ENDS
PUBLIC	??1?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ ; std::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >::~_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ PROC ; std::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >::~_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ ENDP ; std::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >::~_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >
_TEXT	ENDS
PUBLIC	??1MPQFile@@QAE@XZ				; MPQFile::~MPQFile
; Function compile flags: /Ogtp
_TEXT	SEGMENT
??1MPQFile@@QAE@XZ PROC					; MPQFile::~MPQFile
; _this$ = ecx
; File c:\programovani\wow editor\test\src\editor\mpq.cpp
; Line 161
	push	esi
	mov	esi, ecx
; Line 162
	mov	eax, DWORD PTR [esi+1028]
	test	eax, eax
	je	SHORT $LN6@MPQFile
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN6@MPQFile:
	mov	BYTE PTR [esi+1024], 1
	mov	DWORD PTR [esi+1028], 0
	pop	esi
; Line 163
	ret	0
??1MPQFile@@QAE@XZ ENDP					; MPQFile::~MPQFile
_TEXT	ENDS
PUBLIC	??D?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBEAAPAVMPQArchive@@XZ ; std::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator*
; Function compile flags: /Ogtp
;	COMDAT ??D?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBEAAPAVMPQArchive@@XZ
_TEXT	SEGMENT
??D?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBEAAPAVMPQArchive@@XZ PROC ; std::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
; Line 619
	mov	eax, DWORD PTR [ecx]
	push	esi
	test	eax, eax
	jne	SHORT $LN8@operator@2
	xor	esi, esi
	jmp	SHORT $LN9@operator@2
$LN8@operator@2:
	mov	esi, DWORD PTR [eax]
$LN9@operator@2:
	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [esi+8]
	mov	ecx, eax
	shr	ecx, 2
	and	eax, 3
	cmp	edx, ecx
	ja	SHORT $LN3@operator@2
	sub	ecx, edx
$LN3@operator@2:
	mov	edx, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [edx+ecx*4]
	lea	eax, DWORD PTR [ecx+eax*4]
	pop	esi
; Line 620
	ret	0
??D?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBEAAPAVMPQArchive@@XZ ENDP ; std::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEAAV01@XZ ; std::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator++
; Function compile flags: /Ogtp
;	COMDAT ??E?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator++, COMDAT
; _this$ = ecx
; Line 628
	mov	eax, ecx
; Line 629
	inc	DWORD PTR [eax+8]
; Line 631
	ret	0
??E?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator++
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@PAVMPQArchive@@@std@@QAEPAPAVMPQArchive@@I@Z ; std::allocator<MPQArchive *>::allocate
; Function compile flags: /Ogtp
;	COMDAT ?allocate@?$allocator@PAVMPQArchive@@@std@@QAEPAPAVMPQArchive@@I@Z
_TEXT	SEGMENT
$T104928 = -12						; size = 12
$T104920 = 8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAVMPQArchive@@@std@@QAEPAPAVMPQArchive@@I@Z PROC ; std::allocator<MPQArchive *>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 186
	push	ebp
	mov	ebp, esp
; Line 187
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
	je	SHORT $LN1@allocate
	cmp	ecx, 1073741823				; 3fffffffH
	ja	SHORT $LN3@allocate
	lea	eax, DWORD PTR [ecx*4]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@allocate
$LN3@allocate:
	lea	ecx, DWORD PTR $T104920[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T104928[ebp]
	mov	DWORD PTR $T104920[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T104928[ebp]
	push	edx
	mov	DWORD PTR $T104928[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN13@allocate:
$LN1@allocate:
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
$LN12@allocate:
?allocate@?$allocator@PAVMPQArchive@@@std@@QAEPAPAVMPQArchive@@I@Z ENDP ; std::allocator<MPQArchive *>::allocate
_TEXT	ENDS
PUBLIC	??8?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBE_NABV01@@Z ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator==
; Function compile flags: /Ogtp
;	COMDAT ??8?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
; Line 474
	push	ebp
	mov	ebp, esp
; Line 476
	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR __Right$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx+8]
	sete	al
; Line 477
	pop	ebp
	ret	4
??8?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator==
_TEXT	ENDS
PUBLIC	?max_size@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBEIXZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::max_size
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBEIXZ PROC ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::max_size, COMDAT
; _this$ = ecx
; Line 1155
	mov	eax, 1073741823				; 3fffffffH
; Line 1156
	ret	0
?max_size@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBEIXZ ENDP ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@PAPAVMPQArchive@@@std@@QAEPAPAPAVMPQArchive@@I@Z ; std::allocator<MPQArchive * *>::allocate
; Function compile flags: /Ogtp
;	COMDAT ?allocate@?$allocator@PAPAVMPQArchive@@@std@@QAEPAPAPAVMPQArchive@@I@Z
_TEXT	SEGMENT
$T104967 = -12						; size = 12
$T104959 = 8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAPAVMPQArchive@@@std@@QAEPAPAPAVMPQArchive@@I@Z PROC ; std::allocator<MPQArchive * *>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 186
	push	ebp
	mov	ebp, esp
; Line 187
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
	je	SHORT $LN1@allocate@2
	cmp	ecx, 1073741823				; 3fffffffH
	ja	SHORT $LN3@allocate@2
	lea	eax, DWORD PTR [ecx*4]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@allocate@2
$LN3@allocate@2:
	lea	ecx, DWORD PTR $T104959[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T104967[ebp]
	mov	DWORD PTR $T104959[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T104967[ebp]
	push	edx
	mov	DWORD PTR $T104967[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN13@allocate@2:
$LN1@allocate@2:
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
$LN12@allocate@2:
?allocate@?$allocator@PAPAVMPQArchive@@@std@@QAEPAPAPAVMPQArchive@@I@Z ENDP ; std::allocator<MPQArchive * *>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
; Function compile flags: /Ogtp
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
$T104990 = -12						; size = 12
$T104982 = 8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx
; Line 186
	push	ebp
	mov	ebp, esp
; Line 187
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
	je	SHORT $LN1@allocate@3
	cmp	ecx, 536870911				; 1fffffffH
	ja	SHORT $LN3@allocate@3
	lea	eax, DWORD PTR [ecx*8]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@allocate@3
$LN3@allocate@3:
	lea	ecx, DWORD PTR $T104982[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T104990[ebp]
	mov	DWORD PTR $T104982[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T104990[ebp]
	push	edx
	mov	DWORD PTR $T104990[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN13@allocate@3:
$LN1@allocate@3:
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
$LN12@allocate@3:
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
PUBLIC	?_Setcont@?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEXPBV?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@@Z ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::_Setcont
; Function compile flags: /Ogtp
;	COMDAT ?_Setcont@?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEXPBV?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@@Z
_TEXT	SEGMENT
__Lock$105007 = 8					; size = 4
__Pdeque$ = 8						; size = 4
?_Setcont@?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEXPBV?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@@Z PROC ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::_Setcont, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
; Line 541
	push	ebp
	mov	ebp, esp
; Line 542
	mov	eax, DWORD PTR __Pdeque$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Setcont
	push	3
	lea	ecx, DWORD PTR __Lock$105007[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	lea	ecx, DWORD PTR __Lock$105007[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
; Line 543
	pop	ebp
	ret	4
; Line 542
$LN4@Setcont:
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
; Line 543
	pop	ebp
	ret	4
?_Setcont@?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEXPBV?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@@Z ENDP ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::_Setcont
_TEXT	ENDS
PUBLIC	??$_Uninitialized_copy@PAPAPAVMPQArchive@@PAPAPAV1@V?$allocator@PAPAVMPQArchive@@@std@@@std@@YAPAPAPAVMPQArchive@@PAPAPAV1@00AAV?$allocator@PAPAVMPQArchive@@@0@@Z ; std::_Uninitialized_copy<MPQArchive * * *,MPQArchive * * *,std::allocator<MPQArchive * *> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Uninitialized_copy@PAPAPAVMPQArchive@@PAPAPAV1@V?$allocator@PAPAVMPQArchive@@@std@@@std@@YAPAPAPAVMPQArchive@@PAPAPAV1@00AAV?$allocator@PAPAVMPQArchive@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAPAPAVMPQArchive@@PAPAPAV1@V?$allocator@PAPAVMPQArchive@@@std@@@std@@YAPAPAPAVMPQArchive@@PAPAPAV1@00AAV?$allocator@PAPAVMPQArchive@@@0@@Z PROC ; std::_Uninitialized_copy<MPQArchive * * *,MPQArchive * * *,std::allocator<MPQArchive * *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
; Line 412
	push	ebp
	mov	ebp, esp
; Line 414
	mov	ecx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, ecx
	push	esi
	sar	eax, 2
	lea	esi, DWORD PTR [eax*4]
	mov	eax, DWORD PTR __Dest$[ebp]
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
	pop	esi
; Line 415
	pop	ebp
	ret	0
??$_Uninitialized_copy@PAPAPAVMPQArchive@@PAPAPAV1@V?$allocator@PAPAVMPQArchive@@@std@@@std@@YAPAPAPAVMPQArchive@@PAPAPAV1@00AAV?$allocator@PAPAVMPQArchive@@@0@@Z ENDP ; std::_Uninitialized_copy<MPQArchive * * *,MPQArchive * * *,std::allocator<MPQArchive * *> >
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAPAVMPQArchive@@@std@@@std@@YAXPAPAPAVMPQArchive@@0AAV?$allocator@PAPAVMPQArchive@@@0@@Z ; std::_Destroy_range<std::allocator<MPQArchive * *> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy_range@V?$allocator@PAPAVMPQArchive@@@std@@@std@@YAXPAPAPAVMPQArchive@@0AAV?$allocator@PAPAVMPQArchive@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAPAVMPQArchive@@@std@@@std@@YAXPAPAPAVMPQArchive@@0AAV?$allocator@PAPAVMPQArchive@@@0@@Z PROC ; std::_Destroy_range<std::allocator<MPQArchive * *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 89
	ret	0
??$_Destroy_range@V?$allocator@PAPAVMPQArchive@@@std@@@std@@YAXPAPAPAVMPQArchive@@0AAV?$allocator@PAPAVMPQArchive@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<MPQArchive * *> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAVMPQArchive@@@std@@QAEXPAPAVMPQArchive@@ABQAV3@@Z ; std::allocator<MPQArchive *>::construct
; Function compile flags: /Ogtp
;	COMDAT ?construct@?$allocator@PAVMPQArchive@@@std@@QAEXPAPAVMPQArchive@@ABQAV3@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAVMPQArchive@@@std@@QAEXPAPAVMPQArchive@@ABQAV3@@Z PROC ; std::allocator<MPQArchive *>::construct, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
; Line 197
	mov	eax, DWORD PTR __Ptr$[ebp]
	test	eax, eax
	je	SHORT $LN5@construct
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN5@construct:
; Line 198
	pop	ebp
	ret	8
?construct@?$allocator@PAVMPQArchive@@@std@@QAEXPAPAVMPQArchive@@ABQAV3@@Z ENDP ; std::allocator<MPQArchive *>::construct
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAVMPQArchive@@@std@@QAEXPAPAVMPQArchive@@@Z ; std::allocator<MPQArchive *>::destroy
; Function compile flags: /Ogtp
;	COMDAT ?destroy@?$allocator@PAVMPQArchive@@@std@@QAEXPAPAVMPQArchive@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAVMPQArchive@@@std@@QAEXPAPAVMPQArchive@@@Z PROC ; std::allocator<MPQArchive *>::destroy, COMDAT
; _this$ = ecx
; Line 214
	ret	4
?destroy@?$allocator@PAVMPQArchive@@@std@@QAEXPAPAVMPQArchive@@@Z ENDP ; std::allocator<MPQArchive *>::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAPAVMPQArchive@@@std@@QAEXPAPAPAVMPQArchive@@@Z ; std::allocator<MPQArchive * *>::destroy
; Function compile flags: /Ogtp
;	COMDAT ?destroy@?$allocator@PAPAVMPQArchive@@@std@@QAEXPAPAPAVMPQArchive@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAPAVMPQArchive@@@std@@QAEXPAPAPAVMPQArchive@@@Z PROC ; std::allocator<MPQArchive * *>::destroy, COMDAT
; _this$ = ecx
; Line 214
	ret	4
?destroy@?$allocator@PAPAVMPQArchive@@@std@@QAEXPAPAPAVMPQArchive@@@Z ENDP ; std::allocator<MPQArchive * *>::destroy
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z ; std::allocator<std::_Container_proxy>::construct
; Function compile flags: /Ogtp
;	COMDAT ?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z PROC ; std::allocator<std::_Container_proxy>::construct, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
; Line 202
	mov	eax, DWORD PTR __Ptr$[ebp]
	test	eax, eax
	je	SHORT $LN3@construct@2
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
$LN3@construct@2:
; Line 203
	pop	ebp
	ret	8
?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z ENDP ; std::allocator<std::_Container_proxy>::construct
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z ; std::allocator<std::_Container_proxy>::destroy
; Function compile flags: /Ogtp
;	COMDAT ?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z PROC ; std::allocator<std::_Container_proxy>::destroy, COMDAT
; _this$ = ecx
; Line 214
	ret	4
?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy
_TEXT	ENDS
PUBLIC	??$_Uninit_def_fill_n@PAPAVMPQArchive@@IPAPAV1@PAPAV1@@std@@YAXPAPAPAVMPQArchive@@IPBQAPAV1@AAV?$allocator@PAPAVMPQArchive@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_def_fill_n<MPQArchive * *,unsigned int,MPQArchive * *,MPQArchive * *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Uninit_def_fill_n@PAPAVMPQArchive@@IPAPAV1@PAPAV1@@std@@YAXPAPAPAVMPQArchive@@IPBQAPAV1@AAV?$allocator@PAPAVMPQArchive@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_def_fill_n@PAPAVMPQArchive@@IPAPAV1@PAPAV1@@std@@YAXPAPAPAVMPQArchive@@IPBQAPAV1@AAV?$allocator@PAPAVMPQArchive@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_def_fill_n<MPQArchive * *,unsigned int,MPQArchive * *,MPQArchive * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
; Line 660
	push	ebp
	mov	ebp, esp
; Line 661
	mov	ecx, DWORD PTR __Count$[ebp]
	test	ecx, ecx
	je	SHORT $LN5@Uninit_def
	push	edi
	mov	edi, DWORD PTR __First$[ebp]
	xor	eax, eax
	rep stosd
	pop	edi
$LN5@Uninit_def:
; Line 662
	pop	ebp
	ret	0
??$_Uninit_def_fill_n@PAPAVMPQArchive@@IPAPAV1@PAPAV1@@std@@YAXPAPAPAVMPQArchive@@IPBQAPAV1@AAV?$allocator@PAPAVMPQArchive@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_def_fill_n<MPQArchive * *,unsigned int,MPQArchive * *,MPQArchive * *>
_TEXT	ENDS
PUBLIC	??9?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBE_NABV01@@Z ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator!=
; Function compile flags: /Ogtp
;	COMDAT ??9?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator!=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
; Line 480
	push	ebp
	mov	ebp, esp
; Line 481
	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR __Right$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx+8]
	setne	al
; Line 482
	pop	ebp
	ret	4
??9?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator!=
_TEXT	ENDS
PUBLIC	??0?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Lock$105136 = 12					; size = 4
__Pdeque$ = 12						; size = 4
??0?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z PROC ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >, COMDAT
; _this$ = ecx
; Line 310
	push	ebp
	mov	ebp, esp
; Line 312
	mov	eax, DWORD PTR __Pdeque$[ebp]
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
	test	eax, eax
	jne	SHORT $LN8@Deque_cons
	push	3
	lea	ecx, DWORD PTR __Lock$105136[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	lea	ecx, DWORD PTR __Lock$105136[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
; Line 313
	mov	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR [esi+8], eax
; Line 314
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	8
; Line 312
$LN8@Deque_cons:
	mov	ecx, DWORD PTR [eax]
; Line 313
	mov	edx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR [esi], ecx
	mov	DWORD PTR [esi+8], edx
; Line 314
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	8
??0?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ENDP ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAVMPQArchive@@@std@@PAVMPQArchive@@ABQAV3@@std@@YAXAAV?$allocator@PAVMPQArchive@@@0@PAPAVMPQArchive@@ABQAV2@@Z ; std::_Cons_val<std::allocator<MPQArchive *>,MPQArchive *,MPQArchive * const &>
; Function compile flags: /Ogtp
;	COMDAT ??$_Cons_val@V?$allocator@PAVMPQArchive@@@std@@PAVMPQArchive@@ABQAV3@@std@@YAXAAV?$allocator@PAVMPQArchive@@@0@PAPAVMPQArchive@@ABQAV2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAVMPQArchive@@@std@@PAVMPQArchive@@ABQAV3@@std@@YAXAAV?$allocator@PAVMPQArchive@@@0@PAPAVMPQArchive@@ABQAV2@@Z PROC ; std::_Cons_val<std::allocator<MPQArchive *>,MPQArchive *,MPQArchive * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Pdest$[ebp]
	test	eax, eax
	je	SHORT $LN9@Cons_val
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN9@Cons_val:
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@PAVMPQArchive@@@std@@PAVMPQArchive@@ABQAV3@@std@@YAXAAV?$allocator@PAVMPQArchive@@@0@PAPAVMPQArchive@@ABQAV2@@Z ENDP ; std::_Cons_val<std::allocator<MPQArchive *>,MPQArchive *,MPQArchive * const &>
_TEXT	ENDS
PUBLIC	??$_Uninitialized_default_fill_n@PAPAPAVMPQArchive@@IPAPAV1@V?$allocator@PAPAVMPQArchive@@@std@@@std@@YAXPAPAPAVMPQArchive@@IPBQAPAV1@AAV?$allocator@PAPAVMPQArchive@@@0@@Z ; std::_Uninitialized_default_fill_n<MPQArchive * * *,unsigned int,MPQArchive * *,std::allocator<MPQArchive * *> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Uninitialized_default_fill_n@PAPAPAVMPQArchive@@IPAPAV1@V?$allocator@PAPAVMPQArchive@@@std@@@std@@YAXPAPAPAVMPQArchive@@IPBQAPAV1@AAV?$allocator@PAPAVMPQArchive@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Pval$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_default_fill_n@PAPAPAVMPQArchive@@IPAPAV1@V?$allocator@PAPAVMPQArchive@@@std@@@std@@YAXPAPAPAVMPQArchive@@IPBQAPAV1@AAV?$allocator@PAPAVMPQArchive@@@0@@Z PROC ; std::_Uninitialized_default_fill_n<MPQArchive * * *,unsigned int,MPQArchive * *,std::allocator<MPQArchive * *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
; Line 670
	push	ebp
	mov	ebp, esp
; Line 672
	mov	ecx, DWORD PTR __Count$[ebp]
	test	ecx, ecx
	je	SHORT $LN11@Uninitiali
	push	edi
	mov	edi, DWORD PTR __First$[ebp]
	xor	eax, eax
	rep stosd
	pop	edi
$LN11@Uninitiali:
; Line 673
	pop	ebp
	ret	0
??$_Uninitialized_default_fill_n@PAPAPAVMPQArchive@@IPAPAV1@V?$allocator@PAPAVMPQArchive@@@std@@@std@@YAXPAPAPAVMPQArchive@@IPBQAPAV1@AAV?$allocator@PAPAVMPQArchive@@@0@@Z ENDP ; std::_Uninitialized_default_fill_n<MPQArchive * * *,unsigned int,MPQArchive * *,std::allocator<MPQArchive * *> >
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@PAPAVMPQArchive@@@std@@PAPAVMPQArchive@@@std@@YAXAAV?$allocator@PAPAVMPQArchive@@@0@PAPAPAVMPQArchive@@@Z ; std::_Dest_val<std::allocator<MPQArchive * *>,MPQArchive * *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Dest_val@V?$allocator@PAPAVMPQArchive@@@std@@PAPAVMPQArchive@@@std@@YAXAAV?$allocator@PAPAVMPQArchive@@@0@PAPAPAVMPQArchive@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@PAPAVMPQArchive@@@std@@PAPAVMPQArchive@@@std@@YAXAAV?$allocator@PAPAVMPQArchive@@@0@PAPAPAVMPQArchive@@@Z PROC ; std::_Dest_val<std::allocator<MPQArchive * *>,MPQArchive * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 288
	ret	0
??$_Dest_val@V?$allocator@PAPAVMPQArchive@@@std@@PAPAVMPQArchive@@@std@@YAXAAV?$allocator@PAPAVMPQArchive@@@0@PAPAPAVMPQArchive@@@Z ENDP ; std::_Dest_val<std::allocator<MPQArchive * *>,MPQArchive * *>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
; Function compile flags: /Ogtp
;	COMDAT ??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z PROC ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Pdest$[ebp]
	test	eax, eax
	je	SHORT $LN7@Cons_val@2
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
$LN7@Cons_val@2:
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ENDP ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
; Function compile flags: /Ogtp
;	COMDAT ??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z PROC ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>, COMDAT
; Line 288
	ret	0
??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ENDP ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@PAVMPQArchive@@@std@@PAVMPQArchive@@@std@@YAXAAV?$allocator@PAVMPQArchive@@@0@PAPAVMPQArchive@@@Z ; std::_Dest_val<std::allocator<MPQArchive *>,MPQArchive *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Dest_val@V?$allocator@PAVMPQArchive@@@std@@PAVMPQArchive@@@std@@YAXAAV?$allocator@PAVMPQArchive@@@0@PAPAVMPQArchive@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@PAVMPQArchive@@@std@@PAVMPQArchive@@@std@@YAXAAV?$allocator@PAVMPQArchive@@@0@PAPAVMPQArchive@@@Z PROC ; std::_Dest_val<std::allocator<MPQArchive *>,MPQArchive *>, COMDAT
; Line 288
	ret	0
??$_Dest_val@V?$allocator@PAVMPQArchive@@@std@@PAVMPQArchive@@@std@@YAXAAV?$allocator@PAVMPQArchive@@@0@PAPAVMPQArchive@@@Z ENDP ; std::_Dest_val<std::allocator<MPQArchive *>,MPQArchive *>
_TEXT	ENDS
PUBLIC	?_Growmap@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@IAEXI@Z ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::_Growmap
; Function compile flags: /Ogtp
;	COMDAT ?_Growmap@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Myboff$ = -16						; size = 4
tv516 = -12						; size = 4
tv509 = -12						; size = 4
__Count$105325 = -12					; size = 4
$T105306 = -8						; size = 4
__Newmap$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Growmap@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@IAEXI@Z PROC ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::_Growmap, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
; Line 1589
	push	ebp
	mov	ebp, esp
; Line 1590
	mov	edx, DWORD PTR __Count$[ebp]
	sub	esp, 16					; 00000010H
	push	ebx
	mov	ebx, ecx
	mov	eax, DWORD PTR [ebx+8]
	mov	ecx, 268435455				; 0fffffffH
	sub	ecx, eax
	cmp	ecx, edx
	jae	SHORT $LN6@Growmap
; Line 1591
	push	OFFSET ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN99@Growmap:
$LN6@Growmap:
; Line 1593
	mov	ecx, eax
	shr	ecx, 1
; Line 1594
	cmp	ecx, 8
	jae	SHORT $LN5@Growmap
; Line 1595
	mov	ecx, 8
$LN5@Growmap:
	push	esi
	push	edi
; Line 1596
	cmp	edx, ecx
	jae	SHORT $LN4@Growmap
	mov	esi, 268435455				; 0fffffffH
	sub	esi, ecx
	cmp	eax, esi
	ja	SHORT $LN4@Growmap
; Line 1597
	mov	DWORD PTR __Count$[ebp], ecx
	mov	edx, ecx
$LN4@Growmap:
; Line 1598
	mov	edi, DWORD PTR [ebx+12]
; Line 1599
	add	eax, edx
	shr	edi, 2
	push	eax
	lea	ecx, DWORD PTR [ebx+21]
	mov	DWORD PTR __Myboff$[ebp], edi
	call	?allocate@?$allocator@PAPAVMPQArchive@@@std@@QAEPAPAPAVMPQArchive@@I@Z ; std::allocator<MPQArchive * *>::allocate
; Line 1604
	mov	edx, DWORD PTR [ebx+4]
	lea	esi, DWORD PTR [edi*4]
	lea	ecx, DWORD PTR [esi+edx]
	mov	DWORD PTR $T105306[ebp], ecx
	mov	ecx, DWORD PTR [ebx+8]
	add	ecx, ecx
	add	ecx, ecx
	sub	ecx, DWORD PTR $T105306[ebp]
	mov	DWORD PTR __Newmap$[ebp], eax
	add	ecx, edx
	mov	edx, DWORD PTR $T105306[ebp]
	sar	ecx, 2
	add	ecx, ecx
	add	ecx, ecx
	push	ecx
	push	edx
	add	eax, esi
	push	eax
	mov	DWORD PTR tv509[ebp], ecx
	call	DWORD PTR __imp__memmove
; Line 1605
	mov	edx, DWORD PTR __Count$[ebp]
	add	eax, DWORD PTR tv509[ebp]
; Line 1609
	mov	ecx, DWORD PTR [ebx+4]
	add	esp, 12					; 0000000cH
	cmp	edi, edx
	ja	SHORT $LN3@Growmap
	sar	esi, 2
	mov	DWORD PTR __Count$105325[ebp], esi
; Line 1611
	mov	esi, edx
	mov	edx, DWORD PTR __Count$105325[ebp]
	add	edx, edx
	add	edx, edx
	push	edx
	push	ecx
	push	eax
	mov	DWORD PTR tv516[ebp], edx
	call	DWORD PTR __imp__memmove
	mov	edx, eax
	add	edx, DWORD PTR tv516[ebp]
	add	esp, 12					; 0000000cH
	sub	esi, edi
	je	SHORT $LN46@Growmap
; Line 1609
	mov	ecx, esi
	xor	eax, eax
	mov	edi, edx
	rep stosd
	mov	edi, DWORD PTR __Myboff$[ebp]
; Line 1611
$LN46@Growmap:
; Line 1613
	test	edi, edi
	je	SHORT $LN95@Growmap
	mov	ecx, edi
	mov	edi, DWORD PTR __Newmap$[ebp]
; Line 1615
	jmp	SHORT $LN98@Growmap
$LN3@Growmap:
; Line 1619
	lea	edi, DWORD PTR [edx*4]
	mov	edx, edi
	sar	edx, 2
	add	edx, edx
	add	edx, edx
	push	edx
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
; Line 1622
	mov	eax, DWORD PTR [ebx+4]
	lea	ecx, DWORD PTR [edi+eax]
	sub	esi, ecx
	add	esi, eax
	mov	eax, DWORD PTR __Newmap$[ebp]
	sar	esi, 2
	add	esi, esi
	add	esi, esi
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
; Line 1624
	mov	ecx, DWORD PTR __Count$[ebp]
	add	esp, 24					; 00000018H
	lea	edi, DWORD PTR [esi+eax]
	test	ecx, ecx
	je	SHORT $LN95@Growmap
$LN98@Growmap:
; Line 1619
	xor	eax, eax
	rep stosd
$LN95@Growmap:
; Line 1629
	mov	eax, DWORD PTR [ebx+4]
	pop	edi
	pop	esi
	test	eax, eax
	je	SHORT $LN87@Growmap
; Line 1631
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN87@Growmap:
; Line 1633
	mov	ecx, DWORD PTR __Newmap$[ebp]
; Line 1634
	mov	edx, DWORD PTR __Count$[ebp]
	add	DWORD PTR [ebx+8], edx
	mov	DWORD PTR [ebx+4], ecx
	pop	ebx
; Line 1635
	mov	esp, ebp
	pop	ebp
	ret	4
$LN97@Growmap:
?_Growmap@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@IAEXI@Z ENDP ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::_Growmap
_TEXT	ENDS
PUBLIC	??0?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@V?$allocator@PAVMPQArchive@@@1@@Z ; std::_Deque_val<MPQArchive *,std::allocator<MPQArchive *> >::_Deque_val<MPQArchive *,std::allocator<MPQArchive *> >
EXTRN	__imp_??1_Container_base12@std@@QAE@XZ:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??0?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@V?$allocator@PAVMPQArchive@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@V?$allocator@PAVMPQArchive@@@1@@Z$0
__ehfuncinfo$??0?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@V?$allocator@PAVMPQArchive@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@V?$allocator@PAVMPQArchive@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??0?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@V?$allocator@PAVMPQArchive@@@1@@Z
_TEXT	SEGMENT
$T105554 = -32						; size = 12
_this$ = -20						; size = 4
$T105538 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@V?$allocator@PAVMPQArchive@@@1@@Z PROC ; std::_Deque_val<MPQArchive *,std::allocator<MPQArchive *> >::_Deque_val<MPQArchive *,std::allocator<MPQArchive *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
; Line 728
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@V?$allocator@PAVMPQArchive@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	xor	edi, edi
	mov	DWORD PTR [esi], edi
; Line 731
	push	8
	mov	DWORD PTR __$EHRec$[ebp+8], edi
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	cmp	eax, edi
	je	SHORT $LN14@Deque_val
	mov	DWORD PTR [esi], eax
; Line 732
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	xor	edx, edx
	mov	DWORD PTR [eax+4], edx
; Line 733
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [eax], esi
; Line 735
	mov	DWORD PTR [esi+4], edi
; Line 736
	mov	DWORD PTR [esi+8], edi
; Line 737
	mov	DWORD PTR [esi+12], edi
; Line 738
	mov	DWORD PTR [esi+16], edi
; Line 739
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
; Line 731
$LN14@Deque_val:
	lea	ecx, DWORD PTR $T105538[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T105554[ebp]
	mov	DWORD PTR $T105538[ebp], edi
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T105554[ebp]
	push	edx
	mov	DWORD PTR $T105554[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN41@Deque_val:
$LN40@Deque_val:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@V?$allocator@PAVMPQArchive@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
__ehhandler$??0?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@V?$allocator@PAVMPQArchive@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@V?$allocator@PAVMPQArchive@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@V?$allocator@PAVMPQArchive@@@1@@Z ENDP ; std::_Deque_val<MPQArchive *,std::allocator<MPQArchive *> >::_Deque_val<MPQArchive *,std::allocator<MPQArchive *> >
PUBLIC	??1?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ ; std::_Deque_val<MPQArchive *,std::allocator<MPQArchive *> >::~_Deque_val<MPQArchive *,std::allocator<MPQArchive *> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ PROC ; std::_Deque_val<MPQArchive *,std::allocator<MPQArchive *> >::~_Deque_val<MPQArchive *,std::allocator<MPQArchive *> >, COMDAT
; _this$ = ecx
; Line 742
	push	esi
	mov	esi, ecx
; Line 747
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 748
	mov	DWORD PTR [esi], 0
	pop	esi
; Line 749
	ret	0
??1?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ ENDP ; std::_Deque_val<MPQArchive *,std::allocator<MPQArchive *> >::~_Deque_val<MPQArchive *,std::allocator<MPQArchive *> >
_TEXT	ENDS
PUBLIC	??0?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ; std::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Lock$105684 = 12					; size = 4
__Pdeque$ = 12						; size = 4
??0?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z PROC ; std::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >, COMDAT
; _this$ = ecx
; Line 601
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Pdeque$[ebp]
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
	test	eax, eax
	jne	SHORT $LN10@Deque_iter
	push	3
	lea	ecx, DWORD PTR __Lock$105684[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	lea	ecx, DWORD PTR __Lock$105684[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	mov	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR [esi+8], eax
; Line 602
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	8
; Line 601
$LN10@Deque_iter:
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR [esi], ecx
	mov	DWORD PTR [esi+8], edx
; Line 602
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	8
??0?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ENDP ; std::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >
_TEXT	ENDS
PUBLIC	?pop_back@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEXXZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::pop_back
; Function compile flags: /Ogtp
;	COMDAT ?pop_back@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?pop_back@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEXXZ PROC ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::pop_back, COMDAT
; _this$ = ecx
; Line 1290
	mov	eax, DWORD PTR [ecx+16]
	test	eax, eax
	je	SHORT $LN1@pop_back
; Line 1298
	dec	eax
	mov	DWORD PTR [ecx+16], eax
	jne	SHORT $LN1@pop_back
; Line 1299
	mov	DWORD PTR [ecx+12], 0
$LN1@pop_back:
; Line 1302
	ret	0
?pop_back@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEXXZ ENDP ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::pop_back
_TEXT	ENDS
PUBLIC	??0?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::deque<MPQArchive *,std::allocator<MPQArchive *> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??0?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ$1
__ehfuncinfo$??0?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??0?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T105808 = -32						; size = 12
_this$ = -20						; size = 4
$T105725 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ PROC ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::deque<MPQArchive *,std::allocator<MPQArchive *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
; Line 799
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	xor	edi, edi
	mov	DWORD PTR [esi], edi
	push	8
	mov	DWORD PTR __$EHRec$[ebp+8], edi
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	cmp	eax, edi
	je	SHORT $LN19@deque
	mov	DWORD PTR [esi], eax
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	xor	edx, edx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi+4], edi
	mov	DWORD PTR [esi+8], edi
	mov	DWORD PTR [esi+12], edi
	mov	DWORD PTR [esi+16], edi
; Line 800
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
; Line 799
$LN19@deque:
	lea	ecx, DWORD PTR $T105725[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T105808[ebp]
	mov	DWORD PTR $T105725[ebp], edi
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T105808[ebp]
	push	edx
	mov	DWORD PTR $T105808[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN47@deque:
$LN46@deque:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
__ehhandler$??0?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ ENDP ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::deque<MPQArchive *,std::allocator<MPQArchive *> >
PUBLIC	?begin@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE?AV?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@XZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::begin
; Function compile flags: /Ogtp
;	COMDAT ?begin@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE?AV?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE?AV?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@XZ PROC ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::begin, COMDAT
; _this$ = ecx
; Line 1050
	push	ebp
	mov	ebp, esp
; Line 1051
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+8], edx
; Line 1052
	pop	ebp
	ret	4
?begin@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE?AV?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@XZ ENDP ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::begin
_TEXT	ENDS
PUBLIC	?end@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE?AV?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@XZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::end
; Function compile flags: /Ogtp
;	COMDAT ?end@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE?AV?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE?AV?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@XZ PROC ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::end, COMDAT
; _this$ = ecx
; Line 1060
	push	ebp
	mov	ebp, esp
; Line 1061
	mov	edx, DWORD PTR [ecx+16]
	add	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+8], edx
; Line 1062
	pop	ebp
	ret	4
?end@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE?AV?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@XZ ENDP ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::end
_TEXT	ENDS
PUBLIC	?push_front@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEXABQAVMPQArchive@@@Z ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::push_front
; Function compile flags: /Ogtp
;	COMDAT ?push_front@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEXABQAVMPQArchive@@@Z
_TEXT	SEGMENT
$T106006 = -16						; size = 12
$T105984 = -4						; size = 4
__Val$ = 8						; size = 4
?push_front@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEXABQAVMPQArchive@@@Z PROC ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::push_front, COMDAT
; _this$ = ecx
; Line 1223
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	mov	esi, ecx
; Line 1225
	test	BYTE PTR [esi+12], 3
	jne	SHORT $LN36@push_front
	mov	eax, DWORD PTR [esi+16]
	add	eax, 4
	shr	eax, 2
	cmp	DWORD PTR [esi+8], eax
	ja	SHORT $LN36@push_front
	push	1
	call	?_Growmap@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@IAEXI@Z ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::_Growmap
$LN36@push_front:
	mov	ebx, DWORD PTR [esi+12]
	test	ebx, ebx
	jne	SHORT $LN6@push_front
	mov	ebx, DWORD PTR [esi+8]
	add	ebx, ebx
	add	ebx, ebx
$LN6@push_front:
	mov	ecx, DWORD PTR [esi+4]
	dec	ebx
	push	edi
	mov	edi, ebx
	shr	edi, 2
	cmp	DWORD PTR [ecx+edi*4], 0
	jne	SHORT $LN1@push_front
	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN11@push_front
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR [edx+edi*4], eax
$LN1@push_front:
; Line 1227
	mov	edx, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [edx+edi*4]
	mov	eax, ebx
	and	eax, 3
	lea	eax, DWORD PTR [ecx+eax*4]
	pop	edi
	test	eax, eax
	je	SHORT $LN29@push_front
	mov	edx, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
$LN29@push_front:
; Line 1228
	inc	DWORD PTR [esi+16]
	mov	DWORD PTR [esi+12], ebx
	pop	esi
	pop	ebx
; Line 1229
	mov	esp, ebp
	pop	ebp
	ret	4
; Line 1225
$LN11@push_front:
	lea	eax, DWORD PTR $T105984[ebp]
	push	eax
	lea	ecx, DWORD PTR $T106006[ebp]
	mov	DWORD PTR $T105984[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T106006[ebp]
	push	ecx
	mov	DWORD PTR $T106006[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN38@push_front:
$LN37@push_front:
	int	3
?push_front@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEXABQAVMPQArchive@@@Z ENDP ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::push_front
_TEXT	ENDS
PUBLIC	?_Tidy@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@IAEXXZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::_Tidy
; Function compile flags: /Ogtp
;	COMDAT ?_Tidy@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@IAEXXZ PROC ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::_Tidy, COMDAT
; _this$ = ecx
; Line 1638
	push	ebx
	push	esi
	mov	esi, ecx
; Line 1639
	mov	eax, DWORD PTR [esi+16]
	xor	ebx, ebx
	cmp	eax, ebx
	je	SHORT $LN5@Tidy
	npad	3
$LL6@Tidy:
; Line 1640
	cmp	eax, ebx
	je	SHORT $LN11@Tidy
	dec	eax
	mov	DWORD PTR [esi+16], eax
	jne	SHORT $LN11@Tidy
	mov	DWORD PTR [esi+12], ebx
$LN11@Tidy:
; Line 1639
	cmp	DWORD PTR [esi+16], ebx
	jne	SHORT $LL6@Tidy
$LN5@Tidy:
	push	edi
; Line 1641
	mov	edi, DWORD PTR [esi+8]
	cmp	edi, ebx
	jbe	SHORT $LN3@Tidy
	npad	6
$LL4@Tidy:
	mov	eax, DWORD PTR [esi+4]
; Line 1643
	dec	edi
	cmp	DWORD PTR [eax+edi*4], ebx
	lea	eax, DWORD PTR [eax+edi*4]
	je	SHORT $LN2@Tidy
; Line 1645
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@Tidy:
; Line 1641
	cmp	edi, ebx
	ja	SHORT $LL4@Tidy
$LN3@Tidy:
; Line 1650
	mov	eax, DWORD PTR [esi+4]
	pop	edi
	cmp	eax, ebx
	je	SHORT $LN24@Tidy
; Line 1652
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN24@Tidy:
; Line 1654
	mov	DWORD PTR [esi+4], ebx
	mov	DWORD PTR [esi+8], ebx
	pop	esi
	pop	ebx
; Line 1655
	ret	0
?_Tidy@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@IAEXXZ ENDP ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::_Tidy
_TEXT	ENDS
PUBLIC	??0MPQArchive@@QAE@PBD@Z			; MPQArchive::MPQArchive
EXTRN	_libmpq__archive_open:PROC
; Function compile flags: /Ogtp
_TEXT	SEGMENT
$T106107 = 8						; size = 4
_filename$ = 8						; size = 4
??0MPQArchive@@QAE@PBD@Z PROC				; MPQArchive::MPQArchive
; _this$ = ecx
; File c:\programovani\wow editor\test\src\editor\mpq.cpp
; Line 13
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
	push	edi
; Line 14
	mov	edi, DWORD PTR _filename$[ebp]
	push	-1
	push	-1
	mov	esi, ecx
	push	edi
	push	esi
	call	_libmpq__archive_open
; Line 15
	push	edi
	push	OFFSET $SG98079
	mov	ebx, eax
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 24					; 00000018H
; Line 16
	test	ebx, ebx
	je	$LN9@MPQArchive
; Line 18
	lea	eax, DWORD PTR [ebx+7]
	cmp	eax, 6
	ja	SHORT $LN1@MPQArchive
	jmp	DWORD PTR $LN13@MPQArchive[eax*4]
$LN6@MPQArchive:
; Line 20
	push	edi
	push	OFFSET $SG98086
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 8
	pop	edi
; Line 46
	mov	eax, esi
	pop	esi
	pop	ebx
	pop	ebp
	ret	4
$LN5@MPQArchive:
; Line 24
	push	edi
	push	OFFSET $SG98088
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 8
	pop	edi
; Line 46
	mov	eax, esi
	pop	esi
	pop	ebx
	pop	ebp
	ret	4
$LN4@MPQArchive:
; Line 28
	push	edi
	push	OFFSET $SG98090
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 8
	pop	edi
; Line 46
	mov	eax, esi
	pop	esi
	pop	ebx
	pop	ebp
	ret	4
$LN3@MPQArchive:
; Line 32
	push	edi
	push	OFFSET $SG98092
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 8
	pop	edi
; Line 46
	mov	eax, esi
	pop	esi
	pop	ebx
	pop	ebp
	ret	4
$LN2@MPQArchive:
; Line 36
	push	edi
	push	OFFSET $SG98094
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 8
	pop	edi
; Line 46
	mov	eax, esi
	pop	esi
	pop	ebx
	pop	ebp
	ret	4
$LN1@MPQArchive:
; Line 40
	push	edi
	push	OFFSET $SG98096
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 8
	pop	edi
; Line 46
	mov	eax, esi
	pop	esi
	pop	ebx
	pop	ebp
	ret	4
$LN9@MPQArchive:
; Line 45
	lea	eax, DWORD PTR $T106107[ebp]
	push	eax
	mov	ecx, OFFSET ?gOpenArchives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A ; gOpenArchives
	mov	DWORD PTR $T106107[ebp], esi
	call	?push_front@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEXABQAVMPQArchive@@@Z ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::push_front
	pop	edi
; Line 46
	mov	eax, esi
	pop	esi
	pop	ebx
	pop	ebp
	ret	4
	npad	3
$LN13@MPQArchive:
	DD	$LN5@MPQArchive
	DD	$LN2@MPQArchive
	DD	$LN1@MPQArchive
	DD	$LN3@MPQArchive
	DD	$LN4@MPQArchive
	DD	$LN1@MPQArchive
	DD	$LN6@MPQArchive
??0MPQArchive@@QAE@PBD@Z ENDP				; MPQArchive::MPQArchive
_TEXT	ENDS
PUBLIC	_filename$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	??0MPQFile@@QAE@PBD@Z				; MPQFile::MPQFile
EXTRN	_libmpq__file_read:PROC
EXTRN	_libmpq__file_unpacked_size:PROC
EXTRN	_libmpq__file_number:PROC
EXTRN	__imp__fread:PROC
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	__imp__ftell:PROC
EXTRN	__imp__sprintf:PROC
EXTRN	?wowpath@@3PADA:BYTE				; wowpath
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_transferred$98276 = -1072				; size = 8
$T106116 = -1064					; size = 12
_i$98250 = -1052					; size = 12
_fileno$98274 = -1040					; size = 4
__Mycont$106168 = -1036					; size = 4
_mpq_a$98273 = -1036					; size = 4
_filename$GSCopy$ = -1032				; size = 4
_Temp$ = -1028						; size = 1024
__$ArrayPad$ = -4					; size = 4
_filename$ = 8						; size = 4
??0MPQFile@@QAE@PBD@Z PROC				; MPQFile::MPQFile
; _this$ = ecx
; Line 55
	push	ebp
	mov	ebp, esp
	sub	esp, 1072				; 00000430H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	mov	ebx, DWORD PTR _filename$[ebp]
	push	esi
	mov	esi, ecx
	push	edi
	xor	eax, eax
	lea	edi, DWORD PTR [esi+1040]
; Line 58
	push	ebx
	push	OFFSET $SG98106
; Line 83
	mov	DWORD PTR _filename$GSCopy$[ebp], ebx
	mov	BYTE PTR [esi+1024], 0
	mov	DWORD PTR [esi+1028], eax
	mov	DWORD PTR [esi+1032], eax
	mov	DWORD PTR [esi+1036], eax
	mov	DWORD PTR [edi], eax
	mov	DWORD PTR [edi+4], eax
	call	?gLog@@YAXPADZZ				; gLog
	push	ebx
	push	OFFSET ?wowpath@@3PADA			; wowpath
	lea	eax, DWORD PTR _Temp$[ebp]
	push	OFFSET $SG98107
	push	eax
	call	DWORD PTR __imp__sprintf
	lea	eax, DWORD PTR _Temp$[ebp]
	mov	edx, esi
	mov	ecx, eax
	add	esp, 24					; 00000018H
	sub	edx, ecx
	npad	7
$LL10@MPQFile@2:
; Line 60
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR [edx+eax], cl
	inc	eax
	test	cl, cl
	jne	SHORT $LL10@MPQFile@2
; Line 62
	lea	edx, DWORD PTR _Temp$[ebp]
	push	OFFSET $SG98109
	push	edx
	call	DWORD PTR __imp__fopen
	mov	ebx, eax
	add	esp, 8
; Line 64
	test	ebx, ebx
	je	SHORT $LN7@MPQFile@2
; Line 66
	mov	eax, DWORD PTR _filename$GSCopy$[ebp]
	push	eax
	push	OFFSET $SG98111
	call	?gLog@@YAXPADZZ				; gLog
; Line 67
	push	2
	push	0
	push	ebx
	call	DWORD PTR __imp__fseek
; Line 68
	push	ebx
	call	DWORD PTR __imp__ftell
	cdq
; Line 70
	push	eax
	mov	DWORD PTR [edi], eax
	mov	DWORD PTR [edi+4], edx
	call	??_U@YAPAXI@Z				; operator new[]
; Line 71
	push	0
	push	0
	push	ebx
	mov	DWORD PTR [esi+1028], eax
	call	DWORD PTR __imp__fseek
; Line 72
	mov	edx, DWORD PTR [edi]
	mov	eax, DWORD PTR [esi+1028]
	push	ebx
	push	edx
	push	1
	push	eax
$LN38@MPQFile@2:
	call	DWORD PTR __imp__fread
; Line 73
	push	ebx
	call	DWORD PTR __imp__fclose
	add	esp, 60					; 0000003cH
; Line 74
	mov	BYTE PTR [esi+1048], 1
; Line 75
	jmp	$LN35@MPQFile@2
$LN7@MPQFile@2:
; Line 78
	mov	ecx, DWORD PTR _filename$GSCopy$[ebp]
	push	ecx
	push	OFFSET ?wowpath@@3PADA			; wowpath
	lea	edx, DWORD PTR _Temp$[ebp]
	push	OFFSET $SG98114
	push	edx
	call	DWORD PTR __imp__sprintf
; Line 79
	lea	eax, DWORD PTR _Temp$[ebp]
	push	OFFSET $SG98115
	push	eax
	call	DWORD PTR __imp__fopen
	mov	ebx, eax
	add	esp, 24					; 00000018H
; Line 81
	test	ebx, ebx
	je	SHORT $LN6@MPQFile@2
; Line 83
	mov	ecx, DWORD PTR _filename$GSCopy$[ebp]
	push	ecx
	push	OFFSET $SG98117
	call	?gLog@@YAXPADZZ				; gLog
; Line 84
	push	2
	push	0
	push	ebx
	call	DWORD PTR __imp__fseek
; Line 85
	push	ebx
	call	DWORD PTR __imp__ftell
	cdq
; Line 87
	push	eax
	mov	DWORD PTR [edi], eax
	mov	DWORD PTR [edi+4], edx
	call	??_U@YAPAXI@Z				; operator new[]
; Line 88
	push	0
	push	0
	push	ebx
	mov	DWORD PTR [esi+1028], eax
	call	DWORD PTR __imp__fseek
; Line 89
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [esi+1028]
	push	ebx
	push	eax
	push	1
	push	ecx
; Line 92
	jmp	$LN38@MPQFile@2
$LN6@MPQFile@2:
; Line 95
	lea	edx, DWORD PTR _i$98250[ebp]
	push	edx
	mov	ecx, OFFSET ?gOpenArchives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A ; gOpenArchives
	call	?begin@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE?AV?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@XZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::begin
	lea	eax, DWORD PTR $T106116[ebp]
	push	eax
	mov	ecx, OFFSET ?gOpenArchives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A ; gOpenArchives
	call	?end@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE?AV?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@XZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::end
	mov	ebx, DWORD PTR _i$98250[ebp+8]
	cmp	ebx, DWORD PTR [eax+8]
	je	SHORT $LN34@MPQFile@2
$LL13@MPQFile@2:
; Line 97
	mov	eax, DWORD PTR _i$98250[ebp]
	test	eax, eax
	jne	SHORT $LN28@MPQFile@2
	xor	edx, edx
	jmp	SHORT $LN36@MPQFile@2
$LN28@MPQFile@2:
	mov	edx, DWORD PTR [eax]
$LN36@MPQFile@2:
	mov	eax, ebx
	mov	DWORD PTR __Mycont$106168[ebp], edx
	mov	edx, DWORD PTR [edx+8]
	mov	ecx, ebx
	shr	eax, 2
	and	ecx, 3
	cmp	edx, eax
	ja	SHORT $LN23@MPQFile@2
	sub	eax, edx
$LN23@MPQFile@2:
	mov	edx, DWORD PTR __Mycont$106168[ebp]
	mov	edx, DWORD PTR [edx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	mov	ecx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR [ecx]
; Line 99
	mov	ecx, DWORD PTR _filename$GSCopy$[ebp]
	lea	edx, DWORD PTR _fileno$98274[ebp]
	push	edx
	push	ecx
	push	eax
	mov	DWORD PTR _mpq_a$98273[ebp], eax
	call	_libmpq__file_number
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN2@MPQFile@2
; Line 95
	lea	edx, DWORD PTR $T106116[ebp]
	push	edx
	mov	ecx, OFFSET ?gOpenArchives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A ; gOpenArchives
	inc	ebx
	call	?end@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE?AV?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@XZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::end
	cmp	ebx, DWORD PTR [eax+8]
	jne	SHORT $LL13@MPQFile@2
$LN34@MPQFile@2:
; Line 122
	mov	ecx, DWORD PTR _filename$GSCopy$[ebp]
	push	ecx
	push	OFFSET $SG98283
$LN37@MPQFile@2:
	call	?gLog@@YAXPADZZ				; gLog
; Line 124
	mov	DWORD PTR [esi+1028], 0
	mov	BYTE PTR [esi+1024], 1
	add	esp, 8
$LN35@MPQFile@2:
; Line 125
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	pop	edi
	mov	eax, esi
	pop	esi
	xor	ecx, ebp
	pop	ebx
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
$LN2@MPQFile@2:
; Line 103
	mov	eax, DWORD PTR _fileno$98274[ebp]
	mov	ecx, DWORD PTR _mpq_a$98273[ebp]
	push	edi
	push	eax
	push	ecx
	call	_libmpq__file_unpacked_size
; Line 105
	mov	ebx, DWORD PTR _filename$GSCopy$[ebp]
	movsx	edx, BYTE PTR [ebx+259]
	push	edx
	push	ebx
	push	OFFSET $SG98277
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 24					; 00000018H
; Line 108
	cmp	DWORD PTR [edi+4], 0
	jg	SHORT $LN1@MPQFile@2
	jl	SHORT $LN33@MPQFile@2
	cmp	DWORD PTR [edi], 1
	ja	SHORT $LN1@MPQFile@2
$LN33@MPQFile@2:
; Line 110
	push	ebx
	push	OFFSET $SG98279
; Line 113
	jmp	SHORT $LN37@MPQFile@2
$LN1@MPQFile@2:
; Line 115
	mov	eax, DWORD PTR [edi]
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
; Line 118
	mov	edx, DWORD PTR [edi+4]
	lea	ecx, DWORD PTR _transferred$98276[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edi]
	push	edx
	mov	edx, DWORD PTR _fileno$98274[ebp]
	push	ecx
	push	eax
	mov	DWORD PTR [esi+1028], eax
	mov	eax, DWORD PTR _mpq_a$98273[ebp]
	push	edx
	push	eax
	call	_libmpq__file_read
	add	esp, 28					; 0000001cH
; Line 119
	mov	BYTE PTR [esi+1048], 0
; Line 120
	jmp	$LN35@MPQFile@2
??0MPQFile@@QAE@PBD@Z ENDP				; MPQFile::MPQFile
_TEXT	ENDS
PUBLIC	_filename$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	??0MPQFile@@QAE@PBD_N@Z				; MPQFile::MPQFile
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_transferred$98305 = -1068				; size = 8
$T106188 = -1060					; size = 12
_i$98295 = -1048					; size = 12
_filename$GSCopy$ = -1036				; size = 4
_fileno$98303 = -1032					; size = 4
_Temp$ = -1028						; size = 1024
__$ArrayPad$ = -4					; size = 4
_filename$ = 8						; size = 4
_Fake$ = 12						; size = 1
??0MPQFile@@QAE@PBD_N@Z PROC				; MPQFile::MPQFile
; _this$ = ecx
; Line 128
	push	ebp
	mov	ebp, esp
	sub	esp, 1068				; 0000042cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	eax, DWORD PTR _filename$[ebp]
	push	ebx
	push	esi
	push	edi
; Line 131
	push	eax
	mov	esi, ecx
	xor	ebx, ebx
	push	OFFSET ?wowpath@@3PADA			; wowpath
; Line 136
	mov	DWORD PTR _filename$GSCopy$[ebp], eax
	lea	eax, DWORD PTR _Temp$[ebp]
	push	OFFSET $SG98294
	push	eax
	mov	BYTE PTR [esi+1024], 0
	mov	DWORD PTR [esi+1028], ebx
	mov	DWORD PTR [esi+1032], ebx
	mov	DWORD PTR [esi+1036], ebx
	mov	DWORD PTR [esi+1040], ebx
	mov	DWORD PTR [esi+1044], ebx
	call	DWORD PTR __imp__sprintf
	lea	eax, DWORD PTR _Temp$[ebp]
	mov	edx, esi
	mov	ecx, eax
	add	esp, 16					; 00000010H
	sub	edx, ecx
	npad	1
$LL8@MPQFile@3:
; Line 132
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR [edx+eax], cl
	inc	eax
	test	cl, cl
	jne	SHORT $LL8@MPQFile@3
; Line 134
	lea	edx, DWORD PTR _i$98295[ebp]
	push	edx
	mov	ecx, OFFSET ?gOpenArchives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A ; gOpenArchives
	call	?begin@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE?AV?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@XZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::begin
	lea	eax, DWORD PTR $T106188[ebp]
	push	eax
	mov	ecx, OFFSET ?gOpenArchives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A ; gOpenArchives
	call	?end@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE?AV?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@XZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::end
	mov	edi, DWORD PTR _i$98295[ebp+8]
	cmp	edi, DWORD PTR [eax+8]
	je	SHORT $LN3@MPQFile@3
	npad	9
$LL11@MPQFile@3:
; Line 136
	mov	eax, DWORD PTR _i$98295[ebp]
	cmp	eax, ebx
	je	SHORT $LN27@MPQFile@3
	mov	ebx, DWORD PTR [eax]
$LN27@MPQFile@3:
	mov	edx, DWORD PTR [ebx+8]
	mov	eax, edi
	mov	ecx, edi
	shr	eax, 2
	and	ecx, 3
	cmp	edx, eax
	ja	SHORT $LN21@MPQFile@3
	sub	eax, edx
$LN21@MPQFile@3:
	mov	edx, DWORD PTR [ebx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	mov	ecx, DWORD PTR [eax+ecx*4]
; Line 138
	mov	eax, DWORD PTR _filename$GSCopy$[ebp]
	mov	ebx, DWORD PTR [ecx]
	lea	edx, DWORD PTR _fileno$98303[ebp]
	push	edx
	push	eax
	push	ebx
	call	_libmpq__file_number
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN2@MPQFile@3
; Line 134
	lea	ecx, DWORD PTR $T106188[ebp]
	push	ecx
	mov	ecx, OFFSET ?gOpenArchives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A ; gOpenArchives
	inc	edi
	call	?end@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE?AV?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@XZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::end
	xor	ebx, ebx
	cmp	edi, DWORD PTR [eax+8]
	jne	SHORT $LL11@MPQFile@3
$LN3@MPQFile@3:
; Line 157
	mov	DWORD PTR [esi+1028], ebx
$LN33@MPQFile@3:
; Line 156
	mov	BYTE PTR [esi+1024], 1
$LN34@MPQFile@3:
; Line 158
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	pop	edi
	mov	eax, esi
	pop	esi
	xor	ecx, ebp
	pop	ebx
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
$LN2@MPQFile@3:
; Line 141
	mov	edx, DWORD PTR _fileno$98303[ebp]
	lea	edi, DWORD PTR [esi+1040]
	push	edi
	push	edx
	push	ebx
	call	_libmpq__file_unpacked_size
	add	esp, 12					; 0000000cH
; Line 144
	cmp	DWORD PTR [edi+4], 0
	jg	SHORT $LN1@MPQFile@3
	jl	SHORT $LN31@MPQFile@3
	cmp	DWORD PTR [edi], 1
	ja	SHORT $LN1@MPQFile@3
$LN31@MPQFile@3:
; Line 147
	mov	DWORD PTR [esi+1028], 0
; Line 148
	jmp	SHORT $LN33@MPQFile@3
$LN1@MPQFile@3:
; Line 150
	mov	eax, DWORD PTR [edi]
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
; Line 152
	mov	edx, DWORD PTR [edi+4]
	lea	ecx, DWORD PTR _transferred$98305[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edi]
	push	edx
	mov	edx, DWORD PTR _fileno$98303[ebp]
	push	ecx
	push	eax
	push	edx
	push	ebx
	mov	DWORD PTR [esi+1028], eax
	call	_libmpq__file_read
	add	esp, 28					; 0000001cH
; Line 153
	mov	BYTE PTR [esi+1048], 0
; Line 154
	jmp	SHORT $LN34@MPQFile@3
??0MPQFile@@QAE@PBD_N@Z ENDP				; MPQFile::MPQFile
_TEXT	ENDS
PUBLIC	??1?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::~deque<MPQArchive *,std::allocator<MPQArchive *> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ PROC ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::~deque<MPQArchive *,std::allocator<MPQArchive *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
; Line 1021
	push	esi
	mov	esi, ecx
; Line 1022
	call	?_Tidy@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@IAEXXZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::_Tidy
; Line 1023
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	DWORD PTR [esi], 0
	pop	esi
	ret	0
??1?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ ENDP ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::~deque<MPQArchive *,std::allocator<MPQArchive *> >
_TEXT	ENDS
EXTRN	_atexit:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??__EgOpenArchives@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??__EgOpenArchives@@YAXXZ$1
__ehfuncinfo$??__EgOpenArchives@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??__EgOpenArchives@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??__EgOpenArchives@@YAXXZ
text$yc	SEGMENT
$T106458 = -28						; size = 12
$T106320 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??__EgOpenArchives@@YAXXZ PROC				; `dynamic initializer for 'gOpenArchives'', COMDAT
; File c:\programovani\wow editor\test\src\editor\mpq.cpp
; Line 8
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??__EgOpenArchives@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	xor	esi, esi
	push	8
	mov	DWORD PTR __$EHRec$[ebp+8], esi
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	cmp	eax, esi
	je	SHORT $LN21@dynamic
	mov	DWORD PTR ?gOpenArchives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A, eax
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	xor	edx, edx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ?gOpenArchives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A
	mov	DWORD PTR [eax], OFFSET ?gOpenArchives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A ; gOpenArchives
	push	OFFSET ??__FgOpenArchives@@YAXXZ	; `dynamic atexit destructor for 'gOpenArchives''
	mov	DWORD PTR ?gOpenArchives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A+4, esi
	mov	DWORD PTR ?gOpenArchives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A+8, esi
	mov	DWORD PTR ?gOpenArchives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A+12, esi
	mov	DWORD PTR ?gOpenArchives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A+16, esi
	call	_atexit
	add	esp, 4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
$LN21@dynamic:
	lea	ecx, DWORD PTR $T106320[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T106458[ebp]
	mov	DWORD PTR $T106320[ebp], esi
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T106458[ebp]
	push	edx
	mov	DWORD PTR $T106458[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN50@dynamic:
$LN49@dynamic:
	int	3
text$yc	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??__EgOpenArchives@@YAXXZ$1:
	mov	ecx, OFFSET ?gOpenArchives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A ; gOpenArchives
	jmp	DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
__ehhandler$??__EgOpenArchives@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??__EgOpenArchives@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??__EgOpenArchives@@YAXXZ ENDP				; `dynamic initializer for 'gOpenArchives''
; Function compile flags: /Ogtp
;	COMDAT ??__FgOpenArchives@@YAXXZ
text$yd	SEGMENT
??__FgOpenArchives@@YAXXZ PROC				; `dynamic atexit destructor for 'gOpenArchives'', COMDAT
	mov	ecx, OFFSET ?gOpenArchives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A ; gOpenArchives
	call	?_Tidy@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@IAEXXZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::_Tidy
	mov	eax, DWORD PTR ?gOpenArchives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	DWORD PTR ?gOpenArchives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A, 0
	ret	0
??__FgOpenArchives@@YAXXZ ENDP				; `dynamic atexit destructor for 'gOpenArchives''
text$yd	ENDS
PUBLIC	?gOpenArchives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A ; gOpenArchives
_BSS	SEGMENT
?gOpenArchives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A DB 018H DUP (?) ; gOpenArchives
_BSS	ENDS
CRT$XCU	SEGMENT
_gOpenArchives$initializer$ DD FLAT:??__EgOpenArchives@@YAXXZ
CRT$XCU	ENDS
END
