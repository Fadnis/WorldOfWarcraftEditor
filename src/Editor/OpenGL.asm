; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\programovani\WoW Editor\Test\src\Editor\OpenGL.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?arial12@@3Ufont_data@freetype@@A		; arial12
PUBLIC	?arial16@@3Ufont_data@freetype@@A		; arial16
PUBLIC	?f16@@3PAVFont@@A				; f16
PUBLIC	?ftex@@3IA					; ftex
PUBLIC	?morpheus@@3Ufont_data@freetype@@A		; morpheus
PUBLIC	?arialn13@@3Ufont_data@freetype@@A		; arialn13
PUBLIC	?gamepath@@3PADA				; gamepath
PUBLIC	?flog@@3PAU_iobuf@@A				; flog
PUBLIC	?f32@@3PAVFont@@A				; f32
PUBLIC	?arial14@@3Ufont_data@freetype@@A		; arial14
PUBLIC	?f24@@3PAVFont@@A				; f24
PUBLIC	?gFPS@@3MA					; gFPS
PUBLIC	?wowpath@@3PADA					; wowpath
PUBLIC	?path@@3PADA					; path
PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?AreaID@AreaDB@@2IB				; AreaDB::AreaID
PUBLIC	?Continent@AreaDB@@2IB				; AreaDB::Continent
PUBLIC	?Region@AreaDB@@2IB				; AreaDB::Region
PUBLIC	?Flags@AreaDB@@2IB				; AreaDB::Flags
PUBLIC	?Name@AreaDB@@2IB				; AreaDB::Name
PUBLIC	?fullscreen@@3HA				; fullscreen
PUBLIC	?gPop@@3_NA					; gPop
PUBLIC	?hasInputPath@@3_NA				; hasInputPath
PUBLIC	?InputPath@@3PADA				; InputPath
PUBLIC	?_EEM_DS@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@2HB ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::_EEM_DS
PUBLIC	?glogfirst@@3_NA				; glogfirst
_BSS	SEGMENT
?arial12@@3Ufont_data@freetype@@A DB 020cH DUP (?)	; arial12
?arial16@@3Ufont_data@freetype@@A DB 020cH DUP (?)	; arial16
?f16@@3PAVFont@@A DD 01H DUP (?)			; f16
?ftex@@3IA DD	01H DUP (?)				; ftex
?morpheus@@3Ufont_data@freetype@@A DB 020cH DUP (?)	; morpheus
?arialn13@@3Ufont_data@freetype@@A DB 020cH DUP (?)	; arialn13
?gamepath@@3PADA DB 0400H DUP (?)			; gamepath
?flog@@3PAU_iobuf@@A DD 01H DUP (?)			; flog
?f32@@3PAVFont@@A DD 01H DUP (?)			; f32
?arial14@@3Ufont_data@freetype@@A DB 020cH DUP (?)	; arial14
?f24@@3PAVFont@@A DD 01H DUP (?)			; f24
?gFPS@@3MA DD	01H DUP (?)				; gFPS
?wowpath@@3PADA DB 0400H DUP (?)			; wowpath
?path@@3PADA DB	0200H DUP (?)				; path
?fullscreen@@3HA DD 01H DUP (?)				; fullscreen
?gPop@@3_NA DB	01H DUP (?)				; gPop
	ALIGN	4

?hasInputPath@@3_NA DB 01H DUP (?)			; hasInputPath
_BSS	ENDS
;	COMDAT ?_EEM_DS@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@2HB
CONST	SEGMENT
?_EEM_DS@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@2HB DD 04H ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::_EEM_DS
CONST	ENDS
_DATA	SEGMENT
?InputPath@@3PADA DB '.', 00H				; InputPath
	ORG $+1022
?glogfirst@@3_NA DB 01H					; glogfirst
_DATA	ENDS
CONST	SEGMENT
$SG120138 DB	'r', 00H
	ORG $+2
$SG120139 DB	'Editor.conf', 00H
$SG120141 DB	'[World of Warcraft Studio - Editor] - Config exist', 0aH
	DB	'#############################################################'
	DB	'#', 0aH, 00H
	ORG $+1
$SG120152 DB	'Editor.conf', 00H
$SG120143 DB	'[World of Warcraft Studio - Editor] - Config is empty', 0aH
	DB	'#############################################################'
	DB	'#', 0aH, 00H
	ORG $+2
$SG120145 DB	'[World of Warcraft Studio - Editor] - Config have conten'
	DB	't', 0aH, '###################################################'
	DB	'###########', 0aH, 00H
	ORG $+2
$SG120157 DB	'Expansion', 00H
	ORG $+2
$SG120147 DB	'[World of Warcraft Studio - Editor] - Config doesn''t ex'
	DB	'ist', 0aH, '#################################################'
	DB	'#############', 0aH, 00H
	ORG $+1
$SG120158 DB	'expansion_option', 00H
	ORG $+3
$SG120167 DB	'Editor.conf', 00H
$SG120172 DB	'Path', 00H
	ORG $+3
$SG120173 DB	'game_option', 00H
$SG120178 DB	'Editor.conf', 00H
$SG120183 DB	'GameVersion', 00H
$SG120184 DB	'game_option', 00H
$SG120189 DB	'Editor.conf', 00H
$SG120194 DB	'Language', 00H
	ORG $+3
$SG120195 DB	'language_option', 00H
$SG120199 DB	'r', 00H
	ORG $+2
$SG120200 DB	'Editor.conf', 00H
$SG120213 DB	'[World of Warcraft Studio - Editor] - Language: %d', 0aH
	DB	00H
$SG120203 DB	'[World of Warcraft Studio - Editor] - Expansion isn''t s'
	DB	'elected', 0aH, 00H
$SG120205 DB	'[World of Warcraft Studio - Editor] - Expansion: %d', 0aH
	DB	00H
	ORG $+3
$SG120207 DB	'[World of Warcraft Studio - Editor] - Game Version isn'''
	DB	't selected', 0aH, 00H
	ORG $+1
$SG120209 DB	'[World of Warcraft Studio - Editor] - GameVersion: %d', 0aH
	DB	00H
	ORG $+1
$SG120211 DB	'[World of Warcraft Studio - Editor] - Language isn''t se'
	DB	'lected', 0aH, 00H
	ORG $+1
$SG120216 DB	'[World of Warcraft Studio - Editor] - %s', 0aH, 00H
	ORG $+2
$SG120217 DB	'[World of Warcraft Studio - Editor] - %s', 0aH, 00H
	ORG $+2
$SG120218 DB	'[World of Warcraft Studio - Editor] - %s', 0aH, 00H
	ORG $+2
$SG120660 DB	'Data\fonts\arial.tga', 00H
	ORG $+3
$SG120665 DB	'Data\fonts\arial.info', 00H
	ORG $+2
$SG120670 DB	'Data\fonts\arial.info', 00H
	ORG $+2
$SG120675 DB	'Data\fonts\arial.info', 00H
	ORG $+2
$SG120676 DB	'Data\fonts\morpheus.ttf', 00H
$SG120677 DB	'Data\fonts\arialn.ttf', 00H
	ORG $+2
$SG120678 DB	'Data\fonts\arial.ttf', 00H
	ORG $+3
$SG120679 DB	'Data\fonts\arial.ttf', 00H
	ORG $+3
$SG120680 DB	'Data\fonts\arial.ttf', 00H
	ORG $+3
$SG120699 DB	'w', 00H
	ORG $+2
$SG120700 DB	'World Of Warcraft Studio - Editor.log', 00H
	ORG $+2
$SG120701 DB	'a', 00H
	ORG $+2
$SG120702 DB	'World Of Warcraft Studio - Editor.log', 00H
	ORG $+2
$SG120712 DB	'a', 00H
	ORG $+2
$SG120713 DB	'World Of Warcraft Studio - Editor.log', 00H
	ORG $+2
$SG120729 DB	'SOFTWARE\Blizzard Entertainment\World of Warcraft', 00H
	ORG $+2
$SG120731 DB	'InstallPath', 00H
$SG120733 DB	'InstallPath', 00H
$SG120739 DB	'Data\', 00H
	ORG $+2
$SG120753 DB	'%s-%d.MPQ', 00H
	ORG $+2
$SG120755 DB	'%s.MPQ', 00H
	ORG $+1
$SG120757 DB	'rb', 00H
	ORG $+1
$SG120775 DB	'enGB', 00H
	ORG $+3
$SG120777 DB	'enUS', 00H
	ORG $+3
$SG120779 DB	'deDE', 00H
	ORG $+3
$SG120781 DB	'esES', 00H
	ORG $+3
$SG120783 DB	'frFR', 00H
	ORG $+3
$SG120785 DB	'ruRU', 00H
	ORG $+3
$SG120969 DB	'[World of Warcraft Studio - Editor] - Found locales ''%s'
	DB	'''', 0aH, 00H
	ORG $+2
$SG120988 DB	'common.MPQ', 00H
	ORG $+1
$SG120970 DB	'[World of Warcraft Studio - Editor] - Addind data files '
	DB	'from locale dir.', 0aH, 00H
	ORG $+2
$SG120991 DB	'expansion.MPQ', 00H
	ORG $+2
$SG120994 DB	'patch.MPQ', 00H
	ORG $+2
$SG120997 DB	'patch-2.MPQ', 00H
$SG121092 DB	'.MPQ', 00H
	ORG $+3
$SG121093 DB	'\locale-', 00H
	ORG $+3
$SG121098 DB	'.MPQ', 00H
	ORG $+3
$SG121099 DB	'\expansion-locale-', 00H
	ORG $+1
$SG121104 DB	'.MPQ', 00H
	ORG $+3
$SG121105 DB	'\patch-', 00H
$SG121110 DB	'-2.MPQ', 00H
	ORG $+1
$SG121111 DB	'\patch-', 00H
$SG121115 DB	'common.MPQ', 00H
	ORG $+1
$SG121118 DB	'common-2.MPQ', 00H
	ORG $+3
$SG121121 DB	'expansion.MPQ', 00H
	ORG $+2
$SG121124 DB	'lichking.MPQ', 00H
	ORG $+3
$SG121127 DB	'patch.MPQ', 00H
	ORG $+2
$SG121130 DB	'patch-2.MPQ', 00H
$SG121135 DB	'.MPQ', 00H
	ORG $+3
$SG121136 DB	'\locale-', 00H
	ORG $+3
$SG121141 DB	'.MPQ', 00H
	ORG $+3
$SG121142 DB	'\expansion-locale-', 00H
	ORG $+1
$SG121147 DB	'.MPQ', 00H
	ORG $+3
$SG121148 DB	'\lichking-locale-', 00H
	ORG $+2
$SG121153 DB	'.MPQ', 00H
	ORG $+3
$SG121154 DB	'\patch-', 00H
$SG121159 DB	'-2.MPQ', 00H
	ORG $+1
$SG121160 DB	'\patch-', 00H
$SG121164 DB	'art.MPQ', 00H
$SG121167 DB	'expansion1.MPQ', 00H
	ORG $+1
$SG121170 DB	'expansion2.MPQ', 00H
	ORG $+1
$SG121173 DB	'expansion3.MPQ', 00H
	ORG $+1
$SG121176 DB	'sound.MPQ', 00H
	ORG $+2
$SG121179 DB	'world.MPQ', 00H
	ORG $+2
$SG121184 DB	'.MPQ', 00H
	ORG $+3
$SG121185 DB	'\locale-', 00H
	ORG $+3
$SG121190 DB	'.MPQ', 00H
	ORG $+3
$SG121191 DB	'\expansion1-locale-', 00H
$SG121196 DB	'.MPQ', 00H
	ORG $+3
$SG121197 DB	'\expansion2-locale-', 00H
$SG121202 DB	'.MPQ', 00H
	ORG $+3
$SG121203 DB	'\expansion3-locale-', 00H
$SG121205 DB	'[World of Warcraft Studio - Editor] - Can''t load GameVe'
	DB	'rsion.', 0aH, 00H
	ORG $+1
$SG121207 DB	'%spatch', 00H
$SG121225 DB	'[World of Warcraft Studio - Editor] - Locales not found', 0aH
	DB	00H
	ORG $+3
$SG121206 DB	'[World of Warcraft Studio - Editor] - Scanning patch lev'
	DB	'els from data dir.', 0aH, 00H
$SG121243 DB	'-f', 00H
	ORG $+1
$SG121210 DB	'[World of Warcraft Studio - Editor] - Scanning patch lev'
	DB	'els from locale dir.', 0aH, 00H
	ORG $+2
$SG121222 DB	'%s%s/patch-%s', 00H
	ORG $+2
$SG121246 DB	'-w', 00H
	ORG $+1
$SG121250 DB	'-1024', 00H
	ORG $+2
$SG121251 DB	'-1024x768', 00H
	ORG $+2
$SG121255 DB	'-1280', 00H
	ORG $+2
$SG121256 DB	'-1280x1024', 00H
	ORG $+1
$SG121259 DB	'-1280x960', 00H
	ORG $+2
$SG121263 DB	'-1400', 00H
	ORG $+2
$SG121264 DB	'-1400x1050', 00H
	ORG $+1
$SG121267 DB	'-1280x800', 00H
	ORG $+2
$SG121271 DB	'-1600', 00H
	ORG $+2
$SG121272 DB	'-1600x1200', 00H
	ORG $+1
$SG121276 DB	'-1920', 00H
	ORG $+2
$SG121277 DB	'-1920x1200', 00H
	ORG $+1
$SG121281 DB	'-2048', 00H
	ORG $+2
$SG121282 DB	'-2048x1536', 00H
	ORG $+1
$SG121285 DB	'-p', 00H
	ORG $+1
$SG121288 DB	'-np', 00H
$SG121308 DB	'[World of Warcraft Studio - Editor] - Initializing Fonts'
	DB	0aH, 00H
	ORG $+2
$SG121289 DB	'[World of Warcraft Studio - Editor] - World of Warcraft '
	DB	'Studio - Editor : 0.0.2', 0aH, '[World of Warcraft Studio - E'
	DB	'ditor] - Game path: %s', 0aH, '[World of Warcraft Studio - Ed'
	DB	'itor] - Game Version: %d', 0aH, 00H
$SG121327 DB	'[World of Warcraft Studio - Editor] - Entering Main Loop'
	DB	0aH, 00H
	ORG $+2
$SG121305 DB	'[World of Warcraft Studio - Editor] - ERROR: No one arch'
	DB	'ive found', 00H
	ORG $+2
$SG121383 DB	'[World of Warcraft Studio - Editor] - Exited Main Loop', 0aH
	DB	00H
$SG121541 DB	0aH, '[World of Warcraft Studio - Editor] - Exiting.', 0aH
	DB	00H
	ORG $+3
$SG121307 DB	'[World of Warcraft Studio - Editor] - Initializing Groun'
	DB	'd Effects', 0aH, 00H
	ORG $+1
$SG121317 DB	'[World of Warcraft Studio - Editor] - Creating Menu', 0aH
	DB	00H
	ORG $+7
$SG121324 DB	'[World of Warcraft Studio - Editor] - Unable to load ARB'
	DB	' Vertex Program Code', 0aH, 00H
	ORG $+2
$SG121382 DB	'World of Warcraft Studio - Editor - %.2f fps', 00H
CONST	ENDS
;	COMDAT ?Name@AreaDB@@2IB
CONST	SEGMENT
?Name@AreaDB@@2IB DD 0bH				; AreaDB::Name
CONST	ENDS
;	COMDAT ?Flags@AreaDB@@2IB
CONST	SEGMENT
?Flags@AreaDB@@2IB DD 03H				; AreaDB::Flags
CONST	ENDS
;	COMDAT ?Region@AreaDB@@2IB
CONST	SEGMENT
?Region@AreaDB@@2IB DD 02H				; AreaDB::Region
CONST	ENDS
;	COMDAT ?Continent@AreaDB@@2IB
CONST	SEGMENT
?Continent@AreaDB@@2IB DD 01H				; AreaDB::Continent
CONST	ENDS
;	COMDAT ?AreaID@AreaDB@@2IB
CONST	SEGMENT
?AreaID@AreaDB@@2IB DD 00H				; AreaDB::AreaID
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
EXTRN	__imp___stat64i32:PROC
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_stat	PROC
; __Filename$ = ecx
; __Stat$ = eax
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\sys\stat.inl
; Line 59
	push	eax
	push	ecx
	call	DWORD PTR __imp___stat64i32
	add	esp, 8
; Line 60
	ret	0
_stat	ENDP
_TEXT	ENDS
EXTRN	__imp___time64:PROC
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_time	PROC
; __Time$ = eax
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\time.inl
; Line 133
	push	eax
	call	DWORD PTR __imp___time64
	add	esp, 4
; Line 134
	ret	0
_time	ENDP
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
; Line 345
	push	ebp
	mov	ebp, esp
	push	esi
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
; Line 346
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
; Function compile flags: /Ogtp
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx
; Line 354
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
; Line 355
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN6@scalar
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@scalar:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogtp
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new
; Line 56
	push	ebp
	mov	ebp, esp
; Line 57
	mov	eax, DWORD PTR __Where$[ebp]
; Line 58
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; Line 62
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
; Function compile flags: /Ogtp
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 490
	push	ebp
	mov	ebp, esp
; Line 491
	mov	eax, DWORD PTR __First$[ebp]
	lea	edx, DWORD PTR [eax+1]
	npad	7
$LL3@length:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL3@length
	sub	eax, edx
; Line 492
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
EXTRN	_memcpy:PROC
; Function compile flags: /Ogtp
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT
; Line 496
	push	ebp
	mov	ebp, esp
; Line 498
	pop	ebp
; Line 497
	jmp	_memcpy
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
EXTRN	__imp__memmove:PROC
; Function compile flags: /Ogtp
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT
; Line 516
	push	ebp
	mov	ebp, esp
; Line 518
	pop	ebp
; Line 517
	jmp	DWORD PTR __imp__memmove
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
; Function compile flags: /Ogtp
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT
; Line 526
	push	ebp
	mov	ebp, esp
; Line 527
	mov	eax, DWORD PTR __Right$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	edx, DWORD PTR __Left$[ebp]
	mov	BYTE PTR [edx], cl
; Line 528
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
; Function compile flags: /Ogtp
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 49
	ret	4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
; Function compile flags: /Ogtp
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx
; Line 65
	mov	eax, ecx
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
; Line 66
	ret	0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
; Function compile flags: /Ogtp
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx
; Line 111
	mov	eax, ecx
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
; Line 112
	ret	0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
; Function compile flags: /Ogtp
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx
; Line 140
	ret	0
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
_TEXT	ENDS
PUBLIC	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
; Function compile flags: /Ogtp
;	COMDAT ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ
_TEXT	SEGMENT
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT
; _this$ = ecx
; Line 175
	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	jne	SHORT $LN3@Getcont
; Line 176
	ret	0
$LN3@Getcont:
; Line 175
	mov	eax, DWORD PTR [eax]
; Line 176
	ret	0
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Orphan_me
; Function compile flags: /Ogtp
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_me@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT
; _this$ = ecx
; Line 198
	ret	0
?_Orphan_me@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	push	edi
	mov	edi, DWORD PTR ___n$[ebp]
	dec	edi
	js	SHORT $LN1@vector
	push	ebx
	mov	ebx, DWORD PTR ___f$[ebp]
	push	esi
	mov	esi, DWORD PTR ___t$[ebp]
$LL2@vector:
	mov	ecx, esi
	call	ebx
	add	esi, DWORD PTR ___s$[ebp]
	dec	edi
	jns	SHORT $LL2@vector
	pop	esi
	pop	ebx
$LN1@vector:
	pop	edi
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?InitFonts@@YAXXZ				; InitFonts
EXTRN	?init@font_data@freetype@@QAEXPBDI@Z:PROC	; freetype::font_data::init
EXTRN	?initMPQ@font_data@freetype@@QAEXPBDI@Z:PROC	; freetype::font_data::initMPQ
EXTRN	??0Font@@QAE@IHHHPBD@Z:PROC			; Font::Font
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	?loadTGA@@YAIPBD_N@Z:PROC			; loadTGA
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
xdata$x	SEGMENT
__unwindtable$?InitFonts@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InitFonts@@YAXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitFonts@@YAXXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitFonts@@YAXXZ$2
__ehfuncinfo$?InitFonts@@YAXXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?InitFonts@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
_TEXT	SEGMENT
$T135958 = -16						; size = 4
$T135954 = -16						; size = 4
$T135950 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?InitFonts@@YAXXZ PROC					; InitFonts
; File c:\programovani\wow editor\test\src\editor\opengl.cpp
; Line 181
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InitFonts@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 182
	push	0
	push	OFFSET $SG120660
	call	?loadTGA@@YAIPBD_N@Z			; loadTGA
; Line 184
	push	9236					; 00002414H
	mov	DWORD PTR ?ftex@@3IA, eax		; ftex
	call	??2@YAPAXI@Z				; operator new
	add	esp, 12					; 0000000cH
	mov	DWORD PTR $T135950[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	test	eax, eax
	je	SHORT $LN3@InitFonts
	mov	ecx, DWORD PTR ?ftex@@3IA		; ftex
	push	OFFSET $SG120665
	push	16					; 00000010H
	push	256					; 00000100H
	push	256					; 00000100H
	push	ecx
	mov	ecx, eax
	call	??0Font@@QAE@IHHHPBD@Z			; Font::Font
	jmp	SHORT $LN4@InitFonts
$LN3@InitFonts:
	xor	eax, eax
$LN4@InitFonts:
; Line 185
	push	9236					; 00002414H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	DWORD PTR ?f16@@3PAVFont@@A, eax	; f16
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T135954[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	test	eax, eax
	je	SHORT $LN5@InitFonts
	mov	edx, DWORD PTR ?ftex@@3IA		; ftex
	push	OFFSET $SG120670
	push	24					; 00000018H
	push	256					; 00000100H
	push	256					; 00000100H
	push	edx
	mov	ecx, eax
	call	??0Font@@QAE@IHHHPBD@Z			; Font::Font
	jmp	SHORT $LN6@InitFonts
$LN5@InitFonts:
	xor	eax, eax
$LN6@InitFonts:
; Line 186
	push	9236					; 00002414H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	DWORD PTR ?f24@@3PAVFont@@A, eax	; f24
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T135958[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	test	eax, eax
	je	SHORT $LN7@InitFonts
	mov	ecx, DWORD PTR ?ftex@@3IA		; ftex
	push	OFFSET $SG120675
	push	32					; 00000020H
	push	256					; 00000100H
	push	256					; 00000100H
	push	ecx
	mov	ecx, eax
	call	??0Font@@QAE@IHHHPBD@Z			; Font::Font
	jmp	SHORT $LN8@InitFonts
$LN7@InitFonts:
	xor	eax, eax
$LN8@InitFonts:
; Line 188
	push	40					; 00000028H
	push	OFFSET $SG120676
	mov	ecx, OFFSET ?morpheus@@3Ufont_data@freetype@@A ; morpheus
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	DWORD PTR ?f32@@3PAVFont@@A, eax	; f32
	call	?initMPQ@font_data@freetype@@QAEXPBDI@Z	; freetype::font_data::initMPQ
; Line 189
	push	13					; 0000000dH
	push	OFFSET $SG120677
	mov	ecx, OFFSET ?arialn13@@3Ufont_data@freetype@@A ; arialn13
	call	?initMPQ@font_data@freetype@@QAEXPBDI@Z	; freetype::font_data::initMPQ
; Line 191
	push	12					; 0000000cH
	push	OFFSET $SG120678
	mov	ecx, OFFSET ?arial12@@3Ufont_data@freetype@@A ; arial12
	call	?init@font_data@freetype@@QAEXPBDI@Z	; freetype::font_data::init
; Line 192
	push	14					; 0000000eH
	push	OFFSET $SG120679
	mov	ecx, OFFSET ?arial14@@3Ufont_data@freetype@@A ; arial14
	call	?init@font_data@freetype@@QAEXPBDI@Z	; freetype::font_data::init
; Line 193
	push	16					; 00000010H
	push	OFFSET $SG120680
	mov	ecx, OFFSET ?arial16@@3Ufont_data@freetype@@A ; arial16
	call	?init@font_data@freetype@@QAEXPBDI@Z	; freetype::font_data::init
; Line 194
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?InitFonts@@YAXXZ$0:
	mov	eax, DWORD PTR $T135950[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?InitFonts@@YAXXZ$1:
	mov	eax, DWORD PTR $T135954[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?InitFonts@@YAXXZ$2:
	mov	eax, DWORD PTR $T135958[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?InitFonts@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InitFonts@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InitFonts@@YAXXZ ENDP					; InitFonts
PUBLIC	??_GFont@@QAEPAXI@Z				; Font::`scalar deleting destructor'
EXTRN	??1Font@@QAE@XZ:PROC				; Font::~Font
; Function compile flags: /Ogtp
;	COMDAT ??_GFont@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GFont@@QAEPAXI@Z PROC				; Font::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	call	??1Font@@QAE@XZ				; Font::~Font
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN4@scalar@2
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@scalar@2:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_GFont@@QAEPAXI@Z ENDP				; Font::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?gLog@@YAXPADZZ					; gLog
EXTRN	__imp__vfprintf:PROC
EXTRN	__imp__fclose:PROC
EXTRN	__imp__fopen:PROC
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_str$ = 8						; size = 4
?gLog@@YAXPADZZ PROC					; gLog
; Line 209
	push	ebp
	mov	ebp, esp
; Line 210
	cmp	BYTE PTR ?glogfirst@@3_NA, 0		; glogfirst
	push	esi
	mov	esi, DWORD PTR __imp__fopen
	push	edi
	mov	edi, DWORD PTR __imp__fclose
	je	SHORT $LN1@gLog
; Line 212
	push	OFFSET $SG120699
	push	OFFSET $SG120700
	call	esi
; Line 213
	push	eax
	mov	DWORD PTR ?flog@@3PAU_iobuf@@A, eax	; flog
	call	edi
	add	esp, 12					; 0000000cH
; Line 214
	mov	BYTE PTR ?glogfirst@@3_NA, 0		; glogfirst
$LN1@gLog:
; Line 217
	push	OFFSET $SG120701
	push	OFFSET $SG120702
	call	esi
; Line 222
	mov	edx, DWORD PTR _str$[ebp]
	lea	ecx, DWORD PTR _str$[ebp+4]
	push	ecx
	push	edx
	push	eax
	mov	DWORD PTR ?flog@@3PAU_iobuf@@A, eax	; flog
	call	DWORD PTR __imp__vfprintf
; Line 225
	mov	eax, DWORD PTR ?flog@@3PAU_iobuf@@A	; flog
	push	eax
	call	edi
	add	esp, 24					; 00000018H
	pop	edi
	pop	esi
; Line 226
	pop	ebp
	ret	0
?gLog@@YAXPADZZ ENDP					; gLog
_TEXT	ENDS
PUBLIC	?gLog_const@@YAXPBDZZ				; gLog_const
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_str$ = 8						; size = 4
?gLog_const@@YAXPBDZZ PROC				; gLog_const
; Line 229
	push	ebp
	mov	ebp, esp
; Line 230
	push	OFFSET $SG120712
	push	OFFSET $SG120713
	call	DWORD PTR __imp__fopen
; Line 235
	mov	edx, DWORD PTR _str$[ebp]
	lea	ecx, DWORD PTR _str$[ebp+4]
	push	ecx
	push	edx
	push	eax
	mov	DWORD PTR ?flog@@3PAU_iobuf@@A, eax	; flog
	call	DWORD PTR __imp__vfprintf
; Line 238
	mov	eax, DWORD PTR ?flog@@3PAU_iobuf@@A	; flog
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 24					; 00000018H
; Line 239
	pop	ebp
	ret	0
?gLog_const@@YAXPBDZZ ENDP				; gLog_const
_TEXT	ENDS
PUBLIC	??1?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::~_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ PROC ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::~_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ ENDP ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::~_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >
_TEXT	ENDS
PUBLIC	__real@40dfffc000000000
PUBLIC	?frand@@YAMXZ					; frand
EXTRN	__imp__rand:PROC
EXTRN	__fltused:DWORD
;	COMDAT __real@40dfffc000000000
CONST	SEGMENT
__real@40dfffc000000000 DQ 040dfffc000000000r	; 32767
; Function compile flags: /Ogtp
CONST	ENDS
_TEXT	SEGMENT
tv72 = -4						; size = 4
tv69 = -4						; size = 4
?frand@@YAMXZ PROC					; frand
; Line 925
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 926
	call	DWORD PTR __imp__rand
	mov	DWORD PTR tv72[ebp], eax
	fild	DWORD PTR tv72[ebp]
	fdiv	QWORD PTR __real@40dfffc000000000
	fstp	DWORD PTR tv69[ebp]
	fld	DWORD PTR tv69[ebp]
; Line 927
	mov	esp, ebp
	pop	ebp
	ret	0
?frand@@YAMXZ ENDP					; frand
_TEXT	ENDS
PUBLIC	?randfloat@@YAMMM@Z				; randfloat
; Function compile flags: /Ogtp
_TEXT	SEGMENT
tv135 = -4						; size = 4
_lower$ = 8						; size = 4
tv85 = 12						; size = 4
_upper$ = 12						; size = 4
?randfloat@@YAMMM@Z PROC				; randfloat
; Line 930
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 931
	call	DWORD PTR __imp__rand
	mov	DWORD PTR tv135[ebp], eax
	fild	DWORD PTR tv135[ebp]
	fdiv	QWORD PTR __real@40dfffc000000000
	fld	DWORD PTR _upper$[ebp]
	fld	DWORD PTR _lower$[ebp]
	fld	ST(0)
	fsubp	ST(2), ST(0)
	fxch	ST(2)
	fmulp	ST(1), ST(0)
	faddp	ST(1), ST(0)
	fstp	DWORD PTR tv85[ebp]
	fld	DWORD PTR tv85[ebp]
; Line 932
	mov	esp, ebp
	pop	ebp
	ret	0
?randfloat@@YAMMM@Z ENDP				; randfloat
_TEXT	ENDS
PUBLIC	__real@c0dfffc000000000
PUBLIC	?randint@@YAHHH@Z				; randint
EXTRN	__ftol2_sse_excpt:PROC
;	COMDAT __real@c0dfffc000000000
CONST	SEGMENT
__real@c0dfffc000000000 DQ 0c0dfffc000000000r	; -32767
; Function compile flags: /Ogtp
CONST	ENDS
_TEXT	SEGMENT
tv132 = -4						; size = 4
tv87 = -4						; size = 4
_lower$ = 8						; size = 4
tv83 = 12						; size = 4
_upper$ = 12						; size = 4
?randint@@YAHHH@Z PROC					; randint
; Line 935
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
; Line 936
	call	DWORD PTR __imp__rand
	mov	DWORD PTR tv132[ebp], eax
	fild	DWORD PTR tv132[ebp]
	mov	eax, DWORD PTR _upper$[ebp]
	mov	esi, DWORD PTR _lower$[ebp]
	sub	eax, esi
	fdiv	QWORD PTR __real@c0dfffc000000000
	inc	eax
	mov	DWORD PTR tv83[ebp], eax
	fstp	DWORD PTR tv87[ebp]
	fld	DWORD PTR tv87[ebp]
	fimul	DWORD PTR tv83[ebp]
	call	__ftol2_sse_excpt
	sub	esi, eax
	mov	eax, esi
	pop	esi
; Line 937
	mov	esp, ebp
	pop	ebp
	ret	0
?randint@@YAHHH@Z ENDP					; randint
_TEXT	ENDS
PUBLIC	?fixnamen@@YAXPADI@Z				; fixnamen
EXTRN	__imp__isalpha:PROC
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_name$ = 8						; size = 4
_len$ = 12						; size = 4
?fixnamen@@YAXPADI@Z PROC				; fixnamen
; Line 940
	push	ebp
	mov	ebp, esp
	push	esi
; Line 941
	xor	esi, esi
	cmp	DWORD PTR _len$[ebp], esi
	jbe	SHORT $LN5@fixnamen
	push	ebx
	mov	ebx, DWORD PTR __imp__isalpha
	push	edi
	mov	edi, DWORD PTR _name$[ebp]
$LL14@fixnamen:
; Line 943
	test	esi, esi
	je	SHORT $LN1@fixnamen
	mov	al, BYTE PTR [esi+edi]
	cmp	al, 65					; 00000041H
	jl	SHORT $LN12@fixnamen
	cmp	al, 90					; 0000005aH
	jg	SHORT $LN12@fixnamen
	movsx	eax, BYTE PTR [esi+edi-1]
	push	eax
	call	ebx
	add	esp, 4
	test	eax, eax
	je	SHORT $LN12@fixnamen
; Line 944
	or	BYTE PTR [esi+edi], 32			; 00000020H
	jmp	SHORT $LN6@fixnamen
$LN12@fixnamen:
; Line 946
	test	esi, esi
	je	SHORT $LN1@fixnamen
	movsx	ecx, BYTE PTR [esi+edi-1]
	push	ecx
	call	ebx
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN6@fixnamen
$LN1@fixnamen:
	mov	al, BYTE PTR [esi+edi]
	cmp	al, 97					; 00000061H
	jl	SHORT $LN6@fixnamen
	cmp	al, 122					; 0000007aH
	jg	SHORT $LN6@fixnamen
; Line 947
	and	al, -33					; ffffffdfH
	mov	BYTE PTR [esi+edi], al
$LN6@fixnamen:
; Line 941
	inc	esi
	cmp	esi, DWORD PTR _len$[ebp]
	jb	SHORT $LL14@fixnamen
	pop	edi
	pop	ebx
$LN5@fixnamen:
	pop	esi
; Line 949
	pop	ebp
	ret	0
?fixnamen@@YAXPADI@Z ENDP				; fixnamen
_TEXT	ENDS
PUBLIC	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
; Function compile flags: /Ogtp
;	COMDAT ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1506
	mov	eax, DWORD PTR [ecx+16]
; Line 1507
	ret	0
?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Ogtp
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; Line 1511
	mov	eax, DWORD PTR [ecx+16]
; Line 1512
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
PUBLIC	?size@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QBEIXZ ; std::vector<AppState *,std::allocator<AppState *> >::size
; Function compile flags: /Ogtp
;	COMDAT ?size@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QBEIXZ PROC ; std::vector<AppState *,std::allocator<AppState *> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 879
	mov	eax, DWORD PTR [ecx+4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2
; Line 880
	ret	0
?size@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QBEIXZ ENDP ; std::vector<AppState *,std::allocator<AppState *> >::size
_TEXT	ENDS
PUBLIC	??A?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAEAAPAVAppState@@I@Z ; std::vector<AppState *,std::allocator<AppState *> >::operator[]
; Function compile flags: /Ogtp
;	COMDAT ??A?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAEAAPAVAppState@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAEAAPAVAppState@@I@Z PROC ; std::vector<AppState *,std::allocator<AppState *> >::operator[], COMDAT
; _this$ = ecx
; Line 928
	push	ebp
	mov	ebp, esp
; Line 940
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Pos$[ebp]
	lea	eax, DWORD PTR [eax+ecx*4]
; Line 941
	pop	ebp
	ret	4
??A?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAEAAPAVAppState@@I@Z ENDP ; std::vector<AppState *,std::allocator<AppState *> >::operator[]
_TEXT	ENDS
PUBLIC	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
; Function compile flags: /Ogtp
;	COMDAT ?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size, COMDAT
; _this$ = ecx
; Line 878
	push	esi
; Line 879
	mov	esi, DWORD PTR [ecx+4]
	sub	esi, DWORD PTR [ecx]
	mov	eax, -1840700269			; 92492493H
	imul	esi
	add	edx, esi
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	pop	esi
; Line 880
	ret	0
?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
_TEXT	ENDS
PUBLIC	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
; Function compile flags: /Ogtp
;	COMDAT ??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[], COMDAT
; _this$ = ecx
; Line 928
	push	ebp
	mov	ebp, esp
; Line 940
	mov	eax, DWORD PTR __Pos$[ebp]
	lea	edx, DWORD PTR [eax*8]
	sub	edx, eax
	mov	eax, DWORD PTR [ecx]
	lea	eax, DWORD PTR [eax+edx*4]
; Line 941
	pop	ebp
	ret	4
??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
_TEXT	ENDS
PUBLIC	?empty@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBE_NXZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::empty
; Function compile flags: /Ogtp
;	COMDAT ?empty@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBE_NXZ PROC ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::empty, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
; Line 1160
	xor	eax, eax
	cmp	DWORD PTR [ecx+16], eax
	sete	al
; Line 1161
	ret	0
?empty@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBE_NXZ ENDP ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::empty
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogtp
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 2002
	mov	eax, ecx
; Line 2004
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN4@Myptr
	mov	eax, DWORD PTR [eax]
$LN4@Myptr:
; Line 2005
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogtp
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; Line 2008
	mov	eax, ecx
; Line 2010
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN4@Myptr@2
	mov	eax, DWORD PTR [eax]
$LN4@Myptr@2:
; Line 2011
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 459
	ret	0
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
; Function compile flags: /Ogtp
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 161
	mov	eax, ecx
; Line 163
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
; Function compile flags: /Ogtp
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; Line 165
	mov	eax, ecx
; Line 167
	ret	4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	?empty@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QBE_NXZ ; std::vector<AppState *,std::allocator<AppState *> >::empty
; Function compile flags: /Ogtp
;	COMDAT ?empty@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QBE_NXZ PROC ; std::vector<AppState *,std::allocator<AppState *> >::empty, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 889
	mov	eax, DWORD PTR [ecx]
	xor	edx, edx
	cmp	eax, DWORD PTR [ecx+4]
	sete	al
; Line 890
	ret	0
?empty@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QBE_NXZ ENDP ; std::vector<AppState *,std::allocator<AppState *> >::empty
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBE_NPBQAVAppState@@@Z ; std::vector<AppState *,std::allocator<AppState *> >::_Inside
; Function compile flags: /Ogtp
;	COMDAT ?_Inside@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBE_NPBQAVAppState@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBE_NPBQAVAppState@@@Z PROC ; std::vector<AppState *,std::allocator<AppState *> >::_Inside, COMDAT
; _this$ = ecx
; Line 1285
	push	ebp
	mov	ebp, esp
; Line 1286
	mov	eax, DWORD PTR __Ptr$[ebp]
	cmp	eax, DWORD PTR [ecx+4]
	jae	SHORT $LN3@Inside
	cmp	DWORD PTR [ecx], eax
	ja	SHORT $LN3@Inside
	mov	eax, 1
; Line 1287
	pop	ebp
	ret	4
$LN3@Inside:
; Line 1286
	xor	eax, eax
; Line 1287
	pop	ebp
	ret	4
?_Inside@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBE_NPBQAVAppState@@@Z ENDP ; std::vector<AppState *,std::allocator<AppState *> >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBEXPAPAVAppState@@0@Z ; std::vector<AppState *,std::allocator<AppState *> >::_Orphan_range
; Function compile flags: /Ogtp
;	COMDAT ?_Orphan_range@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBEXPAPAVAppState@@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBEXPAPAVAppState@@0@Z PROC ; std::vector<AppState *,std::allocator<AppState *> >::_Orphan_range, COMDAT
; _this$ = ecx
; Line 1454
	ret	8
?_Orphan_range@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBEXPAPAVAppState@@0@Z ENDP ; std::vector<AppState *,std::allocator<AppState *> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAE@XZ ; std::_Vector_val<AppState *,std::allocator<AppState *> >::~_Vector_val<AppState *,std::allocator<AppState *> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Vector_val@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<AppState *,std::allocator<AppState *> >::~_Vector_val<AppState *,std::allocator<AppState *> >, COMDAT
; _this$ = ecx
; Line 434
	ret	0
??1?$_Vector_val@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<AppState *,std::allocator<AppState *> >::~_Vector_val<AppState *,std::allocator<AppState *> >
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVAppState@@@std@@QAE@XZ	; std::allocator<AppState *>::allocator<AppState *>
; Function compile flags: /Ogtp
;	COMDAT ??0?$allocator@PAVAppState@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@PAVAppState@@@std@@QAE@XZ PROC		; std::allocator<AppState *>::allocator<AppState *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 161
	mov	eax, ecx
; Line 163
	ret	0
??0?$allocator@PAVAppState@@@std@@QAE@XZ ENDP		; std::allocator<AppState *>::allocator<AppState *>
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBE_NPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Inside
; Function compile flags: /Ogtp
;	COMDAT ?_Inside@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBE_NPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBE_NPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1285
	push	ebp
	mov	ebp, esp
; Line 1286
	mov	eax, DWORD PTR __Ptr$[ebp]
	cmp	eax, DWORD PTR [ecx+4]
	jae	SHORT $LN3@Inside@2
	cmp	DWORD PTR [ecx], eax
	ja	SHORT $LN3@Inside@2
	mov	eax, 1
; Line 1287
	pop	ebp
	ret	4
$LN3@Inside@2:
; Line 1286
	xor	eax, eax
; Line 1287
	pop	ebp
	ret	4
?_Inside@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBE_NPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range
; Function compile flags: /Ogtp
;	COMDAT ?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range, COMDAT
; _this$ = ecx
; Line 1454
	ret	8
?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx
; Line 434
	ret	0
??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtp
;	COMDAT ??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 161
	mov	eax, ecx
; Line 163
	ret	0
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVMPQArchive@@@std@@QAE@XZ	; std::allocator<MPQArchive *>::allocator<MPQArchive *>
; Function compile flags: /Ogtp
;	COMDAT ??0?$allocator@PAVMPQArchive@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@PAVMPQArchive@@@std@@QAE@XZ PROC		; std::allocator<MPQArchive *>::allocator<MPQArchive *>, COMDAT
; _this$ = ecx
; Line 161
	mov	eax, ecx
; Line 163
	ret	0
??0?$allocator@PAVMPQArchive@@@std@@QAE@XZ ENDP		; std::allocator<MPQArchive *>::allocator<MPQArchive *>
_TEXT	ENDS
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
; Function compile flags: /Ogtp
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ
_TEXT	SEGMENT
??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 84
	mov	eax, DWORD PTR [ecx]
; Line 85
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
; Function compile flags: /Ogtp
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++, COMDAT
; _this$ = ecx
; Line 93
	mov	eax, ecx
; Line 110
	add	DWORD PTR [eax], 28			; 0000001cH
; Line 112
	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
_TEXT	ENDS
PUBLIC	??D?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBEABQAVMPQArchive@@XZ ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator*
; Function compile flags: /Ogtp
;	COMDAT ??D?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBEABQAVMPQArchive@@XZ
_TEXT	SEGMENT
??D?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBEABQAVMPQArchive@@XZ PROC ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
; Line 331
	mov	eax, DWORD PTR [ecx]
	push	esi
	test	eax, eax
	jne	SHORT $LN9@operator
	xor	esi, esi
	jmp	SHORT $LN10@operator
$LN9@operator:
	mov	esi, DWORD PTR [eax]
$LN10@operator:
; Line 350
	mov	eax, DWORD PTR [ecx+8]
; Line 353
	mov	edx, DWORD PTR [esi+8]
	mov	ecx, eax
	shr	ecx, 2
	and	eax, 3
	cmp	edx, ecx
	ja	SHORT $LN1@operator
; Line 354
	sub	ecx, edx
$LN1@operator:
; Line 355
	mov	edx, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [edx+ecx*4]
	lea	eax, DWORD PTR [ecx+eax*4]
	pop	esi
; Line 356
	ret	0
??D?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBEABQAVMPQArchive@@XZ ENDP ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEAAV01@XZ ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator++
; Function compile flags: /Ogtp
;	COMDAT ??E?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator++, COMDAT
; _this$ = ecx
; Line 364
	mov	eax, ecx
; Line 381
	inc	DWORD PTR [eax+8]
; Line 383
	ret	0
??E?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator++
_TEXT	ENDS
PUBLIC	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
; Function compile flags: /Ogtp
;	COMDAT ?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1905
	push	ebp
	mov	ebp, esp
; Line 1906
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1907
	pop	ebp
	ret	4
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Ogtp
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx
; Line 1952
	push	ebp
	mov	ebp, esp
; Line 1953
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [ecx+16], eax
	jb	SHORT $LN5@Eos
	mov	ecx, DWORD PTR [ecx]
$LN5@Eos:
	mov	BYTE PTR [ecx+eax], 0
; Line 1954
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx
; Line 2020
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN4@Xran:
$LN3@Xran:
	int	3
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
; Function compile flags: /Ogtp
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 181
	push	ebp
	mov	ebp, esp
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Node>::deallocate
; Function compile flags: /Ogtp
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx
; Line 181
	push	ebp
	mov	ebp, esp
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?capacity@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QBEIXZ ; std::vector<AppState *,std::allocator<AppState *> >::capacity
; Function compile flags: /Ogtp
;	COMDAT ?capacity@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QBEIXZ PROC ; std::vector<AppState *,std::allocator<AppState *> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 777
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2
; Line 778
	ret	0
?capacity@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QBEIXZ ENDP ; std::vector<AppState *,std::allocator<AppState *> >::capacity
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBEXXZ ; std::vector<AppState *,std::allocator<AppState *> >::_Xlen
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?_Xlen@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBEXXZ PROC ; std::vector<AppState *,std::allocator<AppState *> >::_Xlen, COMDAT
; _this$ = ecx
; Line 1427
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen:
$LN3@Xlen:
	int	3
?_Xlen@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBEXXZ ENDP ; std::vector<AppState *,std::allocator<AppState *> >::_Xlen
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVAppState@@@std@@QAE@ABV01@@Z	; std::allocator<AppState *>::allocator<AppState *>
; Function compile flags: /Ogtp
;	COMDAT ??0?$allocator@PAVAppState@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@PAVAppState@@@std@@QAE@ABV01@@Z PROC	; std::allocator<AppState *>::allocator<AppState *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 165
	mov	eax, ecx
; Line 167
	ret	4
??0?$allocator@PAVAppState@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<AppState *>::allocator<AppState *>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAVAppState@@@std@@QAEXPAPAVAppState@@I@Z ; std::allocator<AppState *>::deallocate
; Function compile flags: /Ogtp
;	COMDAT ?deallocate@?$allocator@PAVAppState@@@std@@QAEXPAPAVAppState@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAVAppState@@@std@@QAEXPAPAVAppState@@I@Z PROC ; std::allocator<AppState *>::deallocate, COMDAT
; _this$ = ecx
; Line 181
	push	ebp
	mov	ebp, esp
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	pop	ebp
	ret	8
?deallocate@?$allocator@PAVAppState@@@std@@QAEXPAPAVAppState@@I@Z ENDP ; std::allocator<AppState *>::deallocate
_TEXT	ENDS
PUBLIC	?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity
; Function compile flags: /Ogtp
;	COMDAT ?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 776
	push	esi
; Line 777
	mov	esi, DWORD PTR [ecx+8]
	sub	esi, DWORD PTR [ecx]
	mov	eax, -1840700269			; 92492493H
	imul	esi
	add	edx, esi
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	pop	esi
; Line 778
	ret	0
?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity
_TEXT	ENDS
PUBLIC	?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen
; Function compile flags: /Ogtp
;	COMDAT ?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen, COMDAT
; _this$ = ecx
; Line 1427
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen@2:
$LN3@Xlen@2:
	int	3
?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen
_TEXT	ENDS
PUBLIC	??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtp
;	COMDAT ??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 165
	mov	eax, ecx
; Line 167
	ret	4
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
; Function compile flags: /Ogtp
;	COMDAT ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate, COMDAT
; _this$ = ecx
; Line 181
	push	ebp
	mov	ebp, esp
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
_TEXT	ENDS
PUBLIC	??0?$allocator@PAVMPQArchive@@@std@@QAE@ABV01@@Z ; std::allocator<MPQArchive *>::allocator<MPQArchive *>
; Function compile flags: /Ogtp
;	COMDAT ??0?$allocator@PAVMPQArchive@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@PAVMPQArchive@@@std@@QAE@ABV01@@Z PROC	; std::allocator<MPQArchive *>::allocator<MPQArchive *>, COMDAT
; _this$ = ecx
; Line 165
	mov	eax, ecx
; Line 167
	ret	4
??0?$allocator@PAVMPQArchive@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<MPQArchive *>::allocator<MPQArchive *>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAVMPQArchive@@@std@@QAEXPAPAVMPQArchive@@I@Z ; std::allocator<MPQArchive *>::deallocate
; Function compile flags: /Ogtp
;	COMDAT ?deallocate@?$allocator@PAVMPQArchive@@@std@@QAEXPAPAVMPQArchive@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAVMPQArchive@@@std@@QAEXPAPAVMPQArchive@@I@Z PROC ; std::allocator<MPQArchive *>::deallocate, COMDAT
; _this$ = ecx
; Line 181
	push	ebp
	mov	ebp, esp
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	pop	ebp
	ret	8
?deallocate@?$allocator@PAVMPQArchive@@@std@@QAEXPAPAVMPQArchive@@I@Z ENDP ; std::allocator<MPQArchive *>::deallocate
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAPAVMPQArchive@@@std@@QAEXPAPAPAVMPQArchive@@I@Z ; std::allocator<MPQArchive * *>::deallocate
; Function compile flags: /Ogtp
;	COMDAT ?deallocate@?$allocator@PAPAVMPQArchive@@@std@@QAEXPAPAPAVMPQArchive@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAPAVMPQArchive@@@std@@QAEXPAPAPAVMPQArchive@@I@Z PROC ; std::allocator<MPQArchive * *>::deallocate, COMDAT
; _this$ = ecx
; Line 181
	push	ebp
	mov	ebp, esp
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	pop	ebp
	ret	8
?deallocate@?$allocator@PAPAVMPQArchive@@@std@@QAEXPAPAPAVMPQArchive@@I@Z ENDP ; std::allocator<MPQArchive * *>::deallocate
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 45
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 47
	pop	ebp
	ret	8
??0?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Compat
; Function compile flags: /Ogtp
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Compat, COMDAT
; _this$ = ecx
; Line 253
	ret	4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Compat
_TEXT	ENDS
PUBLIC	?_Compat@?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBEXABV12@@Z ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::_Compat
; Function compile flags: /Ogtp
;	COMDAT ?_Compat@?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Compat@?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::_Compat, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
; Line 538
	ret	4
?_Compat@?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::_Compat
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Function compile flags: /Ogtp
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 181
	push	ebp
	mov	ebp, esp
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 183
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Ogtp
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1972
	push	ebp
	mov	ebp, esp
	push	esi
; Line 1973
	mov	esi, DWORD PTR __Ptr$[ebp]
	test	esi, esi
	je	SHORT $LN2@Inside@3
	mov	edx, DWORD PTR [ecx+20]
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN8@Inside@3
	mov	eax, DWORD PTR [ecx]
	jmp	SHORT $LN9@Inside@3
$LN8@Inside@3:
	mov	eax, ecx
$LN9@Inside@3:
	cmp	esi, eax
	jb	SHORT $LN2@Inside@3
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN12@Inside@3
	mov	eax, DWORD PTR [ecx]
	jmp	SHORT $LN13@Inside@3
$LN12@Inside@3:
	mov	eax, ecx
$LN13@Inside@3:
	mov	ecx, DWORD PTR [ecx+16]
	add	ecx, eax
	cmp	ecx, esi
	jbe	SHORT $LN2@Inside@3
; Line 1976
	mov	al, 1
	pop	esi
; Line 1977
	pop	ebp
	ret	4
$LN2@Inside@3:
; Line 1974
	xor	al, al
	pop	esi
; Line 1977
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx
; Line 2015
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN4@Xlen@3:
$LN3@Xlen@3:
	int	3
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAVAppState@@@std@@QBEIXZ	; std::allocator<AppState *>::max_size
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$allocator@PAVAppState@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@PAVAppState@@@std@@QBEIXZ PROC	; std::allocator<AppState *>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 219
	mov	eax, 1073741823				; 3fffffffH
; Line 220
	ret	0
?max_size@?$allocator@PAVAppState@@@std@@QBEIXZ ENDP	; std::allocator<AppState *>::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::max_size
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::max_size, COMDAT
; _this$ = ecx
; Line 219
	mov	eax, 153391689				; 09249249H
; Line 220
	ret	0
?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::max_size
_TEXT	ENDS
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> > >::operator==
; Function compile flags: /Ogtp
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> > >::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 316
	push	ebp
	mov	ebp, esp
; Line 330
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	al
; Line 331
	pop	ebp
	ret	4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> > >::operator==
_TEXT	ENDS
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> > >::operator!=
; Function compile flags: /Ogtp
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> > >::operator!=, COMDAT
; _this$ = ecx
; Line 334
	push	ebp
	mov	ebp, esp
; Line 335
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	al
; Line 336
	pop	ebp
	ret	4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> > >::operator!=
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 219
	or	eax, -1
; Line 220
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Color
; Function compile flags: /Ogtp
;	COMDAT ?_Color@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Color, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 606
	push	ebp
	mov	ebp, esp
; Line 607
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 68					; 00000044H
; Line 608
	pop	ebp
	ret	0
?_Color@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Isnil
; Function compile flags: /Ogtp
;	COMDAT ?_Isnil@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Isnil, COMDAT
; Line 611
	push	ebp
	mov	ebp, esp
; Line 612
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 69					; 00000045H
; Line 613
	pop	ebp
	ret	0
?_Isnil@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Left
; Function compile flags: /Ogtp
;	COMDAT ?_Left@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Left, COMDAT
; Line 621
	push	ebp
	mov	ebp, esp
; Line 622
	mov	eax, DWORD PTR __Pnode$[ebp]
; Line 623
	pop	ebp
	ret	0
?_Left@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Parent
; Function compile flags: /Ogtp
;	COMDAT ?_Parent@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Parent, COMDAT
; Line 626
	push	ebp
	mov	ebp, esp
; Line 627
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4
; Line 628
	pop	ebp
	ret	0
?_Parent@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Right
; Function compile flags: /Ogtp
;	COMDAT ?_Right@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Right, COMDAT
; Line 631
	push	ebp
	mov	ebp, esp
; Line 632
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8
; Line 633
	pop	ebp
	ret	0
?_Right@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Myval
; Function compile flags: /Ogtp
;	COMDAT ?_Myval@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Myval, COMDAT
; Line 636
	push	ebp
	mov	ebp, esp
; Line 637
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 12					; 0000000cH
; Line 638
	pop	ebp
	ret	0
?_Myval@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Max
; Function compile flags: /Ogtp
;	COMDAT ?_Max@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Max, COMDAT
; Line 641
	push	ebp
	mov	ebp, esp
; Line 642
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	BYTE PTR [ecx+69], 0
	jne	SHORT $LN1@Max
	npad	1
$LL2@Max:
; Line 643
	mov	eax, ecx
	mov	ecx, DWORD PTR [eax+8]
	cmp	BYTE PTR [ecx+69], 0
	je	SHORT $LL2@Max
$LN1@Max:
; Line 645
	pop	ebp
	ret	0
?_Max@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Min
; Function compile flags: /Ogtp
;	COMDAT ?_Min@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Min, COMDAT
; Line 648
	push	ebp
	mov	ebp, esp
; Line 649
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	BYTE PTR [ecx+69], 0
	jne	SHORT $LN1@Min
	npad	2
$LL2@Min:
; Line 650
	mov	eax, ecx
	mov	ecx, DWORD PTR [eax]
	cmp	BYTE PTR [ecx+69], 0
	je	SHORT $LL2@Min
$LN1@Min:
; Line 652
	pop	ebp
	ret	0
?_Min@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >,std::_Iterator_base0>::_Mynode
; Function compile flags: /Ogtp
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx
; Line 122
	mov	eax, DWORD PTR [ecx]
; Line 123
	ret	0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >,std::_Iterator_base0>
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 45
	pop	ebp
	ret	8
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >,std::_Iterator_base0>
_TEXT	ENDS
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >,std::_Iterator_base0>::operator++
; Function compile flags: /Ogtp
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx
; Line 58
	mov	eax, ecx
; Line 59
	mov	edx, DWORD PTR [eax]
	cmp	BYTE PTR [edx+69], 0
	jne	SHORT $LN3@operator@2
; Line 61
	mov	ecx, DWORD PTR [edx+8]
	cmp	BYTE PTR [ecx+69], 0
	jne	SHORT $LN34@operator@2
; Line 63
	mov	edx, DWORD PTR [ecx]
	cmp	BYTE PTR [edx+69], 0
	jne	SHORT $LN17@operator@2
	npad	5
$LL18@operator@2:
	mov	ecx, edx
	mov	edx, DWORD PTR [ecx]
	cmp	BYTE PTR [edx+69], 0
	je	SHORT $LL18@operator@2
$LN17@operator@2:
	mov	DWORD PTR [eax], ecx
; Line 73
	ret	0
$LN34@operator@2:
; Line 68
	mov	edx, DWORD PTR [edx+4]
	cmp	BYTE PTR [edx+69], 0
	jne	SHORT $LN1@operator@2
$LL2@operator@2:
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR [edx+8]
	jne	SHORT $LN1@operator@2
; Line 69
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [edx+4]
	cmp	BYTE PTR [edx+69], 0
	je	SHORT $LL2@operator@2
$LN1@operator@2:
; Line 70
	mov	DWORD PTR [eax], edx
$LN3@operator@2:
; Line 73
	ret	0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >,std::_Iterator_base0>::operator++
_TEXT	ENDS
PUBLIC	??$strcat_s@$0EAA@@@YAHAAY0EAA@DPBD@Z		; strcat_s<1024>
EXTRN	__imp__strcat_s:PROC
; Function compile flags: /Ogtp
;	COMDAT ??$strcat_s@$0EAA@@@YAHAAY0EAA@DPBD@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Source$ = 12						; size = 4
??$strcat_s@$0EAA@@@YAHAAY0EAA@DPBD@Z PROC		; strcat_s<1024>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h
; Line 109
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Source$[ebp]
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	eax
	push	1024					; 00000400H
	push	ecx
	call	DWORD PTR __imp__strcat_s
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	0
??$strcat_s@$0EAA@@@YAHAAY0EAA@DPBD@Z ENDP		; strcat_s<1024>
_TEXT	ENDS
PUBLIC	??$sprintf_s@$0CA@@@YAHAAY0CA@DPBDZZ		; sprintf_s<32>
EXTRN	__imp__vsprintf_s:PROC
; Function compile flags: /Ogtp
;	COMDAT ??$sprintf_s@$0CA@@@YAHAAY0CA@DPBDZZ
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Format$ = 12						; size = 4
??$sprintf_s@$0CA@@@YAHAAY0CA@DPBDZZ PROC		; sprintf_s<32>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\stdio.h
; Line 323
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR __Format$[ebp]
	mov	edx, DWORD PTR __Dest$[ebp]
	lea	eax, DWORD PTR __Format$[ebp+4]
	push	eax
	push	ecx
	push	32					; 00000020H
	push	edx
	call	DWORD PTR __imp__vsprintf_s
	add	esp, 16					; 00000010H
	pop	ebp
	ret	0
??$sprintf_s@$0CA@@@YAHAAY0CA@DPBDZZ ENDP		; sprintf_s<32>
_TEXT	ENDS
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
; Function compile flags: /Ogtp
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ENDP ; std::forward<std::allocator<char> >
_TEXT	ENDS
PUBLIC	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtp
;	COMDAT ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	??$addressof@QAVAppState@@@std@@YAPBQAVAppState@@ABQAV1@@Z ; std::addressof<AppState * const>
; Function compile flags: /Ogtp
;	COMDAT ??$addressof@QAVAppState@@@std@@YAPBQAVAppState@@ABQAV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@QAVAppState@@@std@@YAPBQAVAppState@@ABQAV1@@Z PROC ; std::addressof<AppState * const>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 110
	push	ebp
	mov	ebp, esp
; Line 111
	mov	eax, DWORD PTR __Val$[ebp]
; Line 112
	pop	ebp
	ret	0
??$addressof@QAVAppState@@@std@@YAPBQAVAppState@@ABQAV1@@Z ENDP ; std::addressof<AppState * const>
_TEXT	ENDS
PUBLIC	??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtp
;	COMDAT ??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; Line 110
	push	ebp
	mov	ebp, esp
; Line 111
	mov	eax, DWORD PTR __Val$[ebp]
; Line 112
	pop	ebp
	ret	0
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
; Function compile flags: /Ogtp
;	COMDAT ??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z PROC ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >, COMDAT
; Line 110
	push	ebp
	mov	ebp, esp
; Line 111
	mov	eax, DWORD PTR __Val$[ebp]
; Line 112
	pop	ebp
	ret	0
??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ENDP ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
_TEXT	ENDS
PUBLIC	??$?0PAVMPQArchive@@@?$allocator@PAPAVMPQArchive@@@std@@QAE@ABV?$allocator@PAVMPQArchive@@@1@@Z ; std::allocator<MPQArchive * *>::allocator<MPQArchive * *><MPQArchive *>
; Function compile flags: /Ogtp
;	COMDAT ??$?0PAVMPQArchive@@@?$allocator@PAPAVMPQArchive@@@std@@QAE@ABV?$allocator@PAVMPQArchive@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0PAVMPQArchive@@@?$allocator@PAPAVMPQArchive@@@std@@QAE@ABV?$allocator@PAVMPQArchive@@@1@@Z PROC ; std::allocator<MPQArchive * *>::allocator<MPQArchive * *><MPQArchive *>, COMDAT
; _this$ = ecx
; Line 170
	mov	eax, ecx
; Line 172
	ret	4
??$?0PAVMPQArchive@@@?$allocator@PAPAVMPQArchive@@@std@@QAE@ABV?$allocator@PAVMPQArchive@@@1@@Z ENDP ; std::allocator<MPQArchive * *>::allocator<MPQArchive * *><MPQArchive *>
_TEXT	ENDS
PUBLIC	??$?0PAVMPQArchive@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVMPQArchive@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><MPQArchive *>
; Function compile flags: /Ogtp
;	COMDAT ??$?0PAVMPQArchive@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVMPQArchive@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0PAVMPQArchive@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVMPQArchive@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><MPQArchive *>, COMDAT
; _this$ = ecx
; Line 170
	mov	eax, ecx
; Line 172
	ret	4
??$?0PAVMPQArchive@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVMPQArchive@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><MPQArchive *>
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z
_TEXT	SEGMENT
$T136327 = -12						; size = 12
$T136332 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z PROC ; std::_Allocate<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 30
	push	ebp
	mov	ebp, esp
; Line 33
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
; Line 35
	je	SHORT $LN5@Allocate
; Line 36
	cmp	ecx, 536870911				; 1fffffffH
	ja	SHORT $LN1@Allocate
	lea	eax, DWORD PTR [ecx*8]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
; Line 39
	jne	SHORT $LN5@Allocate
$LN1@Allocate:
; Line 37
	lea	ecx, DWORD PTR $T136332[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T136327[ebp]
	mov	DWORD PTR $T136332[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T136327[ebp]
	push	edx
	mov	DWORD PTR $T136327[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN10@Allocate:
$LN5@Allocate:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@Allocate:
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ENDP ; std::_Allocate<std::_Container_proxy>
_TEXT	ENDS
PUBLIC	??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@0@AAU10@@Z ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >
; Function compile flags: /Ogtp
;	COMDAT ??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@0@AAU10@@Z PROC ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >, COMDAT
; Line 110
	push	ebp
	mov	ebp, esp
; Line 111
	mov	eax, DWORD PTR __Val$[ebp]
; Line 112
	pop	ebp
	ret	0
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >
_TEXT	ENDS
PUBLIC	??$_Allocate@PAVAppState@@@std@@YAPAPAVAppState@@IPAPAV1@@Z ; std::_Allocate<AppState *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Allocate@PAVAppState@@@std@@YAPAPAVAppState@@IPAPAV1@@Z
_TEXT	SEGMENT
$T136339 = -12						; size = 12
$T136343 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAVAppState@@@std@@YAPAPAVAppState@@IPAPAV1@@Z PROC ; std::_Allocate<AppState *>, COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
; Line 33
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
; Line 35
	je	SHORT $LN5@Allocate@2
; Line 36
	cmp	ecx, 1073741823				; 3fffffffH
	ja	SHORT $LN1@Allocate@2
	lea	eax, DWORD PTR [ecx*4]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
; Line 39
	jne	SHORT $LN5@Allocate@2
$LN1@Allocate@2:
; Line 37
	lea	ecx, DWORD PTR $T136343[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T136339[ebp]
	mov	DWORD PTR $T136343[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T136339[ebp]
	push	edx
	mov	DWORD PTR $T136339[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN10@Allocate@2:
$LN5@Allocate@2:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@Allocate@2:
??$_Allocate@PAVAppState@@@std@@YAPAPAVAppState@@IPAPAV1@@Z ENDP ; std::_Allocate<AppState *>
_TEXT	ENDS
PUBLIC	??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtp
;	COMDAT ??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z
_TEXT	SEGMENT
$T136348 = -12						; size = 12
$T136352 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z PROC ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
; Line 33
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
; Line 35
	je	SHORT $LN5@Allocate@3
; Line 36
	cmp	ecx, 153391689				; 09249249H
	ja	SHORT $LN1@Allocate@3
	lea	eax, DWORD PTR [ecx*8]
	sub	eax, ecx
	add	eax, eax
	add	eax, eax
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
; Line 39
	jne	SHORT $LN5@Allocate@3
$LN1@Allocate@3:
; Line 37
	lea	ecx, DWORD PTR $T136352[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T136348[ebp]
	mov	DWORD PTR $T136352[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T136348[ebp]
	push	edx
	mov	DWORD PTR $T136348[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN10@Allocate@3:
$LN5@Allocate@3:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@Allocate@3:
??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z ENDP ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
; Function compile flags: /Ogtp
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
$T136357 = -12						; size = 12
$T136361 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
; Line 33
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
; Line 35
	je	SHORT $LN5@Allocate@4
; Line 36
	cmp	ecx, -1
	ja	SHORT $LN1@Allocate@4
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
; Line 39
	jne	SHORT $LN5@Allocate@4
$LN1@Allocate@4:
; Line 37
	lea	eax, DWORD PTR $T136361[ebp]
	push	eax
	lea	ecx, DWORD PTR $T136357[ebp]
	mov	DWORD PTR $T136361[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T136357[ebp]
	push	ecx
	mov	DWORD PTR $T136357[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN10@Allocate@4:
$LN5@Allocate@4:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@Allocate@4:
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
; Function compile flags: /Ogtp
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	esi
	push	eax
	mov	esi, ecx
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
; Function compile flags: /Ogtp
;	COMDAT ??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 86
	push	ebp
	mov	ebp, esp
; Line 87
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 88
	pop	ebp
	ret	0
??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
_TEXT	ENDS
PUBLIC	??$forward@AAPAVAppState@@@std@@YAAAPAVAppState@@AAPAV1@@Z ; std::forward<AppState * &>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@AAPAVAppState@@@std@@YAAAPAVAppState@@AAPAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAVAppState@@@std@@YAAAPAVAppState@@AAPAV1@@Z PROC ; std::forward<AppState * &>, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@AAPAVAppState@@@std@@YAAAPAVAppState@@AAPAV1@@Z ENDP ; std::forward<AppState * &>
_TEXT	ENDS
PUBLIC	??$construct@AAPAVAppState@@@?$allocator@PAVAppState@@@std@@QAEXPAPAVAppState@@AAPAV2@@Z ; std::allocator<AppState *>::construct<AppState * &>
; Function compile flags: /Ogtp
;	COMDAT ??$construct@AAPAVAppState@@@?$allocator@PAVAppState@@@std@@QAEXPAPAVAppState@@AAPAV2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAPAVAppState@@@?$allocator@PAVAppState@@@std@@QAEXPAPAVAppState@@AAPAV2@@Z PROC ; std::allocator<AppState *>::construct<AppState * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 206
	push	ebp
	mov	ebp, esp
; Line 208
	mov	eax, DWORD PTR __Ptr$[ebp]
	test	eax, eax
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN3@construct:
; Line 209
	pop	ebp
	ret	8
??$construct@AAPAVAppState@@@?$allocator@PAVAppState@@@std@@QAEXPAPAVAppState@@AAPAV2@@Z ENDP ; std::allocator<AppState *>::construct<AppState * &>
_TEXT	ENDS
PUBLIC	??$forward@ABQAVAppState@@@std@@YAABQAVAppState@@ABQAV1@@Z ; std::forward<AppState * const &>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@ABQAVAppState@@@std@@YAABQAVAppState@@ABQAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAVAppState@@@std@@YAABQAVAppState@@ABQAV1@@Z PROC ; std::forward<AppState * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@ABQAVAppState@@@std@@YAABQAVAppState@@ABQAV1@@Z ENDP ; std::forward<AppState * const &>
_TEXT	ENDS
PUBLIC	??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
_TEXT	ENDS
PUBLIC	??$forward@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
_TEXT	ENDS
PUBLIC	??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z		; std::operator==<char,char>
; Function compile flags: /Ogtp
;	COMDAT ??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z PROC		; std::operator==<char,char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 263
	mov	al, 1
; Line 264
	ret	0
??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z ENDP		; std::operator==<char,char>
_TEXT	ENDS
PUBLIC	??$_Move@AAD@std@@YA$$QADAAD@Z			; std::_Move<char &>
; Function compile flags: /Ogtp
;	COMDAT ??$_Move@AAD@std@@YA$$QADAAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAD@std@@YA$$QADAAD@Z PROC			; std::_Move<char &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 94
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 96
	pop	ebp
	ret	0
??$_Move@AAD@std@@YA$$QADAAD@Z ENDP			; std::_Move<char &>
_TEXT	ENDS
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAVAppState@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVAppState@@0@Z ; std::_Ptr_cat<AppState *,AppState *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Ptr_cat@PAVAppState@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVAppState@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAVAppState@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVAppState@@0@Z PROC ; std::_Ptr_cat<AppState *,AppState *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 528
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 530
	mov	al, BYTE PTR __Cat$[ebp]
; Line 531
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@PAVAppState@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVAppState@@0@Z ENDP ; std::_Ptr_cat<AppState *,AppState *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVAppState@@@std@@@std@@YAXPAPAVAppState@@0AAV?$allocator@PAVAppState@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<AppState *> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy_range@V?$allocator@PAVAppState@@@std@@@std@@YAXPAPAVAppState@@0AAV?$allocator@PAVAppState@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@PAVAppState@@@std@@@std@@YAXPAPAVAppState@@0AAV?$allocator@PAVAppState@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<AppState *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 105
	ret	0
??$_Destroy_range@V?$allocator@PAVAppState@@@std@@@std@@YAXPAPAVAppState@@0AAV?$allocator@PAVAppState@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<AppState *> >
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtp
;	COMDAT ??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 528
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 530
	mov	al, BYTE PTR __Cat$[ebp]
; Line 531
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	??$_Construct@PAVAppState@@ABQAV1@@std@@YAXPAPAVAppState@@ABQAV1@@Z ; std::_Construct<AppState *,AppState * const &>
; Function compile flags: /Ogtp
;	COMDAT ??$_Construct@PAVAppState@@ABQAV1@@std@@YAXPAPAVAppState@@ABQAV1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAVAppState@@ABQAV1@@std@@YAXPAPAVAppState@@ABQAV1@@Z PROC ; std::_Construct<AppState *,AppState * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 46
	push	ebp
	mov	ebp, esp
; Line 48
	mov	eax, DWORD PTR __Ptr$[ebp]
	test	eax, eax
	je	SHORT $LN3@Construct
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN3@Construct:
; Line 49
	pop	ebp
	ret	0
??$_Construct@PAVAppState@@ABQAV1@@std@@YAXPAPAVAppState@@ABQAV1@@Z ENDP ; std::_Construct<AppState *,AppState * const &>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAVAppState@@@std@@YAXPAPAVAppState@@@Z ; std::_Destroy<AppState *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy@PAVAppState@@@std@@YAXPAPAVAppState@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAVAppState@@@std@@YAXPAPAVAppState@@@Z PROC ; std::_Destroy<AppState *>, COMDAT
; Line 64
	ret	0
??$_Destroy@PAVAppState@@@std@@YAXPAPAVAppState@@@Z ENDP ; std::_Destroy<AppState *>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAVMPQArchive@@@std@@YAXPAPAVMPQArchive@@@Z ; std::_Destroy<MPQArchive *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy@PAVMPQArchive@@@std@@YAXPAPAVMPQArchive@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAVMPQArchive@@@std@@YAXPAPAVMPQArchive@@@Z PROC ; std::_Destroy<MPQArchive *>, COMDAT
; Line 64
	ret	0
??$_Destroy@PAVMPQArchive@@@std@@YAXPAPAVMPQArchive@@@Z ENDP ; std::_Destroy<MPQArchive *>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAPAVMPQArchive@@@std@@YAXPAPAPAVMPQArchive@@@Z ; std::_Destroy<MPQArchive * *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy@PAPAVMPQArchive@@@std@@YAXPAPAPAVMPQArchive@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAPAVMPQArchive@@@std@@YAXPAPAPAVMPQArchive@@@Z PROC ; std::_Destroy<MPQArchive * *>, COMDAT
; Line 64
	ret	0
??$_Destroy@PAPAVMPQArchive@@@std@@YAXPAPAPAVMPQArchive@@@Z ENDP ; std::_Destroy<MPQArchive * *>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z ; std::_Destroy<std::_Container_proxy>
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z PROC ; std::_Destroy<std::_Container_proxy>, COMDAT
; Line 64
	ret	0
??$_Destroy@U_Container_proxy@std@@@std@@YAXPAU_Container_proxy@0@@Z ENDP ; std::_Destroy<std::_Container_proxy>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAPAVAppState@@@std@@YAPAPAVAppState@@PAPAV1@@Z ; std::_Val_type<AppState * *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Val_type@PAPAVAppState@@@std@@YAPAPAVAppState@@PAPAV1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAVAppState@@@std@@YAPAPAVAppState@@PAPAV1@@Z PROC ; std::_Val_type<AppState * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 802
	xor	eax, eax
; Line 803
	ret	0
??$_Val_type@PAPAVAppState@@@std@@YAPAPAVAppState@@PAPAV1@@Z ENDP ; std::_Val_type<AppState * *>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAVAppState@@PAV1@PAV1@@std@@YAPAPAVAppState@@PAPAV1@00AAV?$allocator@PAVAppState@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<AppState *,AppState *,AppState *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Uninit_move@PAVAppState@@PAV1@PAV1@@std@@YAPAPAVAppState@@PAPAV1@00AAV?$allocator@PAVAppState@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAVAppState@@PAV1@PAV1@@std@@YAPAPAVAppState@@PAPAV1@00AAV?$allocator@PAVAppState@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<AppState *,AppState *,AppState *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
; Line 456
	push	ebp
	mov	ebp, esp
; Line 459
	mov	ecx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, ecx
	push	esi
	sar	eax, 2
; Line 461
	lea	esi, DWORD PTR [eax*4]
	mov	eax, DWORD PTR __Dest$[ebp]
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
	pop	esi
; Line 462
	pop	ebp
	ret	0
??$_Uninit_move@PAVAppState@@PAV1@PAV1@@std@@YAPAPAVAppState@@PAPAV1@00AAV?$allocator@PAVAppState@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<AppState *,AppState *,AppState *>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z ; std::_Val_type<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Val_type@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z PROC ; std::_Val_type<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 802
	xor	eax, eax
; Line 803
	ret	0
??$_Val_type@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z ENDP ; std::_Val_type<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
EXTRN	__imp_??1_Lockit@std@@QAE@XZ:PROC
EXTRN	__imp_??0_Lockit@std@@QAE@H@Z:PROC
; Function compile flags: /Ogtp
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Lock$72498 = 8					; size = 4
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx
; Line 143
	push	ebp
	mov	ebp, esp
; Line 144
	mov	eax, DWORD PTR __Parent$[ebp]
	test	eax, eax
	jne	SHORT $LN2@Adopt
; Line 146
	push	3
	lea	ecx, DWORD PTR __Lock$72498[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
; Line 148
	lea	ecx, DWORD PTR __Lock$72498[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
; Line 166
	pop	ebp
	ret	4
$LN2@Adopt:
; Line 163
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
; Line 166
	pop	ebp
	ret	4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
_TEXT	ENDS
PUBLIC	?checkConfig@@YAHXZ				; checkConfig
EXTRN	__imp__exit:PROC
; Function compile flags: /Ogtp
_TEXT	SEGMENT
?checkConfig@@YAHXZ PROC				; checkConfig
; File c:\programovani\wow editor\test\src\editor\opengl.cpp
; Line 36
	push	OFFSET $SG120138
	push	OFFSET $SG120139
	call	DWORD PTR __imp__fopen
	add	esp, 8
; Line 38
	test	eax, eax
	je	SHORT $LN4@checkConfi
; Line 40
	push	OFFSET $SG120141
	call	?gLog@@YAXPADZZ				; gLog
; Line 48
	push	OFFSET $SG120145
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 8
; Line 57
	xor	eax, eax
; Line 58
	ret	0
$LN4@checkConfi:
; Line 53
	push	OFFSET $SG120147
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 4
; Line 54
	push	1
	call	DWORD PTR __imp__exit
$LN8@checkConfi:
$LN7@checkConfi:
	int	3
?checkConfig@@YAHXZ ENDP				; checkConfig
_TEXT	ENDS
PUBLIC	?GraphicCard@@YAXXZ				; GraphicCard
EXTRN	__imp__glGetString@4:PROC
; Function compile flags: /Ogtp
_TEXT	SEGMENT
?GraphicCard@@YAXXZ PROC				; GraphicCard
; Line 155
	push	esi
; Line 156
	mov	esi, DWORD PTR __imp__glGetString@4
	push	7936					; 00001f00H
	call	esi
	push	eax
	push	OFFSET $SG120216
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 8
; Line 157
	push	7937					; 00001f01H
	call	esi
	push	eax
	push	OFFSET $SG120217
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 8
; Line 158
	push	7938					; 00001f02H
	call	esi
	push	eax
	push	OFFSET $SG120218
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 8
	pop	esi
; Line 159
	ret	0
?GraphicCard@@YAXXZ ENDP				; GraphicCard
_TEXT	ENDS
PUBLIC	?deleteFonts@@YAXXZ				; deleteFonts
EXTRN	__imp__glDeleteTextures@8:PROC
; Function compile flags: /Ogtp
_TEXT	SEGMENT
?deleteFonts@@YAXXZ PROC				; deleteFonts
; Line 197
	push	esi
; Line 198
	push	OFFSET ?ftex@@3IA			; ftex
	push	1
	call	DWORD PTR __imp__glDeleteTextures@8
; Line 200
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	mov	esi, ecx
	test	ecx, ecx
	je	SHORT $LN9@deleteFont
	call	??1Font@@QAE@XZ				; Font::~Font
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN9@deleteFont:
; Line 201
	mov	ecx, DWORD PTR ?f24@@3PAVFont@@A	; f24
	mov	esi, ecx
	test	ecx, ecx
	je	SHORT $LN12@deleteFont
	call	??1Font@@QAE@XZ				; Font::~Font
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN12@deleteFont:
; Line 202
	mov	ecx, DWORD PTR ?f32@@3PAVFont@@A	; f32
	mov	esi, ecx
	test	ecx, ecx
	je	SHORT $LN15@deleteFont
	call	??1Font@@QAE@XZ				; Font::~Font
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN15@deleteFont:
	pop	esi
; Line 203
	ret	0
?deleteFonts@@YAXXZ ENDP				; deleteFonts
_TEXT	ENDS
PUBLIC	?getGamePath@@YAXXZ				; getGamePath
EXTRN	__imp__RegCloseKey@4:PROC
EXTRN	__imp__RegQueryValueExA@24:PROC
EXTRN	__imp__RegOpenKeyExA@20:PROC
EXTRN	_memset:PROC
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_t$ = -12						; size = 4
_s$ = -8						; size = 4
_key$ = -4						; size = 4
?getGamePath@@YAXXZ PROC				; getGamePath
; Line 242
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
; Line 248
	push	1024					; 00000400H
	push	0
	push	OFFSET ?gamepath@@3PADA			; gamepath
	mov	DWORD PTR _s$[ebp], 1024		; 00000400H
	call	_memset
	add	esp, 12					; 0000000cH
; Line 249
	lea	eax, DWORD PTR _key$[ebp]
	push	eax
	push	1
	push	0
	push	OFFSET $SG120729
	push	-2147483646				; 80000002H
	call	DWORD PTR __imp__RegOpenKeyExA@20
; Line 250
	mov	eax, DWORD PTR _key$[ebp]
	mov	esi, DWORD PTR __imp__RegQueryValueExA@24
	lea	ecx, DWORD PTR _s$[ebp]
	push	ecx
	push	OFFSET ?gamepath@@3PADA			; gamepath
	lea	edx, DWORD PTR _t$[ebp]
	push	edx
	push	0
	push	OFFSET $SG120731
	push	eax
	call	esi
; Line 251
	mov	eax, DWORD PTR _key$[ebp]
	lea	ecx, DWORD PTR _s$[ebp]
	push	ecx
	push	OFFSET ?wowpath@@3PADA			; wowpath
	lea	edx, DWORD PTR _t$[ebp]
	push	edx
	push	0
	push	OFFSET $SG120733
	push	eax
	call	esi
; Line 252
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	call	DWORD PTR __imp__RegCloseKey@4
; Line 253
	push	OFFSET $SG120739
	push	1024					; 00000400H
	push	OFFSET ?gamepath@@3PADA			; gamepath
	call	DWORD PTR __imp__strcat_s
	add	esp, 12					; 0000000cH
	pop	esi
; Line 257
	mov	esp, ebp
	pop	ebp
	ret	0
?getGamePath@@YAXXZ ENDP				; getGamePath
_TEXT	ENDS
PUBLIC	??1?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ ; std::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >::~_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ PROC ; std::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >::~_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >, COMDAT
; _this$ = ecx
	ret	0
??1?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ ENDP ; std::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >::~_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >
_TEXT	ENDS
PUBLIC	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
; Function compile flags: /Ogtp
;	COMDAT ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1435
	push	ebp
	mov	ebp, esp
; Line 1446
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN5@operator@3
	mov	ecx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Off$[ebp]
	add	eax, ecx
; Line 1447
	pop	ebp
	ret	4
; Line 1446
$LN5@operator@3:
	mov	edx, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [ecx+edx]
; Line 1447
	pop	ebp
	ret	4
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
_TEXT	ENDS
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Ogtp
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx
; Line 1495
	mov	eax, ecx
; Line 1496
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN6@c_str
	mov	eax, DWORD PTR [eax]
$LN6@c_str:
; Line 1497
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
; Function compile flags: /Ogtp
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ
_TEXT	SEGMENT
??D?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 322
	mov	eax, DWORD PTR [ecx]
; Line 323
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
_TEXT	ENDS
PUBLIC	??C?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator->
; Function compile flags: /Ogtp
;	COMDAT ??C?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ
_TEXT	SEGMENT
??C?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator->, COMDAT
; _this$ = ecx
; Line 327
	mov	eax, DWORD PTR [ecx]
; Line 328
	ret	0
??C?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator->
_TEXT	ENDS
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
; Function compile flags: /Ogtp
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++, COMDAT
; _this$ = ecx
; Line 331
	mov	eax, ecx
; Line 332
	add	DWORD PTR [eax], 28			; 0000001cH
; Line 334
	ret	0
??E?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
_TEXT	ENDS
PUBLIC	??D?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBEAAPAVMPQArchive@@XZ ; std::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator*
; Function compile flags: /Ogtp
;	COMDAT ??D?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBEAAPAVMPQArchive@@XZ
_TEXT	SEGMENT
??D?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBEAAPAVMPQArchive@@XZ PROC ; std::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
; Line 619
	mov	eax, DWORD PTR [ecx]
	push	esi
	test	eax, eax
	jne	SHORT $LN11@operator@4
	xor	esi, esi
	jmp	SHORT $LN12@operator@4
$LN11@operator@4:
	mov	esi, DWORD PTR [eax]
$LN12@operator@4:
	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR [esi+8]
	mov	ecx, eax
	shr	ecx, 2
	and	eax, 3
	cmp	edx, ecx
	ja	SHORT $LN3@operator@4
	sub	ecx, edx
$LN3@operator@4:
	mov	edx, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [edx+ecx*4]
	lea	eax, DWORD PTR [ecx+eax*4]
	pop	esi
; Line 620
	ret	0
??D?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBEAAPAVMPQArchive@@XZ ENDP ; std::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator*
_TEXT	ENDS
PUBLIC	??E?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEAAV01@XZ ; std::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator++
; Function compile flags: /Ogtp
;	COMDAT ??E?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator++, COMDAT
; _this$ = ecx
; Line 628
	mov	eax, ecx
; Line 629
	inc	DWORD PTR [eax+8]
; Line 631
	ret	0
??E?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator++
_TEXT	ENDS
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Ogtp
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1987
	push	ebp
	mov	ebp, esp
; Line 1988
	cmp	BYTE PTR __Built$[ebp], 0
	push	esi
	push	edi
	mov	edi, DWORD PTR __Newsize$[ebp]
	mov	esi, ecx
	je	SHORT $LN9@Tidy
; Line 1990
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN9@Tidy
; Line 1992
	push	ebx
	mov	ebx, DWORD PTR [esi]
; Line 1993
	test	edi, edi
	je	SHORT $LN7@Tidy
; Line 1994
	push	edi
	push	ebx
	push	esi
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN7@Tidy:
; Line 1995
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	pop	ebx
$LN9@Tidy:
; Line 1998
	mov	DWORD PTR [esi+16], edi
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	BYTE PTR [edi+esi], 0
	pop	edi
	pop	esi
; Line 1999
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z PROC ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 454
	mov	eax, ecx
; Line 455
	ret	4
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??1?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::~_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::~_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 555
	mov	eax, DWORD PTR [ecx+4]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
; Line 556
	ret	0
??1?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::~_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAE@V?$allocator@PAVAppState@@@1@@Z ; std::_Vector_val<AppState *,std::allocator<AppState *> >::_Vector_val<AppState *,std::allocator<AppState *> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Vector_val@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAE@V?$allocator@PAVAppState@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAE@V?$allocator@PAVAppState@@@1@@Z PROC ; std::_Vector_val<AppState *,std::allocator<AppState *> >::_Vector_val<AppState *,std::allocator<AppState *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 426
	mov	eax, ecx
; Line 427
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
; Line 428
	mov	DWORD PTR [eax+4], ecx
; Line 429
	mov	DWORD PTR [eax+8], ecx
; Line 430
	ret	4
??0?$_Vector_val@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAE@V?$allocator@PAVAppState@@@1@@Z ENDP ; std::_Vector_val<AppState *,std::allocator<AppState *> >::_Vector_val<AppState *,std::allocator<AppState *> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx
; Line 426
	mov	eax, ecx
; Line 427
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
; Line 428
	mov	DWORD PTR [eax+4], ecx
; Line 429
	mov	DWORD PTR [eax+8], ecx
; Line 430
	ret	4
??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx
; Line 304
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 305
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator==
; Function compile flags: /Ogtp
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator==, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
; Line 203
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	al
; Line 204
	pop	ebp
	ret	4
??8?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator==
_TEXT	ENDS
PUBLIC	??8?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBE_NABV01@@Z ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator==
; Function compile flags: /Ogtp
;	COMDAT ??8?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
; Line 474
	push	ebp
	mov	ebp, esp
; Line 476
	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR __Right$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx+8]
	sete	al
; Line 477
	pop	ebp
	ret	4
??8?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator==
_TEXT	ENDS
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
; Function compile flags: /Ogtp
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1108
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
; Line 1109
	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR __Off$[ebp]
	push	edi
	cmp	eax, ecx
	jae	SHORT $LN3@erase
; Line 1110
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN28@erase:
$LN3@erase:
; Line 1111
	mov	edi, DWORD PTR __Count$[ebp]
	sub	eax, ecx
	cmp	eax, edi
	jae	SHORT $LN2@erase
; Line 1112
	mov	edi, eax
$LN2@erase:
; Line 1113
	test	edi, edi
	je	SHORT $LN25@erase
; Line 1116
	mov	edx, DWORD PTR [esi+20]
	push	ebx
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN11@erase
	mov	ebx, DWORD PTR [esi]
	jmp	SHORT $LN12@erase
$LN11@erase:
	mov	ebx, esi
$LN12@erase:
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN15@erase
	mov	edx, DWORD PTR [esi]
	jmp	SHORT $LN16@erase
$LN15@erase:
	mov	edx, esi
$LN16@erase:
	sub	eax, edi
	add	ebx, ecx
	push	eax
	add	ebx, edi
	add	edx, ecx
	push	ebx
	push	edx
	call	DWORD PTR __imp__memmove
; Line 1117
	mov	eax, DWORD PTR [esi+16]
	add	esp, 12					; 0000000cH
	sub	eax, edi
; Line 1118
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], eax
	pop	ebx
	jb	SHORT $LN23@erase
	mov	ecx, DWORD PTR [esi]
	mov	BYTE PTR [ecx+eax], 0
	pop	edi
; Line 1120
	mov	eax, esi
	pop	esi
; Line 1121
	pop	ebp
	ret	8
; Line 1118
$LN23@erase:
	mov	ecx, esi
	mov	BYTE PTR [ecx+eax], 0
$LN25@erase:
; Line 1120
	pop	edi
	mov	eax, esi
	pop	esi
; Line 1121
	pop	ebp
	ret	8
$LN27@erase:
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
PUBLIC	?max_size@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QBEIXZ ; std::vector<AppState *,std::allocator<AppState *> >::max_size
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QBEIXZ PROC ; std::vector<AppState *,std::allocator<AppState *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 884
	mov	eax, 1073741823				; 3fffffffH
; Line 885
	ret	0
?max_size@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QBEIXZ ENDP ; std::vector<AppState *,std::allocator<AppState *> >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBEII@Z ; std::vector<AppState *,std::allocator<AppState *> >::_Grow_to
; Function compile flags: /Ogtp
;	COMDAT ?_Grow_to@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBEII@Z PROC ; std::vector<AppState *,std::allocator<AppState *> >::_Grow_to, COMDAT
; _this$ = ecx
; Line 1274
	push	ebp
	mov	ebp, esp
; Line 1275
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [ecx]
; Line 1278
	mov	edx, 1073741823				; 3fffffffH
	sar	eax, 2
	mov	ecx, eax
	shr	ecx, 1
	sub	edx, ecx
	cmp	edx, eax
	jae	SHORT $LN4@Grow_to
	xor	eax, eax
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	add	eax, ecx
$LN5@Grow_to:
; Line 1279
	mov	ecx, DWORD PTR __Count$[ebp]
	cmp	eax, ecx
	jae	SHORT $LN1@Grow_to
; Line 1281
	mov	eax, ecx
$LN1@Grow_to:
; Line 1282
	pop	ebp
	ret	4
?_Grow_to@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IBEII@Z ENDP ; std::vector<AppState *,std::allocator<AppState *> >::_Grow_to
_TEXT	ENDS
PUBLIC	?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size, COMDAT
; _this$ = ecx
; Line 884
	mov	eax, 153391689				; 09249249H
; Line 885
	ret	0
?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEII@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Grow_to
; Function compile flags: /Ogtp
;	COMDAT ?_Grow_to@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEII@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Grow_to, COMDAT
; _this$ = ecx
; Line 1274
	push	ebp
	mov	ebp, esp
	push	esi
; Line 1275
	mov	esi, DWORD PTR [ecx+8]
	sub	esi, DWORD PTR [ecx]
	mov	eax, -1840700269			; 92492493H
	imul	esi
	add	edx, esi
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
; Line 1278
	mov	ecx, eax
	shr	ecx, 1
	mov	edx, 153391689				; 09249249H
	sub	edx, ecx
	pop	esi
	cmp	edx, eax
	jae	SHORT $LN4@Grow_to@2
	xor	eax, eax
	jmp	SHORT $LN5@Grow_to@2
$LN4@Grow_to@2:
	add	eax, ecx
$LN5@Grow_to@2:
; Line 1279
	mov	ecx, DWORD PTR __Count$[ebp]
	cmp	eax, ecx
	jae	SHORT $LN1@Grow_to@2
; Line 1281
	mov	eax, ecx
$LN1@Grow_to@2:
; Line 1282
	pop	ebp
	ret	4
?_Grow_to@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEII@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Grow_to
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
; Function compile flags: /Ogtp
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
$T136770 = -12						; size = 12
$T136762 = 8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 186
	push	ebp
	mov	ebp, esp
; Line 187
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
	je	SHORT $LN1@allocate
	cmp	ecx, 536870911				; 1fffffffH
	ja	SHORT $LN3@allocate
	lea	eax, DWORD PTR [ecx*8]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@allocate
$LN3@allocate:
	lea	ecx, DWORD PTR $T136762[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T136770[ebp]
	mov	DWORD PTR $T136762[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T136770[ebp]
	push	edx
	mov	DWORD PTR $T136770[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN13@allocate:
$LN1@allocate:
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
$LN12@allocate:
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1517
	mov	eax, -2					; fffffffeH
; Line 1518
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Lmost
; Function compile flags: /Ogtp
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Lmost, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 1759
	mov	eax, DWORD PTR [ecx+4]
; Line 1760
	ret	0
?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@PAVAppState@@@std@@QAEPAPAVAppState@@I@Z ; std::allocator<AppState *>::allocate
; Function compile flags: /Ogtp
;	COMDAT ?allocate@?$allocator@PAVAppState@@@std@@QAEPAPAVAppState@@I@Z
_TEXT	SEGMENT
$T136813 = -12						; size = 12
$T136805 = 8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAVAppState@@@std@@QAEPAPAVAppState@@I@Z PROC ; std::allocator<AppState *>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 186
	push	ebp
	mov	ebp, esp
; Line 187
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
	je	SHORT $LN1@allocate@2
	cmp	ecx, 1073741823				; 3fffffffH
	ja	SHORT $LN3@allocate@2
	lea	eax, DWORD PTR [ecx*4]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@allocate@2
$LN3@allocate@2:
	lea	ecx, DWORD PTR $T136805[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T136813[ebp]
	mov	DWORD PTR $T136805[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T136813[ebp]
	push	edx
	mov	DWORD PTR $T136813[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN13@allocate@2:
$LN1@allocate@2:
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
$LN12@allocate@2:
?allocate@?$allocator@PAVAppState@@@std@@QAEPAPAVAppState@@I@Z ENDP ; std::allocator<AppState *>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate
; Function compile flags: /Ogtp
;	COMDAT ?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT
$T136836 = -12						; size = 12
$T136828 = 8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate, COMDAT
; _this$ = ecx
; Line 186
	push	ebp
	mov	ebp, esp
; Line 187
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
	je	SHORT $LN1@allocate@3
	cmp	ecx, 153391689				; 09249249H
	ja	SHORT $LN3@allocate@3
	lea	eax, DWORD PTR [ecx*8]
	sub	eax, ecx
	add	eax, eax
	add	eax, eax
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@allocate@3
$LN3@allocate@3:
	lea	ecx, DWORD PTR $T136828[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T136836[ebp]
	mov	DWORD PTR $T136828[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T136836[ebp]
	push	edx
	mov	DWORD PTR $T136836[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN13@allocate@3:
$LN1@allocate@3:
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
$LN12@allocate@3:
?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate
_TEXT	ENDS
PUBLIC	?_Setcont@?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEXPBV?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@@Z ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::_Setcont
; Function compile flags: /Ogtp
;	COMDAT ?_Setcont@?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEXPBV?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@@Z
_TEXT	SEGMENT
__Lock$136856 = 8					; size = 4
__Pdeque$ = 8						; size = 4
?_Setcont@?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEXPBV?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@@Z PROC ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::_Setcont, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
; Line 541
	push	ebp
	mov	ebp, esp
; Line 542
	mov	eax, DWORD PTR __Pdeque$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Setcont
	push	3
	lea	ecx, DWORD PTR __Lock$136856[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	lea	ecx, DWORD PTR __Lock$136856[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
; Line 543
	pop	ebp
	ret	4
; Line 542
$LN4@Setcont:
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
; Line 543
	pop	ebp
	ret	4
?_Setcont@?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEXPBV?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@@Z ENDP ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::_Setcont
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
; Function compile flags: /Ogtp
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
$T136874 = -12						; size = 12
$T136866 = 8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 186
	push	ebp
	mov	ebp, esp
; Line 187
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	esp, 12					; 0000000cH
	xor	eax, eax
	test	ecx, ecx
	je	SHORT $LN1@allocate@4
	cmp	ecx, -1
	ja	SHORT $LN3@allocate@4
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@allocate@4
$LN3@allocate@4:
	lea	eax, DWORD PTR $T136866[ebp]
	push	eax
	lea	ecx, DWORD PTR $T136874[ebp]
	mov	DWORD PTR $T136866[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T136874[ebp]
	push	ecx
	mov	DWORD PTR $T136874[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN13@allocate@4:
$LN1@allocate@4:
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
$LN12@allocate@4:
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Rmost
; Function compile flags: /Ogtp
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Rmost, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 1784
	mov	eax, DWORD PTR [ecx+4]
	add	eax, 8
; Line 1785
	ret	0
?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Root
; Function compile flags: /Ogtp
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Root, COMDAT
; _this$ = ecx
; Line 1789
	mov	eax, DWORD PTR [ecx+4]
	add	eax, 4
; Line 1790
	ret	0
?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Rrotate
; Function compile flags: /Ogtp
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Rrotate, COMDAT
; _this$ = ecx
; Line 1793
	push	ebp
	mov	ebp, esp
; Line 1794
	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR [edx]
	push	esi
; Line 1795
	mov	esi, DWORD PTR [eax+8]
	mov	DWORD PTR [edx], esi
; Line 1797
	mov	esi, DWORD PTR [eax+8]
	cmp	BYTE PTR [esi+69], 0
	jne	SHORT $LN5@Rrotate
; Line 1798
	mov	DWORD PTR [esi+4], edx
$LN5@Rrotate:
; Line 1799
	mov	esi, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], esi
; Line 1801
	mov	ecx, DWORD PTR [ecx+4]
	pop	esi
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN4@Rrotate
; Line 1802
	mov	DWORD PTR [ecx+4], eax
; Line 1808
	mov	DWORD PTR [eax+8], edx
; Line 1809
	mov	DWORD PTR [edx+4], eax
; Line 1810
	pop	ebp
	ret	4
$LN4@Rrotate:
; Line 1803
	mov	ecx, DWORD PTR [edx+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN2@Rrotate
; Line 1804
	mov	DWORD PTR [ecx+8], eax
; Line 1808
	mov	DWORD PTR [eax+8], edx
; Line 1809
	mov	DWORD PTR [edx+4], eax
; Line 1810
	pop	ebp
	ret	4
$LN2@Rrotate:
; Line 1806
	mov	DWORD PTR [ecx], eax
; Line 1808
	mov	DWORD PTR [eax+8], edx
; Line 1809
	mov	DWORD PTR [edx+4], eax
; Line 1810
	pop	ebp
	ret	4
?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> > >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> > >, COMDAT
; _this$ = ecx
; Line 213
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 214
	pop	ebp
	ret	8
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> > >
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> > >::operator++
; Function compile flags: /Ogtp
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> > >::operator++, COMDAT
; _this$ = ecx
; Line 250
	push	esi
	mov	esi, ecx
; Line 265
	call	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >,std::_Iterator_base0>::operator++
; Line 266
	mov	eax, esi
	pop	esi
; Line 267
	ret	0
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAVAppState@@@std@@PAVAppState@@AAPAV3@@std@@YAXAAV?$allocator@PAVAppState@@@0@PAPAVAppState@@AAPAV2@@Z ; std::_Cons_val<std::allocator<AppState *>,AppState *,AppState * &>
; Function compile flags: /Ogtp
;	COMDAT ??$_Cons_val@V?$allocator@PAVAppState@@@std@@PAVAppState@@AAPAV3@@std@@YAXAAV?$allocator@PAVAppState@@@0@PAPAVAppState@@AAPAV2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAVAppState@@@std@@PAVAppState@@AAPAV3@@std@@YAXAAV?$allocator@PAVAppState@@@0@PAPAVAppState@@AAPAV2@@Z PROC ; std::_Cons_val<std::allocator<AppState *>,AppState *,AppState * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Pdest$[ebp]
	test	eax, eax
	je	SHORT $LN7@Cons_val
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN7@Cons_val:
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@PAVAppState@@@std@@PAVAppState@@AAPAV3@@std@@YAXAAV?$allocator@PAVAppState@@@0@PAPAVAppState@@AAPAV2@@Z ENDP ; std::_Cons_val<std::allocator<AppState *>,AppState *,AppState * &>
_TEXT	ENDS
PUBLIC	??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z		; std::operator!=<char,char>
; Function compile flags: /Ogtp
;	COMDAT ??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z PROC		; std::operator!=<char,char>, COMDAT
; Line 271
	xor	al, al
; Line 272
	ret	0
??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z ENDP		; std::operator!=<char,char>
_TEXT	ENDS
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
; Function compile flags: /Ogtp
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC				; std::swap<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 101
	push	ebp
	mov	ebp, esp
; Line 102
	mov	eax, DWORD PTR __Left$[ebp]
	mov	cl, BYTE PTR [eax]
	push	esi
; Line 103
	mov	esi, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [esi]
	mov	BYTE PTR [eax], dl
; Line 104
	mov	BYTE PTR [esi], cl
	pop	esi
; Line 105
	pop	ebp
	ret	0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAVAppState@@@std@@@std@@YAXPAPAVAppState@@0AAV?$allocator@PAVAppState@@@0@@Z ; std::_Destroy_range<std::allocator<AppState *> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy_range@V?$allocator@PAVAppState@@@std@@@std@@YAXPAPAVAppState@@0AAV?$allocator@PAVAppState@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVAppState@@@std@@@std@@YAXPAPAVAppState@@0AAV?$allocator@PAVAppState@@@0@@Z PROC ; std::_Destroy_range<std::allocator<AppState *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 89
	ret	0
??$_Destroy_range@V?$allocator@PAVAppState@@@std@@@std@@YAXPAPAVAppState@@0AAV?$allocator@PAVAppState@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<AppState *> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAVAppState@@@std@@QAEXPAPAVAppState@@ABQAV3@@Z ; std::allocator<AppState *>::construct
; Function compile flags: /Ogtp
;	COMDAT ?construct@?$allocator@PAVAppState@@@std@@QAEXPAPAVAppState@@ABQAV3@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAVAppState@@@std@@QAEXPAPAVAppState@@ABQAV3@@Z PROC ; std::allocator<AppState *>::construct, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
; Line 197
	mov	eax, DWORD PTR __Ptr$[ebp]
	test	eax, eax
	je	SHORT $LN5@construct@2
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN5@construct@2:
; Line 198
	pop	ebp
	ret	8
?construct@?$allocator@PAVAppState@@@std@@QAEXPAPAVAppState@@ABQAV3@@Z ENDP ; std::allocator<AppState *>::construct
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAVAppState@@@std@@QAEXPAPAVAppState@@@Z ; std::allocator<AppState *>::destroy
; Function compile flags: /Ogtp
;	COMDAT ?destroy@?$allocator@PAVAppState@@@std@@QAEXPAPAVAppState@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAVAppState@@@std@@QAEXPAPAVAppState@@@Z PROC ; std::allocator<AppState *>::destroy, COMDAT
; _this$ = ecx
; Line 214
	ret	4
?destroy@?$allocator@PAVAppState@@@std@@QAEXPAPAVAppState@@@Z ENDP ; std::allocator<AppState *>::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAVMPQArchive@@@std@@QAEXPAPAVMPQArchive@@@Z ; std::allocator<MPQArchive *>::destroy
; Function compile flags: /Ogtp
;	COMDAT ?destroy@?$allocator@PAVMPQArchive@@@std@@QAEXPAPAVMPQArchive@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAVMPQArchive@@@std@@QAEXPAPAVMPQArchive@@@Z PROC ; std::allocator<MPQArchive *>::destroy, COMDAT
; _this$ = ecx
; Line 214
	ret	4
?destroy@?$allocator@PAVMPQArchive@@@std@@QAEXPAPAVMPQArchive@@@Z ENDP ; std::allocator<MPQArchive *>::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAPAVMPQArchive@@@std@@QAEXPAPAPAVMPQArchive@@@Z ; std::allocator<MPQArchive * *>::destroy
; Function compile flags: /Ogtp
;	COMDAT ?destroy@?$allocator@PAPAVMPQArchive@@@std@@QAEXPAPAPAVMPQArchive@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAPAVMPQArchive@@@std@@QAEXPAPAPAVMPQArchive@@@Z PROC ; std::allocator<MPQArchive * *>::destroy, COMDAT
; _this$ = ecx
; Line 214
	ret	4
?destroy@?$allocator@PAPAVMPQArchive@@@std@@QAEXPAPAPAVMPQArchive@@@Z ENDP ; std::allocator<MPQArchive * *>::destroy
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z ; std::allocator<std::_Container_proxy>::construct
; Function compile flags: /Ogtp
;	COMDAT ?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z PROC ; std::allocator<std::_Container_proxy>::construct, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
; Line 202
	mov	eax, DWORD PTR __Ptr$[ebp]
	test	eax, eax
	je	SHORT $LN3@construct@3
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
$LN3@construct@3:
; Line 203
	pop	ebp
	ret	8
?construct@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@$$QAU32@@Z ENDP ; std::allocator<std::_Container_proxy>::construct
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z ; std::allocator<std::_Container_proxy>::destroy
; Function compile flags: /Ogtp
;	COMDAT ?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z PROC ; std::allocator<std::_Container_proxy>::destroy, COMDAT
; _this$ = ecx
; Line 214
	ret	4
?destroy@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAPAVAppState@@PAPAV1@V?$allocator@PAVAppState@@@std@@@std@@YAPAPAVAppState@@PAPAV1@00AAV?$allocator@PAVAppState@@@0@@Z ; std::_Uninitialized_move<AppState * *,AppState * *,std::allocator<AppState *> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Uninitialized_move@PAPAVAppState@@PAPAV1@V?$allocator@PAVAppState@@@std@@@std@@YAPAPAVAppState@@PAPAV1@00AAV?$allocator@PAVAppState@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVAppState@@PAPAV1@V?$allocator@PAVAppState@@@std@@@std@@YAPAPAVAppState@@PAPAV1@00AAV?$allocator@PAVAppState@@@0@@Z PROC ; std::_Uninitialized_move<AppState * *,AppState * *,std::allocator<AppState *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
; Line 469
	push	ebp
	mov	ebp, esp
; Line 471
	mov	ecx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, ecx
	push	esi
	sar	eax, 2
	lea	esi, DWORD PTR [eax*4]
	mov	eax, DWORD PTR __Dest$[ebp]
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
	pop	esi
; Line 472
	pop	ebp
	ret	0
??$_Uninitialized_move@PAPAVAppState@@PAPAV1@V?$allocator@PAVAppState@@@std@@@std@@YAPAPAVAppState@@PAPAV1@00AAV?$allocator@PAVAppState@@@0@@Z ENDP ; std::_Uninitialized_move<AppState * *,AppState * *,std::allocator<AppState *> >
_TEXT	ENDS
PUBLIC	?fixname@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; fixname
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_name$ = 8						; size = 4
?fixname@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; fixname
; File c:\programovani\wow editor\test\src\editor\opengl.cpp
; Line 952
	push	ebp
	mov	ebp, esp
	push	esi
; Line 953
	mov	esi, DWORD PTR _name$[ebp]
	push	edi
	xor	edi, edi
	cmp	DWORD PTR [esi+16], edi
	jbe	$LN5@fixname
	push	ebx
	lea	ebx, DWORD PTR [edi+16]
$LL64@fixname:
; Line 955
	test	edi, edi
	je	SHORT $LN1@fixname
	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, ebx
	jb	SHORT $LN16@fixname
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN17@fixname
$LN16@fixname:
	mov	eax, esi
$LN17@fixname:
	cmp	BYTE PTR [eax+edi], 65			; 00000041H
	jl	SHORT $LN62@fixname
	cmp	ecx, ebx
	jb	SHORT $LN22@fixname
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN23@fixname
$LN22@fixname:
	mov	eax, esi
$LN23@fixname:
	cmp	BYTE PTR [eax+edi], 90			; 0000005aH
	jg	SHORT $LN62@fixname
	cmp	ecx, ebx
	jb	SHORT $LN28@fixname
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN29@fixname
$LN28@fixname:
	mov	eax, esi
$LN29@fixname:
	movsx	eax, BYTE PTR [eax+edi-1]
	push	eax
	call	DWORD PTR __imp__isalpha
	add	esp, 4
	test	eax, eax
	je	SHORT $LN62@fixname
; Line 956
	cmp	DWORD PTR [esi+20], ebx
	jb	SHORT $LN34@fixname
	mov	eax, DWORD PTR [esi]
	or	BYTE PTR [eax+edi], 32			; 00000020H
	jmp	SHORT $LN6@fixname
$LN34@fixname:
	mov	eax, esi
	or	BYTE PTR [eax+edi], 32			; 00000020H
	jmp	SHORT $LN6@fixname
$LN62@fixname:
; Line 958
	test	edi, edi
	je	SHORT $LN1@fixname
	cmp	DWORD PTR [esi+20], ebx
	jb	SHORT $LN40@fixname
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN41@fixname
$LN40@fixname:
	mov	eax, esi
$LN41@fixname:
	movsx	ecx, BYTE PTR [eax+edi-1]
	push	ecx
	call	DWORD PTR __imp__isalpha
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN6@fixname
$LN1@fixname:
	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, ebx
	jb	SHORT $LN46@fixname
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN47@fixname
$LN46@fixname:
	mov	eax, esi
$LN47@fixname:
	cmp	BYTE PTR [eax+edi], 97			; 00000061H
	jl	SHORT $LN6@fixname
	cmp	ecx, ebx
	jb	SHORT $LN52@fixname
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN53@fixname
$LN52@fixname:
	mov	eax, esi
$LN53@fixname:
	cmp	BYTE PTR [eax+edi], 122			; 0000007aH
	jg	SHORT $LN6@fixname
; Line 959
	cmp	ecx, ebx
	jb	SHORT $LN58@fixname
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN59@fixname
$LN58@fixname:
	mov	eax, esi
$LN59@fixname:
	and	BYTE PTR [eax+edi], -33			; ffffffdfH
$LN6@fixname:
; Line 953
	inc	edi
	cmp	edi, DWORD PTR [esi+16]
	jb	$LL64@fixname
	pop	ebx
$LN5@fixname:
	pop	edi
	pop	esi
; Line 961
	pop	ebp
	ret	0
?fixname@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; fixname
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 550
	mov	eax, ecx
; Line 551
	mov	DWORD PTR [eax+20], 15			; 0000000fH
	mov	DWORD PTR [eax+16], 0
	mov	BYTE PTR [eax], 0
; Line 552
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 752
	push	esi
	mov	esi, ecx
; Line 753
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN11@basic_stri
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN11@basic_stri:
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
	pop	esi
; Line 754
	ret	0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??0?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAE@XZ ; std::vector<AppState *,std::allocator<AppState *> >::vector<AppState *,std::allocator<AppState *> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAE@XZ PROC ; std::vector<AppState *,std::allocator<AppState *> >::vector<AppState *,std::allocator<AppState *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 507
	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
; Line 508
	ret	0
??0?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAE@XZ ENDP ; std::vector<AppState *,std::allocator<AppState *> >::vector<AppState *,std::allocator<AppState *> >
_TEXT	ENDS
PUBLIC	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtp
;	COMDAT ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx
; Line 507
	mov	eax, ecx
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], ecx
; Line 508
	ret	0
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
; Function compile flags: /Ogtp
;	COMDAT ?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin, COMDAT
; _this$ = ecx
; Line 781
	push	ebp
	mov	ebp, esp
; Line 782
	mov	ecx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 783
	pop	ebp
	ret	4
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
; Function compile flags: /Ogtp
;	COMDAT ?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end, COMDAT
; _this$ = ecx
; Line 791
	push	ebp
	mov	ebp, esp
; Line 792
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 793
	pop	ebp
	ret	4
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
_TEXT	ENDS
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
; Function compile flags: /Ogtp
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=, COMDAT
; _this$ = ecx
; Line 207
	push	ebp
	mov	ebp, esp
; Line 208
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR __Right$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	setne	al
; Line 209
	pop	ebp
	ret	4
??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
_TEXT	ENDS
PUBLIC	??9?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBE_NABV01@@Z ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator!=
; Function compile flags: /Ogtp
;	COMDAT ??9?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator!=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
; Line 480
	push	ebp
	mov	ebp, esp
; Line 481
	mov	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR __Right$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx+8]
	setne	al
; Line 482
	pop	ebp
	ret	4
??9?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::operator!=
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEXPAPAVAppState@@0@Z ; std::vector<AppState *,std::allocator<AppState *> >::_Destroy
; Function compile flags: /Ogtp
;	COMDAT ?_Destroy@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEXPAPAVAppState@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEXPAPAVAppState@@0@Z PROC ; std::vector<AppState *,std::allocator<AppState *> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1271
	ret	8
?_Destroy@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEXPAPAVAppState@@0@Z ENDP ; std::vector<AppState *,std::allocator<AppState *> >::_Destroy
_TEXT	ENDS
PUBLIC	??0?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Lock$137469 = 12					; size = 4
__Pdeque$ = 12						; size = 4
??0?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z PROC ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
; Line 310
	push	ebp
	mov	ebp, esp
; Line 312
	mov	eax, DWORD PTR __Pdeque$[ebp]
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
	test	eax, eax
	jne	SHORT $LN8@Deque_cons
	push	3
	lea	ecx, DWORD PTR __Lock$137469[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	lea	ecx, DWORD PTR __Lock$137469[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
; Line 313
	mov	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR [esi+8], eax
; Line 314
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	8
; Line 312
$LN8@Deque_cons:
	mov	ecx, DWORD PTR [eax]
; Line 313
	mov	edx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR [esi], ecx
	mov	DWORD PTR [esi+8], edx
; Line 314
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	8
??0?$_Deque_const_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ENDP ; std::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >::_Deque_const_iterator<MPQArchive *,std::allocator<MPQArchive *> >
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
$T137569 = -40						; size = 12
__Newres$ = -28						; size = 4
$T137553 = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ptr$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1918
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	edi, ecx
	mov	DWORD PTR _this$[ebp], edi
; Line 1919
	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	esi, eax
	or	esi, 15					; 0000000fH
; Line 1920
	cmp	esi, -2					; fffffffeH
	jbe	SHORT $LN9@Copy
; Line 1921
	mov	esi, eax
	jmp	SHORT $LN39@Copy
$LN9@Copy:
; Line 1922
	mov	ebx, DWORD PTR [edi+20]
	mov	eax, -1431655765			; aaaaaaabH
	mul	esi
	mov	ecx, ebx
	shr	ecx, 1
	shr	edx, 1
	cmp	ecx, edx
	jbe	SHORT $LN39@Copy
; Line 1924
	mov	eax, -2					; fffffffeH
	sub	eax, ecx
; Line 1926
	lea	esi, DWORD PTR [ecx+ebx]
	cmp	ebx, eax
	jbe	SHORT $LN39@Copy
; Line 1928
	mov	esi, -2					; fffffffeH
$LN39@Copy:
; Line 1931
	xor	eax, eax
; Line 1932
	lea	ecx, DWORD PTR [esi+1]
	mov	DWORD PTR __$EHRec$[ebp+12], eax
	cmp	ecx, eax
	jbe	SHORT $LN47@Copy
	cmp	ecx, -1
	ja	SHORT $LN46@Copy
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN46@Copy
$LN47@Copy:
	mov	DWORD PTR __Ptr$[ebp], eax
	jmp	SHORT $LN19@Copy
$LN46@Copy:
	lea	ecx, DWORD PTR $T137553[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T137569[ebp]
	mov	DWORD PTR $T137553[ebp], 0
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T137569[ebp]
	push	edx
	mov	DWORD PTR $T137569[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN112@Copy:
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:
; Line 1934
	mov	eax, DWORD PTR __Newsize$[ebp]
; Line 1936
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR __Newres$[ebp], eax
	inc	eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	push	eax
	add	ecx, 24					; 00000018H
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 1941
	mov	eax, $LN107@Copy
	ret	0
$LN107@Copy:
	mov	edi, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR __Newres$[ebp]
$LN19@Copy:
; Line 1943
	mov	ebx, DWORD PTR __Oldlen$[ebp]
	test	ebx, ebx
	je	SHORT $LN78@Copy
; Line 1944
	cmp	DWORD PTR [edi+20], 16			; 00000010H
	jb	SHORT $LN76@Copy
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN77@Copy
$LN76@Copy:
	mov	eax, edi
$LN77@Copy:
	push	ebx
	push	eax
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN78@Copy:
; Line 1945
	cmp	DWORD PTR [edi+20], 16			; 00000010H
	jb	SHORT $LN88@Copy
	mov	ecx, DWORD PTR [edi]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN88@Copy:
; Line 1946
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	BYTE PTR [edi], 0
	mov	DWORD PTR [edi], eax
; Line 1947
	mov	DWORD PTR [edi+20], esi
; Line 1948
	mov	DWORD PTR [edi+16], ebx
	cmp	esi, 16					; 00000010H
	jb	SHORT $LN102@Copy
	mov	edi, eax
$LN102@Copy:
	mov	BYTE PTR [edi+ebx], 0
; Line 1949
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:
; Line 1938
	mov	esi, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN64@Copy
	mov	edx, DWORD PTR [esi]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN64@Copy:
; Line 1939
	push	0
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	push	0
	mov	BYTE PTR [esi], 0
	call	__CxxThrowException@8
$LN113@Copy:
$LN111@Copy:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> > >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 378
	push	ebp
	mov	ebp, esp
	mov	eax, ecx
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 379
	pop	ebp
	ret	8
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> > >
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> > >::operator++
; Function compile flags: /Ogtp
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> > >::operator++, COMDAT
; _this$ = ecx
; Line 270
	push	ebp
	mov	ebp, esp
; Line 271
	mov	eax, DWORD PTR [ecx]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [esi], eax
; Line 272
	call	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >,std::_Iterator_base0>::operator++
; Line 273
	mov	eax, esi
	pop	esi
; Line 274
	pop	ebp
	ret	8
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Lrotate
; Function compile flags: /Ogtp
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Lrotate, COMDAT
; _this$ = ecx
; Line 1763
	push	ebp
	mov	ebp, esp
; Line 1764
	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	esi
; Line 1765
	mov	esi, DWORD PTR [eax]
	mov	DWORD PTR [edx+8], esi
; Line 1767
	mov	esi, DWORD PTR [eax]
	cmp	BYTE PTR [esi+69], 0
	jne	SHORT $LN5@Lrotate
; Line 1768
	mov	DWORD PTR [esi+4], edx
$LN5@Lrotate:
; Line 1769
	mov	esi, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], esi
; Line 1771
	mov	ecx, DWORD PTR [ecx+4]
	pop	esi
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN4@Lrotate
; Line 1772
	mov	DWORD PTR [ecx+4], eax
; Line 1778
	mov	DWORD PTR [eax], edx
; Line 1779
	mov	DWORD PTR [edx+4], eax
; Line 1780
	pop	ebp
	ret	4
$LN4@Lrotate:
; Line 1773
	mov	ecx, DWORD PTR [edx+4]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN2@Lrotate
; Line 1774
	mov	DWORD PTR [ecx], eax
; Line 1778
	mov	DWORD PTR [eax], edx
; Line 1779
	mov	DWORD PTR [edx+4], eax
; Line 1780
	pop	ebp
	ret	4
$LN2@Lrotate:
; Line 1776
	mov	DWORD PTR [ecx+8], eax
; Line 1778
	mov	DWORD PTR [eax], edx
; Line 1779
	mov	DWORD PTR [edx+4], eax
; Line 1780
	pop	ebp
	ret	4
?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAVAppState@@@std@@PAVAppState@@ABQAV3@@std@@YAXAAV?$allocator@PAVAppState@@@0@PAPAVAppState@@ABQAV2@@Z ; std::_Cons_val<std::allocator<AppState *>,AppState *,AppState * const &>
; Function compile flags: /Ogtp
;	COMDAT ??$_Cons_val@V?$allocator@PAVAppState@@@std@@PAVAppState@@ABQAV3@@std@@YAXAAV?$allocator@PAVAppState@@@0@PAPAVAppState@@ABQAV2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAVAppState@@@std@@PAVAppState@@ABQAV3@@std@@YAXAAV?$allocator@PAVAppState@@@0@PAPAVAppState@@ABQAV2@@Z PROC ; std::_Cons_val<std::allocator<AppState *>,AppState *,AppState * const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Pdest$[ebp]
	test	eax, eax
	je	SHORT $LN9@Cons_val@2
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN9@Cons_val@2:
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@PAVAppState@@@std@@PAVAppState@@ABQAV3@@std@@YAXAAV?$allocator@PAVAppState@@@0@PAPAVAppState@@ABQAV2@@Z ENDP ; std::_Cons_val<std::allocator<AppState *>,AppState *,AppState * const &>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@PAVAppState@@@std@@PAVAppState@@@std@@YAXAAV?$allocator@PAVAppState@@@0@PAPAVAppState@@@Z ; std::_Dest_val<std::allocator<AppState *>,AppState *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Dest_val@V?$allocator@PAVAppState@@@std@@PAVAppState@@@std@@YAXAAV?$allocator@PAVAppState@@@0@PAPAVAppState@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@PAVAppState@@@std@@PAVAppState@@@std@@YAXAAV?$allocator@PAVAppState@@@0@PAPAVAppState@@@Z PROC ; std::_Dest_val<std::allocator<AppState *>,AppState *>, COMDAT
; Line 288
	ret	0
??$_Dest_val@V?$allocator@PAVAppState@@@std@@PAVAppState@@@std@@YAXAAV?$allocator@PAVAppState@@@0@PAPAVAppState@@@Z ENDP ; std::_Dest_val<std::allocator<AppState *>,AppState *>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@PAPAVMPQArchive@@@std@@PAPAVMPQArchive@@@std@@YAXAAV?$allocator@PAPAVMPQArchive@@@0@PAPAPAVMPQArchive@@@Z ; std::_Dest_val<std::allocator<MPQArchive * *>,MPQArchive * *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Dest_val@V?$allocator@PAPAVMPQArchive@@@std@@PAPAVMPQArchive@@@std@@YAXAAV?$allocator@PAPAVMPQArchive@@@0@PAPAPAVMPQArchive@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@PAPAVMPQArchive@@@std@@PAPAVMPQArchive@@@std@@YAXAAV?$allocator@PAPAVMPQArchive@@@0@PAPAPAVMPQArchive@@@Z PROC ; std::_Dest_val<std::allocator<MPQArchive * *>,MPQArchive * *>, COMDAT
; Line 288
	ret	0
??$_Dest_val@V?$allocator@PAPAVMPQArchive@@@std@@PAPAVMPQArchive@@@std@@YAXAAV?$allocator@PAPAVMPQArchive@@@0@PAPAPAVMPQArchive@@@Z ENDP ; std::_Dest_val<std::allocator<MPQArchive * *>,MPQArchive * *>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
; Function compile flags: /Ogtp
;	COMDAT ??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z PROC ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Pdest$[ebp]
	test	eax, eax
	je	SHORT $LN7@Cons_val@3
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
$LN7@Cons_val@3:
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@U32@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@$$QAU20@@Z ENDP ; std::_Cons_val<std::allocator<std::_Container_proxy>,std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
; Function compile flags: /Ogtp
;	COMDAT ??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z PROC ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>, COMDAT
; Line 288
	ret	0
??$_Dest_val@V?$allocator@U_Container_proxy@std@@@std@@U_Container_proxy@2@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@PAU_Container_proxy@0@@Z ENDP ; std::_Dest_val<std::allocator<std::_Container_proxy>,std::_Container_proxy>
_TEXT	ENDS
PUBLIC	??$_Umove@PAPAVAppState@@@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEPAPAVAppState@@PAPAV2@00@Z ; std::vector<AppState *,std::allocator<AppState *> >::_Umove<AppState * *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Umove@PAPAVAppState@@@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEPAPAVAppState@@PAPAV2@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAVAppState@@@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEPAPAVAppState@@PAPAV2@00@Z PROC ; std::vector<AppState *,std::allocator<AppState *> >::_Umove<AppState * *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1322
	push	ebp
	mov	ebp, esp
; Line 1325
	mov	ecx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, ecx
	push	esi
	sar	eax, 2
	lea	esi, DWORD PTR [eax*4]
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	esi
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	add	eax, esi
	pop	esi
; Line 1326
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAPAVAppState@@@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEPAPAVAppState@@PAPAV2@00@Z ENDP ; std::vector<AppState *,std::allocator<AppState *> >::_Umove<AppState * *>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@PAVMPQArchive@@@std@@PAVMPQArchive@@@std@@YAXAAV?$allocator@PAVMPQArchive@@@0@PAPAVMPQArchive@@@Z ; std::_Dest_val<std::allocator<MPQArchive *>,MPQArchive *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Dest_val@V?$allocator@PAVMPQArchive@@@std@@PAVMPQArchive@@@std@@YAXAAV?$allocator@PAVMPQArchive@@@0@PAPAVMPQArchive@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@PAVMPQArchive@@@std@@PAVMPQArchive@@@std@@YAXAAV?$allocator@PAVMPQArchive@@@0@PAPAVMPQArchive@@@Z PROC ; std::_Dest_val<std::allocator<MPQArchive *>,MPQArchive *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 288
	ret	0
??$_Dest_val@V?$allocator@PAVMPQArchive@@@std@@PAVMPQArchive@@@std@@YAXAAV?$allocator@PAVMPQArchive@@@0@PAPAVMPQArchive@@@Z ENDP ; std::_Dest_val<std::allocator<MPQArchive *>,MPQArchive *>
_TEXT	ENDS
PUBLIC	??1Chameleon@@QAE@XZ				; Chameleon::~Chameleon
; Function compile flags: /Ogtp
;	COMDAT ??1Chameleon@@QAE@XZ
_TEXT	SEGMENT
??1Chameleon@@QAE@XZ PROC				; Chameleon::~Chameleon, COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN14@Chameleon
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN14@Chameleon:
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
	pop	esi
	ret	0
??1Chameleon@@QAE@XZ ENDP				; Chameleon::~Chameleon
_TEXT	ENDS
PUBLIC	??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN14@scalar@3
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN14@scalar@3:
	test	BYTE PTR ___flags$[ebp], 1
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
	je	SHORT $LN26@scalar@3
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN26@scalar@3:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?pop_back@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAEXXZ ; std::vector<AppState *,std::allocator<AppState *> >::pop_back
; Function compile flags: /Ogtp
;	COMDAT ?pop_back@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?pop_back@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAEXXZ PROC ; std::vector<AppState *,std::allocator<AppState *> >::pop_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1017
	mov	eax, DWORD PTR [ecx+4]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $LN1@pop_back
; Line 1021
	add	eax, -4					; fffffffcH
	mov	DWORD PTR [ecx+4], eax
$LN1@pop_back:
; Line 1023
	ret	0
?pop_back@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAEXXZ ENDP ; std::vector<AppState *,std::allocator<AppState *> >::pop_back
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEXXZ ; std::vector<AppState *,std::allocator<AppState *> >::_Tidy
; Function compile flags: /Ogtp
;	COMDAT ?_Tidy@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEXXZ PROC ; std::vector<AppState *,std::allocator<AppState *> >::_Tidy, COMDAT
; _this$ = ecx
; Line 1301
	push	esi
	mov	esi, ecx
; Line 1302
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN6@Tidy@2
; Line 1307
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN6@Tidy@2:
; Line 1309
	mov	DWORD PTR [esi], 0
; Line 1310
	mov	DWORD PTR [esi+4], 0
; Line 1311
	mov	DWORD PTR [esi+8], 0
	pop	esi
; Line 1312
	ret	0
?_Tidy@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEXXZ ENDP ; std::vector<AppState *,std::allocator<AppState *> >::_Tidy
_TEXT	ENDS
PUBLIC	??0?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@V?$allocator@PAVMPQArchive@@@1@@Z ; std::_Deque_val<MPQArchive *,std::allocator<MPQArchive *> >::_Deque_val<MPQArchive *,std::allocator<MPQArchive *> >
EXTRN	__imp_??1_Container_base12@std@@QAE@XZ:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??0?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@V?$allocator@PAVMPQArchive@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@V?$allocator@PAVMPQArchive@@@1@@Z$0
__ehfuncinfo$??0?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@V?$allocator@PAVMPQArchive@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@V?$allocator@PAVMPQArchive@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??0?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@V?$allocator@PAVMPQArchive@@@1@@Z
_TEXT	SEGMENT
$T138148 = -32						; size = 12
_this$ = -20						; size = 4
$T138125 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@V?$allocator@PAVMPQArchive@@@1@@Z PROC ; std::_Deque_val<MPQArchive *,std::allocator<MPQArchive *> >::_Deque_val<MPQArchive *,std::allocator<MPQArchive *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
; Line 728
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@V?$allocator@PAVMPQArchive@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	xor	edi, edi
	mov	DWORD PTR [esi], edi
; Line 731
	push	8
	mov	DWORD PTR __$EHRec$[ebp+8], edi
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	cmp	eax, edi
	je	SHORT $LN14@Deque_val
	mov	DWORD PTR [esi], eax
; Line 732
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	xor	edx, edx
	mov	DWORD PTR [eax+4], edx
; Line 733
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [eax], esi
; Line 735
	mov	DWORD PTR [esi+4], edi
; Line 736
	mov	DWORD PTR [esi+8], edi
; Line 737
	mov	DWORD PTR [esi+12], edi
; Line 738
	mov	DWORD PTR [esi+16], edi
; Line 739
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
; Line 731
$LN14@Deque_val:
	lea	ecx, DWORD PTR $T138125[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T138148[ebp]
	mov	DWORD PTR $T138125[ebp], edi
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T138148[ebp]
	push	edx
	mov	DWORD PTR $T138148[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN41@Deque_val:
$LN40@Deque_val:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@V?$allocator@PAVMPQArchive@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
__ehhandler$??0?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@V?$allocator@PAVMPQArchive@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@V?$allocator@PAVMPQArchive@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@V?$allocator@PAVMPQArchive@@@1@@Z ENDP ; std::_Deque_val<MPQArchive *,std::allocator<MPQArchive *> >::_Deque_val<MPQArchive *,std::allocator<MPQArchive *> >
PUBLIC	??1?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ ; std::_Deque_val<MPQArchive *,std::allocator<MPQArchive *> >::~_Deque_val<MPQArchive *,std::allocator<MPQArchive *> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ PROC ; std::_Deque_val<MPQArchive *,std::allocator<MPQArchive *> >::~_Deque_val<MPQArchive *,std::allocator<MPQArchive *> >, COMDAT
; _this$ = ecx
; Line 742
	push	esi
	mov	esi, ecx
; Line 747
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 748
	mov	DWORD PTR [esi], 0
	pop	esi
; Line 749
	ret	0
??1?$_Deque_val@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ ENDP ; std::_Deque_val<MPQArchive *,std::allocator<MPQArchive *> >::~_Deque_val<MPQArchive *,std::allocator<MPQArchive *> >
_TEXT	ENDS
PUBLIC	??0?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ; std::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Lock$138258 = 12					; size = 4
__Pdeque$ = 12						; size = 4
??0?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z PROC ; std::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >, COMDAT
; _this$ = ecx
; Line 601
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Pdeque$[ebp]
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
	test	eax, eax
	jne	SHORT $LN10@Deque_iter
	push	3
	lea	ecx, DWORD PTR __Lock$138258[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	lea	ecx, DWORD PTR __Lock$138258[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	mov	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR [esi+8], eax
; Line 602
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	8
; Line 601
$LN10@Deque_iter:
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR [esi], ecx
	mov	DWORD PTR [esi+8], edx
; Line 602
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	8
??0?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ENDP ; std::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >::_Deque_iterator<MPQArchive *,std::allocator<MPQArchive *> >
_TEXT	ENDS
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
; Function compile flags: /Ogtp
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1958
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 1959
	mov	ebx, DWORD PTR __Newsize$[ebp]
	push	esi
	mov	esi, ecx
	cmp	ebx, -2					; fffffffeH
	jbe	SHORT $LN6@Grow
; Line 1960
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN49@Grow:
$LN6@Grow:
; Line 1961
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, ebx
	jae	SHORT $LN5@Grow
; Line 1962
	mov	eax, DWORD PTR [esi+16]
	push	eax
	push	ebx
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Line 1968
	xor	ecx, ecx
	cmp	ecx, ebx
	sbb	eax, eax
	pop	esi
	neg	eax
	pop	ebx
; Line 1969
	pop	ebp
	ret	8
$LN5@Grow:
; Line 1963
	cmp	BYTE PTR __Trim$[ebp], 0
	je	SHORT $LN3@Grow
	cmp	ebx, 16					; 00000010H
	jae	SHORT $LN3@Grow
; Line 1965
	push	edi
	mov	edi, DWORD PTR [esi+16]
	cmp	ebx, edi
	jae	SHORT $LN9@Grow
	mov	edi, ebx
$LN9@Grow:
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN30@Grow
	mov	ebx, DWORD PTR [esi]
	test	edi, edi
	je	SHORT $LN28@Grow
	push	edi
	push	ebx
	push	esi
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN28@Grow:
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	mov	ebx, DWORD PTR __Newsize$[ebp]
	add	esp, 4
$LN30@Grow:
	mov	DWORD PTR [esi+16], edi
	mov	DWORD PTR [esi+20], 15			; 0000000fH
; Line 1968
	xor	ecx, ecx
	mov	BYTE PTR [edi+esi], 0
	cmp	ecx, ebx
	pop	edi
	sbb	eax, eax
	pop	esi
	neg	eax
	pop	ebx
; Line 1969
	pop	ebp
	ret	8
$LN3@Grow:
; Line 1966
	test	ebx, ebx
	jne	SHORT $LN46@Grow
; Line 1967
	mov	DWORD PTR [esi+16], ebx
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN44@Grow
	mov	esi, DWORD PTR [esi]
$LN44@Grow:
	mov	BYTE PTR [esi], 0
$LN46@Grow:
; Line 1968
	xor	ecx, ecx
	cmp	ecx, ebx
	sbb	eax, eax
	pop	esi
	neg	eax
	pop	ebx
; Line 1969
	pop	ebp
	ret	8
$LN48@Grow:
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::begin
; Function compile flags: /Ogtp
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 806
	push	ebp
	mov	ebp, esp
; Line 807
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 808
	pop	ebp
	ret	4
?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::end
; Function compile flags: /Ogtp
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::end, COMDAT
; _this$ = ecx
; Line 816
	push	ebp
	mov	ebp, esp
; Line 817
	mov	ecx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 818
	pop	ebp
	ret	4
?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::end
_TEXT	ENDS
PUBLIC	?reserve@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAEXI@Z ; std::vector<AppState *,std::allocator<AppState *> >::reserve
; Function compile flags: /Ogtp
;	COMDAT ?reserve@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?reserve@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAEXI@Z PROC ; std::vector<AppState *,std::allocator<AppState *> >::reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 746
	push	ebp
	mov	ebp, esp
; Line 747
	mov	eax, DWORD PTR __Count$[ebp]
	push	esi
	mov	esi, ecx
	cmp	eax, 1073741823				; 3fffffffH
	jbe	SHORT $LN5@reserve
; Line 748
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN43@reserve:
$LN5@reserve:
; Line 749
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, DWORD PTR [esi]
	sar	ecx, 2
	cmp	ecx, eax
	jae	SHORT $LN3@reserve
; Line 751
	push	ebx
	push	edi
	push	eax
	lea	ecx, DWORD PTR [esi+12]
	call	?allocate@?$allocator@PAVAppState@@@std@@QAEPAPAVAppState@@I@Z ; std::allocator<AppState *>::allocate
; Line 754
	mov	edx, DWORD PTR [esi+4]
	mov	ebx, eax
	mov	eax, DWORD PTR [esi]
	sub	edx, eax
	sar	edx, 2
	add	edx, edx
	add	edx, edx
	push	edx
	push	eax
	push	ebx
	call	DWORD PTR __imp__memmove
; Line 760
	mov	eax, DWORD PTR [esi]
	mov	edi, DWORD PTR [esi+4]
	sub	edi, eax
	add	esp, 12					; 0000000cH
	sar	edi, 2
; Line 761
	test	eax, eax
	je	SHORT $LN37@reserve
; Line 765
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN37@reserve:
; Line 769
	mov	eax, DWORD PTR __Count$[ebp]
; Line 770
	lea	edx, DWORD PTR [ebx+edi*4]
	lea	ecx, DWORD PTR [ebx+eax*4]
	pop	edi
; Line 771
	mov	DWORD PTR [esi], ebx
	mov	DWORD PTR [esi+8], ecx
	mov	DWORD PTR [esi+4], edx
	pop	ebx
$LN3@reserve:
	pop	esi
; Line 773
	pop	ebp
	ret	4
$LN42@reserve:
?reserve@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAEXI@Z ENDP ; std::vector<AppState *,std::allocator<AppState *> >::reserve
_TEXT	ENDS
PUBLIC	?pop_back@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEXXZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::pop_back
; Function compile flags: /Ogtp
;	COMDAT ?pop_back@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?pop_back@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEXXZ PROC ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::pop_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
; Line 1290
	mov	eax, DWORD PTR [ecx+16]
	test	eax, eax
	je	SHORT $LN1@pop_back@2
; Line 1298
	dec	eax
	mov	DWORD PTR [ecx+16], eax
	jne	SHORT $LN1@pop_back@2
; Line 1299
	mov	DWORD PTR [ecx+12], 0
$LN1@pop_back@2:
; Line 1302
	ret	0
?pop_back@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEXXZ ENDP ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::pop_back
_TEXT	ENDS
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Ogtp
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 798
	push	ebp
	mov	ebp, esp
; Line 799
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	ebx
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR __Roff$[ebp]
	cmp	eax, ecx
	jae	SHORT $LN4@append
; Line 800
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN85@append:
$LN4@append:
; Line 802
	mov	ebx, DWORD PTR __Count$[ebp]
	sub	eax, ecx
	cmp	eax, ebx
	jae	SHORT $LN3@append
; Line 803
	mov	ebx, eax
$LN3@append:
; Line 804
	mov	eax, DWORD PTR [esi+16]
	or	ecx, -1
	sub	ecx, eax
	cmp	ecx, ebx
	ja	SHORT $LN2@append
; Line 805
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN86@append:
$LN2@append:
; Line 807
	test	ebx, ebx
	je	$LN79@append
	push	edi
	lea	edi, DWORD PTR [eax+ebx]
	cmp	edi, -2					; fffffffeH
	jbe	SHORT $LN21@append
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN87@append:
$LN21@append:
	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, edi
	jae	SHORT $LN20@append
	push	eax
	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	mov	edx, DWORD PTR __Right$[ebp]
	test	edi, edi
	je	SHORT $LN81@append
$LN84@append:
; Line 810
	mov	eax, 16					; 00000010H
	cmp	DWORD PTR [edx+20], eax
	jb	SHORT $LN65@append
	mov	ecx, DWORD PTR [edx]
	jmp	SHORT $LN66@append
; Line 807
$LN20@append:
	test	edi, edi
	jne	SHORT $LN84@append
	mov	DWORD PTR [esi+16], edi
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN59@append
	mov	eax, DWORD PTR [esi]
	pop	edi
	mov	BYTE PTR [eax], 0
; Line 813
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 814
	pop	ebp
	ret	12					; 0000000cH
; Line 807
$LN59@append:
	pop	edi
	mov	eax, esi
	pop	esi
	mov	BYTE PTR [eax], 0
	pop	ebx
; Line 814
	pop	ebp
	ret	12					; 0000000cH
; Line 810
$LN65@append:
	mov	ecx, edx
$LN66@append:
	cmp	DWORD PTR [esi+20], eax
	jb	SHORT $LN69@append
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN70@append
$LN69@append:
	mov	eax, esi
$LN70@append:
	add	ecx, DWORD PTR __Roff$[ebp]
	push	ebx
	push	ecx
	mov	ecx, DWORD PTR [esi+16]
	add	ecx, eax
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 811
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], edi
	jb	SHORT $LN77@append
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax+edi], 0
	pop	edi
; Line 813
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 814
	pop	ebp
	ret	12					; 0000000cH
; Line 811
$LN77@append:
	mov	eax, esi
	mov	BYTE PTR [eax+edi], 0
$LN81@append:
	pop	edi
$LN79@append:
; Line 813
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 814
	pop	ebp
	ret	12					; 0000000cH
$LN82@append:
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
PUBLIC	?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve
; Function compile flags: /Ogtp
;	COMDAT ?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Newcap$ = 8						; size = 4
?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve, COMDAT
; _this$ = ecx
; Line 1539
	push	ebp
	mov	ebp, esp
; Line 1540
	mov	eax, DWORD PTR __Newcap$[ebp]
	push	esi
	mov	esi, ecx
	push	edi
	mov	edi, DWORD PTR [esi+16]
	cmp	edi, eax
	ja	SHORT $LN11@reserve@2
	cmp	DWORD PTR [esi+20], eax
	je	SHORT $LN11@reserve@2
; Line 1543
	push	1
	push	eax
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	test	al, al
	je	SHORT $LN11@reserve@2
; Line 1544
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], edi
	jb	SHORT $LN9@reserve@2
	mov	esi, DWORD PTR [esi]
$LN9@reserve@2:
	mov	BYTE PTR [esi+edi], 0
$LN11@reserve@2:
	pop	edi
	pop	esi
; Line 1546
	pop	ebp
	ret	4
?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve
_TEXT	ENDS
PUBLIC	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
; Function compile flags: /Ogtp
;	COMDAT ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Right$ = 12						; size = 4
__Roff$ = 16						; size = 4
__Num$ = 20						; size = 4
__Count$ = 20						; size = 4
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert, COMDAT
; _this$ = ecx
; Line 981
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
; Line 982
	mov	ecx, DWORD PTR [esi+16]
	push	edi
	cmp	ecx, DWORD PTR __Off$[ebp]
	jb	$LN6@insert
	mov	eax, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [eax+16]
	mov	edx, DWORD PTR __Roff$[ebp]
	cmp	eax, edx
	jb	$LN6@insert
; Line 985
	mov	edi, DWORD PTR __Count$[ebp]
	sub	eax, edx
	cmp	eax, edi
	jae	SHORT $LN5@insert
; Line 986
	mov	edi, eax
$LN5@insert:
; Line 987
	or	edx, -1
	sub	edx, ecx
	cmp	edx, edi
	ja	SHORT $LN4@insert
; Line 988
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN111@insert:
$LN4@insert:
; Line 990
	test	edi, edi
	je	$LN104@insert
	push	ebx
	lea	ebx, DWORD PTR [ecx+edi]
	mov	DWORD PTR __Num$[ebp], ebx
	cmp	ebx, -2					; fffffffeH
	jbe	SHORT $LN26@insert
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN112@insert:
$LN26@insert:
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, ebx
	jae	SHORT $LN25@insert
	push	ecx
	push	ebx
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	test	ebx, ebx
	je	$LN106@insert
$LN109@insert:
; Line 993
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN70@insert
	mov	ecx, DWORD PTR [esi]
	jmp	SHORT $LN71@insert
; Line 990
$LN25@insert:
	test	ebx, ebx
	jne	SHORT $LN109@insert
	mov	DWORD PTR [esi+16], ebx
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN64@insert
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax], bl
	pop	ebx
	pop	edi
; Line 1003
	mov	eax, esi
	pop	esi
; Line 1004
	pop	ebp
	ret	16					; 00000010H
; Line 990
$LN64@insert:
	pop	ebx
	mov	eax, esi
	pop	edi
	mov	BYTE PTR [eax], 0
	pop	esi
; Line 1004
	pop	ebp
	ret	16					; 00000010H
; Line 993
$LN70@insert:
	mov	ecx, esi
$LN71@insert:
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN74@insert
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN75@insert
$LN74@insert:
	mov	eax, esi
$LN75@insert:
	mov	edx, DWORD PTR [esi+16]
	sub	edx, DWORD PTR __Off$[ebp]
	mov	ebx, DWORD PTR __Off$[ebp]
	push	edx
	add	ecx, ebx
	add	eax, ebx
	push	ecx
	add	eax, edi
	push	eax
	call	DWORD PTR __imp__memmove
; Line 994
	mov	eax, DWORD PTR __Right$[ebp]
	add	esp, 12					; 0000000cH
	cmp	esi, eax
	jne	SHORT $LN2@insert
; Line 997
	mov	eax, DWORD PTR __Roff$[ebp]
	lea	edx, DWORD PTR [eax+edi]
	cmp	ebx, eax
	jb	SHORT $LN11@insert
	mov	edx, eax
$LN11@insert:
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN80@insert
	mov	ecx, DWORD PTR [esi]
	jmp	SHORT $LN81@insert
$LN80@insert:
	mov	ecx, esi
$LN81@insert:
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN84@insert
	mov	eax, DWORD PTR [esi]
	push	edi
	add	ecx, edx
	push	ecx
	add	eax, ebx
	push	eax
	call	DWORD PTR __imp__memmove
; Line 998
	jmp	SHORT $LN110@insert
; Line 997
$LN84@insert:
	push	edi
	add	ecx, edx
	mov	eax, esi
	push	ecx
	add	eax, ebx
	push	eax
	call	DWORD PTR __imp__memmove
; Line 998
	jmp	SHORT $LN110@insert
$LN2@insert:
; Line 1000
	mov	edx, 16					; 00000010H
	cmp	DWORD PTR [eax+20], edx
	jb	SHORT $LN90@insert
	mov	ecx, DWORD PTR [eax]
	jmp	SHORT $LN91@insert
$LN90@insert:
	mov	ecx, eax
$LN91@insert:
	cmp	DWORD PTR [esi+20], edx
	jb	SHORT $LN94@insert
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN95@insert
$LN94@insert:
	mov	eax, esi
$LN95@insert:
	add	ecx, DWORD PTR __Roff$[ebp]
	push	edi
	push	ecx
	add	eax, ebx
	push	eax
	call	_memcpy
$LN110@insert:
; Line 1001
	mov	ecx, DWORD PTR __Num$[ebp]
	add	esp, 12					; 0000000cH
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], ecx
	jb	SHORT $LN102@insert
	mov	eax, DWORD PTR [esi]
	pop	ebx
	mov	BYTE PTR [eax+ecx], 0
	pop	edi
; Line 1003
	mov	eax, esi
	pop	esi
; Line 1004
	pop	ebp
	ret	16					; 00000010H
; Line 1001
$LN102@insert:
	mov	eax, esi
	mov	BYTE PTR [eax+ecx], 0
$LN106@insert:
	pop	ebx
$LN104@insert:
; Line 1003
	pop	edi
	mov	eax, esi
	pop	esi
; Line 1004
	pop	ebp
	ret	16					; 00000010H
$LN6@insert:
; Line 983
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN113@insert:
$LN107@insert:
	int	3
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
_TEXT	ENDS
PUBLIC	??1?$_Pair_base@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@QAE@XZ ; std::_Pair_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon>::~_Pair_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon>
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Pair_base@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Pair_base@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@QAE@XZ PROC ; std::_Pair_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon>::~_Pair_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon>, COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	cmp	DWORD PTR [esi+48], 16			; 00000010H
	jb	SHORT $LN17@Pair_base
	mov	eax, DWORD PTR [esi+28]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN17@Pair_base:
	mov	DWORD PTR [esi+48], 15			; 0000000fH
	mov	DWORD PTR [esi+44], 0
	mov	BYTE PTR [esi+28], 0
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN39@Pair_base
	mov	ecx, DWORD PTR [esi]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN39@Pair_base:
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
	pop	esi
	ret	0
??1?$_Pair_base@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@QAE@XZ ENDP ; std::_Pair_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon>::~_Pair_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon>
_TEXT	ENDS
PUBLIC	??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::_Destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 62
	push	ebp
	mov	ebp, esp
	push	esi
; Line 63
	mov	esi, DWORD PTR __Ptr$[ebp]
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN16@Destroy
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN16@Destroy:
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
	pop	esi
; Line 64
	pop	ebp
	ret	0
??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::_Destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	??1?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAE@XZ ; std::vector<AppState *,std::allocator<AppState *> >::~vector<AppState *,std::allocator<AppState *> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAE@XZ PROC ; std::vector<AppState *,std::allocator<AppState *> >::~vector<AppState *,std::allocator<AppState *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 704
	push	esi
	mov	esi, ecx
; Line 705
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN8@vector@2
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN8@vector@2:
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	pop	esi
; Line 706
	ret	0
??1?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAE@XZ ENDP ; std::vector<AppState *,std::allocator<AppState *> >::~vector<AppState *,std::allocator<AppState *> >
_TEXT	ENDS
PUBLIC	??0?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::deque<MPQArchive *,std::allocator<MPQArchive *> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??0?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ$1
__ehfuncinfo$??0?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??0?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T139447 = -32						; size = 12
_this$ = -20						; size = 4
$T139364 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ PROC ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::deque<MPQArchive *,std::allocator<MPQArchive *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
; Line 799
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	xor	edi, edi
	mov	DWORD PTR [esi], edi
	push	8
	mov	DWORD PTR __$EHRec$[ebp+8], edi
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	cmp	eax, edi
	je	SHORT $LN19@deque
	mov	DWORD PTR [esi], eax
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	xor	edx, edx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [esi+4], edi
	mov	DWORD PTR [esi+8], edi
	mov	DWORD PTR [esi+12], edi
	mov	DWORD PTR [esi+16], edi
; Line 800
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
; Line 799
$LN19@deque:
	lea	ecx, DWORD PTR $T139364[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T139447[ebp]
	mov	DWORD PTR $T139364[ebp], edi
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T139447[ebp]
	push	edx
	mov	DWORD PTR $T139447[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN47@deque:
$LN46@deque:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
__ehhandler$??0?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ ENDP ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::deque<MPQArchive *,std::allocator<MPQArchive *> >
PUBLIC	?begin@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE?AV?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@XZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::begin
; Function compile flags: /Ogtp
;	COMDAT ?begin@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE?AV?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE?AV?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@XZ PROC ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::begin, COMDAT
; _this$ = ecx
; Line 1050
	push	ebp
	mov	ebp, esp
; Line 1051
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+8], edx
; Line 1052
	pop	ebp
	ret	4
?begin@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE?AV?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@XZ ENDP ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::begin
_TEXT	ENDS
PUBLIC	?end@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE?AV?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@XZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::end
; Function compile flags: /Ogtp
;	COMDAT ?end@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE?AV?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE?AV?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@XZ PROC ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::end, COMDAT
; _this$ = ecx
; Line 1060
	push	ebp
	mov	ebp, esp
; Line 1061
	mov	edx, DWORD PTR [ecx+16]
	add	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+8], edx
; Line 1062
	pop	ebp
	ret	4
?end@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE?AV?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@XZ ENDP ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::end
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 892
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 893
	mov	ebx, DWORD PTR __Roff$[ebp]
	push	esi
	mov	esi, ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	push	edi
	mov	edi, DWORD PTR [ecx+16]
	cmp	edi, ebx
	jae	SHORT $LN5@assign
; Line 894
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN83@assign:
$LN5@assign:
; Line 896
	mov	eax, DWORD PTR __Count$[ebp]
	sub	edi, ebx
	cmp	eax, edi
	jae	SHORT $LN4@assign
; Line 897
	mov	edi, eax
$LN4@assign:
; Line 899
	cmp	esi, ecx
	jne	SHORT $LN3@assign
; Line 900
	push	-1
	add	edi, ebx
	push	edi
	mov	ecx, esi
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	push	ebx
	push	0
	mov	ecx, esi
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	pop	edi
; Line 906
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 907
	pop	ebp
	ret	12					; 0000000cH
$LN3@assign:
; Line 901
	cmp	edi, -2					; fffffffeH
	jbe	SHORT $LN20@assign
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN84@assign:
$LN20@assign:
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, edi
	jae	SHORT $LN19@assign
	mov	eax, DWORD PTR [esi+16]
	push	eax
	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	mov	ecx, DWORD PTR __Right$[ebp]
	test	edi, edi
	je	SHORT $LN78@assign
$LN82@assign:
; Line 903
	mov	eax, 16					; 00000010H
	cmp	DWORD PTR [ecx+20], eax
	jb	SHORT $LN64@assign
	mov	ecx, DWORD PTR [ecx]
$LN64@assign:
	cmp	DWORD PTR [esi+20], eax
	jb	SHORT $LN68@assign
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN69@assign
; Line 901
$LN19@assign:
	test	edi, edi
	jne	SHORT $LN82@assign
	mov	DWORD PTR [esi+16], edi
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN58@assign
	mov	eax, DWORD PTR [esi]
	pop	edi
	mov	BYTE PTR [eax], 0
; Line 906
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 907
	pop	ebp
	ret	12					; 0000000cH
; Line 901
$LN58@assign:
	pop	edi
	mov	eax, esi
	pop	esi
	mov	BYTE PTR [eax], 0
	pop	ebx
; Line 907
	pop	ebp
	ret	12					; 0000000cH
; Line 903
$LN68@assign:
	mov	eax, esi
$LN69@assign:
	push	edi
	add	ecx, ebx
	push	ecx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 904
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], edi
	jb	SHORT $LN76@assign
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax+edi], 0
	pop	edi
; Line 906
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 907
	pop	ebp
	ret	12					; 0000000cH
; Line 904
$LN76@assign:
	mov	eax, esi
	mov	BYTE PTR [eax+edi], 0
$LN78@assign:
; Line 906
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 907
	pop	ebp
	ret	12					; 0000000cH
$LN80@assign:
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEXI@Z ; std::vector<AppState *,std::allocator<AppState *> >::_Reserve
; Function compile flags: /Ogtp
;	COMDAT ?_Reserve@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEXI@Z PROC ; std::vector<AppState *,std::allocator<AppState *> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1290
	push	ebp
	mov	ebp, esp
; Line 1291
	mov	eax, DWORD PTR [ecx+4]
; Line 1292
	mov	edx, DWORD PTR __Count$[ebp]
	push	esi
	mov	esi, DWORD PTR [ecx]
	push	edi
	sub	eax, esi
	mov	edi, 1073741823				; 3fffffffH
	sar	eax, 2
	sub	edi, edx
	cmp	edi, eax
	jae	SHORT $LN4@Reserve
; Line 1293
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN34@Reserve:
$LN4@Reserve:
; Line 1294
	add	eax, edx
	mov	edx, DWORD PTR [ecx+8]
	sub	edx, esi
	sar	edx, 2
	cmp	eax, edx
	jbe	SHORT $LN1@Reserve
; Line 1297
	mov	esi, edx
	shr	esi, 1
	mov	edi, 1073741823				; 3fffffffH
	sub	edi, esi
	cmp	edi, edx
	jae	SHORT $LN23@Reserve
	xor	edx, edx
	jmp	SHORT $LN24@Reserve
$LN23@Reserve:
	add	edx, esi
$LN24@Reserve:
	cmp	edx, eax
	jae	SHORT $LN20@Reserve
	mov	edx, eax
$LN20@Reserve:
	push	edx
	call	?reserve@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAEXI@Z ; std::vector<AppState *,std::allocator<AppState *> >::reserve
$LN1@Reserve:
	pop	edi
	pop	esi
; Line 1298
	pop	ebp
	ret	4
$LN33@Reserve:
?_Reserve@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEXI@Z ENDP ; std::vector<AppState *,std::allocator<AppState *> >::_Reserve
_TEXT	ENDS
PUBLIC	?_Tidy@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@IAEXXZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::_Tidy
; Function compile flags: /Ogtp
;	COMDAT ?_Tidy@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@IAEXXZ PROC ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
; Line 1638
	push	ebx
	push	esi
	mov	esi, ecx
; Line 1639
	mov	eax, DWORD PTR [esi+16]
	xor	ebx, ebx
	cmp	eax, ebx
	je	SHORT $LN5@Tidy@3
	npad	3
$LL6@Tidy@3:
; Line 1640
	cmp	eax, ebx
	je	SHORT $LN11@Tidy@3
	dec	eax
	mov	DWORD PTR [esi+16], eax
	jne	SHORT $LN11@Tidy@3
	mov	DWORD PTR [esi+12], ebx
$LN11@Tidy@3:
; Line 1639
	cmp	DWORD PTR [esi+16], ebx
	jne	SHORT $LL6@Tidy@3
$LN5@Tidy@3:
	push	edi
; Line 1641
	mov	edi, DWORD PTR [esi+8]
	cmp	edi, ebx
	jbe	SHORT $LN3@Tidy@3
	npad	6
$LL4@Tidy@3:
	mov	eax, DWORD PTR [esi+4]
; Line 1643
	dec	edi
	cmp	DWORD PTR [eax+edi*4], ebx
	lea	eax, DWORD PTR [eax+edi*4]
	je	SHORT $LN2@Tidy@3
; Line 1645
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@Tidy@3:
; Line 1641
	cmp	edi, ebx
	ja	SHORT $LL4@Tidy@3
$LN3@Tidy@3:
; Line 1650
	mov	eax, DWORD PTR [esi+4]
	pop	edi
	cmp	eax, ebx
	je	SHORT $LN24@Tidy@3
; Line 1652
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN24@Tidy@3:
; Line 1654
	mov	DWORD PTR [esi+4], ebx
	mov	DWORD PTR [esi+8], ebx
	pop	esi
	pop	ebx
; Line 1655
	ret	0
?_Tidy@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@IAEXXZ ENDP ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::_Tidy
_TEXT	ENDS
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Ogtp
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 792
	push	ebp
	mov	ebp, esp
; Line 793
	mov	eax, DWORD PTR __Right$[ebp]
	push	-1
	push	0
	push	eax
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 794
	pop	ebp
	ret	4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Ogtp
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx
; Line 817
	push	ebp
	mov	ebp, esp
; Line 823
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	esi
	push	edi
	mov	esi, ecx
	test	edx, edx
	je	SHORT $LN88@append@2
	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN13@append@2
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN14@append@2
$LN13@append@2:
	mov	eax, esi
$LN14@append@2:
	cmp	edx, eax
	jb	SHORT $LN88@append@2
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN17@append@2
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN18@append@2
$LN17@append@2:
	mov	eax, esi
$LN18@append@2:
	mov	edi, DWORD PTR [esi+16]
	add	edi, eax
	cmp	edi, edx
	jbe	SHORT $LN88@append@2
; Line 824
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN21@append@2
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	sub	edx, eax
	push	edx
	push	esi
	mov	ecx, esi
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	pop	edi
	pop	esi
; Line 835
	pop	ebp
	ret	8
; Line 824
$LN21@append@2:
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	eax, esi
	push	ecx
	sub	edx, eax
	push	edx
	push	esi
	mov	ecx, esi
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	pop	edi
	pop	esi
; Line 835
	pop	ebp
	ret	8
$LN88@append@2:
; Line 825
	mov	eax, DWORD PTR [esi+16]
	or	ecx, -1
	push	ebx
	mov	ebx, DWORD PTR __Count$[ebp]
	sub	ecx, eax
	cmp	ecx, ebx
	ja	SHORT $LN2@append@2
; Line 826
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN92@append@2:
$LN2@append@2:
; Line 829
	test	ebx, ebx
	je	$LN85@append@2
	lea	edi, DWORD PTR [eax+ebx]
	cmp	edi, -2					; fffffffeH
	jbe	SHORT $LN31@append@2
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN93@append@2:
$LN31@append@2:
	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, edi
	jae	SHORT $LN30@append@2
	push	eax
	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	mov	edx, DWORD PTR __Ptr$[ebp]
	test	edi, edi
	je	SHORT $LN85@append@2
$LN91@append@2:
; Line 831
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN75@append@2
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN76@append@2
; Line 829
$LN30@append@2:
	test	edi, edi
	jne	SHORT $LN91@append@2
	mov	DWORD PTR [esi+16], edi
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN69@append@2
	mov	eax, DWORD PTR [esi]
	pop	ebx
	mov	BYTE PTR [eax], 0
	pop	edi
; Line 834
	mov	eax, esi
	pop	esi
; Line 835
	pop	ebp
	ret	8
; Line 829
$LN69@append@2:
	pop	ebx
	mov	eax, esi
	pop	edi
	mov	BYTE PTR [eax], 0
	pop	esi
; Line 835
	pop	ebp
	ret	8
; Line 831
$LN75@append@2:
	mov	eax, esi
$LN76@append@2:
	push	ebx
	push	edx
	mov	edx, DWORD PTR [esi+16]
	add	edx, eax
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 832
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], edi
	jb	SHORT $LN83@append@2
	mov	eax, DWORD PTR [esi]
	pop	ebx
	mov	BYTE PTR [eax+edi], 0
	pop	edi
; Line 834
	mov	eax, esi
	pop	esi
; Line 835
	pop	ebp
	ret	8
; Line 832
$LN83@append@2:
	mov	eax, esi
	mov	BYTE PTR [eax+edi], 0
$LN85@append@2:
; Line 834
	pop	ebx
	pop	edi
	mov	eax, esi
	pop	esi
; Line 835
	pop	ebp
	ret	8
$LN89@append@2:
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 910
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 916
	mov	ebx, DWORD PTR __Ptr$[ebp]
	push	esi
	mov	esi, ecx
	test	ebx, ebx
	je	SHORT $LN85@assign@2
	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN12@assign@2
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN13@assign@2
$LN12@assign@2:
	mov	eax, esi
$LN13@assign@2:
	cmp	ebx, eax
	jb	SHORT $LN85@assign@2
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN16@assign@2
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN17@assign@2
$LN16@assign@2:
	mov	eax, esi
$LN17@assign@2:
	mov	edx, DWORD PTR [esi+16]
	add	edx, eax
	cmp	edx, ebx
	jbe	SHORT $LN85@assign@2
; Line 917
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN20@assign@2
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	sub	ebx, eax
	push	ebx
	push	esi
	mov	ecx, esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	esi
	pop	ebx
; Line 925
	pop	ebp
	ret	8
; Line 917
$LN20@assign@2:
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	eax, esi
	push	ecx
	sub	ebx, eax
	push	ebx
	push	esi
	mov	ecx, esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	esi
	pop	ebx
; Line 925
	pop	ebp
	ret	8
$LN85@assign@2:
	push	edi
; Line 919
	mov	edi, DWORD PTR __Count$[ebp]
	cmp	edi, -2					; fffffffeH
	jbe	SHORT $LN27@assign@2
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN89@assign@2:
$LN27@assign@2:
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, edi
	jae	SHORT $LN26@assign@2
	mov	edx, DWORD PTR [esi+16]
	push	edx
	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	test	edi, edi
	je	SHORT $LN82@assign@2
$LN88@assign@2:
; Line 921
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN72@assign@2
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN73@assign@2
; Line 919
$LN26@assign@2:
	test	edi, edi
	jne	SHORT $LN88@assign@2
	mov	DWORD PTR [esi+16], edi
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN65@assign@2
	mov	eax, DWORD PTR [esi]
	pop	edi
	mov	BYTE PTR [eax], 0
; Line 924
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 925
	pop	ebp
	ret	8
; Line 919
$LN65@assign@2:
	pop	edi
	mov	eax, esi
	pop	esi
	mov	BYTE PTR [eax], 0
	pop	ebx
; Line 925
	pop	ebp
	ret	8
; Line 921
$LN72@assign@2:
	mov	eax, esi
$LN73@assign@2:
	push	edi
	push	ebx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 922
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], edi
	jb	SHORT $LN80@assign@2
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax+edi], 0
	pop	edi
; Line 924
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 925
	pop	ebp
	ret	8
; Line 922
$LN80@assign@2:
	mov	eax, esi
	mov	BYTE PTR [eax+edi], 0
$LN82@assign@2:
; Line 924
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 925
	pop	ebp
	ret	8
$LN86@assign@2:
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Ogtp
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx
; Line 838
	push	ebp
	mov	ebp, esp
	push	esi
; Line 840
	mov	esi, DWORD PTR __Ptr$[ebp]
	mov	eax, esi
	push	edi
	lea	edi, DWORD PTR [eax+1]
	npad	3
$LL5@append@3:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL5@append@3
	sub	eax, edi
	push	eax
	push	esi
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	pop	edi
	pop	esi
; Line 841
	pop	ebp
	ret	4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
PUBLIC	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
; Function compile flags: /Ogtp
;	COMDAT ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IPBDI@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__Count$ = 16						; size = 4
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IPBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert, COMDAT
; _this$ = ecx
; Line 1008
	push	ebp
	mov	ebp, esp
; Line 1014
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	esi
	push	edi
	mov	esi, ecx
	test	eax, eax
	je	SHORT $LN101@insert@2
	mov	edx, DWORD PTR [esi+20]
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN15@insert@2
	mov	ecx, DWORD PTR [esi]
$LN15@insert@2:
	cmp	eax, ecx
	jb	SHORT $LN101@insert@2
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN18@insert@2
	mov	ecx, DWORD PTR [esi]
	jmp	SHORT $LN19@insert@2
$LN18@insert@2:
	mov	ecx, esi
$LN19@insert@2:
	mov	edi, DWORD PTR [esi+16]
	add	edi, ecx
	cmp	edi, eax
	jbe	SHORT $LN101@insert@2
; Line 1016
	cmp	edx, 16					; 00000010H
	jb	SHORT $LN22@insert@2
	mov	ecx, DWORD PTR [esi]
	jmp	SHORT $LN23@insert@2
$LN22@insert@2:
	mov	ecx, esi
$LN23@insert@2:
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	sub	eax, ecx
	push	eax
	mov	eax, DWORD PTR __Off$[ebp]
	push	esi
	push	eax
	mov	ecx, esi
	call	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
	pop	edi
	pop	esi
; Line 1030
	pop	ebp
	ret	12					; 0000000cH
$LN101@insert@2:
; Line 1017
	mov	eax, DWORD PTR [esi+16]
	push	ebx
	mov	ebx, DWORD PTR __Off$[ebp]
	cmp	eax, ebx
	jae	SHORT $LN3@insert@2
; Line 1018
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN105@insert@2:
$LN3@insert@2:
; Line 1019
	mov	ecx, DWORD PTR __Count$[ebp]
	or	edx, -1
	sub	edx, eax
	cmp	edx, ecx
	ja	SHORT $LN2@insert@2
; Line 1020
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN106@insert@2:
$LN2@insert@2:
; Line 1022
	test	ecx, ecx
	je	$LN98@insert@2
	lea	edi, DWORD PTR [eax+ecx]
	cmp	edi, -2					; fffffffeH
	jbe	SHORT $LN34@insert@2
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN107@insert@2:
$LN34@insert@2:
	mov	ecx, DWORD PTR [esi+20]
	cmp	ecx, edi
	jae	SHORT $LN33@insert@2
	push	eax
	push	edi
	mov	ecx, esi
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	test	edi, edi
	je	$LN98@insert@2
$LN104@insert@2:
; Line 1025
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN78@insert@2
	mov	ecx, DWORD PTR [esi]
	jmp	SHORT $LN79@insert@2
; Line 1022
$LN33@insert@2:
	test	edi, edi
	jne	SHORT $LN104@insert@2
	mov	DWORD PTR [esi+16], edi
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN72@insert@2
	mov	eax, DWORD PTR [esi]
	pop	ebx
	mov	BYTE PTR [eax], 0
	pop	edi
; Line 1029
	mov	eax, esi
	pop	esi
; Line 1030
	pop	ebp
	ret	12					; 0000000cH
; Line 1022
$LN72@insert@2:
	pop	ebx
	mov	eax, esi
	pop	edi
	mov	BYTE PTR [eax], 0
	pop	esi
; Line 1030
	pop	ebp
	ret	12					; 0000000cH
; Line 1025
$LN78@insert@2:
	mov	ecx, esi
$LN79@insert@2:
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN82@insert@2
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN83@insert@2
$LN82@insert@2:
	mov	eax, esi
$LN83@insert@2:
	mov	edx, DWORD PTR [esi+16]
	sub	edx, ebx
	push	edx
	add	eax, ebx
	add	eax, DWORD PTR __Count$[ebp]
	add	ecx, ebx
	push	ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
; Line 1026
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN88@insert@2
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN89@insert@2
$LN88@insert@2:
	mov	eax, esi
$LN89@insert@2:
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	ecx
	push	edx
	add	eax, ebx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1027
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], edi
	jb	SHORT $LN96@insert@2
	mov	eax, DWORD PTR [esi]
	pop	ebx
	mov	BYTE PTR [eax+edi], 0
	pop	edi
; Line 1029
	mov	eax, esi
	pop	esi
; Line 1030
	pop	ebp
	ret	12					; 0000000cH
; Line 1027
$LN96@insert@2:
	mov	eax, esi
	mov	BYTE PTR [eax+edi], 0
$LN98@insert@2:
; Line 1029
	pop	ebx
	pop	edi
	mov	eax, esi
	pop	esi
; Line 1030
	pop	ebp
	ret	12					; 0000000cH
$LN102@insert@2:
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IPBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
_TEXT	ENDS
PUBLIC	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@QAE@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon>
; Function compile flags: /Ogtp
;	COMDAT ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@QAE@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon>, COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	cmp	DWORD PTR [esi+48], 16			; 00000010H
	jb	SHORT $LN18@pair
	mov	eax, DWORD PTR [esi+28]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN18@pair:
	mov	DWORD PTR [esi+48], 15			; 0000000fH
	mov	DWORD PTR [esi+44], 0
	mov	BYTE PTR [esi+28], 0
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN40@pair
	mov	ecx, DWORD PTR [esi]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN40@pair:
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
	pop	esi
	ret	0
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@QAE@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy
; Function compile flags: /Ogtp
;	COMDAT ?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 212
	push	ebp
	mov	ebp, esp
	push	esi
; Line 213
	mov	esi, DWORD PTR __Ptr$[ebp]
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN18@destroy
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN18@destroy:
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
	pop	esi
; Line 214
	pop	ebp
	ret	4
?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 543
	push	ebp
	mov	ebp, esp
; Line 545
	mov	eax, DWORD PTR __Right$[ebp]
	push	esi
	push	-1
	mov	esi, ecx
	push	0
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	push	eax
	mov	BYTE PTR [esi], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 546
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?push_back@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAEXABQAVAppState@@@Z ; std::vector<AppState *,std::allocator<AppState *> >::push_back
; Function compile flags: /Ogtp
;	COMDAT ?push_back@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAEXABQAVAppState@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAEXABQAVAppState@@@Z PROC ; std::vector<AppState *,std::allocator<AppState *> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 976
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
; Line 977
	mov	eax, DWORD PTR [esi+4]
	push	edi
	mov	edi, DWORD PTR __Val$[ebp]
	cmp	edi, eax
	jae	SHORT $LN4@push_back
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, edi
	ja	SHORT $LN4@push_back
; Line 979
	sub	edi, ecx
	sar	edi, 2
; Line 980
	cmp	eax, DWORD PTR [esi+8]
	jne	SHORT $LN3@push_back
; Line 981
	push	1
	mov	ecx, esi
	call	?_Reserve@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEXI@Z ; std::vector<AppState *,std::allocator<AppState *> >::_Reserve
$LN3@push_back:
; Line 985
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN39@push_back
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx+edi*4]
	mov	DWORD PTR [eax], edx
; Line 996
	add	DWORD PTR [esi+4], 4
	pop	edi
	pop	esi
; Line 998
	pop	ebp
	ret	4
$LN4@push_back:
; Line 990
	cmp	eax, DWORD PTR [esi+8]
	jne	SHORT $LN1@push_back
; Line 991
	push	1
	mov	ecx, esi
	call	?_Reserve@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@IAEXI@Z ; std::vector<AppState *,std::allocator<AppState *> >::_Reserve
$LN1@push_back:
; Line 995
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN39@push_back
	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR [eax], ecx
$LN39@push_back:
; Line 996
	add	DWORD PTR [esi+4], 4
	pop	edi
	pop	esi
; Line 998
	pop	ebp
	ret	4
?push_back@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAEXABQAVAppState@@@Z ENDP ; std::vector<AppState *,std::allocator<AppState *> >::push_back
_TEXT	ENDS
PUBLIC	??1?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::~deque<MPQArchive *,std::allocator<MPQArchive *> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ PROC ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::~deque<MPQArchive *,std::allocator<MPQArchive *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\deque
; Line 1021
	push	esi
	mov	esi, ecx
; Line 1022
	call	?_Tidy@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@IAEXXZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::_Tidy
; Line 1023
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	DWORD PTR [esi], 0
	pop	esi
	ret	0
??1?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE@XZ ENDP ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::~deque<MPQArchive *,std::allocator<MPQArchive *> >
_TEXT	ENDS
PUBLIC	?clear@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEXXZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::clear
; Function compile flags: /Ogtp
;	COMDAT ?clear@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEXXZ PROC ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::clear, COMDAT
; _this$ = ecx
; Line 1465
	jmp	?_Tidy@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@IAEXXZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::_Tidy
?clear@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAEXXZ ENDP ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::clear
_TEXT	ENDS
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Function compile flags: /Ogtp
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 777
	push	ebp
	mov	ebp, esp
; Line 778
	mov	eax, DWORD PTR __Right$[ebp]
	push	-1
	push	0
	push	eax
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 779
	pop	ebp
	ret	4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 886
	push	ebp
	mov	ebp, esp
; Line 887
	mov	eax, DWORD PTR __Right$[ebp]
	push	-1
	push	0
	push	eax
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 888
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 928
	push	ebp
	mov	ebp, esp
	push	esi
; Line 930
	mov	esi, DWORD PTR __Ptr$[ebp]
	mov	eax, esi
	push	edi
	lea	edi, DWORD PTR [eax+1]
	npad	3
$LL5@assign@3:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL5@assign@3
	sub	eax, edi
	push	eax
	push	esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	edi
	pop	esi
; Line 931
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Function compile flags: /Ogtp
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; _this$ = ecx
; Line 782
	push	ebp
	mov	ebp, esp
	push	esi
; Line 783
	mov	esi, DWORD PTR __Ptr$[ebp]
	mov	eax, esi
	push	edi
	lea	edi, DWORD PTR [eax+1]
	npad	3
$LL7@operator@5:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL7@operator@5
	sub	eax, edi
	push	eax
	push	esi
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	pop	edi
	pop	esi
; Line 784
	pop	ebp
	ret	4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
PUBLIC	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
; Function compile flags: /Ogtp
;	COMDAT ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IPBD@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Ptr$ = 12						; size = 4
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert, COMDAT
; _this$ = ecx
; Line 1033
	push	ebp
	mov	ebp, esp
	push	esi
; Line 1035
	mov	esi, DWORD PTR __Ptr$[ebp]
	mov	eax, esi
	push	edi
	lea	edi, DWORD PTR [eax+1]
	npad	3
$LL5@insert@3:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL5@insert@3
	sub	eax, edi
	push	eax
	mov	eax, DWORD PTR __Off$[ebp]
	push	esi
	push	eax
	call	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
	pop	edi
	pop	esi
; Line 1036
	pop	ebp
	ret	8
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
_TEXT	ENDS
PUBLIC	??$construct@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAV21@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$construct@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAV21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAV21@@Z$0
__ehfuncinfo$??$construct@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAV21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAV21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$construct@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAV21@@Z
_TEXT	SEGMENT
$T141273 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAV21@@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 206
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAV21@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 208
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR $T141273[ebp], ecx
	xor	eax, eax
	mov	DWORD PTR __$EHRec$[ebp+8], eax
	cmp	ecx, eax
	je	SHORT $LN3@construct@4
	push	-1
	mov	DWORD PTR [ecx+16], eax
	mov	DWORD PTR [ecx+20], 15			; 0000000fH
	push	eax
	mov	BYTE PTR [ecx], al
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN3@construct@4:
; Line 209
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAV21@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T141273[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAV21@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAV21@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAV21@@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ; std::_Construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z$0
__ehfuncinfo$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
_TEXT	SEGMENT
$T141385 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Vptr$ = 8						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z PROC ; std::_Construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 46
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 47
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$[ebp], ecx
; Line 48
	mov	DWORD PTR $T141385[ebp], ecx
	xor	eax, eax
	mov	DWORD PTR __$EHRec$[ebp+8], eax
	cmp	ecx, eax
	je	SHORT $LN3@Construct@2
	push	-1
	mov	DWORD PTR [ecx+16], eax
	mov	DWORD PTR [ecx+20], 15			; 0000000fH
	push	eax
	mov	BYTE PTR [ecx], al
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN3@Construct@2:
; Line 49
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z$0:
	mov	eax, DWORD PTR __Vptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T141385[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ENDP ; std::_Construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@QAEPAXI@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon>::`scalar deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@QAEPAXI@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	cmp	DWORD PTR [esi+48], 16			; 00000010H
	jb	SHORT $LN20@scalar@4
	mov	eax, DWORD PTR [esi+28]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN20@scalar@4:
	mov	DWORD PTR [esi+48], 15			; 0000000fH
	mov	DWORD PTR [esi+44], 0
	mov	BYTE PTR [esi+28], 0
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN42@scalar@4
	mov	ecx, DWORD PTR [esi]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN42@scalar@4:
	test	BYTE PTR ___flags$[ebp], 1
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
	je	SHORT $LN54@scalar@4
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN54@scalar@4:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@QAEPAXI@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon>::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Dest_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Ogtp
;	COMDAT ??$_Dest_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::_Dest_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; Line 286
	push	ebp
	mov	ebp, esp
	push	esi
; Line 287
	mov	esi, DWORD PTR __Pdest$[ebp]
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN20@Dest_val
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN20@Dest_val:
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
	pop	esi
; Line 288
	pop	ebp
	ret	0
??$_Dest_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 592
	push	ebp
	mov	ebp, esp
; Line 594
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	esi
	mov	esi, ecx
	mov	eax, edx
	push	edi
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
	lea	edi, DWORD PTR [eax+1]
$LL31@basic_stri@2:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL31@basic_stri@2
	sub	eax, edi
	push	eax
	push	edx
	mov	ecx, esi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	pop	edi
; Line 595
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Function compile flags: /Ogtp
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx
; Line 762
	push	ebp
	mov	ebp, esp
; Line 763
	mov	eax, DWORD PTR __Right$[ebp]
	push	-1
	push	0
	push	eax
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 764
	pop	ebp
	ret	4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 713
	push	ebp
	mov	ebp, esp
	push	esi
	push	edi
; Line 714
	mov	edi, DWORD PTR __Right$[ebp]
	mov	esi, ecx
	cmp	esi, edi
	je	SHORT $LN63@assign@4
; Line 721
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN33@assign@4
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN33@assign@4:
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
; Line 722
	cmp	DWORD PTR [edi+20], 16			; 00000010H
	jae	SHORT $LN2@assign@4
; Line 724
	mov	ecx, DWORD PTR [edi+16]
	inc	ecx
	push	ecx
	push	edi
	push	esi
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
; Line 725
	jmp	SHORT $LN1@assign@4
$LN2@assign@4:
; Line 727
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR [esi], edx
; Line 728
	mov	DWORD PTR [edi], 0
$LN1@assign@4:
; Line 730
	mov	eax, DWORD PTR [edi+16]
	mov	DWORD PTR [esi+16], eax
; Line 731
	mov	ecx, DWORD PTR [edi+20]
	mov	DWORD PTR [esi+20], ecx
; Line 733
	mov	DWORD PTR [edi+20], 15			; 0000000fH
	mov	DWORD PTR [edi+16], 0
	mov	BYTE PTR [edi], 0
$LN63@assign@4:
; Line 735
	pop	edi
	mov	eax, esi
	pop	esi
; Line 736
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AAV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV20@@Z ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AAV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV20@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AAV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV20@@Z$0
__ehfuncinfo$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AAV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV20@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AAV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV20@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AAV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV20@@Z
_TEXT	SEGMENT
$T142287 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AAV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV20@@Z PROC ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 279
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AAV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV20@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 280
	mov	ecx, DWORD PTR __Pdest$[ebp]
	mov	DWORD PTR $T142287[ebp], ecx
	xor	eax, eax
	mov	DWORD PTR __$EHRec$[ebp+8], eax
	cmp	ecx, eax
	je	SHORT $LN7@Cons_val@4
	push	-1
	mov	DWORD PTR [ecx+16], eax
	mov	DWORD PTR [ecx+20], 15			; 0000000fH
	push	eax
	mov	BYTE PTR [ecx], al
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN7@Cons_val@4:
; Line 281
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AAV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV20@@Z$0:
	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T142287[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AAV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV20@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AAV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV20@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AAV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV20@@Z ENDP ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z$0
__ehfuncinfo$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z
_TEXT	SEGMENT
$T142473 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Vptr$142470 = 8					; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 196
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 197
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$142470[ebp], ecx
	mov	DWORD PTR $T142473[ebp], ecx
	xor	eax, eax
	mov	DWORD PTR __$EHRec$[ebp+8], eax
	cmp	ecx, eax
	je	SHORT $LN5@construct@5
	push	-1
	mov	DWORD PTR [ecx+16], eax
	mov	DWORD PTR [ecx+20], 15			; 0000000fH
	push	eax
	mov	BYTE PTR [ecx], al
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN5@construct@5:
; Line 198
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z$0:
	mov	eax, DWORD PTR __Vptr$142470[ebp]
	push	eax
	mov	ecx, DWORD PTR $T142473[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; Line 95
	push	ebp
	mov	ebp, esp
	push	esi
; Line 96
	mov	esi, DWORD PTR __First$[ebp]
	push	edi
	mov	edi, DWORD PTR __Last$[ebp]
	cmp	esi, edi
	je	SHORT $LN1@Destroy_ra
	npad	1
$LL3@Destroy_ra:
; Line 97
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN25@Destroy_ra
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN25@Destroy_ra:
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
	add	esi, 28					; 0000001cH
	cmp	esi, edi
	jne	SHORT $LL3@Destroy_ra
$LN1@Destroy_ra:
	pop	edi
	pop	esi
; Line 98
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	??$_Destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@0@@Z ; std::_Destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@0@@Z PROC ; std::_Destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >, COMDAT
; Line 62
	push	ebp
	mov	ebp, esp
	push	esi
; Line 63
	mov	esi, DWORD PTR __Ptr$[ebp]
	cmp	DWORD PTR [esi+48], 16			; 00000010H
	jb	SHORT $LN22@Destroy@2
	mov	eax, DWORD PTR [esi+28]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN22@Destroy@2:
	mov	DWORD PTR [esi+48], 15			; 0000000fH
	mov	DWORD PTR [esi+44], 0
	mov	BYTE PTR [esi+28], 0
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN44@Destroy@2
	mov	ecx, DWORD PTR [esi]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN44@Destroy@2:
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
	pop	esi
; Line 64
	pop	ebp
	ret	0
??$_Destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@0@@Z ENDP ; std::_Destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 702
	push	ebp
	mov	ebp, esp
; Line 704
	mov	eax, DWORD PTR __Right$[ebp]
	push	esi
	mov	esi, ecx
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	push	eax
	mov	BYTE PTR [esi], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 705
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z$0
__ehfuncinfo$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
_TEXT	SEGMENT
$T143112 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string
; Line 36
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 39
	xor	eax, eax
	mov	DWORD PTR $T143112[ebp], eax
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], eax
	mov	BYTE PTR [esi], al
; Line 41
	mov	DWORD PTR __$EHRec$[ebp+8], eax
	mov	eax, DWORD PTR __Left$[ebp]
	mov	DWORD PTR $T143112[ebp], 1
	lea	edx, DWORD PTR [eax+1]
	npad	6
$LL57@operator@6:
; Line 38
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL57@operator@6
	mov	ebx, DWORD PTR __Right$[ebp]
	mov	edi, DWORD PTR [esi+16]
	sub	eax, edx
	add	eax, DWORD PTR [ebx+16]
	cmp	edi, eax
	ja	SHORT $LN45@operator@6
	cmp	DWORD PTR [esi+20], eax
	je	SHORT $LN45@operator@6
	push	1
	push	eax
	mov	ecx, esi
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	test	al, al
	je	SHORT $LN45@operator@6
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	mov	DWORD PTR [esi+16], edi
	jb	SHORT $LN43@operator@6
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN44@operator@6
$LN43@operator@6:
	mov	eax, esi
$LN44@operator@6:
	mov	BYTE PTR [eax+edi], 0
$LN45@operator@6:
; Line 39
	mov	edi, DWORD PTR __Left$[ebp]
	mov	eax, edi
	lea	edx, DWORD PTR [eax+1]
$LL58@operator@6:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL58@operator@6
	sub	eax, edx
	push	eax
	push	edi
	mov	ecx, esi
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 40
	push	-1
	push	0
	push	ebx
	mov	ecx, esi
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 41
	mov	eax, esi
; Line 42
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z$0:
	mov	eax, DWORD PTR $T143112[ebp]
	and	eax, 1
	je	$LN4@operator@6
	and	DWORD PTR $T143112[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@operator@6:
	ret	0
__ehhandler$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD$$QAV10@@Z
_TEXT	SEGMENT
$T143285 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD$$QAV10@@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; Line 126
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 127
	mov	edx, DWORD PTR __Left$[ebp]
	mov	eax, edx
	push	esi
	mov	DWORD PTR $T143285[ebp], 0
	lea	esi, DWORD PTR [eax+1]
$LL41@operator@7:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL41@operator@7
	mov	ecx, DWORD PTR __Right$[ebp]
	sub	eax, esi
	push	eax
	push	edx
	push	0
	call	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	push	eax
	mov	ecx, esi
	mov	BYTE PTR [esi], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	eax, esi
	pop	esi
; Line 128
	mov	esp, ebp
	pop	ebp
	ret	0
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD$$QAV10@@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z
_TEXT	SEGMENT
$T143406 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; Line 146
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 147
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, edx
	push	esi
	mov	DWORD PTR $T143406[ebp], 0
	lea	esi, DWORD PTR [eax+1]
$LL41@operator@8:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL41@operator@8
	mov	ecx, DWORD PTR __Left$[ebp]
	sub	eax, esi
	push	eax
	push	edx
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	push	eax
	mov	ecx, esi
	mov	BYTE PTR [esi], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	eax, esi
	pop	esi
; Line 148
	mov	esp, ebp
	pop	ebp
	ret	0
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z
_TEXT	SEGMENT
$T143527 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; Line 102
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 103
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR __Left$[ebp]
	push	esi
	push	-1
	push	0
	push	eax
	mov	DWORD PTR $T143527[ebp], 0
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	push	eax
	mov	ecx, esi
	mov	BYTE PTR [esi], 0
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	eax, esi
	pop	esi
; Line 104
	mov	esp, ebp
	pop	ebp
	ret	0
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV20@@Z ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV20@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV20@@Z$0
__ehfuncinfo$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV20@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV20@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV20@@Z
_TEXT	SEGMENT
$T143794 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Alval$ = 8						; size = 4
__Vptr$143831 = 12					; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV20@@Z PROC ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 279
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV20@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 280
	mov	ecx, DWORD PTR __Pdest$[ebp]
	mov	DWORD PTR __Vptr$143831[ebp], ecx
	mov	DWORD PTR $T143794[ebp], ecx
	xor	eax, eax
	mov	DWORD PTR __$EHRec$[ebp+8], eax
	cmp	ecx, eax
	je	SHORT $LN9@Cons_val@5
	push	-1
	mov	DWORD PTR [ecx+16], eax
	mov	DWORD PTR [ecx+20], 15			; 0000000fH
	push	eax
	mov	BYTE PTR [ecx], al
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN9@Cons_val@5:
; Line 281
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV20@@Z$0:
	mov	eax, DWORD PTR __Vptr$143831[ebp]
	push	eax
	mov	ecx, DWORD PTR $T143794[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV20@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV20@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV20@@Z ENDP ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
__Cat$143844 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; Line 87
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 88
	mov	eax, DWORD PTR __Cat$143844[ebp]
	mov	ecx, DWORD PTR __Al$[ebp]
	mov	edx, DWORD PTR __Last$[ebp]
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	ecx
	push	edx
	push	eax
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 16					; 00000010H
; Line 89
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@2@@Z ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >::destroy
; Function compile flags: /Ogtp
;	COMDAT ?destroy@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@2@@Z PROC ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >::destroy, COMDAT
; _this$ = ecx
; Line 212
	push	ebp
	mov	ebp, esp
	push	esi
; Line 213
	mov	esi, DWORD PTR __Ptr$[ebp]
	cmp	DWORD PTR [esi+48], 16			; 00000010H
	jb	SHORT $LN24@destroy@2
	mov	eax, DWORD PTR [esi+28]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN24@destroy@2:
	mov	DWORD PTR [esi+48], 15			; 0000000fH
	mov	DWORD PTR [esi+44], 0
	mov	BYTE PTR [esi+28], 0
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN46@destroy@2
	mov	ecx, DWORD PTR [esi]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN46@destroy@2:
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
	pop	esi
; Line 214
	pop	ebp
	ret	4
?destroy@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@2@@Z ENDP ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >::destroy
_TEXT	ENDS
PUBLIC	?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z$0
__ehfuncinfo$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z
_TEXT	SEGMENT
$T144258 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 202
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR $T144258[ebp], ecx
	xor	eax, eax
	mov	DWORD PTR __$EHRec$[ebp+8], eax
	cmp	ecx, eax
	je	SHORT $LN3@construct@6
	mov	DWORD PTR [ecx+16], eax
	mov	DWORD PTR [ecx+20], 15			; 0000000fH
	mov	BYTE PTR [ecx], al
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN3@construct@6:
; Line 203
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T144258[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct
PUBLIC	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
; Function compile flags: /Ogtp
;	COMDAT ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Cat$144390 = 12					; size = 1
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1269
	push	ebp
	mov	ebp, esp
; Line 1270
	mov	eax, DWORD PTR __Cat$144390[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	push	eax
	add	ecx, 12					; 0000000cH
	push	ecx
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	push	edx
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 16					; 00000010H
; Line 1271
	pop	ebp
	ret	8
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z$0
__ehfuncinfo$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z
_TEXT	SEGMENT
$T144513 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z PROC ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 279
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 280
	mov	ecx, DWORD PTR __Pdest$[ebp]
	mov	DWORD PTR $T144513[ebp], ecx
	xor	eax, eax
	mov	DWORD PTR __$EHRec$[ebp+8], eax
	cmp	ecx, eax
	je	SHORT $LN7@Cons_val@6
	mov	DWORD PTR [ecx+16], eax
	mov	DWORD PTR [ecx+20], 15			; 0000000fH
	mov	BYTE PTR [ecx], al
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN7@Cons_val@6:
; Line 281
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z$0:
	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T144513[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z ENDP ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$_Dest_val@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@0@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Dest_val@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@0@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@0@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@0@@Z PROC ; std::_Dest_val<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >, COMDAT
; Line 286
	push	ebp
	mov	ebp, esp
	push	esi
; Line 287
	mov	esi, DWORD PTR __Pdest$[ebp]
	cmp	DWORD PTR [esi+48], 16			; 00000010H
	jb	SHORT $LN26@Dest_val@2
	mov	eax, DWORD PTR [esi+28]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN26@Dest_val@2:
	mov	DWORD PTR [esi+48], 15			; 0000000fH
	mov	DWORD PTR [esi+44], 0
	mov	BYTE PTR [esi+28], 0
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN48@Dest_val@2
	mov	ecx, DWORD PTR [esi]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN48@Dest_val@2:
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
	pop	esi
; Line 288
	pop	ebp
	ret	0
??$_Dest_val@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@0@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$3
__unwindtable$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
$T145207 = 8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
; Line 424
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 427
	mov	esi, DWORD PTR __Dest$[ebp]
; Line 429
	mov	edi, DWORD PTR __First$[ebp]
	xor	ebx, ebx
	mov	DWORD PTR __Next$[ebp], esi
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	npad	7
$LL6@Uninit_mov:
; Line 430
	cmp	edi, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov
; Line 431
	mov	DWORD PTR $T145207[ebp], esi
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	esi, ebx
	je	SHORT $LN20@Uninit_mov
	mov	DWORD PTR [esi+20], 15			; 0000000fH
	mov	DWORD PTR [esi+16], ebx
	push	edi
	mov	ecx, esi
	mov	BYTE PTR [esi], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN20@Uninit_mov:
	add	esi, 28					; 0000001cH
	mov	BYTE PTR __$EHRec$[ebp+12], bl
	mov	DWORD PTR __Dest$[ebp], esi
	add	edi, 28					; 0000001cH
	jmp	SHORT $LL6@Uninit_mov
__catch$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 433
	mov	esi, DWORD PTR __Next$[ebp]
	mov	edi, DWORD PTR __Dest$[ebp]
	cmp	esi, edi
	je	SHORT $LN1@Uninit_mov
	mov	ebx, DWORD PTR __Al$[ebp]
	npad	1
$LL3@Uninit_mov:
; Line 434
	push	esi
	push	ebx
	call	??$_Dest_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Dest_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esi, 28					; 0000001cH
	add	esp, 8
	cmp	esi, edi
	jne	SHORT $LL3@Uninit_mov
$LN1@Uninit_mov:
; Line 435
	xor	ebx, ebx
	push	ebx
	push	ebx
	call	__CxxThrowException@8
$LN63@Uninit_mov:
$LN4@Uninit_mov:
; Line 437
	mov	eax, esi
; Line 438
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN62@Uninit_mov:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2:
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T145207[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
; Function compile flags: /Ogtp
;	COMDAT ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
__Cat$145285 = -4					; size = 1
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1301
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx
; Line 1302
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN12@Tidy@4
; Line 1305
	mov	ecx, DWORD PTR __Cat$145285[ebp]
	push	ecx
	mov	ecx, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [esi+12]
	push	edx
	push	ecx
	push	eax
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Line 1307
	mov	edx, DWORD PTR [esi]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN12@Tidy@4:
; Line 1309
	mov	DWORD PTR [esi], 0
; Line 1310
	mov	DWORD PTR [esi+4], 0
; Line 1311
	mov	DWORD PTR [esi+8], 0
	pop	esi
; Line 1312
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
_TEXT	ENDS
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::erase
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 1195
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	push	esi
	push	edi
; Line 1204
	mov	edi, DWORD PTR __Where$[ebp]
	cmp	BYTE PTR [edi+69], 0
	mov	DWORD PTR _this$[ebp], ecx
	je	SHORT $LN40@erase@2
; Line 1205
	push	OFFSET ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN354@erase@2:
$LN40@erase@2:
; Line 1207
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >,std::_Iterator_base0>::operator++
; Line 1214
	mov	ecx, DWORD PTR [edi]
	cmp	BYTE PTR [ecx+69], 0
	je	SHORT $LN39@erase@2
; Line 1215
	mov	ebx, DWORD PTR [edi+8]
; Line 1216
	jmp	SHORT $LN350@erase@2
$LN39@erase@2:
	mov	eax, DWORD PTR [edi+8]
	cmp	BYTE PTR [eax+69], 0
	je	SHORT $LN37@erase@2
; Line 1217
	mov	ebx, ecx
; Line 1218
	jmp	SHORT $LN350@erase@2
$LN37@erase@2:
; Line 1220
	mov	eax, DWORD PTR __Where$[ebp]
; Line 1221
	mov	ebx, DWORD PTR [eax+8]
; Line 1224
	cmp	eax, edi
	jne	SHORT $LN35@erase@2
$LN350@erase@2:
; Line 1227
	cmp	BYTE PTR [ebx+69], 0
	mov	esi, DWORD PTR [edi+4]
	jne	SHORT $LN34@erase@2
; Line 1228
	mov	DWORD PTR [ebx+4], esi
$LN34@erase@2:
; Line 1230
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	DWORD PTR [eax+4], edi
	jne	SHORT $LN33@erase@2
; Line 1231
	mov	DWORD PTR [eax+4], ebx
; Line 1232
	jmp	SHORT $LN30@erase@2
$LN33@erase@2:
	cmp	DWORD PTR [esi], edi
	jne	SHORT $LN31@erase@2
; Line 1233
	mov	DWORD PTR [esi], ebx
; Line 1234
	jmp	SHORT $LN30@erase@2
$LN31@erase@2:
; Line 1236
	mov	DWORD PTR [esi+8], ebx
$LN30@erase@2:
; Line 1238
	mov	eax, DWORD PTR [ecx+4]
	cmp	DWORD PTR [eax], edi
	jne	SHORT $LN29@erase@2
; Line 1241
	cmp	BYTE PTR [ebx+69], 0
	je	SHORT $LN43@erase@2
	mov	eax, esi
	jmp	SHORT $LN44@erase@2
$LN43@erase@2:
	push	ebx
	call	?_Min@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Min
	mov	ecx, DWORD PTR _this$[ebp]
	add	esp, 4
$LN44@erase@2:
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
$LN29@erase@2:
; Line 1243
	mov	eax, DWORD PTR [ecx+4]
	cmp	DWORD PTR [eax+8], edi
	jne	$LN165@erase@2
; Line 1246
	cmp	BYTE PTR [ebx+69], 0
	je	SHORT $LN45@erase@2
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, esi
	mov	DWORD PTR [edx+8], eax
; Line 1248
	jmp	SHORT $LN165@erase@2
$LN45@erase@2:
; Line 1246
	push	ebx
	call	?_Max@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Max
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	esp, 4
	mov	DWORD PTR [edx+8], eax
; Line 1248
	jmp	SHORT $LN165@erase@2
$LN35@erase@2:
; Line 1251
	mov	DWORD PTR [ecx+4], eax
; Line 1253
	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR [eax], ecx
; Line 1255
	cmp	eax, DWORD PTR [edi+8]
	jne	SHORT $LN26@erase@2
; Line 1256
	mov	esi, eax
; Line 1257
	jmp	SHORT $LN25@erase@2
$LN26@erase@2:
; Line 1261
	cmp	BYTE PTR [ebx+69], 0
	mov	esi, DWORD PTR [eax+4]
	jne	SHORT $LN24@erase@2
; Line 1262
	mov	DWORD PTR [ebx+4], esi
$LN24@erase@2:
; Line 1263
	mov	DWORD PTR [esi], ebx
; Line 1265
	mov	ecx, DWORD PTR [edi+8]
	mov	DWORD PTR [eax+8], ecx
; Line 1267
	mov	edx, DWORD PTR [edi+8]
	mov	DWORD PTR [edx+4], eax
$LN25@erase@2:
; Line 1270
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	cmp	DWORD PTR [ecx+4], edi
	jne	SHORT $LN23@erase@2
; Line 1271
	mov	DWORD PTR [ecx+4], eax
; Line 1272
	jmp	SHORT $LN20@erase@2
$LN23@erase@2:
	mov	ecx, DWORD PTR [edi+4]
	cmp	DWORD PTR [ecx], edi
	jne	SHORT $LN21@erase@2
; Line 1274
	mov	DWORD PTR [ecx], eax
; Line 1275
	jmp	SHORT $LN20@erase@2
$LN21@erase@2:
; Line 1277
	mov	DWORD PTR [ecx+8], eax
$LN20@erase@2:
; Line 1280
	mov	edx, DWORD PTR [edi+4]
	mov	DWORD PTR [eax+4], edx
; Line 1282
	mov	cl, BYTE PTR [eax+68]
	mov	dl, BYTE PTR [edi+68]
	mov	BYTE PTR [eax+68], dl
	mov	BYTE PTR [edi+68], cl
	mov	ecx, DWORD PTR _this$[ebp]
$LN165@erase@2:
; Line 1285
	cmp	BYTE PTR [edi+68], 1
	jne	$LN19@erase@2
; Line 1289
	mov	eax, DWORD PTR [ecx+4]
	cmp	ebx, DWORD PTR [eax+4]
	je	$LN16@erase@2
$LL18@erase@2:
	cmp	BYTE PTR [ebx+68], 1
	jne	$LN16@erase@2
; Line 1290
	mov	eax, DWORD PTR [esi]
	cmp	ebx, eax
	jne	SHORT $LN15@erase@2
; Line 1292
	mov	eax, DWORD PTR [esi+8]
; Line 1293
	cmp	BYTE PTR [eax+68], 0
	jne	SHORT $LN14@erase@2
; Line 1295
	mov	BYTE PTR [eax+68], 1
; Line 1297
	push	esi
	mov	BYTE PTR [esi+68], 0
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Lrotate
; Line 1298
	mov	eax, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR _this$[ebp]
$LN14@erase@2:
; Line 1301
	cmp	BYTE PTR [eax+69], 0
; Line 1303
	jne	$LN352@erase@2
; Line 1304
	mov	edx, DWORD PTR [eax]
	cmp	BYTE PTR [edx+68], 1
	jne	SHORT $LN11@erase@2
	mov	edx, DWORD PTR [eax+8]
	cmp	BYTE PTR [edx+68], 1
	je	SHORT $LN353@erase@2
$LN11@erase@2:
; Line 1312
	mov	edx, DWORD PTR [eax+8]
	cmp	BYTE PTR [edx+68], 1
	jne	SHORT $LN9@erase@2
; Line 1314
	mov	edx, DWORD PTR [eax]
	mov	BYTE PTR [edx+68], 1
; Line 1316
	push	eax
	mov	BYTE PTR [eax+68], 0
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Rrotate
; Line 1317
	mov	eax, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR _this$[ebp]
$LN9@erase@2:
; Line 1320
	mov	dl, BYTE PTR [esi+68]
	mov	BYTE PTR [eax+68], dl
; Line 1321
	mov	BYTE PTR [esi+68], 1
; Line 1322
	mov	eax, DWORD PTR [eax+8]
; Line 1323
	push	esi
	mov	BYTE PTR [eax+68], 1
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Lrotate
; Line 1324
	jmp	SHORT $LN16@erase@2
$LN15@erase@2:
; Line 1330
	cmp	BYTE PTR [eax+68], 0
	jne	SHORT $LN7@erase@2
; Line 1332
	mov	BYTE PTR [eax+68], 1
; Line 1334
	push	esi
	mov	BYTE PTR [esi+68], 0
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Rrotate
; Line 1335
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR _this$[ebp]
$LN7@erase@2:
; Line 1337
	cmp	BYTE PTR [eax+69], 0
; Line 1339
	jne	SHORT $LN352@erase@2
; Line 1341
	mov	edx, DWORD PTR [eax+8]
	cmp	BYTE PTR [edx+68], 1
	jne	SHORT $LN4@erase@2
	mov	edx, DWORD PTR [eax]
	cmp	BYTE PTR [edx+68], 1
	jne	SHORT $LN4@erase@2
$LN353@erase@2:
; Line 1343
	mov	BYTE PTR [eax+68], 0
$LN352@erase@2:
; Line 1289
	mov	eax, DWORD PTR [ecx+4]
; Line 1344
	mov	ebx, esi
	mov	esi, DWORD PTR [esi+4]
	cmp	ebx, DWORD PTR [eax+4]
	jne	$LL18@erase@2
; Line 1289
	jmp	SHORT $LN16@erase@2
$LN4@erase@2:
; Line 1348
	mov	edx, DWORD PTR [eax]
	cmp	BYTE PTR [edx+68], 1
	jne	SHORT $LN2@erase@2
; Line 1350
	mov	edx, DWORD PTR [eax+8]
	mov	BYTE PTR [edx+68], 1
; Line 1352
	push	eax
	mov	BYTE PTR [eax+68], 0
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Lrotate
; Line 1353
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR _this$[ebp]
$LN2@erase@2:
; Line 1356
	mov	dl, BYTE PTR [esi+68]
	mov	BYTE PTR [eax+68], dl
; Line 1357
	mov	BYTE PTR [esi+68], 1
; Line 1358
	mov	eax, DWORD PTR [eax]
; Line 1359
	push	esi
	mov	BYTE PTR [eax+68], 1
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Rrotate
$LN16@erase@2:
; Line 1364
	mov	BYTE PTR [ebx+68], 1
$LN19@erase@2:
; Line 1368
	cmp	DWORD PTR [edi+60], 16			; 00000010H
	jb	SHORT $LN304@erase@2
	mov	ecx, DWORD PTR [edi+40]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN304@erase@2:
	xor	esi, esi
	mov	ebx, 15					; 0000000fH
	mov	DWORD PTR [edi+60], ebx
	mov	DWORD PTR [edi+56], esi
	mov	BYTE PTR [edi+40], 0
	cmp	DWORD PTR [edi+32], 16			; 00000010H
	jb	SHORT $LN326@erase@2
	mov	edx, DWORD PTR [edi+12]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN326@erase@2:
	mov	DWORD PTR [edi+32], ebx
	mov	DWORD PTR [edi+28], esi
; Line 1370
	push	edi
	mov	BYTE PTR [edi+12], 0
	call	??3@YAXPAX@Z				; operator delete
; Line 1372
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	add	esp, 4
	pop	edi
	cmp	eax, esi
	pop	esi
	pop	ebx
	jbe	SHORT $LN1@erase@2
; Line 1373
	dec	eax
	mov	DWORD PTR [ecx+8], eax
$LN1@erase@2:
; Line 1375
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1376
	mov	esp, ebp
	pop	ebp
	ret	8
$LN351@erase@2:
?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Erase
; Function compile flags: /Ogtp
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Erase, COMDAT
; _this$ = ecx
; Line 1610
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	push	esi
; Line 1611
	mov	esi, DWORD PTR __Rootnode$[ebp]
; Line 1612
	xor	ebx, ebx
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	edi, esi
	cmp	BYTE PTR [esi+69], bl
	jne	SHORT $LN1@Erase
$LL79@Erase:
; Line 1614
	mov	eax, DWORD PTR [edi+8]
	mov	ecx, DWORD PTR _this$[ebp]
	push	eax
	call	?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Erase
; Line 1617
	cmp	DWORD PTR [esi+60], 16			; 00000010H
	mov	edi, DWORD PTR [edi]
	jb	SHORT $LN41@Erase
	mov	ecx, DWORD PTR [esi+40]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN41@Erase:
	mov	DWORD PTR [esi+60], 15			; 0000000fH
	mov	DWORD PTR [esi+56], ebx
	mov	BYTE PTR [esi+40], bl
	cmp	DWORD PTR [esi+32], 16			; 00000010H
	jb	SHORT $LN63@Erase
	mov	edx, DWORD PTR [esi+12]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN63@Erase:
	mov	DWORD PTR [esi+32], 15			; 0000000fH
	mov	DWORD PTR [esi+28], ebx
; Line 1619
	push	esi
	mov	BYTE PTR [esi+12], bl
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	esi, edi
	cmp	BYTE PTR [edi+69], bl
	je	SHORT $LL79@Erase
$LN1@Erase:
	pop	edi
	pop	esi
	pop	ebx
; Line 1621
	mov	esp, ebp
	pop	ebp
	ret	4
?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtp
;	COMDAT ??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
__Cat$146813 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
; Line 469
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 471
	mov	eax, DWORD PTR __Cat$146813[ebp]
	mov	ecx, DWORD PTR __Al$[ebp]
	mov	edx, DWORD PTR __Dest$[ebp]
	push	eax
	mov	eax, DWORD PTR __Last$[ebp]
	push	0
	push	ecx
	mov	ecx, DWORD PTR __First$[ebp]
	push	edx
	push	eax
	push	ecx
	call	??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 24					; 00000018H
; Line 472
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Ogtp
;	COMDAT ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
__Cat$146859 = -4					; size = 1
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 704
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	esi, ecx
; Line 705
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN14@vector@3
	mov	ecx, DWORD PTR __Cat$146859[ebp]
	push	ecx
	mov	ecx, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [esi+12]
	push	edx
	push	ecx
	push	eax
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	edx, DWORD PTR [esi]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN14@vector@3:
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], 0
	pop	esi
; Line 706
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::clear
; Function compile flags: /Ogtp
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::clear, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 1410
	push	esi
	mov	esi, ecx
; Line 1415
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, esi
	call	?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Erase
; Line 1416
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+4], eax
; Line 1417
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax], eax
; Line 1418
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+8], eax
; Line 1419
	mov	DWORD PTR [esi+8], 0
	pop	esi
; Line 1420
	ret	0
?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::clear
_TEXT	ENDS
PUBLIC	??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$146920 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1322
	push	ebp
	mov	ebp, esp
; Line 1325
	mov	eax, DWORD PTR __Cat$146920[ebp]
	mov	edx, DWORD PTR __Last$[ebp]
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	0
	add	ecx, 12					; 0000000cH
	push	ecx
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	push	edx
	push	eax
	call	??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 24					; 00000018H
; Line 1326
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::erase
; Function compile flags: /Ogtp
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T146929 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@0@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 1379
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 1380
	mov	edx, DWORD PTR __Last$[ebp]
	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN115@erase@3
	cmp	edx, eax
	jne	SHORT $LN115@erase@3
; Line 1382
	mov	eax, DWORD PTR [eax+4]
	push	eax
	mov	ecx, esi
	call	?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Erase
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+4], eax
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax], eax
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [eax+8], eax
; Line 1383
	mov	ecx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [esi+8], 0
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	pop	esi
; Line 1391
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN115@erase@3:
; Line 1387
	cmp	ecx, edx
	je	SHORT $LN1@erase@3
$LL2@erase@3:
; Line 1388
	cmp	BYTE PTR [ecx+69], 0
	mov	edx, ecx
	jne	SHORT $LN77@erase@3
	mov	eax, DWORD PTR [ecx+8]
	cmp	BYTE PTR [eax+69], 0
	jne	SHORT $LN117@erase@3
	mov	ecx, eax
	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax+69], 0
	jne	SHORT $LN91@erase@3
	npad	5
$LL92@erase@3:
	mov	ecx, eax
	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax+69], 0
	je	SHORT $LL92@erase@3
$LN91@erase@3:
	mov	DWORD PTR __First$[ebp], ecx
	jmp	SHORT $LN77@erase@3
$LN117@erase@3:
	mov	eax, DWORD PTR [ecx+4]
	cmp	BYTE PTR [eax+69], 0
	jne	SHORT $LN75@erase@3
$LL76@erase@3:
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN75@erase@3
	mov	ecx, eax
	mov	DWORD PTR __First$[ebp], ecx
	mov	eax, DWORD PTR [eax+4]
	cmp	BYTE PTR [eax+69], 0
	je	SHORT $LL76@erase@3
$LN75@erase@3:
	mov	DWORD PTR __First$[ebp], eax
$LN77@erase@3:
	push	edx
	lea	eax, DWORD PTR $T146929[ebp]
	push	eax
	mov	ecx, esi
	call	?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::erase
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	jne	SHORT $LL2@erase@3
$LN1@erase@3:
; Line 1389
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	pop	esi
; Line 1391
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@0@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::erase
_TEXT	ENDS
PUBLIC	?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::reserve
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
xdata$x	SEGMENT
__catchsym$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z$0
__unwindtable$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z$2
__ehfuncinfo$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Ptr$127854 = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Cat$147396 = 8					; size = 1
__Cat$147365 = 8					; size = 1
__Count$ = 8						; size = 4
?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 746
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	esi, ecx
; Line 747
	mov	ebx, DWORD PTR __Count$[ebp]
	cmp	ebx, 153391689				; 09249249H
	jbe	SHORT $LN5@reserve@3
; Line 748
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN48@reserve@3:
$LN5@reserve@3:
; Line 749
	mov	ecx, DWORD PTR [esi+8]
	sub	ecx, DWORD PTR [esi]
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	eax, ebx
	jae	$LN3@reserve@3
; Line 751
	lea	edi, DWORD PTR [esi+12]
	push	ebx
	mov	ecx, edi
	call	?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate
; Line 754
	mov	ebx, DWORD PTR __Cat$147365[ebp]
	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [esi]
	push	ebx
	push	0
	push	edi
	push	eax
	push	ecx
	push	edx
	mov	DWORD PTR __Ptr$127854[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Line 760
	mov	ebx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [esi+4]
	sub	ecx, ebx
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	edi, edx
	shr	edi, 31					; 0000001fH
	add	esp, 24					; 00000018H
	add	edi, edx
; Line 761
	test	ebx, ebx
	je	SHORT $LN41@reserve@3
; Line 763
	mov	ecx, DWORD PTR __Cat$147396[ebp]
	push	ecx
	lea	eax, DWORD PTR [esi+12]
	push	eax
	mov	eax, DWORD PTR [esi+4]
	push	eax
	push	ebx
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Line 765
	mov	edx, DWORD PTR [esi]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN41@reserve@3:
; Line 769
	mov	eax, DWORD PTR __Count$[ebp]
	lea	ecx, DWORD PTR [eax*8]
	sub	ecx, eax
	mov	eax, DWORD PTR __Ptr$127854[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
; Line 770
	lea	ecx, DWORD PTR [edi*8]
	sub	ecx, edi
	mov	DWORD PTR [esi+8], edx
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR [esi+4], edx
; Line 771
	mov	DWORD PTR [esi], eax
$LN3@reserve@3:
; Line 773
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
__catch$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z$0:
; Line 756
	mov	eax, DWORD PTR __Ptr$127854[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 757
	push	0
	push	0
	call	__CxxThrowException@8
$LN49@reserve@3:
$LN47@reserve@3:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::reserve
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Tidy
; Function compile flags: /Ogtp
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T147426 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 1865
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 1866
	mov	eax, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR [eax]
	push	eax
	push	edx
	lea	eax, DWORD PTR $T147426[ebp]
	push	eax
	call	?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::erase
; Line 1867
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reserve
; Function compile flags: /Ogtp
;	COMDAT ?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1290
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 1291
	mov	ebx, DWORD PTR [ecx]
	push	esi
	mov	esi, DWORD PTR [ecx+4]
	sub	esi, ebx
	mov	eax, -1840700269			; 92492493H
	imul	esi
; Line 1292
	mov	eax, DWORD PTR __Count$[ebp]
	add	edx, esi
	sar	edx, 4
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
	mov	edx, 153391689				; 09249249H
	sub	edx, eax
	push	edi
	cmp	edx, esi
	jae	SHORT $LN4@Reserve@2
; Line 1293
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN34@Reserve@2:
$LN4@Reserve@2:
; Line 1294
	mov	edi, DWORD PTR [ecx+8]
	add	esi, eax
	sub	edi, ebx
	mov	eax, -1840700269			; 92492493H
	imul	edi
	add	edx, edi
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	cmp	esi, eax
	jbe	SHORT $LN1@Reserve@2
; Line 1297
	mov	edx, eax
	shr	edx, 1
	mov	edi, 153391689				; 09249249H
	sub	edi, edx
	cmp	edi, eax
	jae	SHORT $LN23@Reserve@2
	xor	eax, eax
	jmp	SHORT $LN24@Reserve@2
$LN23@Reserve@2:
	add	eax, edx
$LN24@Reserve@2:
	cmp	eax, esi
	jae	SHORT $LN20@Reserve@2
	mov	eax, esi
$LN20@Reserve@2:
	push	eax
	call	?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::reserve
$LN1@Reserve@2:
	pop	edi
	pop	esi
	pop	ebx
; Line 1298
	pop	ebp
	ret	4
$LN33@Reserve@2:
?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reserve
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T147678 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
; Line 790
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
; Line 791
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax]
	push	eax
	push	ecx
	lea	eax, DWORD PTR $T147678[ebp]
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::erase
; Line 792
	mov	ecx, DWORD PTR [esi+4]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::~_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >
__ehhandler$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >
PUBLIC	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$1
__ehfuncinfo$?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
$T148126 = -16						; size = 4
$T147909 = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T148166 = 8						; size = 4
$T147949 = 8						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 631
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	edi, ecx
; Line 632
	mov	ecx, DWORD PTR [edi+4]
	mov	esi, DWORD PTR __Val$[ebp]
	cmp	esi, ecx
	jae	SHORT $LN4@push_back@2
	mov	eax, DWORD PTR [edi]
	cmp	eax, esi
	ja	SHORT $LN4@push_back@2
; Line 634
	sub	esi, eax
	mov	eax, -1840700269			; 92492493H
	imul	esi
	add	edx, esi
	sar	edx, 4
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
; Line 635
	cmp	ecx, DWORD PTR [edi+8]
	jne	SHORT $LN3@push_back@2
; Line 636
	push	1
	mov	ecx, edi
	call	?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reserve
$LN3@push_back@2:
; Line 640
	mov	ecx, DWORD PTR [edi]
	lea	eax, DWORD PTR [esi*8]
	sub	eax, esi
	lea	eax, DWORD PTR [ecx+eax*4]
	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR $T147949[ebp], ecx
	mov	DWORD PTR $T147909[ebp], ecx
	xor	edx, edx
	mov	DWORD PTR __$EHRec$[ebp+8], edx
	cmp	ecx, edx
	je	SHORT $LN72@push_back@2
	push	eax
; Line 643
	jmp	SHORT $LN111@push_back@2
$LN4@push_back@2:
; Line 645
	cmp	ecx, DWORD PTR [edi+8]
	jne	SHORT $LN1@push_back@2
; Line 646
	push	1
	mov	ecx, edi
	call	?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reserve
$LN1@push_back@2:
; Line 650
	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR $T148166[ebp], ecx
	mov	DWORD PTR $T148126[ebp], ecx
	xor	edx, edx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	ecx, edx
	je	SHORT $LN72@push_back@2
	push	esi
$LN111@push_back@2:
	mov	DWORD PTR [ecx+20], 15			; 0000000fH
	mov	DWORD PTR [ecx+16], edx
	mov	BYTE PTR [ecx], dl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN72@push_back@2:
; Line 651
	add	DWORD PTR [edi+4], 28			; 0000001cH
; Line 653
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$0:
	mov	eax, DWORD PTR $T147949[ebp]
	push	eax
	mov	ecx, DWORD PTR $T147909[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$1:
	mov	eax, DWORD PTR $T148166[ebp]
	push	eax
	mov	ecx, DWORD PTR $T148126[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
PUBLIC	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
xdata$x	SEGMENT
__unwindtable$?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$1
__ehfuncinfo$?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
$T148604 = -16						; size = 4
$T148348 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Vptr$148601 = 8					; size = 4
$T148384 = 8						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 976
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	edi, ecx
; Line 977
	mov	ecx, DWORD PTR [edi+4]
	mov	esi, DWORD PTR __Val$[ebp]
	cmp	esi, ecx
	jae	SHORT $LN4@push_back@3
	mov	eax, DWORD PTR [edi]
	cmp	eax, esi
	ja	SHORT $LN4@push_back@3
; Line 979
	sub	esi, eax
	mov	eax, -1840700269			; 92492493H
	imul	esi
	add	edx, esi
	sar	edx, 4
	mov	esi, edx
	shr	esi, 31					; 0000001fH
	add	esi, edx
; Line 980
	cmp	ecx, DWORD PTR [edi+8]
	jne	SHORT $LN3@push_back@3
; Line 981
	push	1
	mov	ecx, edi
	call	?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reserve
$LN3@push_back@3:
; Line 985
	mov	ecx, DWORD PTR [edi]
	lea	eax, DWORD PTR [esi*8]
	sub	eax, esi
	lea	eax, DWORD PTR [ecx+eax*4]
	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR $T148384[ebp], ecx
	mov	DWORD PTR $T148348[ebp], ecx
	xor	edx, edx
	mov	DWORD PTR __$EHRec$[ebp+8], edx
	cmp	ecx, edx
	je	SHORT $LN66@push_back@3
	push	-1
	push	edx
	push	eax
; Line 988
	jmp	SHORT $LN101@push_back@3
$LN4@push_back@3:
; Line 990
	cmp	ecx, DWORD PTR [edi+8]
	jne	SHORT $LN1@push_back@3
; Line 991
	push	1
	mov	ecx, edi
	call	?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reserve
$LN1@push_back@3:
; Line 995
	mov	ecx, DWORD PTR [edi+4]
	mov	DWORD PTR __Vptr$148601[ebp], ecx
	mov	DWORD PTR $T148604[ebp], ecx
	xor	edx, edx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	ecx, edx
	je	SHORT $LN66@push_back@3
	push	-1
	push	edx
	push	esi
$LN101@push_back@3:
	mov	DWORD PTR [ecx+20], 15			; 0000000fH
	mov	DWORD PTR [ecx+16], edx
	mov	BYTE PTR [ecx], dl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN66@push_back@3:
; Line 996
	add	DWORD PTR [edi+4], 28			; 0000001cH
; Line 998
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$0:
	mov	eax, DWORD PTR $T148384[ebp]
	push	eax
	mov	ecx, DWORD PTR $T148348[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$1:
	mov	eax, DWORD PTR __Vptr$148601[ebp]
	push	eax
	mov	ecx, DWORD PTR $T148604[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
PUBLIC	??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@@std@@QAE@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@@std@@QAE@XZ$1
__ehfuncinfo$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
$T148778 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@@std@@QAE@XZ PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax]
	push	eax
	push	ecx
	lea	eax, DWORD PTR $T148778[ebp]
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::erase
	mov	ecx, DWORD PTR [esi+4]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@@std@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::~_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >
__ehhandler$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@@std@@QAE@XZ ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> > >
PUBLIC	_pArchiveNames$GSCopy$
PUBLIC	_scanmatch$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?scan_patches@@YA_NPADAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; scan_patches
EXTRN	__imp__sprintf:PROC
xdata$x	SEGMENT
__unwindtable$?scan_patches@@YA_NPADAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?scan_patches@@YA_NPADAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$0
__ehfuncinfo$?scan_patches@@YA_NPADAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?scan_patches@@YA_NPADAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
_TEXT	SEGMENT
_scanmatch$GSCopy$ = -52				; size = 4
_pArchiveNames$GSCopy$ = -48				; size = 4
$T120759 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_scanmatch$ = 8						; size = 4
_pArchiveNames$ = 12					; size = 4
?scan_patches@@YA_NPADAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z PROC ; scan_patches
; File c:\programovani\wow editor\test\src\editor\opengl.cpp
; Line 260
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?scan_patches@@YA_NPADAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	eax, DWORD PTR _scanmatch$[ebp]
	mov	ecx, DWORD PTR _pArchiveNames$[ebp]
; Line 263
	mov	edi, DWORD PTR __imp__sprintf
	mov	DWORD PTR _scanmatch$GSCopy$[ebp], eax
	mov	DWORD PTR _pArchiveNames$GSCopy$[ebp], ecx
	mov	esi, 1
	xor	ebx, ebx
	jmp	SHORT $LN6@scan_patch
$LL65@scan_patch:
	mov	eax, DWORD PTR _scanmatch$GSCopy$[ebp]
$LN6@scan_patch:
; Line 265
	cmp	esi, 1
	je	SHORT $LN3@scan_patch
; Line 267
	push	esi
	push	eax
	push	OFFSET $SG120753
	push	OFFSET ?path@@3PADA			; path
	call	edi
	add	esp, 16					; 00000010H
; Line 269
	jmp	SHORT $LN2@scan_patch
$LN3@scan_patch:
; Line 271
	push	eax
	push	OFFSET $SG120755
	push	OFFSET ?path@@3PADA			; path
	call	edi
	add	esp, 12					; 0000000cH
$LN2@scan_patch:
; Line 275
	push	OFFSET $SG120757
	push	OFFSET ?path@@3PADA			; path
	call	DWORD PTR __imp__fopen
	add	esp, 8
	cmp	eax, ebx
	je	SHORT $LN5@scan_patch
; Line 278
	push	eax
	call	DWORD PTR __imp__fclose
; Line 279
	mov	eax, OFFSET ?path@@3PADA		; path
	add	esp, 4
	mov	DWORD PTR $T120759[ebp+20], 15		; 0000000fH
	mov	DWORD PTR $T120759[ebp+16], ebx
	mov	BYTE PTR $T120759[ebp], bl
	lea	edx, DWORD PTR [eax+1]
$LL64@scan_patch:
	mov	cl, BYTE PTR [eax]
	inc	eax
	cmp	cl, bl
	jne	SHORT $LL64@scan_patch
	sub	eax, edx
	push	eax
	push	OFFSET ?path@@3PADA			; path
	lea	ecx, DWORD PTR $T120759[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	lea	edx, DWORD PTR $T120759[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], ebx
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T120759[ebp+20], 16		; 00000010H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	jb	SHORT $LN5@scan_patch
	mov	eax, DWORD PTR $T120759[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN5@scan_patch:
; Line 263
	inc	esi
	cmp	esi, 99					; 00000063H
	jle	$LL65@scan_patch
; Line 283
	mov	al, 1
; Line 284
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?scan_patches@@YA_NPADAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$0:
	lea	ecx, DWORD PTR $T120759[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?scan_patches@@YA_NPADAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?scan_patches@@YA_NPADAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?scan_patches@@YA_NPADAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ENDP ; scan_patches
PUBLIC	??1ConfigFile@@QAE@XZ				; ConfigFile::~ConfigFile
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ConfigFile@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ConfigFile@@QAE@XZ$2
__ehfuncinfo$??1ConfigFile@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1ConfigFile@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??1ConfigFile@@QAE@XZ
_TEXT	SEGMENT
$T149195 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ConfigFile@@QAE@XZ PROC				; ConfigFile::~ConfigFile, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1ConfigFile@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	esi, ecx
	mov	DWORD PTR _this$[ebp], esi
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [eax]
	push	eax
	push	ecx
	lea	eax, DWORD PTR $T149195[ebp]
	push	eax
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::erase
	mov	ecx, DWORD PTR [esi+4]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ConfigFile@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::~_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >
__ehhandler$??1ConfigFile@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1ConfigFile@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1ConfigFile@@QAE@XZ ENDP				; ConfigFile::~ConfigFile
PUBLIC	__$ArrayPad$
PUBLIC	?loadPath@@YADXZ				; loadPath
EXTRN	??BChameleon@@QBENXZ:PROC			; Chameleon::operator double
EXTRN	?Value@ConfigFile@@QBEABVChameleon@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z:PROC ; ConfigFile::Value
EXTRN	??0ConfigFile@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; ConfigFile::ConfigFile
xdata$x	SEGMENT
__ehfuncinfo$?loadPath@@YADXZ DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?loadPath@@YADXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?loadPath@@YADXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?loadPath@@YADXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?loadPath@@YADXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?loadPath@@YADXZ$1
	DD	02H
	DD	FLAT:__unwindfunclet$?loadPath@@YADXZ$2
	DD	03H
	DD	FLAT:__unwindfunclet$?loadPath@@YADXZ$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?loadPath@@YADXZ$6
; Function compile flags: /Ogtp
xdata$x	ENDS
_TEXT	SEGMENT
$T150008 = -124						; size = 4
_conf$ = -120						; size = 16
$T149233 = -101						; size = 1
$T120166 = -100						; size = 28
$T120170 = -72						; size = 28
$T120169 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?loadPath@@YADXZ PROC					; loadPath
; Line 74
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?loadPath@@YADXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 112				; 00000070H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 75
	push	11					; 0000000bH
	xor	ebx, ebx
	mov	esi, 15					; 0000000fH
	push	OFFSET $SG120167
	lea	ecx, DWORD PTR $T120166[ebp]
	mov	DWORD PTR $T120166[ebp+20], esi
	mov	DWORD PTR $T120166[ebp+16], ebx
	mov	BYTE PTR $T120166[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR $T120166[ebp]
	push	eax
	lea	ecx, DWORD PTR _conf$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], ebx
	call	??0ConfigFile@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; ConfigFile::ConfigFile
	cmp	DWORD PTR $T120166[ebp+20], 16		; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	jb	SHORT $LN47@loadPath
	mov	ecx, DWORD PTR $T120166[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN47@loadPath:
; Line 77
	push	4
	push	OFFSET $SG120172
	lea	ecx, DWORD PTR $T120169[ebp]
	mov	DWORD PTR $T120166[ebp+20], esi
	mov	DWORD PTR $T120166[ebp+16], ebx
	mov	BYTE PTR $T120166[ebp], bl
	mov	DWORD PTR $T120169[ebp+20], esi
	mov	DWORD PTR $T120169[ebp+16], ebx
	mov	BYTE PTR $T120169[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	push	11					; 0000000bH
	push	OFFSET $SG120173
	lea	ecx, DWORD PTR $T120170[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	DWORD PTR $T120170[ebp+20], esi
	mov	DWORD PTR $T120170[ebp+16], ebx
	mov	BYTE PTR $T120170[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	edx, DWORD PTR $T120169[ebp]
	push	edx
	lea	eax, DWORD PTR $T120170[ebp]
	push	eax
	lea	ecx, DWORD PTR _conf$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	call	?Value@ConfigFile@@QBEABVChameleon@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; ConfigFile::Value
	mov	ecx, eax
	call	??BChameleon@@QBENXZ			; Chameleon::operator double
	call	__ftol2_sse_excpt
	cmp	DWORD PTR $T120170[ebp+20], 16		; 00000010H
	mov	BYTE PTR $T149233[ebp], al
	jb	SHORT $LN129@loadPath
	mov	ecx, DWORD PTR $T120170[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN129@loadPath:
	cmp	DWORD PTR $T120169[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T120170[ebp+20], esi
	mov	DWORD PTR $T120170[ebp+16], ebx
	mov	BYTE PTR $T120170[ebp], bl
	jb	SHORT $LN151@loadPath
	mov	edx, DWORD PTR $T120169[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN151@loadPath:
	mov	DWORD PTR $T120169[ebp+20], esi
	mov	DWORD PTR $T120169[ebp+16], ebx
	mov	BYTE PTR $T120169[ebp], bl
	mov	eax, DWORD PTR _conf$[ebp+4]
	mov	ecx, DWORD PTR [eax]
	push	eax
	push	ecx
	lea	eax, DWORD PTR $T150008[ebp]
	push	eax
	lea	ecx, DWORD PTR _conf$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	call	?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::erase
	mov	ecx, DWORD PTR _conf$[ebp+4]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	mov	al, BYTE PTR $T149233[ebp]
	add	esp, 4
; Line 78
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?loadPath@@YADXZ$0:
	lea	ecx, DWORD PTR $T120166[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?loadPath@@YADXZ$1:
	lea	ecx, DWORD PTR _conf$[ebp]
	jmp	??1ConfigFile@@QAE@XZ
__unwindfunclet$?loadPath@@YADXZ$2:
	lea	ecx, DWORD PTR $T120169[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?loadPath@@YADXZ$3:
	lea	ecx, DWORD PTR $T120170[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?loadPath@@YADXZ$6:
	lea	ecx, DWORD PTR _conf$[ebp]
	jmp	??1?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::~_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >
__ehhandler$?loadPath@@YADXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-124]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?loadPath@@YADXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?loadPath@@YADXZ ENDP					; loadPath
PUBLIC	__$ArrayPad$
PUBLIC	?loadGameVersion@@YAHXZ				; loadGameVersion
xdata$x	SEGMENT
__ehfuncinfo$?loadGameVersion@@YAHXZ DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?loadGameVersion@@YAHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?loadGameVersion@@YAHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?loadGameVersion@@YAHXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?loadGameVersion@@YAHXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?loadGameVersion@@YAHXZ$1
	DD	02H
	DD	FLAT:__unwindfunclet$?loadGameVersion@@YAHXZ$2
	DD	03H
	DD	FLAT:__unwindfunclet$?loadGameVersion@@YAHXZ$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?loadGameVersion@@YAHXZ$6
; Function compile flags: /Ogtp
xdata$x	ENDS
_TEXT	SEGMENT
$T150816 = -120						; size = 4
_conf$ = -116						; size = 16
$T120180 = -100						; size = 28
$T120181 = -72						; size = 28
$T120177 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?loadGameVersion@@YAHXZ PROC				; loadGameVersion
; Line 84
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?loadGameVersion@@YAHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 108				; 0000006cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 85
	push	11					; 0000000bH
	xor	ebx, ebx
	mov	esi, 15					; 0000000fH
	push	OFFSET $SG120178
	lea	ecx, DWORD PTR $T120177[ebp]
	mov	DWORD PTR $T120177[ebp+20], esi
	mov	DWORD PTR $T120177[ebp+16], ebx
	mov	BYTE PTR $T120177[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR $T120177[ebp]
	push	eax
	lea	ecx, DWORD PTR _conf$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], ebx
	call	??0ConfigFile@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; ConfigFile::ConfigFile
	cmp	DWORD PTR $T120177[ebp+20], 16		; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	jb	SHORT $LN47@loadGameVe
	mov	ecx, DWORD PTR $T120177[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN47@loadGameVe:
; Line 87
	push	11					; 0000000bH
	push	OFFSET $SG120183
	lea	ecx, DWORD PTR $T120180[ebp]
	mov	DWORD PTR $T120177[ebp+20], esi
	mov	DWORD PTR $T120177[ebp+16], ebx
	mov	BYTE PTR $T120177[ebp], bl
	mov	DWORD PTR $T120180[ebp+20], esi
	mov	DWORD PTR $T120180[ebp+16], ebx
	mov	BYTE PTR $T120180[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	push	11					; 0000000bH
	push	OFFSET $SG120184
	lea	ecx, DWORD PTR $T120181[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	DWORD PTR $T120181[ebp+20], esi
	mov	DWORD PTR $T120181[ebp+16], ebx
	mov	BYTE PTR $T120181[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	edx, DWORD PTR $T120180[ebp]
	push	edx
	lea	eax, DWORD PTR $T120181[ebp]
	push	eax
	lea	ecx, DWORD PTR _conf$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	call	?Value@ConfigFile@@QBEABVChameleon@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; ConfigFile::Value
	mov	ecx, eax
	call	??BChameleon@@QBENXZ			; Chameleon::operator double
	call	__ftol2_sse_excpt
	cmp	DWORD PTR $T120181[ebp+20], 16		; 00000010H
	mov	edi, eax
	jb	SHORT $LN129@loadGameVe
	mov	ecx, DWORD PTR $T120181[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN129@loadGameVe:
	cmp	DWORD PTR $T120180[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T120181[ebp+20], esi
	mov	DWORD PTR $T120181[ebp+16], ebx
	mov	BYTE PTR $T120181[ebp], bl
	jb	SHORT $LN151@loadGameVe
	mov	edx, DWORD PTR $T120180[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN151@loadGameVe:
	mov	DWORD PTR $T120180[ebp+20], esi
	mov	DWORD PTR $T120180[ebp+16], ebx
	mov	BYTE PTR $T120180[ebp], bl
	mov	eax, DWORD PTR _conf$[ebp+4]
	mov	ecx, DWORD PTR [eax]
	push	eax
	push	ecx
	lea	eax, DWORD PTR $T150816[ebp]
	push	eax
	lea	ecx, DWORD PTR _conf$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	call	?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::erase
	mov	ecx, DWORD PTR _conf$[ebp+4]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	eax, edi
; Line 88
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?loadGameVersion@@YAHXZ$0:
	lea	ecx, DWORD PTR $T120177[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?loadGameVersion@@YAHXZ$1:
	lea	ecx, DWORD PTR _conf$[ebp]
	jmp	??1ConfigFile@@QAE@XZ
__unwindfunclet$?loadGameVersion@@YAHXZ$2:
	lea	ecx, DWORD PTR $T120180[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?loadGameVersion@@YAHXZ$3:
	lea	ecx, DWORD PTR $T120181[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?loadGameVersion@@YAHXZ$6:
	lea	ecx, DWORD PTR _conf$[ebp]
	jmp	??1?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::~_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >
__ehhandler$?loadGameVersion@@YAHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-124]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?loadGameVersion@@YAHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?loadGameVersion@@YAHXZ ENDP				; loadGameVersion
PUBLIC	__$ArrayPad$
PUBLIC	?loadLanguage@@YAHXZ				; loadLanguage
xdata$x	SEGMENT
__ehfuncinfo$?loadLanguage@@YAHXZ DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?loadLanguage@@YAHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?loadLanguage@@YAHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?loadLanguage@@YAHXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?loadLanguage@@YAHXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?loadLanguage@@YAHXZ$1
	DD	02H
	DD	FLAT:__unwindfunclet$?loadLanguage@@YAHXZ$2
	DD	03H
	DD	FLAT:__unwindfunclet$?loadLanguage@@YAHXZ$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?loadLanguage@@YAHXZ$6
; Function compile flags: /Ogtp
xdata$x	ENDS
_TEXT	SEGMENT
$T151657 = -120						; size = 4
_conf$ = -116						; size = 16
$T120191 = -100						; size = 28
$T120192 = -72						; size = 28
$T120188 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?loadLanguage@@YAHXZ PROC				; loadLanguage
; Line 94
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?loadLanguage@@YAHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 108				; 0000006cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 95
	push	11					; 0000000bH
	xor	ebx, ebx
	mov	esi, 15					; 0000000fH
	push	OFFSET $SG120189
	lea	ecx, DWORD PTR $T120188[ebp]
	mov	DWORD PTR $T120188[ebp+20], esi
	mov	DWORD PTR $T120188[ebp+16], ebx
	mov	BYTE PTR $T120188[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR $T120188[ebp]
	push	eax
	lea	ecx, DWORD PTR _conf$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], ebx
	call	??0ConfigFile@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; ConfigFile::ConfigFile
	cmp	DWORD PTR $T120188[ebp+20], 16		; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	jb	SHORT $LN47@loadLangua
	mov	ecx, DWORD PTR $T120188[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN47@loadLangua:
; Line 97
	push	8
	push	OFFSET $SG120194
	lea	ecx, DWORD PTR $T120191[ebp]
	mov	DWORD PTR $T120188[ebp+20], esi
	mov	DWORD PTR $T120188[ebp+16], ebx
	mov	BYTE PTR $T120188[ebp], bl
	mov	DWORD PTR $T120191[ebp+20], esi
	mov	DWORD PTR $T120191[ebp+16], ebx
	mov	BYTE PTR $T120191[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	push	esi
	push	OFFSET $SG120195
	lea	ecx, DWORD PTR $T120192[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	DWORD PTR $T120192[ebp+20], esi
	mov	DWORD PTR $T120192[ebp+16], ebx
	mov	BYTE PTR $T120192[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	edx, DWORD PTR $T120191[ebp]
	push	edx
	lea	eax, DWORD PTR $T120192[ebp]
	push	eax
	lea	ecx, DWORD PTR _conf$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	call	?Value@ConfigFile@@QBEABVChameleon@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; ConfigFile::Value
	mov	ecx, eax
	call	??BChameleon@@QBENXZ			; Chameleon::operator double
	call	__ftol2_sse_excpt
	cmp	DWORD PTR $T120192[ebp+20], 16		; 00000010H
	mov	edi, eax
	jb	SHORT $LN129@loadLangua
	mov	ecx, DWORD PTR $T120192[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN129@loadLangua:
	cmp	DWORD PTR $T120191[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T120192[ebp+20], esi
	mov	DWORD PTR $T120192[ebp+16], ebx
	mov	BYTE PTR $T120192[ebp], bl
	jb	SHORT $LN151@loadLangua
	mov	edx, DWORD PTR $T120191[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN151@loadLangua:
	mov	DWORD PTR $T120191[ebp+20], esi
	mov	DWORD PTR $T120191[ebp+16], ebx
	mov	BYTE PTR $T120191[ebp], bl
	mov	eax, DWORD PTR _conf$[ebp+4]
	mov	ecx, DWORD PTR [eax]
	push	eax
	push	ecx
	lea	eax, DWORD PTR $T151657[ebp]
	push	eax
	lea	ecx, DWORD PTR _conf$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	call	?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::erase
	mov	ecx, DWORD PTR _conf$[ebp+4]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	eax, edi
; Line 98
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?loadLanguage@@YAHXZ$0:
	lea	ecx, DWORD PTR $T120188[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?loadLanguage@@YAHXZ$1:
	lea	ecx, DWORD PTR _conf$[ebp]
	jmp	??1ConfigFile@@QAE@XZ
__unwindfunclet$?loadLanguage@@YAHXZ$2:
	lea	ecx, DWORD PTR $T120191[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?loadLanguage@@YAHXZ$3:
	lea	ecx, DWORD PTR $T120192[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?loadLanguage@@YAHXZ$6:
	lea	ecx, DWORD PTR _conf$[ebp]
	jmp	??1?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::~_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >
__ehhandler$?loadLanguage@@YAHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-124]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?loadLanguage@@YAHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?loadLanguage@@YAHXZ ENDP				; loadLanguage
PUBLIC	__$ArrayPad$
PUBLIC	?loadExpansion@@YAHXZ				; loadExpansion
xdata$x	SEGMENT
__ehfuncinfo$?loadExpansion@@YAHXZ DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?loadExpansion@@YAHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?loadExpansion@@YAHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?loadExpansion@@YAHXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?loadExpansion@@YAHXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?loadExpansion@@YAHXZ$1
	DD	02H
	DD	FLAT:__unwindfunclet$?loadExpansion@@YAHXZ$2
	DD	03H
	DD	FLAT:__unwindfunclet$?loadExpansion@@YAHXZ$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?loadExpansion@@YAHXZ$6
; Function compile flags: /Ogtp
xdata$x	ENDS
_TEXT	SEGMENT
$T152442 = -120						; size = 4
_conf$ = -116						; size = 16
$T120154 = -100						; size = 28
$T120155 = -72						; size = 28
$T120151 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?loadExpansion@@YAHXZ PROC				; loadExpansion
; Line 64
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?loadExpansion@@YAHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 108				; 0000006cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 65
	push	11					; 0000000bH
	xor	ebx, ebx
	mov	esi, 15					; 0000000fH
	push	OFFSET $SG120152
	lea	ecx, DWORD PTR $T120151[ebp]
	mov	DWORD PTR $T120151[ebp+20], esi
	mov	DWORD PTR $T120151[ebp+16], ebx
	mov	BYTE PTR $T120151[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR $T120151[ebp]
	push	eax
	lea	ecx, DWORD PTR _conf$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], ebx
	call	??0ConfigFile@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; ConfigFile::ConfigFile
	cmp	DWORD PTR $T120151[ebp+20], 16		; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	jb	SHORT $LN47@loadExpans
	mov	ecx, DWORD PTR $T120151[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN47@loadExpans:
; Line 67
	push	9
	push	OFFSET $SG120157
	lea	ecx, DWORD PTR $T120154[ebp]
	mov	DWORD PTR $T120151[ebp+20], esi
	mov	DWORD PTR $T120151[ebp+16], ebx
	mov	BYTE PTR $T120151[ebp], bl
	mov	DWORD PTR $T120154[ebp+20], esi
	mov	DWORD PTR $T120154[ebp+16], ebx
	mov	BYTE PTR $T120154[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	push	16					; 00000010H
	push	OFFSET $SG120158
	lea	ecx, DWORD PTR $T120155[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	DWORD PTR $T120155[ebp+20], esi
	mov	DWORD PTR $T120155[ebp+16], ebx
	mov	BYTE PTR $T120155[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	edx, DWORD PTR $T120154[ebp]
	push	edx
	lea	eax, DWORD PTR $T120155[ebp]
	push	eax
	lea	ecx, DWORD PTR _conf$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	call	?Value@ConfigFile@@QBEABVChameleon@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; ConfigFile::Value
	mov	ecx, eax
	call	??BChameleon@@QBENXZ			; Chameleon::operator double
	call	__ftol2_sse_excpt
	cmp	DWORD PTR $T120155[ebp+20], 16		; 00000010H
	mov	edi, eax
	jb	SHORT $LN129@loadExpans
	mov	ecx, DWORD PTR $T120155[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN129@loadExpans:
	cmp	DWORD PTR $T120154[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T120155[ebp+20], esi
	mov	DWORD PTR $T120155[ebp+16], ebx
	mov	BYTE PTR $T120155[ebp], bl
	jb	SHORT $LN151@loadExpans
	mov	edx, DWORD PTR $T120154[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN151@loadExpans:
	mov	DWORD PTR $T120154[ebp+20], esi
	mov	DWORD PTR $T120154[ebp+16], ebx
	mov	BYTE PTR $T120154[ebp], bl
	mov	eax, DWORD PTR _conf$[ebp+4]
	mov	ecx, DWORD PTR [eax]
	push	eax
	push	ecx
	lea	eax, DWORD PTR $T152442[ebp]
	push	eax
	lea	ecx, DWORD PTR _conf$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	call	?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::erase
	mov	ecx, DWORD PTR _conf$[ebp+4]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	eax, edi
; Line 68
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?loadExpansion@@YAHXZ$0:
	lea	ecx, DWORD PTR $T120151[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?loadExpansion@@YAHXZ$1:
	lea	ecx, DWORD PTR _conf$[ebp]
	jmp	??1ConfigFile@@QAE@XZ
__unwindfunclet$?loadExpansion@@YAHXZ$2:
	lea	ecx, DWORD PTR $T120154[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?loadExpansion@@YAHXZ$3:
	lea	ecx, DWORD PTR $T120155[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?loadExpansion@@YAHXZ$6:
	lea	ecx, DWORD PTR _conf$[ebp]
	jmp	??1?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VChameleon@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >::~_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,Chameleon,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,Chameleon> >,0> >
__ehhandler$?loadExpansion@@YAHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-124]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?loadExpansion@@YAHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?loadExpansion@@YAHXZ ENDP				; loadExpansion
PUBLIC	?checkConfig2@@YAHXZ				; checkConfig2
; Function compile flags: /Ogtp
_TEXT	SEGMENT
?checkConfig2@@YAHXZ PROC				; checkConfig2
; Line 107
	push	OFFSET $SG120199
	push	OFFSET $SG120200
	call	DWORD PTR __imp__fopen
	add	esp, 8
; Line 109
	test	eax, eax
	je	$LN1@checkConfi@2
; Line 111
	call	?loadExpansion@@YAHXZ			; loadExpansion
	cmp	eax, 1
	je	SHORT $LN6@checkConfi@2
	call	?loadExpansion@@YAHXZ			; loadExpansion
	cmp	eax, 2
	je	SHORT $LN6@checkConfi@2
	call	?loadExpansion@@YAHXZ			; loadExpansion
	cmp	eax, 3
	je	SHORT $LN6@checkConfi@2
; Line 113
	push	OFFSET $SG120203
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 4
; Line 114
	push	1
	call	DWORD PTR __imp__exit
$LN11@checkConfi@2:
$LN6@checkConfi@2:
; Line 118
	call	?loadExpansion@@YAHXZ			; loadExpansion
	push	eax
	push	OFFSET $SG120205
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 8
; Line 128
	call	?loadGameVersion@@YAHXZ			; loadGameVersion
	cmp	eax, 1
	je	SHORT $LN4@checkConfi@2
	call	?loadGameVersion@@YAHXZ			; loadGameVersion
	cmp	eax, 2
	je	SHORT $LN4@checkConfi@2
	call	?loadGameVersion@@YAHXZ			; loadGameVersion
	cmp	eax, 3
	je	SHORT $LN4@checkConfi@2
	call	?loadGameVersion@@YAHXZ			; loadGameVersion
	cmp	eax, 4
	je	SHORT $LN4@checkConfi@2
	call	?loadGameVersion@@YAHXZ			; loadGameVersion
	cmp	eax, 5
	je	SHORT $LN4@checkConfi@2
	call	?loadGameVersion@@YAHXZ			; loadGameVersion
	cmp	eax, 6
	je	SHORT $LN4@checkConfi@2
; Line 130
	push	OFFSET $SG120207
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 4
; Line 131
	push	1
	call	DWORD PTR __imp__exit
$LN12@checkConfi@2:
$LN4@checkConfi@2:
; Line 135
	call	?loadGameVersion@@YAHXZ			; loadGameVersion
	push	eax
	push	OFFSET $SG120209
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 8
; Line 138
	call	?loadLanguage@@YAHXZ			; loadLanguage
	cmp	eax, 1
	je	SHORT $LN2@checkConfi@2
	call	?loadLanguage@@YAHXZ			; loadLanguage
	cmp	eax, 2
	je	SHORT $LN2@checkConfi@2
	call	?loadLanguage@@YAHXZ			; loadLanguage
	cmp	eax, 3
	je	SHORT $LN2@checkConfi@2
; Line 140
	push	OFFSET $SG120211
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 4
; Line 141
	push	1
	call	DWORD PTR __imp__exit
$LN13@checkConfi@2:
$LN2@checkConfi@2:
; Line 145
	call	?loadLanguage@@YAHXZ			; loadLanguage
	push	eax
	push	OFFSET $SG120213
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 8
$LN1@checkConfi@2:
; Line 148
	xor	eax, eax
; Line 149
	ret	0
$LN10@checkConfi@2:
?checkConfig2@@YAHXZ ENDP				; checkConfig2
_TEXT	ENDS
PUBLIC	_pArchiveNames$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; fillArchiveNameVector
EXTRN	__imp_?_Orphan_all@_Container_base0@std@@QAEXXZ:PROC
xdata$x	SEGMENT
__ehfuncinfo$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z DD 019930522H
	DD	05dH
	DD	FLAT:__unwindtable$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$4
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$5
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$6
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$7
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$8
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$10
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$11
	DD	0bH
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$12
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$13
	DD	0dH
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$14
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$15
	DD	0fH
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$16
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$17
	DD	011H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$18
	DD	012H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$19
	DD	013H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$20
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$21
	DD	015H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$22
	DD	016H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$23
	DD	017H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$24
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$25
	DD	019H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$26
	DD	01aH
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$27
	DD	01bH
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$28
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$29
	DD	01dH
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$30
	DD	01eH
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$31
	DD	01fH
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$32
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$33
	DD	021H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$34
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$35
	DD	023H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$36
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$37
	DD	025H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$38
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$39
	DD	027H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$40
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$41
	DD	029H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$42
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$43
	DD	02bH
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$44
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$45
	DD	02dH
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$46
	DD	02eH
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$47
	DD	02fH
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$48
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$49
	DD	031H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$50
	DD	032H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$51
	DD	033H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$52
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$53
	DD	035H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$54
	DD	036H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$55
	DD	037H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$56
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$57
	DD	039H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$58
	DD	03aH
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$59
	DD	03bH
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$60
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$61
	DD	03dH
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$62
	DD	03eH
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$63
	DD	03fH
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$64
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$65
	DD	041H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$66
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$67
	DD	043H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$68
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$69
	DD	045H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$70
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$71
	DD	047H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$72
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$73
	DD	049H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$74
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$75
	DD	04bH
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$76
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$77
	DD	04dH
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$78
	DD	04eH
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$79
	DD	04fH
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$80
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$81
	DD	051H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$82
	DD	052H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$83
	DD	053H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$84
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$85
	DD	055H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$86
	DD	056H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$87
	DD	057H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$88
	DD	01H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$89
	DD	059H
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$90
	DD	05aH
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$91
	DD	05bH
	DD	FLAT:__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$92
; Function compile flags: /Ogtp
xdata$x	ENDS
_TEXT	SEGMENT
_locales$ = -2428					; size = 16
_languageLocales$ = -2412				; size = 16
_foundOne$ = -2393					; size = 1
__Cat$163236 = -2392					; size = 1
__Cat$163173 = -2392					; size = 1
__Cat$163110 = -2392					; size = 1
__Cat$163047 = -2392					; size = 1
__Cat$162833 = -2392					; size = 1
__Cat$162776 = -2392					; size = 1
_pArchiveNames$GSCopy$ = -2392				; size = 4
_status$120966 = -2388					; size = 48
$T121106 = -2368					; size = 28
$T121108 = -2340					; size = 28
$T121109 = -2312					; size = 28
$T121195 = -2284					; size = 28
$T121100 = -2256					; size = 28
$T121114 = -2228					; size = 28
$T121101 = -2200					; size = 28
$T121183 = -2172					; size = 28
$T121102 = -2144					; size = 28
$T121129 = -2116					; size = 28
$T121103 = -2088					; size = 28
$T121201 = -2060					; size = 28
$T121094 = -2032					; size = 28
$T121189 = -2004					; size = 28
$T121095 = -1976					; size = 28
$T121169 = -1948					; size = 28
$T121096 = -1920					; size = 28
$T121133 = -1892					; size = 28
$T121097 = -1864					; size = 28
$T121123 = -1836					; size = 28
$T120998 = -1808					; size = 28
$T121199 = -1780					; size = 28
$T121025 = -1752					; size = 28
$T121193 = -1724					; size = 28
$T121090 = -1696					; size = 28
$T121187 = -1668					; size = 28
$T121091 = -1640					; size = 28
$T121181 = -1612					; size = 28
$T120996 = -1584					; size = 28
$T121175 = -1556					; size = 28
$T120993 = -1528					; size = 28
$T121107 = -1500					; size = 28
$T120990 = -1472					; size = 28
$T121132 = -1444					; size = 28
$T120987 = -1416					; size = 28
$T121134 = -1388					; size = 28
$T121155 = -1360					; size = 28
$T121126 = -1332					; size = 28
$T121156 = -1304					; size = 28
$T121120 = -1276					; size = 28
$T121157 = -1248					; size = 28
$T121198 = -1220					; size = 28
$T121158 = -1192					; size = 28
$T121200 = -1164					; size = 28
$T121149 = -1136					; size = 28
$T121192 = -1108					; size = 28
$T121150 = -1080					; size = 28
$T121194 = -1052					; size = 28
$T121151 = -1024					; size = 28
$T121186 = -996						; size = 28
$T121152 = -968						; size = 28
$T121188 = -940						; size = 28
$T121143 = -912						; size = 28
$T121180 = -884						; size = 28
$T121144 = -856						; size = 28
$T121182 = -828						; size = 28
$T121145 = -800						; size = 28
$T121178 = -772						; size = 28
$T121146 = -744						; size = 28
$T121172 = -716						; size = 28
$T121137 = -688						; size = 28
$T121166 = -660						; size = 28
$T121138 = -632						; size = 28
$T121163 = -604						; size = 28
$T121139 = -576						; size = 28
$T121131 = -548						; size = 28
$T121140 = -520						; size = 28
$T121117 = -492						; size = 28
$T120992 = -464						; size = 28
$T121177 = -436						; size = 28
$T120989 = -408						; size = 28
$T121116 = -380						; size = 28
$T120986 = -352						; size = 28
$T121171 = -324						; size = 28
$T121128 = -296						; size = 28
$T121165 = -268						; size = 28
$T121125 = -240						; size = 28
$T121174 = -212						; size = 28
$T121122 = -184						; size = 28
$T121168 = -156						; size = 28
$T121119 = -128						; size = 28
$T121113 = -100						; size = 28
$T121162 = -72						; size = 28
_localePath$120938 = -72				; size = 28
$T120995 = -44						; size = 28
$T120784 = -44						; size = 28
$T120782 = -44						; size = 28
$T120780 = -44						; size = 28
$T120778 = -44						; size = 28
$T120776 = -44						; size = 28
$T120774 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pArchiveNames$ = 8					; size = 4
?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z PROC ; fillArchiveNameVector
; Line 287
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 2416				; 00000970H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	eax, DWORD PTR _pArchiveNames$[ebp]
; Line 288
	xor	ebx, ebx
; Line 313
	mov	DWORD PTR _pArchiveNames$GSCopy$[ebp], eax
	cmp	BYTE PTR ?hasInputPath@@3_NA, bl	; hasInputPath
	jne	SHORT $LN21@fillArchiv
; Line 289
	call	?getGamePath@@YAXXZ			; getGamePath
$LN21@fillArchiv:
; Line 291
	mov	DWORD PTR _locales$[ebp], ebx
	mov	DWORD PTR _locales$[ebp+4], ebx
	mov	DWORD PTR _locales$[ebp+8], ebx
	mov	DWORD PTR __$EHRec$[ebp+8], ebx
	mov	DWORD PTR _languageLocales$[ebp], ebx
	mov	DWORD PTR _languageLocales$[ebp+4], ebx
	mov	DWORD PTR _languageLocales$[ebp+8], ebx
; Line 293
	push	4
	mov	esi, 15					; 0000000fH
	push	OFFSET $SG120775
	lea	ecx, DWORD PTR $T120774[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR $T120774[ebp+20], esi
	mov	DWORD PTR $T120774[ebp+16], ebx
	mov	BYTE PTR $T120774[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	ecx, DWORD PTR $T120774[ebp]
	push	ecx
	lea	ecx, DWORD PTR _languageLocales$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	edi, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T120774[ebp+20], edi
	jb	SHORT $LN173@fillArchiv
	mov	edx, DWORD PTR $T120774[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN173@fillArchiv:
; Line 294
	push	4
	push	OFFSET $SG120777
	lea	ecx, DWORD PTR $T120776[ebp]
	mov	DWORD PTR $T120776[ebp+20], esi
	mov	DWORD PTR $T120776[ebp+16], ebx
	mov	BYTE PTR $T120776[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR $T120776[ebp]
	push	eax
	lea	ecx, DWORD PTR _languageLocales$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T120776[ebp+20], edi
	jb	SHORT $LN225@fillArchiv
	mov	ecx, DWORD PTR $T120776[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN225@fillArchiv:
; Line 295
	push	4
	push	OFFSET $SG120779
	lea	ecx, DWORD PTR $T120778[ebp]
	mov	DWORD PTR $T120778[ebp+20], esi
	mov	DWORD PTR $T120778[ebp+16], ebx
	mov	BYTE PTR $T120778[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	edx, DWORD PTR $T120778[ebp]
	push	edx
	lea	ecx, DWORD PTR _languageLocales$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T120778[ebp+20], edi
	jb	SHORT $LN277@fillArchiv
	mov	eax, DWORD PTR $T120778[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN277@fillArchiv:
; Line 296
	push	4
	push	OFFSET $SG120781
	lea	ecx, DWORD PTR $T120780[ebp]
	mov	DWORD PTR $T120780[ebp+20], esi
	mov	DWORD PTR $T120780[ebp+16], ebx
	mov	BYTE PTR $T120780[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	ecx, DWORD PTR $T120780[ebp]
	push	ecx
	lea	ecx, DWORD PTR _languageLocales$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T120780[ebp+20], edi
	jb	SHORT $LN329@fillArchiv
	mov	edx, DWORD PTR $T120780[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN329@fillArchiv:
; Line 297
	push	4
	push	OFFSET $SG120783
	lea	ecx, DWORD PTR $T120782[ebp]
	mov	DWORD PTR $T120782[ebp+20], esi
	mov	DWORD PTR $T120782[ebp+16], ebx
	mov	BYTE PTR $T120782[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR $T120782[ebp]
	push	eax
	lea	ecx, DWORD PTR _languageLocales$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T120782[ebp+20], edi
	jb	SHORT $LN381@fillArchiv
	mov	ecx, DWORD PTR $T120782[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN381@fillArchiv:
; Line 298
	push	4
	push	OFFSET $SG120785
	lea	ecx, DWORD PTR $T120784[ebp]
	mov	DWORD PTR $T120784[ebp+20], esi
	mov	DWORD PTR $T120784[ebp+16], ebx
	mov	BYTE PTR $T120784[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	edx, DWORD PTR $T120784[ebp]
	push	edx
	lea	ecx, DWORD PTR _languageLocales$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T120784[ebp+20], edi
	jb	SHORT $LN433@fillArchiv
	mov	eax, DWORD PTR $T120784[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN433@fillArchiv:
; Line 300
	mov	edi, DWORD PTR _languageLocales$[ebp]
	cmp	edi, DWORD PTR _languageLocales$[ebp+4]
	je	$LN18@fillArchiv
	npad	3
$LL455@fillArchiv:
; Line 302
	push	edi
	lea	ecx, DWORD PTR _localePath$120938[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
; Line 304
	cmp	DWORD PTR _localePath$120938[ebp+20], 16 ; 00000010H
	mov	eax, DWORD PTR _localePath$120938[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	jae	SHORT $LN483@fillArchiv
	lea	eax, DWORD PTR _localePath$120938[ebp]
$LN483@fillArchiv:
	lea	edx, DWORD PTR _status$120966[ebp]
	push	edx
	push	eax
	call	DWORD PTR __imp___stat64i32
	add	esp, 8
	test	eax, eax
	je	SHORT $LN17@fillArchiv
; Line 305
	cmp	DWORD PTR _localePath$120938[ebp+20], 16 ; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN19@fillArchiv
	mov	eax, DWORD PTR _localePath$120938[ebp]
	push	eax
	jmp	SHORT $LN3268@fillArchiv
$LN17@fillArchiv:
; Line 306
	test	DWORD PTR _status$120966[ebp+6], 16384	; 00004000H
	jne	SHORT $LN536@fillArchiv
; Line 307
	cmp	DWORD PTR _localePath$120938[ebp+20], 16 ; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN19@fillArchiv
	mov	ecx, DWORD PTR _localePath$120938[ebp]
	push	ecx
	jmp	SHORT $LN3268@fillArchiv
; Line 308
$LN536@fillArchiv:
	cmp	DWORD PTR [edi+20], 16			; 00000010H
	jb	SHORT $LN543@fillArchiv
	mov	eax, DWORD PTR [edi]
	jmp	SHORT $LN544@fillArchiv
$LN543@fillArchiv:
	mov	eax, edi
$LN544@fillArchiv:
	push	eax
	push	OFFSET $SG120969
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 8
; Line 309
	push	edi
	lea	ecx, DWORD PTR _locales$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
; Line 310
	cmp	DWORD PTR _localePath$120938[ebp+20], 16 ; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN19@fillArchiv
	mov	edx, DWORD PTR _localePath$120938[ebp]
	push	edx
$LN3268@fillArchiv:
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN19@fillArchiv:
; Line 300
	add	edi, 28					; 0000001cH
	cmp	edi, DWORD PTR _languageLocales$[ebp+4]
	jne	$LL455@fillArchiv
$LN18@fillArchiv:
; Line 312
	push	OFFSET $SG120970
	call	?gLog@@YAXPADZZ				; gLog
; Line 313
	mov	edi, DWORD PTR _locales$[ebp]
	add	esp, 4
	cmp	edi, DWORD PTR _locales$[ebp+4]
	je	$LN13@fillArchiv
	npad	3
$LL584@fillArchiv:
; Line 315
	call	?loadExpansion@@YAHXZ			; loadExpansion
	dec	eax
	je	$LN10@fillArchiv
	dec	eax
	je	$LN9@fillArchiv
	dec	eax
	jne	$LN7@fillArchiv
; Line 352
	push	7
	push	OFFSET $SG121164
	lea	ecx, DWORD PTR $T121162[ebp]
	mov	DWORD PTR $T121162[ebp+20], esi
	mov	DWORD PTR $T121162[ebp+16], ebx
	mov	BYTE PTR $T121162[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR $T121162[ebp]
	push	eax
	lea	ecx, DWORD PTR $T121163[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 65		; 00000041H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 66		; 00000042H
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T121163[ebp+20], 16		; 00000010H
	jb	SHORT $LN2298@fillArchiv
	mov	edx, DWORD PTR $T121163[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2298@fillArchiv:
	cmp	DWORD PTR $T121162[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121163[ebp+20], esi
	mov	DWORD PTR $T121163[ebp+16], ebx
	mov	BYTE PTR $T121163[ebp], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN2320@fillArchiv
	mov	eax, DWORD PTR $T121162[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2320@fillArchiv:
; Line 353
	push	14					; 0000000eH
	push	OFFSET $SG121167
	lea	ecx, DWORD PTR $T121165[ebp]
	mov	DWORD PTR $T121162[ebp+20], esi
	mov	DWORD PTR $T121162[ebp+16], ebx
	mov	BYTE PTR $T121162[ebp], bl
	mov	DWORD PTR $T121165[ebp+20], esi
	mov	DWORD PTR $T121165[ebp+16], ebx
	mov	BYTE PTR $T121165[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	ecx, DWORD PTR $T121165[ebp]
	push	ecx
	lea	edx, DWORD PTR $T121166[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 67		; 00000043H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 68		; 00000044H
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T121166[ebp+20], 16		; 00000010H
	jb	SHORT $LN2372@fillArchiv
	mov	eax, DWORD PTR $T121166[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2372@fillArchiv:
	cmp	DWORD PTR $T121165[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121166[ebp+20], esi
	mov	DWORD PTR $T121166[ebp+16], ebx
	mov	BYTE PTR $T121166[ebp], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN2394@fillArchiv
	mov	ecx, DWORD PTR $T121165[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2394@fillArchiv:
; Line 354
	push	14					; 0000000eH
	push	OFFSET $SG121170
	lea	ecx, DWORD PTR $T121168[ebp]
	mov	DWORD PTR $T121165[ebp+20], esi
	mov	DWORD PTR $T121165[ebp+16], ebx
	mov	BYTE PTR $T121165[ebp], bl
	mov	DWORD PTR $T121168[ebp+20], esi
	mov	DWORD PTR $T121168[ebp+16], ebx
	mov	BYTE PTR $T121168[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	edx, DWORD PTR $T121168[ebp]
	push	edx
	lea	eax, DWORD PTR $T121169[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 69		; 00000045H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 70		; 00000046H
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T121169[ebp+20], 16		; 00000010H
	jb	SHORT $LN2446@fillArchiv
	mov	ecx, DWORD PTR $T121169[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2446@fillArchiv:
	cmp	DWORD PTR $T121168[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121169[ebp+20], esi
	mov	DWORD PTR $T121169[ebp+16], ebx
	mov	BYTE PTR $T121169[ebp], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN2468@fillArchiv
	mov	edx, DWORD PTR $T121168[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2468@fillArchiv:
; Line 355
	push	14					; 0000000eH
	push	OFFSET $SG121173
	lea	ecx, DWORD PTR $T121171[ebp]
	mov	DWORD PTR $T121168[ebp+20], esi
	mov	DWORD PTR $T121168[ebp+16], ebx
	mov	BYTE PTR $T121168[ebp], bl
	mov	DWORD PTR $T121171[ebp+20], esi
	mov	DWORD PTR $T121171[ebp+16], ebx
	mov	BYTE PTR $T121171[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR $T121171[ebp]
	push	eax
	lea	ecx, DWORD PTR $T121172[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 71		; 00000047H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 72		; 00000048H
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T121172[ebp+20], 16		; 00000010H
	jb	SHORT $LN2520@fillArchiv
	mov	edx, DWORD PTR $T121172[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2520@fillArchiv:
	cmp	DWORD PTR $T121171[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121172[ebp+20], esi
	mov	DWORD PTR $T121172[ebp+16], ebx
	mov	BYTE PTR $T121172[ebp], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN2542@fillArchiv
	mov	eax, DWORD PTR $T121171[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2542@fillArchiv:
; Line 356
	push	9
	push	OFFSET $SG121176
	lea	ecx, DWORD PTR $T121174[ebp]
	mov	DWORD PTR $T121171[ebp+20], esi
	mov	DWORD PTR $T121171[ebp+16], ebx
	mov	BYTE PTR $T121171[ebp], bl
	mov	DWORD PTR $T121174[ebp+20], esi
	mov	DWORD PTR $T121174[ebp+16], ebx
	mov	BYTE PTR $T121174[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	ecx, DWORD PTR $T121174[ebp]
	push	ecx
	lea	edx, DWORD PTR $T121175[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 73		; 00000049H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 74		; 0000004aH
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T121175[ebp+20], 16		; 00000010H
	jb	SHORT $LN2594@fillArchiv
	mov	eax, DWORD PTR $T121175[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2594@fillArchiv:
	cmp	DWORD PTR $T121174[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121175[ebp+20], esi
	mov	DWORD PTR $T121175[ebp+16], ebx
	mov	BYTE PTR $T121175[ebp], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN2616@fillArchiv
	mov	ecx, DWORD PTR $T121174[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2616@fillArchiv:
; Line 357
	push	9
	push	OFFSET $SG121179
	lea	ecx, DWORD PTR $T121177[ebp]
	mov	DWORD PTR $T121174[ebp+20], esi
	mov	DWORD PTR $T121174[ebp+16], ebx
	mov	BYTE PTR $T121174[ebp], bl
	mov	DWORD PTR $T121177[ebp+20], esi
	mov	DWORD PTR $T121177[ebp+16], ebx
	mov	BYTE PTR $T121177[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	edx, DWORD PTR $T121177[ebp]
	push	edx
	lea	eax, DWORD PTR $T121178[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 75		; 0000004bH
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 76		; 0000004cH
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T121178[ebp+20], 16		; 00000010H
	jb	SHORT $LN2668@fillArchiv
	mov	ecx, DWORD PTR $T121178[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2668@fillArchiv:
	cmp	DWORD PTR $T121177[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121178[ebp+20], esi
	mov	DWORD PTR $T121178[ebp+16], ebx
	mov	BYTE PTR $T121178[ebp], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN2690@fillArchiv
	mov	edx, DWORD PTR $T121177[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2690@fillArchiv:
; Line 359
	push	edi
	lea	eax, DWORD PTR $T121180[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	eax
	mov	DWORD PTR $T121177[ebp+20], esi
	mov	DWORD PTR $T121177[ebp+16], ebx
	mov	BYTE PTR $T121177[ebp], bl
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET $SG121185
	push	eax
	lea	ecx, DWORD PTR $T121181[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 77		; 0000004dH
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	edi
	push	eax
	lea	edx, DWORD PTR $T121182[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 78		; 0000004eH
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET $SG121184
	push	eax
	lea	eax, DWORD PTR $T121183[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 79		; 0000004fH
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 48					; 00000030H
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 80		; 00000050H
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T121183[ebp+20], 16		; 00000010H
	jb	SHORT $LN2726@fillArchiv
	mov	ecx, DWORD PTR $T121183[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2726@fillArchiv:
	cmp	DWORD PTR $T121182[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121183[ebp+20], esi
	mov	DWORD PTR $T121183[ebp+16], ebx
	mov	BYTE PTR $T121183[ebp], bl
	jb	SHORT $LN2748@fillArchiv
	mov	edx, DWORD PTR $T121182[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2748@fillArchiv:
	cmp	DWORD PTR $T121181[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121182[ebp+20], esi
	mov	DWORD PTR $T121182[ebp+16], ebx
	mov	BYTE PTR $T121182[ebp], bl
	jb	SHORT $LN2770@fillArchiv
	mov	eax, DWORD PTR $T121181[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2770@fillArchiv:
	cmp	DWORD PTR $T121180[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121181[ebp+20], esi
	mov	DWORD PTR $T121181[ebp+16], ebx
	mov	BYTE PTR $T121181[ebp], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN2792@fillArchiv
	mov	ecx, DWORD PTR $T121180[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2792@fillArchiv:
; Line 360
	push	edi
	lea	edx, DWORD PTR $T121186[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	edx
	mov	DWORD PTR $T121180[ebp+20], esi
	mov	DWORD PTR $T121180[ebp+16], ebx
	mov	BYTE PTR $T121180[ebp], bl
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET $SG121191
	push	eax
	lea	eax, DWORD PTR $T121187[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 81		; 00000051H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	edi
	push	eax
	lea	ecx, DWORD PTR $T121188[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 82		; 00000052H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET $SG121190
	push	eax
	lea	edx, DWORD PTR $T121189[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 83		; 00000053H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 48					; 00000030H
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 84		; 00000054H
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T121189[ebp+20], 16		; 00000010H
	jb	SHORT $LN2828@fillArchiv
	mov	eax, DWORD PTR $T121189[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2828@fillArchiv:
	cmp	DWORD PTR $T121188[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121189[ebp+20], esi
	mov	DWORD PTR $T121189[ebp+16], ebx
	mov	BYTE PTR $T121189[ebp], bl
	jb	SHORT $LN2850@fillArchiv
	mov	ecx, DWORD PTR $T121188[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2850@fillArchiv:
	cmp	DWORD PTR $T121187[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121188[ebp+20], esi
	mov	DWORD PTR $T121188[ebp+16], ebx
	mov	BYTE PTR $T121188[ebp], bl
	jb	SHORT $LN2872@fillArchiv
	mov	edx, DWORD PTR $T121187[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2872@fillArchiv:
	cmp	DWORD PTR $T121186[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121187[ebp+20], esi
	mov	DWORD PTR $T121187[ebp+16], ebx
	mov	BYTE PTR $T121187[ebp], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN2894@fillArchiv
	mov	eax, DWORD PTR $T121186[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2894@fillArchiv:
; Line 361
	push	edi
	lea	ecx, DWORD PTR $T121192[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	ecx
	mov	DWORD PTR $T121186[ebp+20], esi
	mov	DWORD PTR $T121186[ebp+16], ebx
	mov	BYTE PTR $T121186[ebp], bl
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET $SG121197
	push	eax
	lea	edx, DWORD PTR $T121193[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 85		; 00000055H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	edi
	push	eax
	lea	eax, DWORD PTR $T121194[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 86		; 00000056H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET $SG121196
	push	eax
	lea	ecx, DWORD PTR $T121195[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 87		; 00000057H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 48					; 00000030H
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 88		; 00000058H
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T121195[ebp+20], 16		; 00000010H
	jb	SHORT $LN2930@fillArchiv
	mov	edx, DWORD PTR $T121195[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2930@fillArchiv:
	cmp	DWORD PTR $T121194[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121195[ebp+20], esi
	mov	DWORD PTR $T121195[ebp+16], ebx
	mov	BYTE PTR $T121195[ebp], bl
	jb	SHORT $LN2952@fillArchiv
	mov	eax, DWORD PTR $T121194[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2952@fillArchiv:
	cmp	DWORD PTR $T121193[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121194[ebp+20], esi
	mov	DWORD PTR $T121194[ebp+16], ebx
	mov	BYTE PTR $T121194[ebp], bl
	jb	SHORT $LN2974@fillArchiv
	mov	ecx, DWORD PTR $T121193[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2974@fillArchiv:
	cmp	DWORD PTR $T121192[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121193[ebp+20], esi
	mov	DWORD PTR $T121193[ebp+16], ebx
	mov	BYTE PTR $T121193[ebp], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN2996@fillArchiv
	mov	edx, DWORD PTR $T121192[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2996@fillArchiv:
; Line 362
	push	edi
	lea	eax, DWORD PTR $T121198[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	eax
	mov	DWORD PTR $T121192[ebp+20], esi
	mov	DWORD PTR $T121192[ebp+16], ebx
	mov	BYTE PTR $T121192[ebp], bl
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET $SG121203
	push	eax
	lea	ecx, DWORD PTR $T121199[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 89		; 00000059H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	edi
	push	eax
	lea	edx, DWORD PTR $T121200[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 90		; 0000005aH
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET $SG121202
	push	eax
	lea	eax, DWORD PTR $T121201[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 91		; 0000005bH
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 48					; 00000030H
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 92		; 0000005cH
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T121201[ebp+20], 16		; 00000010H
	jb	SHORT $LN3032@fillArchiv
	mov	ecx, DWORD PTR $T121201[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN3032@fillArchiv:
	cmp	DWORD PTR $T121200[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121201[ebp+20], esi
	mov	DWORD PTR $T121201[ebp+16], ebx
	mov	BYTE PTR $T121201[ebp], bl
	jb	SHORT $LN3054@fillArchiv
	mov	edx, DWORD PTR $T121200[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN3054@fillArchiv:
	cmp	DWORD PTR $T121199[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121200[ebp+20], esi
	mov	DWORD PTR $T121200[ebp+16], ebx
	mov	BYTE PTR $T121200[ebp], bl
	jb	SHORT $LN3076@fillArchiv
	mov	eax, DWORD PTR $T121199[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN3076@fillArchiv:
	cmp	DWORD PTR $T121198[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121199[ebp+20], esi
	mov	DWORD PTR $T121199[ebp+16], ebx
	mov	BYTE PTR $T121199[ebp], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN3098@fillArchiv
	mov	ecx, DWORD PTR $T121198[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN3098@fillArchiv:
	mov	DWORD PTR $T121198[ebp+20], esi
	mov	DWORD PTR $T121198[ebp+16], ebx
	mov	BYTE PTR $T121198[ebp], bl
; Line 364
	jmp	$LN14@fillArchiv
$LN9@fillArchiv:
; Line 334
	push	10					; 0000000aH
	push	OFFSET $SG121115
	lea	ecx, DWORD PTR $T121113[ebp]
	mov	DWORD PTR $T121113[ebp+20], esi
	mov	DWORD PTR $T121113[ebp+16], ebx
	mov	BYTE PTR $T121113[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	edx, DWORD PTR $T121113[ebp]
	push	edx
	lea	eax, DWORD PTR $T121114[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 33		; 00000021H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T121114[ebp+20], 16		; 00000010H
	jb	SHORT $LN1344@fillArchiv
	mov	ecx, DWORD PTR $T121114[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1344@fillArchiv:
	cmp	DWORD PTR $T121113[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121114[ebp+20], esi
	mov	DWORD PTR $T121114[ebp+16], ebx
	mov	BYTE PTR $T121114[ebp], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN1366@fillArchiv
	mov	edx, DWORD PTR $T121113[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1366@fillArchiv:
; Line 335
	push	12					; 0000000cH
	push	OFFSET $SG121118
	lea	ecx, DWORD PTR $T121116[ebp]
	mov	DWORD PTR $T121113[ebp+20], esi
	mov	DWORD PTR $T121113[ebp+16], ebx
	mov	BYTE PTR $T121113[ebp], bl
	mov	DWORD PTR $T121116[ebp+20], esi
	mov	DWORD PTR $T121116[ebp+16], ebx
	mov	BYTE PTR $T121116[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR $T121116[ebp]
	push	eax
	lea	ecx, DWORD PTR $T121117[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 35		; 00000023H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 36		; 00000024H
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T121117[ebp+20], 16		; 00000010H
	jb	SHORT $LN1418@fillArchiv
	mov	edx, DWORD PTR $T121117[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1418@fillArchiv:
	cmp	DWORD PTR $T121116[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121117[ebp+20], esi
	mov	DWORD PTR $T121117[ebp+16], ebx
	mov	BYTE PTR $T121117[ebp], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN1440@fillArchiv
	mov	eax, DWORD PTR $T121116[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1440@fillArchiv:
; Line 336
	push	13					; 0000000dH
	push	OFFSET $SG121121
	lea	ecx, DWORD PTR $T121119[ebp]
	mov	DWORD PTR $T121116[ebp+20], esi
	mov	DWORD PTR $T121116[ebp+16], ebx
	mov	BYTE PTR $T121116[ebp], bl
	mov	DWORD PTR $T121119[ebp+20], esi
	mov	DWORD PTR $T121119[ebp+16], ebx
	mov	BYTE PTR $T121119[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	ecx, DWORD PTR $T121119[ebp]
	push	ecx
	lea	edx, DWORD PTR $T121120[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 37		; 00000025H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 38		; 00000026H
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T121120[ebp+20], 16		; 00000010H
	jb	SHORT $LN1492@fillArchiv
	mov	eax, DWORD PTR $T121120[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1492@fillArchiv:
	cmp	DWORD PTR $T121119[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121120[ebp+20], esi
	mov	DWORD PTR $T121120[ebp+16], ebx
	mov	BYTE PTR $T121120[ebp], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN1514@fillArchiv
	mov	ecx, DWORD PTR $T121119[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1514@fillArchiv:
; Line 337
	push	12					; 0000000cH
	push	OFFSET $SG121124
	lea	ecx, DWORD PTR $T121122[ebp]
	mov	DWORD PTR $T121119[ebp+20], esi
	mov	DWORD PTR $T121119[ebp+16], ebx
	mov	BYTE PTR $T121119[ebp], bl
	mov	DWORD PTR $T121122[ebp+20], esi
	mov	DWORD PTR $T121122[ebp+16], ebx
	mov	BYTE PTR $T121122[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	edx, DWORD PTR $T121122[ebp]
	push	edx
	lea	eax, DWORD PTR $T121123[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 39		; 00000027H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T121123[ebp+20], 16		; 00000010H
	jb	SHORT $LN1566@fillArchiv
	mov	ecx, DWORD PTR $T121123[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1566@fillArchiv:
	cmp	DWORD PTR $T121122[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121123[ebp+20], esi
	mov	DWORD PTR $T121123[ebp+16], ebx
	mov	BYTE PTR $T121123[ebp], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN1588@fillArchiv
	mov	edx, DWORD PTR $T121122[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1588@fillArchiv:
; Line 338
	push	9
	push	OFFSET $SG121127
	lea	ecx, DWORD PTR $T121125[ebp]
	mov	DWORD PTR $T121122[ebp+20], esi
	mov	DWORD PTR $T121122[ebp+16], ebx
	mov	BYTE PTR $T121122[ebp], bl
	mov	DWORD PTR $T121125[ebp+20], esi
	mov	DWORD PTR $T121125[ebp+16], ebx
	mov	BYTE PTR $T121125[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR $T121125[ebp]
	push	eax
	lea	ecx, DWORD PTR $T121126[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 41		; 00000029H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 42		; 0000002aH
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T121126[ebp+20], 16		; 00000010H
	jb	SHORT $LN1640@fillArchiv
	mov	edx, DWORD PTR $T121126[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1640@fillArchiv:
	cmp	DWORD PTR $T121125[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121126[ebp+20], esi
	mov	DWORD PTR $T121126[ebp+16], ebx
	mov	BYTE PTR $T121126[ebp], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN1662@fillArchiv
	mov	eax, DWORD PTR $T121125[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1662@fillArchiv:
; Line 339
	push	11					; 0000000bH
	push	OFFSET $SG121130
	lea	ecx, DWORD PTR $T121128[ebp]
	mov	DWORD PTR $T121125[ebp+20], esi
	mov	DWORD PTR $T121125[ebp+16], ebx
	mov	BYTE PTR $T121125[ebp], bl
	mov	DWORD PTR $T121128[ebp+20], esi
	mov	DWORD PTR $T121128[ebp+16], ebx
	mov	BYTE PTR $T121128[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	ecx, DWORD PTR $T121128[ebp]
	push	ecx
	lea	edx, DWORD PTR $T121129[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 43		; 0000002bH
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 44		; 0000002cH
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T121129[ebp+20], 16		; 00000010H
	jb	SHORT $LN1714@fillArchiv
	mov	eax, DWORD PTR $T121129[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1714@fillArchiv:
	cmp	DWORD PTR $T121128[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121129[ebp+20], esi
	mov	DWORD PTR $T121129[ebp+16], ebx
	mov	BYTE PTR $T121129[ebp], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN1736@fillArchiv
	mov	ecx, DWORD PTR $T121128[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1736@fillArchiv:
; Line 341
	push	edi
	lea	edx, DWORD PTR $T121131[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	edx
	mov	DWORD PTR $T121128[ebp+20], esi
	mov	DWORD PTR $T121128[ebp+16], ebx
	mov	BYTE PTR $T121128[ebp], bl
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET $SG121136
	push	eax
	lea	eax, DWORD PTR $T121132[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 45		; 0000002dH
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	edi
	push	eax
	lea	ecx, DWORD PTR $T121133[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 46		; 0000002eH
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET $SG121135
	push	eax
	lea	edx, DWORD PTR $T121134[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 47		; 0000002fH
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 48					; 00000030H
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 48		; 00000030H
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T121134[ebp+20], 16		; 00000010H
	jb	SHORT $LN1772@fillArchiv
	mov	eax, DWORD PTR $T121134[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1772@fillArchiv:
	cmp	DWORD PTR $T121133[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121134[ebp+20], esi
	mov	DWORD PTR $T121134[ebp+16], ebx
	mov	BYTE PTR $T121134[ebp], bl
	jb	SHORT $LN1794@fillArchiv
	mov	ecx, DWORD PTR $T121133[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1794@fillArchiv:
	cmp	DWORD PTR $T121132[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121133[ebp+20], esi
	mov	DWORD PTR $T121133[ebp+16], ebx
	mov	BYTE PTR $T121133[ebp], bl
	jb	SHORT $LN1816@fillArchiv
	mov	edx, DWORD PTR $T121132[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1816@fillArchiv:
	cmp	DWORD PTR $T121131[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121132[ebp+20], esi
	mov	DWORD PTR $T121132[ebp+16], ebx
	mov	BYTE PTR $T121132[ebp], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN1838@fillArchiv
	mov	eax, DWORD PTR $T121131[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1838@fillArchiv:
; Line 342
	push	edi
	lea	ecx, DWORD PTR $T121137[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	ecx
	mov	DWORD PTR $T121131[ebp+20], esi
	mov	DWORD PTR $T121131[ebp+16], ebx
	mov	BYTE PTR $T121131[ebp], bl
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET $SG121142
	push	eax
	lea	edx, DWORD PTR $T121138[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 49		; 00000031H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	edi
	push	eax
	lea	eax, DWORD PTR $T121139[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 50		; 00000032H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET $SG121141
	push	eax
	lea	ecx, DWORD PTR $T121140[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 51		; 00000033H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 48					; 00000030H
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 52		; 00000034H
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T121140[ebp+20], 16		; 00000010H
	jb	SHORT $LN1874@fillArchiv
	mov	edx, DWORD PTR $T121140[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1874@fillArchiv:
	cmp	DWORD PTR $T121139[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121140[ebp+20], esi
	mov	DWORD PTR $T121140[ebp+16], ebx
	mov	BYTE PTR $T121140[ebp], bl
	jb	SHORT $LN1896@fillArchiv
	mov	eax, DWORD PTR $T121139[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1896@fillArchiv:
	cmp	DWORD PTR $T121138[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121139[ebp+20], esi
	mov	DWORD PTR $T121139[ebp+16], ebx
	mov	BYTE PTR $T121139[ebp], bl
	jb	SHORT $LN1918@fillArchiv
	mov	ecx, DWORD PTR $T121138[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1918@fillArchiv:
	cmp	DWORD PTR $T121137[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121138[ebp+20], esi
	mov	DWORD PTR $T121138[ebp+16], ebx
	mov	BYTE PTR $T121138[ebp], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN1940@fillArchiv
	mov	edx, DWORD PTR $T121137[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1940@fillArchiv:
; Line 343
	push	edi
	lea	eax, DWORD PTR $T121143[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	eax
	mov	DWORD PTR $T121137[ebp+20], esi
	mov	DWORD PTR $T121137[ebp+16], ebx
	mov	BYTE PTR $T121137[ebp], bl
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET $SG121148
	push	eax
	lea	ecx, DWORD PTR $T121144[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 53		; 00000035H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	edi
	push	eax
	lea	edx, DWORD PTR $T121145[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 54		; 00000036H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET $SG121147
	push	eax
	lea	eax, DWORD PTR $T121146[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 55		; 00000037H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 48					; 00000030H
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 56		; 00000038H
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T121146[ebp+20], 16		; 00000010H
	jb	SHORT $LN1976@fillArchiv
	mov	ecx, DWORD PTR $T121146[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1976@fillArchiv:
	cmp	DWORD PTR $T121145[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121146[ebp+20], esi
	mov	DWORD PTR $T121146[ebp+16], ebx
	mov	BYTE PTR $T121146[ebp], bl
	jb	SHORT $LN1998@fillArchiv
	mov	edx, DWORD PTR $T121145[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1998@fillArchiv:
	cmp	DWORD PTR $T121144[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121145[ebp+20], esi
	mov	DWORD PTR $T121145[ebp+16], ebx
	mov	BYTE PTR $T121145[ebp], bl
	jb	SHORT $LN2020@fillArchiv
	mov	eax, DWORD PTR $T121144[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2020@fillArchiv:
	cmp	DWORD PTR $T121143[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121144[ebp+20], esi
	mov	DWORD PTR $T121144[ebp+16], ebx
	mov	BYTE PTR $T121144[ebp], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN2042@fillArchiv
	mov	ecx, DWORD PTR $T121143[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2042@fillArchiv:
; Line 344
	push	edi
	lea	edx, DWORD PTR $T121149[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	edx
	mov	DWORD PTR $T121143[ebp+20], esi
	mov	DWORD PTR $T121143[ebp+16], ebx
	mov	BYTE PTR $T121143[ebp], bl
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET $SG121154
	push	eax
	lea	eax, DWORD PTR $T121150[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 57		; 00000039H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	edi
	push	eax
	lea	ecx, DWORD PTR $T121151[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 58		; 0000003aH
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET $SG121153
	push	eax
	lea	edx, DWORD PTR $T121152[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 59		; 0000003bH
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 48					; 00000030H
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 60		; 0000003cH
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T121152[ebp+20], 16		; 00000010H
	jb	SHORT $LN2078@fillArchiv
	mov	eax, DWORD PTR $T121152[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2078@fillArchiv:
	cmp	DWORD PTR $T121151[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121152[ebp+20], esi
	mov	DWORD PTR $T121152[ebp+16], ebx
	mov	BYTE PTR $T121152[ebp], bl
	jb	SHORT $LN2100@fillArchiv
	mov	ecx, DWORD PTR $T121151[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2100@fillArchiv:
	cmp	DWORD PTR $T121150[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121151[ebp+20], esi
	mov	DWORD PTR $T121151[ebp+16], ebx
	mov	BYTE PTR $T121151[ebp], bl
	jb	SHORT $LN2122@fillArchiv
	mov	edx, DWORD PTR $T121150[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2122@fillArchiv:
	cmp	DWORD PTR $T121149[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121150[ebp+20], esi
	mov	DWORD PTR $T121150[ebp+16], ebx
	mov	BYTE PTR $T121150[ebp], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN2144@fillArchiv
	mov	eax, DWORD PTR $T121149[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2144@fillArchiv:
; Line 345
	push	edi
	lea	ecx, DWORD PTR $T121155[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	ecx
	mov	DWORD PTR $T121149[ebp+20], esi
	mov	DWORD PTR $T121149[ebp+16], ebx
	mov	BYTE PTR $T121149[ebp], bl
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET $SG121160
	push	eax
	lea	edx, DWORD PTR $T121156[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 61		; 0000003dH
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	edi
	push	eax
	lea	eax, DWORD PTR $T121157[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 62		; 0000003eH
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET $SG121159
	push	eax
	lea	ecx, DWORD PTR $T121158[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 63		; 0000003fH
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 48					; 00000030H
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 64		; 00000040H
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T121158[ebp+20], 16		; 00000010H
	jb	SHORT $LN2180@fillArchiv
	mov	edx, DWORD PTR $T121158[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2180@fillArchiv:
	cmp	DWORD PTR $T121157[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121158[ebp+20], esi
	mov	DWORD PTR $T121158[ebp+16], ebx
	mov	BYTE PTR $T121158[ebp], bl
	jb	SHORT $LN2202@fillArchiv
	mov	eax, DWORD PTR $T121157[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2202@fillArchiv:
	cmp	DWORD PTR $T121156[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121157[ebp+20], esi
	mov	DWORD PTR $T121157[ebp+16], ebx
	mov	BYTE PTR $T121157[ebp], bl
	jb	SHORT $LN2224@fillArchiv
	mov	ecx, DWORD PTR $T121156[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2224@fillArchiv:
	cmp	DWORD PTR $T121155[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121156[ebp+20], esi
	mov	DWORD PTR $T121156[ebp+16], ebx
	mov	BYTE PTR $T121156[ebp], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN2246@fillArchiv
	mov	edx, DWORD PTR $T121155[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2246@fillArchiv:
	mov	DWORD PTR $T121155[ebp+20], esi
	mov	DWORD PTR $T121155[ebp+16], ebx
	mov	BYTE PTR $T121155[ebp], bl
; Line 347
	jmp	$LN14@fillArchiv
$LN10@fillArchiv:
; Line 319
	push	10					; 0000000aH
	push	OFFSET $SG120988
	lea	ecx, DWORD PTR $T120986[ebp]
	mov	DWORD PTR $T120986[ebp+20], esi
	mov	DWORD PTR $T120986[ebp+16], ebx
	mov	BYTE PTR $T120986[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR $T120986[ebp]
	push	eax
	lea	ecx, DWORD PTR $T120987[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T120987[ebp+20], 16		; 00000010H
	jb	SHORT $LN640@fillArchiv
	mov	edx, DWORD PTR $T120987[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN640@fillArchiv:
	cmp	DWORD PTR $T120986[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T120987[ebp+20], esi
	mov	DWORD PTR $T120987[ebp+16], ebx
	mov	BYTE PTR $T120987[ebp], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN662@fillArchiv
	mov	eax, DWORD PTR $T120986[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN662@fillArchiv:
; Line 320
	push	13					; 0000000dH
	push	OFFSET $SG120991
	lea	ecx, DWORD PTR $T120989[ebp]
	mov	DWORD PTR $T120986[ebp+20], esi
	mov	DWORD PTR $T120986[ebp+16], ebx
	mov	BYTE PTR $T120986[ebp], bl
	mov	DWORD PTR $T120989[ebp+20], esi
	mov	DWORD PTR $T120989[ebp+16], ebx
	mov	BYTE PTR $T120989[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	ecx, DWORD PTR $T120989[ebp]
	push	ecx
	lea	edx, DWORD PTR $T120990[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T120990[ebp+20], 16		; 00000010H
	jb	SHORT $LN714@fillArchiv
	mov	eax, DWORD PTR $T120990[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN714@fillArchiv:
	cmp	DWORD PTR $T120989[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T120990[ebp+20], esi
	mov	DWORD PTR $T120990[ebp+16], ebx
	mov	BYTE PTR $T120990[ebp], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN736@fillArchiv
	mov	ecx, DWORD PTR $T120989[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN736@fillArchiv:
; Line 321
	push	9
	push	OFFSET $SG120994
	lea	ecx, DWORD PTR $T120992[ebp]
	mov	DWORD PTR $T120989[ebp+20], esi
	mov	DWORD PTR $T120989[ebp+16], ebx
	mov	BYTE PTR $T120989[ebp], bl
	mov	DWORD PTR $T120992[ebp+20], esi
	mov	DWORD PTR $T120992[ebp+16], ebx
	mov	BYTE PTR $T120992[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	edx, DWORD PTR $T120992[ebp]
	push	edx
	lea	eax, DWORD PTR $T120993[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T120993[ebp+20], 16		; 00000010H
	jb	SHORT $LN788@fillArchiv
	mov	ecx, DWORD PTR $T120993[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN788@fillArchiv:
	cmp	DWORD PTR $T120992[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T120993[ebp+20], esi
	mov	DWORD PTR $T120993[ebp+16], ebx
	mov	BYTE PTR $T120993[ebp], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN810@fillArchiv
	mov	edx, DWORD PTR $T120992[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN810@fillArchiv:
; Line 322
	push	11					; 0000000bH
	push	OFFSET $SG120997
	lea	ecx, DWORD PTR $T120995[ebp]
	mov	DWORD PTR $T120992[ebp+20], esi
	mov	DWORD PTR $T120992[ebp+16], ebx
	mov	BYTE PTR $T120992[ebp], bl
	mov	DWORD PTR $T120995[ebp+20], esi
	mov	DWORD PTR $T120995[ebp+16], ebx
	mov	BYTE PTR $T120995[ebp], bl
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	lea	eax, DWORD PTR $T120995[ebp]
	push	eax
	lea	ecx, DWORD PTR $T120996[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T120996[ebp+20], 16		; 00000010H
	jb	SHORT $LN862@fillArchiv
	mov	edx, DWORD PTR $T120996[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN862@fillArchiv:
	cmp	DWORD PTR $T120995[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T120996[ebp+20], esi
	mov	DWORD PTR $T120996[ebp+16], ebx
	mov	BYTE PTR $T120996[ebp], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN884@fillArchiv
	mov	eax, DWORD PTR $T120995[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN884@fillArchiv:
; Line 324
	push	edi
	lea	ecx, DWORD PTR $T120998[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	ecx
	mov	DWORD PTR $T120995[ebp+20], esi
	mov	DWORD PTR $T120995[ebp+16], ebx
	mov	BYTE PTR $T120995[ebp], bl
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET $SG121093
	push	eax
	lea	edx, DWORD PTR $T121025[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	edi
	push	eax
	lea	eax, DWORD PTR $T121090[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET $SG121092
	push	eax
	lea	ecx, DWORD PTR $T121091[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 48					; 00000030H
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T121091[ebp+20], 16		; 00000010H
	jb	SHORT $LN920@fillArchiv
	mov	edx, DWORD PTR $T121091[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN920@fillArchiv:
	cmp	DWORD PTR $T121090[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121091[ebp+20], esi
	mov	DWORD PTR $T121091[ebp+16], ebx
	mov	BYTE PTR $T121091[ebp], bl
	jb	SHORT $LN942@fillArchiv
	mov	eax, DWORD PTR $T121090[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN942@fillArchiv:
	cmp	DWORD PTR $T121025[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121090[ebp+20], esi
	mov	DWORD PTR $T121090[ebp+16], ebx
	mov	BYTE PTR $T121090[ebp], bl
	jb	SHORT $LN964@fillArchiv
	mov	ecx, DWORD PTR $T121025[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN964@fillArchiv:
	cmp	DWORD PTR $T120998[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121025[ebp+20], esi
	mov	DWORD PTR $T121025[ebp+16], ebx
	mov	BYTE PTR $T121025[ebp], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN986@fillArchiv
	mov	edx, DWORD PTR $T120998[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN986@fillArchiv:
; Line 325
	push	edi
	lea	eax, DWORD PTR $T121094[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	eax
	mov	DWORD PTR $T120998[ebp+20], esi
	mov	DWORD PTR $T120998[ebp+16], ebx
	mov	BYTE PTR $T120998[ebp], bl
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET $SG121099
	push	eax
	lea	ecx, DWORD PTR $T121095[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	edi
	push	eax
	lea	edx, DWORD PTR $T121096[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET $SG121098
	push	eax
	lea	eax, DWORD PTR $T121097[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 48					; 00000030H
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T121097[ebp+20], 16		; 00000010H
	jb	SHORT $LN1022@fillArchiv
	mov	ecx, DWORD PTR $T121097[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1022@fillArchiv:
	cmp	DWORD PTR $T121096[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121097[ebp+20], esi
	mov	DWORD PTR $T121097[ebp+16], ebx
	mov	BYTE PTR $T121097[ebp], bl
	jb	SHORT $LN1044@fillArchiv
	mov	edx, DWORD PTR $T121096[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1044@fillArchiv:
	cmp	DWORD PTR $T121095[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121096[ebp+20], esi
	mov	DWORD PTR $T121096[ebp+16], ebx
	mov	BYTE PTR $T121096[ebp], bl
	jb	SHORT $LN1066@fillArchiv
	mov	eax, DWORD PTR $T121095[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1066@fillArchiv:
	cmp	DWORD PTR $T121094[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121095[ebp+20], esi
	mov	DWORD PTR $T121095[ebp+16], ebx
	mov	BYTE PTR $T121095[ebp], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN1088@fillArchiv
	mov	ecx, DWORD PTR $T121094[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1088@fillArchiv:
; Line 326
	push	edi
	lea	edx, DWORD PTR $T121100[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	edx
	mov	DWORD PTR $T121094[ebp+20], esi
	mov	DWORD PTR $T121094[ebp+16], ebx
	mov	BYTE PTR $T121094[ebp], bl
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET $SG121105
	push	eax
	lea	eax, DWORD PTR $T121101[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	edi
	push	eax
	lea	ecx, DWORD PTR $T121102[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET $SG121104
	push	eax
	lea	edx, DWORD PTR $T121103[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 48					; 00000030H
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 28		; 0000001cH
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T121103[ebp+20], 16		; 00000010H
	jb	SHORT $LN1124@fillArchiv
	mov	eax, DWORD PTR $T121103[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1124@fillArchiv:
	cmp	DWORD PTR $T121102[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121103[ebp+20], esi
	mov	DWORD PTR $T121103[ebp+16], ebx
	mov	BYTE PTR $T121103[ebp], bl
	jb	SHORT $LN1146@fillArchiv
	mov	ecx, DWORD PTR $T121102[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1146@fillArchiv:
	cmp	DWORD PTR $T121101[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121102[ebp+20], esi
	mov	DWORD PTR $T121102[ebp+16], ebx
	mov	BYTE PTR $T121102[ebp], bl
	jb	SHORT $LN1168@fillArchiv
	mov	edx, DWORD PTR $T121101[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1168@fillArchiv:
	cmp	DWORD PTR $T121100[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121101[ebp+20], esi
	mov	DWORD PTR $T121101[ebp+16], ebx
	mov	BYTE PTR $T121101[ebp], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN1190@fillArchiv
	mov	eax, DWORD PTR $T121100[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1190@fillArchiv:
; Line 327
	push	edi
	lea	ecx, DWORD PTR $T121106[ebp]
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	ecx
	mov	DWORD PTR $T121100[ebp+20], esi
	mov	DWORD PTR $T121100[ebp+16], ebx
	mov	BYTE PTR $T121100[ebp], bl
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET $SG121111
	push	eax
	lea	edx, DWORD PTR $T121107[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 29		; 0000001dH
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	edi
	push	eax
	lea	eax, DWORD PTR $T121108[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET $SG121110
	push	eax
	lea	ecx, DWORD PTR $T121109[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 31		; 0000001fH
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 48					; 00000030H
	mov	ecx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 32		; 00000020H
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	cmp	DWORD PTR $T121109[ebp+20], 16		; 00000010H
	jb	SHORT $LN1226@fillArchiv
	mov	edx, DWORD PTR $T121109[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1226@fillArchiv:
	cmp	DWORD PTR $T121108[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121109[ebp+20], esi
	mov	DWORD PTR $T121109[ebp+16], ebx
	mov	BYTE PTR $T121109[ebp], bl
	jb	SHORT $LN1248@fillArchiv
	mov	eax, DWORD PTR $T121108[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1248@fillArchiv:
	cmp	DWORD PTR $T121107[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121108[ebp+20], esi
	mov	DWORD PTR $T121108[ebp+16], ebx
	mov	BYTE PTR $T121108[ebp], bl
	jb	SHORT $LN1270@fillArchiv
	mov	ecx, DWORD PTR $T121107[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1270@fillArchiv:
	cmp	DWORD PTR $T121106[ebp+20], 16		; 00000010H
	mov	DWORD PTR $T121107[ebp+20], esi
	mov	DWORD PTR $T121107[ebp+16], ebx
	mov	BYTE PTR $T121107[ebp], bl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	jb	SHORT $LN1292@fillArchiv
	mov	edx, DWORD PTR $T121106[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1292@fillArchiv:
	mov	DWORD PTR $T121106[ebp+20], esi
	mov	DWORD PTR $T121106[ebp+16], ebx
	mov	BYTE PTR $T121106[ebp], bl
$LN14@fillArchiv:
; Line 313
	add	edi, 28					; 0000001cH
	cmp	edi, DWORD PTR _locales$[ebp+4]
	jne	$LL584@fillArchiv
$LN13@fillArchiv:
; Line 377
	push	OFFSET $SG121206
	call	?gLog@@YAXPADZZ				; gLog
; Line 378
	mov	edi, DWORD PTR __imp__sprintf
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	OFFSET $SG121207
	push	OFFSET ?path@@3PADA			; path
	call	edi
; Line 379
	mov	eax, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	eax
	push	OFFSET ?path@@3PADA			; path
	call	?scan_patches@@YA_NPADAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; scan_patches
	add	esp, 24					; 00000018H
	test	al, al
	jne	$LN6@fillArchiv
; Line 380
	mov	BYTE PTR __$EHRec$[ebp+8], bl
	cmp	DWORD PTR _languageLocales$[ebp], ebx
	je	SHORT $LN3121@fillArchiv
	lea	ecx, DWORD PTR _languageLocales$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ
	mov	ecx, DWORD PTR __Cat$162776[ebp]
	mov	eax, DWORD PTR _languageLocales$[ebp+4]
	push	ecx
	mov	ecx, DWORD PTR _languageLocales$[ebp]
	lea	edx, DWORD PTR _languageLocales$[ebp+12]
	push	edx
	push	eax
	push	ecx
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	edx, DWORD PTR _languageLocales$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN3121@fillArchiv:
	mov	DWORD PTR _languageLocales$[ebp], ebx
	mov	DWORD PTR _languageLocales$[ebp+4], ebx
	mov	DWORD PTR _languageLocales$[ebp+8], ebx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _locales$[ebp], ebx
	je	SHORT $LN3136@fillArchiv
	lea	ecx, DWORD PTR _locales$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ
	mov	eax, DWORD PTR __Cat$162833[ebp]
	mov	edx, DWORD PTR _locales$[ebp+4]
	push	eax
	mov	eax, DWORD PTR _locales$[ebp]
	lea	ecx, DWORD PTR _locales$[ebp+12]
	push	ecx
	push	edx
	push	eax
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	ecx, DWORD PTR _locales$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN3136@fillArchiv:
	xor	al, al
	jmp	$LN22@fillArchiv
$LN7@fillArchiv:
; Line 369
	push	OFFSET $SG121205
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 4
; Line 370
	push	1
	call	DWORD PTR __imp__exit
$LN3269@fillArchiv:
$LN6@fillArchiv:
; Line 382
	push	OFFSET $SG121210
	call	?gLog@@YAXPADZZ				; gLog
; Line 384
	mov	esi, DWORD PTR _locales$[ebp]
	add	esp, 4
	mov	BYTE PTR _foundOne$[ebp], bl
	cmp	esi, DWORD PTR _locales$[ebp+4]
	je	SHORT $LN3262@fillArchiv
$LN3150@fillArchiv:
; Line 386
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN3179@fillArchiv
	mov	ecx, DWORD PTR [esi]
	jmp	SHORT $LN3187@fillArchiv
$LN3179@fillArchiv:
	mov	ecx, esi
$LN3187@fillArchiv:
	cmp	eax, 16					; 00000010H
	jb	SHORT $LN3194@fillArchiv
	mov	eax, DWORD PTR [esi]
	jmp	SHORT $LN3195@fillArchiv
$LN3194@fillArchiv:
	mov	eax, esi
$LN3195@fillArchiv:
	push	ecx
	push	eax
	push	OFFSET ?InputPath@@3PADA		; InputPath
	push	OFFSET $SG121222
	push	OFFSET ?path@@3PADA			; path
	call	edi
; Line 387
	mov	edx, DWORD PTR _pArchiveNames$GSCopy$[ebp]
	push	edx
	push	OFFSET ?path@@3PADA			; path
	call	?scan_patches@@YA_NPADAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; scan_patches
	add	esp, 28					; 0000001cH
	test	al, al
	je	SHORT $LN4@fillArchiv
; Line 388
	mov	BYTE PTR _foundOne$[ebp], 1
$LN4@fillArchiv:
; Line 384
	add	esi, 28					; 0000001cH
	cmp	esi, DWORD PTR _locales$[ebp+4]
	jne	SHORT $LN3150@fillArchiv
; Line 391
	cmp	BYTE PTR _foundOne$[ebp], bl
	jne	$LN1@fillArchiv
$LN3262@fillArchiv:
; Line 393
	push	OFFSET $SG121225
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 4
; Line 394
	mov	BYTE PTR __$EHRec$[ebp+8], bl
	cmp	DWORD PTR _languageLocales$[ebp], ebx
	je	SHORT $LN3207@fillArchiv
	lea	ecx, DWORD PTR _languageLocales$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ
	mov	eax, DWORD PTR __Cat$163047[ebp]
	mov	edx, DWORD PTR _languageLocales$[ebp+4]
	push	eax
	mov	eax, DWORD PTR _languageLocales$[ebp]
	lea	ecx, DWORD PTR _languageLocales$[ebp+12]
	push	ecx
	push	edx
	push	eax
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	ecx, DWORD PTR _languageLocales$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN3207@fillArchiv:
	mov	DWORD PTR _languageLocales$[ebp], ebx
	mov	DWORD PTR _languageLocales$[ebp+4], ebx
	mov	DWORD PTR _languageLocales$[ebp+8], ebx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _locales$[ebp], ebx
	je	$LN3136@fillArchiv
	lea	ecx, DWORD PTR _locales$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ
	mov	edx, DWORD PTR __Cat$163110[ebp]
	mov	ecx, DWORD PTR _locales$[ebp+4]
	push	edx
	mov	edx, DWORD PTR _locales$[ebp]
	lea	eax, DWORD PTR _locales$[ebp+12]
	push	eax
	push	ecx
	push	edx
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	eax, DWORD PTR _locales$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
	xor	al, al
	jmp	$LN22@fillArchiv
$LN1@fillArchiv:
; Line 397
	mov	BYTE PTR __$EHRec$[ebp+8], bl
	cmp	DWORD PTR _languageLocales$[ebp], ebx
	je	SHORT $LN3237@fillArchiv
	lea	ecx, DWORD PTR _languageLocales$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ
	mov	ecx, DWORD PTR __Cat$163173[ebp]
	mov	eax, DWORD PTR _languageLocales$[ebp+4]
	push	ecx
	mov	ecx, DWORD PTR _languageLocales$[ebp]
	lea	edx, DWORD PTR _languageLocales$[ebp+12]
	push	edx
	push	eax
	push	ecx
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	edx, DWORD PTR _languageLocales$[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN3237@fillArchiv:
	mov	DWORD PTR _languageLocales$[ebp], ebx
	mov	DWORD PTR _languageLocales$[ebp+4], ebx
	mov	DWORD PTR _languageLocales$[ebp+8], ebx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR _locales$[ebp], ebx
	je	SHORT $LN3252@fillArchiv
	lea	ecx, DWORD PTR _locales$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ
	mov	eax, DWORD PTR __Cat$163236[ebp]
	mov	edx, DWORD PTR _locales$[ebp+4]
	push	eax
	mov	eax, DWORD PTR _locales$[ebp]
	lea	ecx, DWORD PTR _locales$[ebp+12]
	push	ecx
	push	edx
	push	eax
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	ecx, DWORD PTR _locales$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 20					; 00000014H
$LN3252@fillArchiv:
	mov	al, 1
$LN22@fillArchiv:
; Line 398
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN3267@fillArchiv:
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _locales$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$1:
	lea	ecx, DWORD PTR _languageLocales$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$2:
	lea	ecx, DWORD PTR $T120774[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$3:
	lea	ecx, DWORD PTR $T120776[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$4:
	lea	ecx, DWORD PTR $T120778[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$5:
	lea	ecx, DWORD PTR $T120780[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$6:
	lea	ecx, DWORD PTR $T120782[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$7:
	lea	ecx, DWORD PTR $T120784[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$8:
	lea	ecx, DWORD PTR _localePath$120938[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$65:
	lea	ecx, DWORD PTR $T121162[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$66:
	lea	ecx, DWORD PTR $T121163[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$67:
	lea	ecx, DWORD PTR $T121165[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$68:
	lea	ecx, DWORD PTR $T121166[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$69:
	lea	ecx, DWORD PTR $T121168[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$70:
	lea	ecx, DWORD PTR $T121169[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$71:
	lea	ecx, DWORD PTR $T121171[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$72:
	lea	ecx, DWORD PTR $T121172[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$73:
	lea	ecx, DWORD PTR $T121174[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$74:
	lea	ecx, DWORD PTR $T121175[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$75:
	lea	ecx, DWORD PTR $T121177[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$76:
	lea	ecx, DWORD PTR $T121178[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$77:
	lea	ecx, DWORD PTR $T121180[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$78:
	lea	ecx, DWORD PTR $T121181[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$79:
	lea	ecx, DWORD PTR $T121182[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$80:
	lea	ecx, DWORD PTR $T121183[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$81:
	lea	ecx, DWORD PTR $T121186[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$82:
	lea	ecx, DWORD PTR $T121187[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$83:
	lea	ecx, DWORD PTR $T121188[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$84:
	lea	ecx, DWORD PTR $T121189[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$85:
	lea	ecx, DWORD PTR $T121192[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$86:
	lea	ecx, DWORD PTR $T121193[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$87:
	lea	ecx, DWORD PTR $T121194[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$88:
	lea	ecx, DWORD PTR $T121195[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$89:
	lea	ecx, DWORD PTR $T121198[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$90:
	lea	ecx, DWORD PTR $T121199[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$91:
	lea	ecx, DWORD PTR $T121200[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$92:
	lea	ecx, DWORD PTR $T121201[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$33:
	lea	ecx, DWORD PTR $T121113[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$34:
	lea	ecx, DWORD PTR $T121114[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$35:
	lea	ecx, DWORD PTR $T121116[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$36:
	lea	ecx, DWORD PTR $T121117[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$37:
	lea	ecx, DWORD PTR $T121119[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$38:
	lea	ecx, DWORD PTR $T121120[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$39:
	lea	ecx, DWORD PTR $T121122[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$40:
	lea	ecx, DWORD PTR $T121123[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$41:
	lea	ecx, DWORD PTR $T121125[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$42:
	lea	ecx, DWORD PTR $T121126[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$43:
	lea	ecx, DWORD PTR $T121128[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$44:
	lea	ecx, DWORD PTR $T121129[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$45:
	lea	ecx, DWORD PTR $T121131[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$46:
	lea	ecx, DWORD PTR $T121132[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$47:
	lea	ecx, DWORD PTR $T121133[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$48:
	lea	ecx, DWORD PTR $T121134[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$49:
	lea	ecx, DWORD PTR $T121137[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$50:
	lea	ecx, DWORD PTR $T121138[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$51:
	lea	ecx, DWORD PTR $T121139[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$52:
	lea	ecx, DWORD PTR $T121140[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$53:
	lea	ecx, DWORD PTR $T121143[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$54:
	lea	ecx, DWORD PTR $T121144[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$55:
	lea	ecx, DWORD PTR $T121145[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$56:
	lea	ecx, DWORD PTR $T121146[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$57:
	lea	ecx, DWORD PTR $T121149[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$58:
	lea	ecx, DWORD PTR $T121150[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$59:
	lea	ecx, DWORD PTR $T121151[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$60:
	lea	ecx, DWORD PTR $T121152[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$61:
	lea	ecx, DWORD PTR $T121155[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$62:
	lea	ecx, DWORD PTR $T121156[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$63:
	lea	ecx, DWORD PTR $T121157[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$64:
	lea	ecx, DWORD PTR $T121158[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$9:
	lea	ecx, DWORD PTR $T120986[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$10:
	lea	ecx, DWORD PTR $T120987[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$11:
	lea	ecx, DWORD PTR $T120989[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$12:
	lea	ecx, DWORD PTR $T120990[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$13:
	lea	ecx, DWORD PTR $T120992[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$14:
	lea	ecx, DWORD PTR $T120993[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$15:
	lea	ecx, DWORD PTR $T120995[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$16:
	lea	ecx, DWORD PTR $T120996[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$17:
	lea	ecx, DWORD PTR $T120998[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$18:
	lea	ecx, DWORD PTR $T121025[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$19:
	lea	ecx, DWORD PTR $T121090[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$20:
	lea	ecx, DWORD PTR $T121091[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$21:
	lea	ecx, DWORD PTR $T121094[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$22:
	lea	ecx, DWORD PTR $T121095[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$23:
	lea	ecx, DWORD PTR $T121096[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$24:
	lea	ecx, DWORD PTR $T121097[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$25:
	lea	ecx, DWORD PTR $T121100[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$26:
	lea	ecx, DWORD PTR $T121101[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$27:
	lea	ecx, DWORD PTR $T121102[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$28:
	lea	ecx, DWORD PTR $T121103[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$29:
	lea	ecx, DWORD PTR $T121106[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$30:
	lea	ecx, DWORD PTR $T121107[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$31:
	lea	ecx, DWORD PTR $T121108[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$32:
	lea	ecx, DWORD PTR $T121109[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-2432]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ENDP ; fillArchiveNameVector
PUBLIC	__real@408f400000000000
PUBLIC	__real@4f800000
PUBLIC	__$ArrayPad$
PUBLIC	_SDL_main
EXTRN	?close@MPQArchive@@QAEXXZ:PROC			; MPQArchive::close
EXTRN	?close@Video@@QAEXXZ:PROC			; Video::close
EXTRN	?flip@Video@@QAEXXZ:PROC			; Video::flip
EXTRN	_SDL_WM_SetCaption:PROC
EXTRN	?resize@Video@@QAEXHH@Z:PROC			; Video::resize
EXTRN	_SDL_GetAppState:PROC
EXTRN	_SDL_PollEvent:PROC
EXTRN	_SDL_GetTicks:PROC
EXTRN	?loadWaterShader@@YAXXZ:PROC			; loadWaterShader
EXTRN	?glExtGetGLProcs_VertexProgram_1_0_ARB@@YAHXZ:PROC ; glExtGetGLProcs_VertexProgram_1_0_ARB
EXTRN	??0Menu@@QAE@XZ:PROC				; Menu::Menu
EXTRN	?InitGroundEffects@@YAXXZ:PROC			; InitGroundEffects
EXTRN	?init@Video@@QAEXHH_N@Z:PROC			; Video::init
EXTRN	?video@@3VVideo@@A:BYTE				; video
EXTRN	?open@DBCFile@@QAE_NXZ:PROC			; DBCFile::open
EXTRN	?gOpenArchives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A:BYTE ; gOpenArchives
EXTRN	??0MPQArchive@@QAE@PBD@Z:PROC			; MPQArchive::MPQArchive
EXTRN	?CreateStrips@@YAXXZ:PROC			; CreateStrips
EXTRN	__imp__srand:PROC
;	COMDAT __real@408f400000000000
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT __real@4f800000
CONST	SEGMENT
__real@4f800000 DD 04f800000r			; 4.29497e+009
; Function compile flags: /Ogtp
CONST	ENDS
_TEXT	SEGMENT
_it$121518 = -116					; size = 12
tv2099 = -104						; size = 4
_ftime$ = -104						; size = 4
_time$ = -100						; size = 4
tv2077 = -96						; size = 4
tv1985 = -96						; size = 4
_archiveNames$ = -92					; size = 16
tv2062 = -76						; size = 4
tv2059 = -76						; size = 4
tv226 = -76						; size = 4
_t$ = -76						; size = 4
_done$ = -69						; size = 1
_fps$121373 = -68					; size = 4
_dt$121331 = -68					; size = 4
_as$ = -68						; size = 4
_i$121238 = -68						; size = 4
_ft$ = -64						; size = 4
_xres$ = -64						; size = 4
_fcount$ = -60						; size = 4
_yres$ = -60						; size = 4
_event$121332 = -56					; size = 20
$T163280 = -48						; size = 12
_buf$121376 = -36					; size = 32
__$ArrayPad$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_SDL_main PROC
; File c:\programovani\wow editor\test\src\editor\opengl.cpp
; Line 403
	push	ebp
	mov	ebp, esp
	sub	esp, 116				; 00000074H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
; Line 404
	xor	edi, edi
	push	edi
	call	DWORD PTR __imp___time64
	push	eax
	call	DWORD PTR __imp__srand
; Line 411
	mov	ebx, 1
	add	esp, 8
	mov	DWORD PTR _xres$[ebp], 1024		; 00000400H
	mov	DWORD PTR _yres$[ebp], 768		; 00000300H
	mov	DWORD PTR _i$121238[ebp], ebx
	cmp	DWORD PTR _argc$[ebp], ebx
	jle	$LN61@SDL_main
$LL63@SDL_main:
; Line 413
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR _i$121238[ebp]
	mov	esi, DWORD PTR [eax+ecx*4]
	mov	ecx, OFFSET $SG121243
	mov	eax, esi
$LL463@SDL_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN464@SDL_main
	test	dl, dl
	je	SHORT $LN465@SDL_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN464@SDL_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL463@SDL_main
$LN465@SDL_main:
	xor	eax, eax
	jmp	SHORT $LN466@SDL_main
$LN464@SDL_main:
	sbb	eax, eax
	sbb	eax, -1
$LN466@SDL_main:
	cmp	eax, edi
	jne	SHORT $LN60@SDL_main
; Line 414
	mov	DWORD PTR ?fullscreen@@3HA, ebx		; fullscreen
	jmp	$LN62@SDL_main
$LN60@SDL_main:
; Line 416
	mov	ecx, OFFSET $SG121246
	mov	eax, esi
$LL467@SDL_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN468@SDL_main
	test	dl, dl
	je	SHORT $LN469@SDL_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN468@SDL_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL467@SDL_main
$LN469@SDL_main:
	xor	eax, eax
	jmp	SHORT $LN470@SDL_main
$LN468@SDL_main:
	sbb	eax, eax
	sbb	eax, -1
$LN470@SDL_main:
	cmp	eax, edi
	jne	SHORT $LN58@SDL_main
; Line 417
	mov	DWORD PTR ?fullscreen@@3HA, edi		; fullscreen
	jmp	$LN62@SDL_main
$LN58@SDL_main:
; Line 419
	mov	ecx, OFFSET $SG121250
	mov	eax, esi
	npad	5
$LL471@SDL_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN472@SDL_main
	test	dl, dl
	je	SHORT $LN473@SDL_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN472@SDL_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL471@SDL_main
$LN473@SDL_main:
	xor	eax, eax
	jmp	SHORT $LN474@SDL_main
$LN472@SDL_main:
	sbb	eax, eax
	sbb	eax, -1
$LN474@SDL_main:
	cmp	eax, edi
	je	$LN55@SDL_main
	mov	ecx, OFFSET $SG121251
	mov	eax, esi
$LL475@SDL_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN476@SDL_main
	test	dl, dl
	je	SHORT $LN477@SDL_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN476@SDL_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL475@SDL_main
$LN477@SDL_main:
	xor	eax, eax
	jmp	SHORT $LN478@SDL_main
$LN476@SDL_main:
	sbb	eax, eax
	sbb	eax, -1
$LN478@SDL_main:
	cmp	eax, edi
	je	$LN55@SDL_main
; Line 425
	mov	ecx, OFFSET $SG121255
	mov	eax, esi
$LL479@SDL_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN480@SDL_main
	test	dl, dl
	je	SHORT $LN481@SDL_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN480@SDL_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL479@SDL_main
$LN481@SDL_main:
	xor	eax, eax
	jmp	SHORT $LN482@SDL_main
$LN480@SDL_main:
	sbb	eax, eax
	sbb	eax, -1
$LN482@SDL_main:
	cmp	eax, edi
	je	$LN52@SDL_main
	mov	ecx, OFFSET $SG121256
	mov	eax, esi
	npad	4
$LL483@SDL_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN484@SDL_main
	test	dl, dl
	je	SHORT $LN485@SDL_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN484@SDL_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL483@SDL_main
$LN485@SDL_main:
	xor	eax, eax
	jmp	SHORT $LN486@SDL_main
$LN484@SDL_main:
	sbb	eax, eax
	sbb	eax, -1
$LN486@SDL_main:
	cmp	eax, edi
	je	$LN52@SDL_main
; Line 431
	mov	ecx, OFFSET $SG121259
	mov	eax, esi
$LL487@SDL_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN488@SDL_main
	test	dl, dl
	je	SHORT $LN489@SDL_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN488@SDL_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL487@SDL_main
$LN489@SDL_main:
	xor	eax, eax
	jmp	SHORT $LN490@SDL_main
$LN488@SDL_main:
	sbb	eax, eax
	sbb	eax, -1
$LN490@SDL_main:
	cmp	eax, edi
	jne	SHORT $LN50@SDL_main
; Line 433
	mov	DWORD PTR _xres$[ebp], 1280		; 00000500H
; Line 434
	mov	DWORD PTR _yres$[ebp], 960		; 000003c0H
	jmp	$LN62@SDL_main
$LN50@SDL_main:
; Line 437
	mov	ecx, OFFSET $SG121263
	mov	eax, esi
$LL491@SDL_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN492@SDL_main
	test	dl, dl
	je	SHORT $LN493@SDL_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN492@SDL_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL491@SDL_main
$LN493@SDL_main:
	xor	eax, eax
	jmp	SHORT $LN494@SDL_main
$LN492@SDL_main:
	sbb	eax, eax
	sbb	eax, -1
$LN494@SDL_main:
	cmp	eax, edi
	je	$LN47@SDL_main
	mov	ecx, OFFSET $SG121264
	mov	eax, esi
	npad	5
$LL495@SDL_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN496@SDL_main
	test	dl, dl
	je	SHORT $LN497@SDL_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN496@SDL_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL495@SDL_main
$LN497@SDL_main:
	xor	eax, eax
	jmp	SHORT $LN498@SDL_main
$LN496@SDL_main:
	sbb	eax, eax
	sbb	eax, -1
$LN498@SDL_main:
	cmp	eax, edi
	je	$LN47@SDL_main
; Line 443
	mov	ecx, OFFSET $SG121267
	mov	eax, esi
$LL499@SDL_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN500@SDL_main
	test	dl, dl
	je	SHORT $LN501@SDL_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN500@SDL_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL499@SDL_main
$LN501@SDL_main:
	xor	eax, eax
	jmp	SHORT $LN502@SDL_main
$LN500@SDL_main:
	sbb	eax, eax
	sbb	eax, -1
$LN502@SDL_main:
	cmp	eax, edi
	jne	SHORT $LN45@SDL_main
; Line 445
	mov	DWORD PTR _xres$[ebp], 1280		; 00000500H
; Line 446
	mov	DWORD PTR _yres$[ebp], 800		; 00000320H
	jmp	$LN62@SDL_main
$LN45@SDL_main:
; Line 449
	mov	ecx, OFFSET $SG121271
	mov	eax, esi
$LL503@SDL_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN504@SDL_main
	test	dl, dl
	je	SHORT $LN505@SDL_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN504@SDL_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL503@SDL_main
$LN505@SDL_main:
	xor	eax, eax
	jmp	SHORT $LN506@SDL_main
$LN504@SDL_main:
	sbb	eax, eax
	sbb	eax, -1
$LN506@SDL_main:
	cmp	eax, edi
	je	$LN42@SDL_main
	mov	ecx, OFFSET $SG121272
	mov	eax, esi
	npad	5
$LL507@SDL_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN508@SDL_main
	test	dl, dl
	je	SHORT $LN509@SDL_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN508@SDL_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL507@SDL_main
$LN509@SDL_main:
	xor	eax, eax
	jmp	SHORT $LN510@SDL_main
$LN508@SDL_main:
	sbb	eax, eax
	sbb	eax, -1
$LN510@SDL_main:
	cmp	eax, edi
	je	$LN42@SDL_main
; Line 455
	mov	ecx, OFFSET $SG121276
	mov	eax, esi
$LL511@SDL_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN512@SDL_main
	test	dl, dl
	je	SHORT $LN513@SDL_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN512@SDL_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL511@SDL_main
$LN513@SDL_main:
	xor	eax, eax
	jmp	SHORT $LN514@SDL_main
$LN512@SDL_main:
	sbb	eax, eax
	sbb	eax, -1
$LN514@SDL_main:
	cmp	eax, edi
	je	$LN39@SDL_main
	mov	ecx, OFFSET $SG121277
	mov	eax, esi
$LL515@SDL_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN516@SDL_main
	test	dl, dl
	je	SHORT $LN517@SDL_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN516@SDL_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL515@SDL_main
$LN517@SDL_main:
	xor	eax, eax
	jmp	SHORT $LN518@SDL_main
$LN516@SDL_main:
	sbb	eax, eax
	sbb	eax, -1
$LN518@SDL_main:
	cmp	eax, edi
	je	$LN39@SDL_main
; Line 461
	mov	ecx, OFFSET $SG121281
	mov	eax, esi
	npad	4
$LL519@SDL_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN520@SDL_main
	test	dl, dl
	je	SHORT $LN521@SDL_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN520@SDL_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL519@SDL_main
$LN521@SDL_main:
	xor	eax, eax
	jmp	SHORT $LN522@SDL_main
$LN520@SDL_main:
	sbb	eax, eax
	sbb	eax, -1
$LN522@SDL_main:
	cmp	eax, edi
	je	$LN36@SDL_main
	mov	ecx, OFFSET $SG121282
	mov	eax, esi
$LL523@SDL_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN524@SDL_main
	test	dl, dl
	je	SHORT $LN525@SDL_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN524@SDL_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL523@SDL_main
$LN525@SDL_main:
	xor	eax, eax
	jmp	SHORT $LN526@SDL_main
$LN524@SDL_main:
	sbb	eax, eax
	sbb	eax, -1
$LN526@SDL_main:
	cmp	eax, edi
	je	SHORT $LN36@SDL_main
; Line 467
	mov	ecx, OFFSET $SG121285
	mov	eax, esi
$LL527@SDL_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN528@SDL_main
	test	dl, dl
	je	SHORT $LN529@SDL_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN528@SDL_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL527@SDL_main
$LN529@SDL_main:
	xor	eax, eax
	jmp	SHORT $LN530@SDL_main
$LN528@SDL_main:
	sbb	eax, eax
	sbb	eax, -1
$LN530@SDL_main:
	cmp	eax, edi
	je	$LN62@SDL_main
; Line 470
	mov	ecx, OFFSET $SG121288
	mov	eax, esi
$LL531@SDL_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN62@SDL_main
	test	dl, dl
	je	SHORT $LN533@SDL_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN62@SDL_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL531@SDL_main
$LN533@SDL_main:
	xor	eax, eax
; Line 471
	jmp	SHORT $LN62@SDL_main
$LN36@SDL_main:
; Line 463
	mov	DWORD PTR _xres$[ebp], 2048		; 00000800H
; Line 464
	mov	DWORD PTR _yres$[ebp], 1536		; 00000600H
	jmp	SHORT $LN62@SDL_main
$LN39@SDL_main:
; Line 457
	mov	DWORD PTR _xres$[ebp], 1920		; 00000780H
; Line 458
	mov	DWORD PTR _yres$[ebp], 1200		; 000004b0H
	jmp	SHORT $LN62@SDL_main
$LN42@SDL_main:
; Line 451
	mov	DWORD PTR _xres$[ebp], 1600		; 00000640H
; Line 452
	mov	DWORD PTR _yres$[ebp], 1200		; 000004b0H
	jmp	SHORT $LN62@SDL_main
$LN47@SDL_main:
; Line 439
	mov	DWORD PTR _xres$[ebp], 1400		; 00000578H
; Line 440
	mov	DWORD PTR _yres$[ebp], 1050		; 0000041aH
	jmp	SHORT $LN62@SDL_main
$LN52@SDL_main:
; Line 427
	mov	DWORD PTR _xres$[ebp], 1280		; 00000500H
; Line 428
	mov	DWORD PTR _yres$[ebp], 1024		; 00000400H
	jmp	SHORT $LN62@SDL_main
$LN55@SDL_main:
; Line 421
	mov	DWORD PTR _xres$[ebp], 1024		; 00000400H
; Line 422
	mov	DWORD PTR _yres$[ebp], 768		; 00000300H
$LN62@SDL_main:
; Line 411
	mov	eax, DWORD PTR _i$121238[ebp]
	add	eax, ebx
	mov	DWORD PTR _i$121238[ebp], eax
	cmp	eax, DWORD PTR _argc$[ebp]
	jl	$LL63@SDL_main
$LN61@SDL_main:
; Line 474
	push	OFFSET $SG120138
	push	OFFSET $SG120139
	call	DWORD PTR __imp__fopen
	add	esp, 8
	cmp	eax, edi
	je	$LN77@SDL_main
	push	OFFSET $SG120141
	call	?gLog@@YAXPADZZ				; gLog
	push	OFFSET $SG120145
	call	?gLog@@YAXPADZZ				; gLog
; Line 485
	call	?getGamePath@@YAXXZ			; getGamePath
; Line 486
	call	?CreateStrips@@YAXXZ			; CreateStrips
; Line 488
	call	?loadGameVersion@@YAHXZ			; loadGameVersion
	push	eax
	push	OFFSET ?gamepath@@3PADA			; gamepath
	push	OFFSET $SG121289
	call	?gLog@@YAXPADZZ				; gLog
; Line 489
	mov	esi, DWORD PTR __imp__glGetString@4
	add	esp, 20					; 00000014H
	push	7936					; 00001f00H
	call	esi
	push	eax
	push	OFFSET $SG120216
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 8
	push	7937					; 00001f01H
	call	esi
	push	eax
	push	OFFSET $SG120217
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 8
	push	7938					; 00001f02H
	call	esi
	push	eax
	push	OFFSET $SG120218
	call	?gLog@@YAXPADZZ				; gLog
; Line 491
	call	?checkConfig2@@YAHXZ			; checkConfig2
; Line 795
	lea	edx, DWORD PTR _archiveNames$[ebp]
	push	edx
	mov	DWORD PTR _archiveNames$[ebp], edi
	mov	DWORD PTR _archiveNames$[ebp+4], edi
	mov	DWORD PTR _archiveNames$[ebp+8], edi
	call	?fillArchiveNameVector@@YA_NAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; fillArchiveNameVector
; Line 796
	mov	ebx, DWORD PTR _archiveNames$[ebp+4]
	mov	ecx, ebx
	sub	ecx, DWORD PTR _archiveNames$[ebp]
	mov	eax, -1840700269			; 92492493H
	imul	ecx
	add	edx, ecx
	sar	edx, 4
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	esp, 12					; 0000000cH
	add	eax, edx
	je	SHORT $LN29@SDL_main
; Line 474
	mov	esi, DWORD PTR _archiveNames$[ebp]
	mov	edi, eax
$LL31@SDL_main:
; Line 798
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN66@SDL_main
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN99@SDL_main
	mov	edx, DWORD PTR [esi]
	jmp	SHORT $LN100@SDL_main
$LN99@SDL_main:
	mov	edx, esi
$LN100@SDL_main:
	push	edx
	mov	ecx, eax
	call	??0MPQArchive@@QAE@PBD@Z		; MPQArchive::MPQArchive
$LN66@SDL_main:
; Line 796
	add	esi, 28					; 0000001cH
	dec	edi
	jne	SHORT $LL31@SDL_main
$LN29@SDL_main:
; Line 801
	cmp	DWORD PTR ?gOpenArchives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A+16, 0
	jne	SHORT $LN28@SDL_main
; Line 803
	push	OFFSET $SG121305
	call	?gLog@@YAXPADZZ				; gLog
; Line 804
	mov	esi, DWORD PTR _archiveNames$[ebp]
	add	esp, 4
	test	esi, esi
	je	SHORT $LN152@SDL_main
	cmp	esi, ebx
	je	SHORT $LN116@SDL_main
	mov	edi, 15					; 0000000fH
$LL118@SDL_main:
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN140@SDL_main
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN140@SDL_main:
	mov	DWORD PTR [esi+20], edi
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
	add	esi, 28					; 0000001cH
	cmp	esi, ebx
	jne	SHORT $LL118@SDL_main
	mov	esi, DWORD PTR _archiveNames$[ebp]
$LN116@SDL_main:
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN152@SDL_main:
	pop	edi
	pop	esi
	mov	eax, 1
	pop	ebx
; Line 922
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN28@SDL_main:
; Line 807
	mov	ecx, OFFSET ?gAreaDB@@3VAreaDB@@A	; gAreaDB
	call	?open@DBCFile@@QAE_NXZ			; DBCFile::open
; Line 809
	mov	eax, DWORD PTR _yres$[ebp]
	xor	edi, edi
	cmp	DWORD PTR ?fullscreen@@3HA, edi		; fullscreen
	setne	cl
	movzx	edx, cl
	mov	ecx, DWORD PTR _xres$[ebp]
	push	edx
	push	eax
	push	ecx
	mov	ecx, OFFSET ?video@@3VVideo@@A		; video
	call	?init@Video@@QAEXHH_N@Z			; Video::init
; Line 811
	push	OFFSET $SG121307
	call	?gLog@@YAXPADZZ				; gLog
; Line 812
	call	?InitGroundEffects@@YAXXZ		; InitGroundEffects
; Line 813
	push	OFFSET $SG121308
	call	?gLog@@YAXPADZZ				; gLog
; Line 814
	call	?InitFonts@@YAXXZ			; InitFonts
; Line 821
	push	OFFSET $SG121317
	mov	DWORD PTR _time$[ebp], edi
	mov	DWORD PTR _fcount$[ebp], edi
	mov	DWORD PTR _ft$[ebp], edi
	mov	DWORD PTR ?gFPS@@3MA, edi
	call	?gLog@@YAXPADZZ				; gLog
; Line 822
	push	92					; 0000005cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 16					; 00000010H
	cmp	eax, edi
	je	SHORT $LN68@SDL_main
	mov	ecx, eax
	call	??0Menu@@QAE@XZ				; Menu::Menu
	mov	edi, eax
$LN68@SDL_main:
; Line 825
	mov	ecx, DWORD PTR ?gStates@@3V?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@A+4
	lea	edx, DWORD PTR _as$[ebp]
	cmp	edx, ecx
	mov	edx, DWORD PTR ?gStates@@3V?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@A
	mov	DWORD PTR _as$[ebp], edi
	jae	SHORT $LN159@SDL_main
	lea	eax, DWORD PTR _as$[ebp]
	cmp	edx, eax
	ja	SHORT $LN159@SDL_main
	mov	esi, DWORD PTR ?gStates@@3V?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@A+8
	mov	edi, eax
	sub	edi, edx
	sar	edi, 2
	cmp	ecx, esi
	jne	SHORT $LN170@SDL_main
	mov	eax, ecx
	sub	eax, edx
	sar	eax, 2
	cmp	eax, 1073741822				; 3ffffffeH
	jbe	SHORT $LN173@SDL_main
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN551@SDL_main:
$LN173@SDL_main:
	sub	esi, edx
	inc	eax
	sar	esi, 2
	cmp	eax, esi
	jbe	SHORT $LN170@SDL_main
	mov	ecx, esi
	mov	edx, ecx
	shr	edx, 1
	mov	esi, 1073741823				; 3fffffffH
	sub	esi, edx
	cmp	esi, ecx
	jae	SHORT $LN192@SDL_main
	xor	ecx, ecx
	jmp	SHORT $LN193@SDL_main
$LN192@SDL_main:
	add	ecx, edx
$LN193@SDL_main:
	cmp	ecx, eax
	jae	SHORT $LN189@SDL_main
	mov	ecx, eax
$LN189@SDL_main:
	push	ecx
	mov	ecx, OFFSET ?gStates@@3V?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@A ; gStates
	call	?reserve@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAEXI@Z ; std::vector<AppState *,std::allocator<AppState *> >::reserve
	mov	ecx, DWORD PTR ?gStates@@3V?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@A+4
	mov	edx, DWORD PTR ?gStates@@3V?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@A
$LN170@SDL_main:
	test	ecx, ecx
	je	SHORT $LN259@SDL_main
	mov	edx, DWORD PTR [edx+edi*4]
	mov	DWORD PTR [ecx], edx
	jmp	SHORT $LN545@SDL_main
$LN159@SDL_main:
	mov	esi, DWORD PTR ?gStates@@3V?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@A+8
	cmp	ecx, esi
	jne	SHORT $LN217@SDL_main
	mov	eax, ecx
	sub	eax, edx
	sar	eax, 2
	cmp	eax, 1073741822				; 3ffffffeH
	jbe	SHORT $LN220@SDL_main
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN552@SDL_main:
$LN220@SDL_main:
	sub	esi, edx
	mov	edx, esi
	inc	eax
	sar	edx, 2
	cmp	eax, edx
	jbe	SHORT $LN217@SDL_main
	mov	ecx, edx
	shr	edx, 1
	mov	esi, 1073741823				; 3fffffffH
	sub	esi, edx
	cmp	esi, ecx
	jae	SHORT $LN239@SDL_main
	xor	ecx, ecx
	jmp	SHORT $LN240@SDL_main
$LN239@SDL_main:
	add	ecx, edx
$LN240@SDL_main:
	cmp	ecx, eax
	jae	SHORT $LN236@SDL_main
	mov	ecx, eax
$LN236@SDL_main:
	push	ecx
	mov	ecx, OFFSET ?gStates@@3V?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@A ; gStates
	call	?reserve@?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@QAEXI@Z ; std::vector<AppState *,std::allocator<AppState *> >::reserve
	mov	ecx, DWORD PTR ?gStates@@3V?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@A+4
$LN217@SDL_main:
	test	ecx, ecx
	je	SHORT $LN259@SDL_main
	mov	DWORD PTR [ecx], edi
$LN545@SDL_main:
	mov	ecx, DWORD PTR ?gStates@@3V?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@A+4
$LN259@SDL_main:
	add	ecx, 4
	mov	DWORD PTR ?gStates@@3V?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@A+4, ecx
; Line 827
	call	?glExtGetGLProcs_VertexProgram_1_0_ARB@@YAHXZ ; glExtGetGLProcs_VertexProgram_1_0_ARB
	test	eax, eax
	jne	SHORT $LN27@SDL_main
; Line 829
	push	OFFSET $SG121324
	call	?gLog@@YAXPADZZ				; gLog
; Line 830
	mov	esi, DWORD PTR _archiveNames$[ebp]
	add	esp, 4
	test	esi, esi
	je	SHORT $LN314@SDL_main
	cmp	esi, ebx
	je	SHORT $LN404@SDL_main
	mov	edi, 15					; 0000000fH
	npad	6
$LL280@SDL_main:
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN302@SDL_main
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN302@SDL_main:
	mov	DWORD PTR [esi+20], edi
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
	add	esi, 28					; 0000001cH
	cmp	esi, ebx
	jne	SHORT $LL280@SDL_main
$LN550@SDL_main:
; Line 921
	mov	esi, DWORD PTR _archiveNames$[ebp]
$LN404@SDL_main:
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN314@SDL_main:
; Line 922
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	pop	edi
	pop	esi
	xor	ecx, ebp
	xor	eax, eax
	pop	ebx
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN27@SDL_main:
; Line 832
	call	?loadWaterShader@@YAXXZ			; loadWaterShader
; Line 834
	mov	BYTE PTR _done$[ebp], 0
; Line 835
	call	_SDL_GetTicks
; Line 836
	push	OFFSET $SG121327
	mov	ebx, eax
	call	?gLog@@YAXPADZZ				; gLog
; Line 837
	mov	ecx, DWORD PTR ?gStates@@3V?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@A+4
	sub	ecx, DWORD PTR ?gStates@@3V?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@A
	add	esp, 4
	sar	ecx, 2
	test	ecx, ecx
	je	$LN25@SDL_main
	npad	8
$LL26@SDL_main:
	cmp	BYTE PTR _done$[ebp], 0
	jne	$LN25@SDL_main
; Line 839
	mov	esi, ebx
; Line 840
	call	_SDL_GetTicks
	mov	ebx, eax
; Line 842
	mov	eax, DWORD PTR _time$[ebp]
	mov	edi, ebx
	sub	edi, esi
	add	eax, edi
; Line 843
	mov	DWORD PTR tv2099[ebp], eax
	fild	DWORD PTR tv2099[ebp]
	mov	DWORD PTR _t$[ebp], ebx
	mov	DWORD PTR _dt$121331[ebp], edi
	mov	DWORD PTR _time$[ebp], eax
	jns	SHORT $LN540@SDL_main
	fadd	DWORD PTR __real@4f800000
$LN540@SDL_main:
	fdiv	QWORD PTR __real@408f400000000000
; Line 845
	mov	eax, DWORD PTR ?gStates@@3V?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@A
	mov	edx, DWORD PTR ?gStates@@3V?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@A+4
	sub	edx, eax
	sar	edx, 2
	mov	esi, DWORD PTR [eax+edx*4-4]
; Line 848
	lea	eax, DWORD PTR _event$121332[ebp]
	push	eax
	fstp	DWORD PTR _ftime$[ebp]
	call	_SDL_PollEvent
	add	esp, 4
	test	eax, eax
	je	$LN23@SDL_main
$LL24@SDL_main:
; Line 850
	mov	al, BYTE PTR _event$121332[ebp]
	cmp	al, 12					; 0000000cH
	jne	SHORT $LN22@SDL_main
; Line 851
	mov	BYTE PTR _done$[ebp], 1
	jmp	$LN9@SDL_main
$LN22@SDL_main:
; Line 853
	cmp	al, 4
	jne	SHORT $LN20@SDL_main
; Line 855
	call	_SDL_GetAppState
	test	al, 1
	je	SHORT $LN9@SDL_main
; Line 856
	mov	edx, DWORD PTR [esi]
	mov	edx, DWORD PTR [edx+12]
; Line 857
	jmp	SHORT $LN546@SDL_main
$LN20@SDL_main:
; Line 859
	cmp	al, 5
	je	SHORT $LN16@SDL_main
	cmp	al, 6
	jne	SHORT $LN17@SDL_main
$LN16@SDL_main:
	call	_SDL_GetAppState
	test	al, 2
	je	SHORT $LN535@SDL_main
; Line 861
	cmp	BYTE PTR _event$121332[ebp], 6
	jne	SHORT $LN15@SDL_main
; Line 862
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+16]
	lea	ecx, DWORD PTR _event$121332[ebp]
	push	ecx
	jmp	SHORT $LN547@SDL_main
$LN15@SDL_main:
; Line 863
	call	_SDL_GetAppState
	test	al, 1
	je	SHORT $LN9@SDL_main
; Line 864
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+16]
	lea	ecx, DWORD PTR _event$121332[ebp]
	push	ecx
; Line 865
	jmp	SHORT $LN547@SDL_main
$LN535@SDL_main:
	mov	al, BYTE PTR _event$121332[ebp]
$LN17@SDL_main:
; Line 867
	cmp	al, 2
	je	SHORT $LN10@SDL_main
	cmp	al, 3
	je	SHORT $LN10@SDL_main
; Line 873
	cmp	al, 16					; 00000010H
	jne	SHORT $LN9@SDL_main
; Line 874
	mov	eax, DWORD PTR _event$121332[ebp+8]
	mov	ecx, DWORD PTR _event$121332[ebp+4]
	push	eax
	push	ecx
	mov	ecx, OFFSET ?video@@3VVideo@@A		; video
	call	?resize@Video@@QAEXHH@Z			; Video::resize
	jmp	SHORT $LN9@SDL_main
$LN10@SDL_main:
; Line 869
	call	_SDL_GetAppState
	test	al, 2
	je	SHORT $LN9@SDL_main
; Line 870
	mov	edx, DWORD PTR [esi]
	mov	edx, DWORD PTR [edx+20]
$LN546@SDL_main:
	lea	eax, DWORD PTR _event$121332[ebp]
	push	eax
$LN547@SDL_main:
	mov	ecx, esi
	call	edx
$LN9@SDL_main:
; Line 848
	lea	eax, DWORD PTR _event$121332[ebp]
	push	eax
	call	_SDL_PollEvent
	add	esp, 4
	test	eax, eax
	jne	$LL24@SDL_main
$LN23@SDL_main:
; Line 877
	call	_SDL_GetAppState
	test	al, 4
	je	SHORT $LN6@SDL_main
; Line 879
	mov	ecx, DWORD PTR _dt$121331[ebp]
	fild	DWORD PTR _dt$121331[ebp]
	test	ecx, ecx
	jns	SHORT $LN541@SDL_main
	fadd	DWORD PTR __real@4f800000
$LN541@SDL_main:
	fdiv	QWORD PTR __real@408f400000000000
	mov	edx, DWORD PTR [esi]
	mov	ebx, DWORD PTR _ftime$[ebp]
	mov	eax, DWORD PTR [edx+4]
	sub	esp, 8
	mov	ecx, esi
	fstp	DWORD PTR tv1985[ebp]
	mov	edi, DWORD PTR tv1985[ebp]
	mov	DWORD PTR [esp+4], edi
	mov	DWORD PTR [esp], ebx
	call	eax
; Line 880
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+8]
	sub	esp, 8
	mov	DWORD PTR [esp+4], edi
	mov	ecx, esi
	mov	DWORD PTR [esp], ebx
	call	eax
	mov	ebx, DWORD PTR _t$[ebp]
	mov	edi, DWORD PTR _dt$121331[ebp]
$LN6@SDL_main:
; Line 883
	cmp	BYTE PTR ?gPop@@3_NA, 0			; gPop
	je	SHORT $LN70@SDL_main
; Line 886
	mov	ecx, DWORD PTR ?gStates@@3V?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@A
	mov	BYTE PTR ?gPop@@3_NA, 0			; gPop
	cmp	ecx, DWORD PTR ?gStates@@3V?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@A+4
	je	SHORT $LN324@SDL_main
	sub	DWORD PTR ?gStates@@3V?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@A+4, 4
$LN324@SDL_main:
; Line 887
	test	esi, esi
	je	SHORT $LN70@SDL_main
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx]
	push	1
	mov	ecx, esi
	call	eax
$LN70@SDL_main:
; Line 892
	mov	eax, DWORD PTR _ft$[ebp]
	inc	DWORD PTR _fcount$[ebp]
	add	eax, edi
	mov	DWORD PTR _ft$[ebp], eax
; Line 894
	cmp	eax, 1000				; 000003e8H
	jb	SHORT $LN4@SDL_main
; Line 896
	mov	ecx, DWORD PTR _fcount$[ebp]
	fild	DWORD PTR _fcount$[ebp]
	test	ecx, ecx
	jns	SHORT $LN542@SDL_main
	fadd	DWORD PTR __real@4f800000
$LN542@SDL_main:
	mov	edx, DWORD PTR _ft$[ebp]
	fild	DWORD PTR _ft$[ebp]
	test	edx, edx
	jns	SHORT $LN543@SDL_main
	fadd	DWORD PTR __real@4f800000
$LN543@SDL_main:
	fdivp	ST(1), ST(0)
; Line 899
	sub	esp, 8
	lea	ecx, DWORD PTR _buf$121376[ebp]
	fmul	QWORD PTR __real@408f400000000000
	fstp	DWORD PTR _fps$121373[ebp]
	mov	eax, DWORD PTR _fps$121373[ebp]
	fld	DWORD PTR _fps$121373[ebp]
	mov	DWORD PTR ?gFPS@@3MA, eax
	fstp	QWORD PTR [esp]
	push	OFFSET $SG121382
	push	ecx
	call	??$sprintf_s@$0CA@@@YAHAAY0CA@DPBDZZ	; sprintf_s<32>
; Line 900
	xor	esi, esi
	lea	edx, DWORD PTR _buf$121376[ebp]
	push	esi
	push	edx
	call	_SDL_WM_SetCaption
	add	esp, 24					; 00000018H
; Line 901
	mov	DWORD PTR _ft$[ebp], esi
; Line 902
	mov	DWORD PTR _fcount$[ebp], esi
$LN4@SDL_main:
; Line 905
	mov	ecx, OFFSET ?video@@3VVideo@@A		; video
	call	?flip@Video@@QAEXXZ			; Video::flip
	mov	eax, DWORD PTR ?gStates@@3V?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@A+4
	sub	eax, DWORD PTR ?gStates@@3V?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@A
	sar	eax, 2
	test	eax, eax
	jne	$LL26@SDL_main
$LN25@SDL_main:
; Line 908
	push	OFFSET $SG121383
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 4
; Line 910
	push	OFFSET ?ftex@@3IA			; ftex
	push	1
	call	DWORD PTR __imp__glDeleteTextures@8
	mov	ecx, DWORD PTR ?f16@@3PAVFont@@A	; f16
	mov	esi, ecx
	test	ecx, ecx
	je	SHORT $LN337@SDL_main
	call	??1Font@@QAE@XZ				; Font::~Font
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN337@SDL_main:
	mov	ecx, DWORD PTR ?f24@@3PAVFont@@A	; f24
	mov	esi, ecx
	test	ecx, ecx
	je	SHORT $LN340@SDL_main
	call	??1Font@@QAE@XZ				; Font::~Font
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN340@SDL_main:
	mov	ecx, DWORD PTR ?f32@@3PAVFont@@A	; f32
	mov	esi, ecx
	test	ecx, ecx
	je	SHORT $LN343@SDL_main
	call	??1Font@@QAE@XZ				; Font::~Font
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN343@SDL_main:
; Line 912
	mov	ecx, OFFSET ?video@@3VVideo@@A		; video
	call	?close@Video@@QAEXXZ			; Video::close
; Line 914
	lea	ecx, DWORD PTR _it$121518[ebp]
	push	ecx
	mov	ecx, OFFSET ?archives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A ; archives
	call	?begin@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE?AV?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@XZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::begin
	lea	edx, DWORD PTR $T163280[ebp]
	push	edx
	mov	ecx, OFFSET ?archives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A ; archives
	call	?end@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE?AV?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@XZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::end
	mov	esi, DWORD PTR _it$121518[ebp+8]
	cmp	esi, DWORD PTR [eax+8]
	je	SHORT $LN1@SDL_main
	mov	ebx, DWORD PTR _it$121518[ebp]
	npad	4
$LL348@SDL_main:
; Line 915
	test	ebx, ebx
	jne	SHORT $LN366@SDL_main
	xor	edx, edx
	jmp	SHORT $LN367@SDL_main
$LN366@SDL_main:
	mov	edx, DWORD PTR [ebx]
$LN367@SDL_main:
	mov	edi, DWORD PTR [edx+8]
	mov	eax, esi
	mov	ecx, esi
	shr	eax, 2
	and	ecx, 3
	cmp	edi, eax
	ja	SHORT $LN358@SDL_main
	sub	eax, edi
$LN358@SDL_main:
	mov	edx, DWORD PTR [edx+4]
	mov	eax, DWORD PTR [edx+eax*4]
	mov	ecx, DWORD PTR [eax+ecx*4]
	call	?close@MPQArchive@@QAEXXZ		; MPQArchive::close
	lea	ecx, DWORD PTR $T163280[ebp]
	push	ecx
	mov	ecx, OFFSET ?archives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A ; archives
	inc	esi
	call	?end@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@QAE?AV?$_Deque_iterator@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@2@XZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::end
	cmp	esi, DWORD PTR [eax+8]
	jne	SHORT $LL348@SDL_main
$LN1@SDL_main:
; Line 917
	mov	eax, DWORD PTR ?archives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A+16
	xor	edi, edi
	cmp	eax, edi
	je	SHORT $LN461@SDL_main
$LN549@SDL_main:
	dec	eax
	jne	SHORT $LN380@SDL_main
	mov	DWORD PTR ?archives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A+12, edi
$LN380@SDL_main:
	cmp	eax, edi
	jne	SHORT $LN549@SDL_main
	mov	DWORD PTR ?archives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A+16, eax
$LN461@SDL_main:
	mov	esi, DWORD PTR ?archives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A+8
	mov	eax, DWORD PTR ?archives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A+4
	cmp	esi, edi
	jbe	SHORT $LN372@SDL_main
	npad	5
$LL373@SDL_main:
	dec	esi
	cmp	DWORD PTR [eax+esi*4], edi
	je	SHORT $LN371@SDL_main
	mov	edx, DWORD PTR [eax+esi*4]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	mov	eax, DWORD PTR ?archives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A+4
	add	esp, 4
$LN371@SDL_main:
	cmp	esi, edi
	ja	SHORT $LL373@SDL_main
$LN372@SDL_main:
	cmp	eax, edi
	je	SHORT $LN389@SDL_main
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN389@SDL_main:
; Line 919
	push	OFFSET $SG121541
	mov	DWORD PTR ?archives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A+8, edi
	mov	DWORD PTR ?archives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A+4, edi
	call	?gLog@@YAXPADZZ				; gLog
; Line 921
	mov	esi, DWORD PTR _archiveNames$[ebp]
	add	esp, 4
	cmp	esi, edi
	je	$LN314@SDL_main
	mov	ebx, DWORD PTR _archiveNames$[ebp+4]
	cmp	esi, ebx
	je	$LN404@SDL_main
	mov	edi, 15					; 0000000fH
	npad	4
$LL406@SDL_main:
	cmp	DWORD PTR [esi+20], 16			; 00000010H
	jb	SHORT $LN428@SDL_main
	mov	eax, DWORD PTR [esi]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN428@SDL_main:
	mov	DWORD PTR [esi+20], edi
	mov	DWORD PTR [esi+16], 0
	mov	BYTE PTR [esi], 0
	add	esi, 28					; 0000001cH
	cmp	esi, ebx
	jne	SHORT $LL406@SDL_main
	jmp	$LN550@SDL_main
; Line 474
$LN77@SDL_main:
	push	OFFSET $SG120147
	call	?gLog@@YAXPADZZ				; gLog
	add	esp, 4
	push	ebx
	call	DWORD PTR __imp__exit
$LN553@SDL_main:
$LN544@SDL_main:
	int	3
_SDL_main ENDP
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Ogtp
;	COMDAT ??__EgStates@@YAXXZ
text$yc	SEGMENT
??__EgStates@@YAXXZ PROC				; `dynamic initializer for 'gStates'', COMDAT
; Line 161
	push	OFFSET ??__FgStates@@YAXXZ		; `dynamic atexit destructor for 'gStates''
	call	_atexit
	pop	ecx
	ret	0
??__EgStates@@YAXXZ ENDP				; `dynamic initializer for 'gStates''
text$yc	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??__Earchives@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??__Earchives@@YAXXZ$1
__ehfuncinfo$??__Earchives@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??__Earchives@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??__Earchives@@YAXXZ
text$yc	SEGMENT
$T165685 = -28						; size = 12
$T165548 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??__Earchives@@YAXXZ PROC				; `dynamic initializer for 'archives'', COMDAT
; File c:\programovani\wow editor\test\src\editor\opengl.cpp
; Line 167
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??__Earchives@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	xor	esi, esi
	push	8
	mov	DWORD PTR __$EHRec$[ebp+8], esi
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	cmp	eax, esi
	je	SHORT $LN21@dynamic
	mov	DWORD PTR ?archives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A, eax
	xor	ecx, ecx
	mov	DWORD PTR [eax], ecx
	xor	edx, edx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ?archives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A
	mov	DWORD PTR [eax], OFFSET ?archives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A ; archives
	push	OFFSET ??__Farchives@@YAXXZ		; `dynamic atexit destructor for 'archives''
	mov	DWORD PTR ?archives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A+4, esi
	mov	DWORD PTR ?archives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A+8, esi
	mov	DWORD PTR ?archives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A+12, esi
	mov	DWORD PTR ?archives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A+16, esi
	call	_atexit
	add	esp, 4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
$LN21@dynamic:
	lea	ecx, DWORD PTR $T165548[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T165685[ebp]
	mov	DWORD PTR $T165548[ebp], esi
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	edx, DWORD PTR $T165685[ebp]
	push	edx
	mov	DWORD PTR $T165685[ebp], OFFSET ??_7bad_alloc@std@@6B@
	call	__CxxThrowException@8
$LN50@dynamic:
$LN49@dynamic:
	int	3
text$yc	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??__Earchives@@YAXXZ$1:
	mov	ecx, OFFSET ?archives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A ; archives
	jmp	DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
__ehhandler$??__Earchives@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??__Earchives@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??__Earchives@@YAXXZ ENDP				; `dynamic initializer for 'archives''
EXTRN	??0AreaDB@@QAE@XZ:PROC				; AreaDB::AreaDB
; Function compile flags: /Ogtp
;	COMDAT ??__EgAreaDB@@YAXXZ
text$yc	SEGMENT
??__EgAreaDB@@YAXXZ PROC				; `dynamic initializer for 'gAreaDB'', COMDAT
; Line 178
	mov	ecx, OFFSET ?gAreaDB@@3VAreaDB@@A	; gAreaDB
	call	??0AreaDB@@QAE@XZ			; AreaDB::AreaDB
	push	OFFSET ??__FgAreaDB@@YAXXZ		; `dynamic atexit destructor for 'gAreaDB''
	call	_atexit
	pop	ecx
	ret	0
??__EgAreaDB@@YAXXZ ENDP				; `dynamic initializer for 'gAreaDB''
text$yc	ENDS
EXTRN	??1AreaDB@@QAE@XZ:PROC				; AreaDB::~AreaDB
; Function compile flags: /Ogtp
;	COMDAT ??__FgAreaDB@@YAXXZ
text$yd	SEGMENT
??__FgAreaDB@@YAXXZ PROC				; `dynamic atexit destructor for 'gAreaDB'', COMDAT
	mov	ecx, OFFSET ?gAreaDB@@3VAreaDB@@A	; gAreaDB
	jmp	??1AreaDB@@QAE@XZ			; AreaDB::~AreaDB
??__FgAreaDB@@YAXXZ ENDP				; `dynamic atexit destructor for 'gAreaDB''
; Function compile flags: /Ogtp
text$yd	ENDS
;	COMDAT ??__FgStates@@YAXXZ
text$yd	SEGMENT
??__FgStates@@YAXXZ PROC				; `dynamic atexit destructor for 'gStates'', COMDAT
	mov	eax, DWORD PTR ?gStates@@3V?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@A
	test	eax, eax
	je	SHORT $LN10@dynamic@2
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN10@dynamic@2:
	mov	DWORD PTR ?gStates@@3V?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@A, 0
	mov	DWORD PTR ?gStates@@3V?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@A+4, 0
	mov	DWORD PTR ?gStates@@3V?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@A+8, 0
	ret	0
??__FgStates@@YAXXZ ENDP				; `dynamic atexit destructor for 'gStates''
; Function compile flags: /Ogtp
text$yd	ENDS
;	COMDAT ??__Farchives@@YAXXZ
text$yd	SEGMENT
??__Farchives@@YAXXZ PROC				; `dynamic atexit destructor for 'archives'', COMDAT
	mov	ecx, OFFSET ?archives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A ; archives
	call	?_Tidy@?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@IAEXXZ ; std::deque<MPQArchive *,std::allocator<MPQArchive *> >::_Tidy
	mov	eax, DWORD PTR ?archives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	DWORD PTR ?archives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A, 0
	ret	0
??__Farchives@@YAXXZ ENDP				; `dynamic atexit destructor for 'archives''
text$yd	ENDS
PUBLIC	?gStates@@3V?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@A ; gStates
PUBLIC	?gAreaDB@@3VAreaDB@@A				; gAreaDB
PUBLIC	?archives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A ; archives
_BSS	SEGMENT
	ALIGN	4

?gStates@@3V?$vector@PAVAppState@@V?$allocator@PAVAppState@@@std@@@std@@A DB 010H DUP (?) ; gStates
?gAreaDB@@3VAreaDB@@A DB 034H DUP (?)			; gAreaDB
?archives@@3V?$deque@PAVMPQArchive@@V?$allocator@PAVMPQArchive@@@std@@@std@@A DB 018H DUP (?) ; archives
_BSS	ENDS
CRT$XCU	SEGMENT
_gStates$initializer$ DD FLAT:??__EgStates@@YAXXZ
_archives$initializer$ DD FLAT:??__Earchives@@YAXXZ
_gAreaDB$initializer$ DD FLAT:??__EgAreaDB@@YAXXZ
CRT$XCU	ENDS
END
