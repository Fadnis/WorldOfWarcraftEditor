; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\programovani\WoW Editor\Test\src\zlib\inffast.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG3874	DB	'invalid distance too far back', 00H
	ORG $+2
$SG3910	DB	'invalid distance code', 00H
	ORG $+2
$SG3917	DB	'invalid literal/length code', 00H
_DATA	ENDS
PUBLIC	_inflate_fast
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_lmask$ = -60						; size = 4
_whave$ = -56						; size = 4
_beg$ = -52						; size = 4
_dmask$ = -48						; size = 4
_end$ = -44						; size = 4
_window$ = -40						; size = 4
_wsize$ = -36						; size = 4
_dcode$ = -32						; size = 4
_lcode$ = -28						; size = 4
tv565 = -24						; size = 4
tv563 = -24						; size = 4
_op$ = -24						; size = 4
_here$ = -24						; size = 4
_wnext$ = -20						; size = 4
_state$ = -16						; size = 4
_last$ = -12						; size = 4
_dist$ = -8						; size = 4
_in$ = -4						; size = 4
_strm$ = 8						; size = 4
tv870 = 12						; size = 4
tv567 = 12						; size = 4
_len$ = 12						; size = 4
_start$ = 12						; size = 4
_inflate_fast PROC
; File c:\programovani\wow editor\test\src\zlib\inffast.c
; Line 70
	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
; Line 99
	push	ebx
; Line 111
	push	esi
; Line 116
	push	edi
; Line 98
	mov	ecx, DWORD PTR _strm$[ebp]
	mov	eax, DWORD PTR [ecx+28]
; Line 99
	mov	edx, DWORD PTR [ecx]
	dec	edx
	mov	DWORD PTR _in$[ebp], edx
; Line 111
	mov	ebx, DWORD PTR [eax+56]
	mov	esi, DWORD PTR [ecx+4]
	lea	edx, DWORD PTR [esi+edx-5]
	mov	esi, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR [ecx+16]
	mov	DWORD PTR _last$[ebp], edx
	mov	edx, ecx
	sub	edx, DWORD PTR _start$[ebp]
	dec	esi
	add	edx, esi
	lea	ecx, DWORD PTR [ecx+esi-257]
	mov	DWORD PTR _beg$[ebp], edx
	mov	edx, DWORD PTR [eax+40]
	mov	DWORD PTR _end$[ebp], ecx
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR _wsize$[ebp], edx
	mov	edx, DWORD PTR [eax+48]
	mov	DWORD PTR _whave$[ebp], ecx
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR _wnext$[ebp], edx
; Line 113
	mov	edx, DWORD PTR [eax+76]
	mov	DWORD PTR _window$[ebp], ecx
; Line 114
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR _lcode$[ebp], edx
	mov	DWORD PTR _dcode$[ebp], ecx
; Line 115
	mov	ecx, DWORD PTR [eax+84]
	mov	edx, 1
	shl	edx, cl
; Line 116
	mov	ecx, DWORD PTR [eax+88]
	mov	DWORD PTR _state$[ebp], eax
	mov	edi, DWORD PTR [eax+60]
	mov	DWORD PTR tv870[ebp], 1
	mov	eax, DWORD PTR tv870[ebp]
	shl	eax, cl
	dec	edx
	mov	DWORD PTR _lmask$[ebp], edx
	dec	eax
	mov	DWORD PTR _dmask$[ebp], eax
$LL55@inflate_fa:
; Line 121
	cmp	edi, 15					; 0000000fH
	jae	SHORT $LN52@inflate_fa
; Line 122
	mov	eax, DWORD PTR _in$[ebp]
	inc	eax
	mov	DWORD PTR _in$[ebp], eax
	movzx	eax, BYTE PTR [eax]
	mov	ecx, edi
	shl	eax, cl
; Line 124
	lea	ecx, DWORD PTR [edi+8]
	add	ebx, eax
	mov	eax, DWORD PTR _in$[ebp]
	inc	eax
	mov	DWORD PTR _in$[ebp], eax
	movzx	eax, BYTE PTR [eax]
	shl	eax, cl
	add	ebx, eax
; Line 125
	add	edi, 16					; 00000010H
$LN52@inflate_fa:
; Line 127
	mov	ecx, DWORD PTR _lcode$[ebp]
	and	edx, ebx
	mov	eax, DWORD PTR [ecx+edx*4]
; Line 129
	mov	edx, eax
	shr	edx, 8
	movzx	ecx, dl
; Line 130
	shr	ebx, cl
; Line 131
	sub	edi, ecx
; Line 132
	movzx	edx, al
; Line 133
	test	al, al
	je	SHORT $LN72@inflate_fa
	npad	4
$dolen$3844:
; Line 139
	test	dl, 16					; 00000010H
	jne	SHORT $LN73@inflate_fa
; Line 293
	test	dl, 64					; 00000040H
	jne	$LN5@inflate_fa
; Line 294
	mov	ecx, edx
	mov	edx, 1
	shl	edx, cl
	shr	eax, 16					; 00000010H
	dec	edx
	and	edx, ebx
	add	edx, eax
	mov	eax, DWORD PTR _lcode$[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	mov	ecx, eax
	shr	ecx, 8
	movzx	ecx, cl
	shr	ebx, cl
	sub	edi, ecx
	movzx	edx, al
	test	al, al
	jne	SHORT $dolen$3844
$LN72@inflate_fa:
; Line 137
	inc	esi
	shr	eax, 16					; 00000010H
	jmp	$LN84@inflate_fa
$LN73@inflate_fa:
; Line 140
	shr	eax, 16					; 00000010H
; Line 141
	and	edx, 15					; 0000000fH
	mov	DWORD PTR _len$[ebp], eax
; Line 142
	je	SHORT $LN48@inflate_fa
; Line 143
	cmp	edi, edx
	jae	SHORT $LN47@inflate_fa
; Line 144
	mov	eax, DWORD PTR _in$[ebp]
	inc	eax
	mov	DWORD PTR _in$[ebp], eax
	movzx	eax, BYTE PTR [eax]
	mov	ecx, edi
	shl	eax, cl
	add	ebx, eax
; Line 145
	add	edi, 8
$LN47@inflate_fa:
; Line 147
	mov	ecx, edx
	mov	eax, 1
	shl	eax, cl
	dec	eax
	and	eax, ebx
	add	DWORD PTR _len$[ebp], eax
; Line 148
	shr	ebx, cl
; Line 149
	sub	edi, edx
$LN48@inflate_fa:
; Line 152
	cmp	edi, 15					; 0000000fH
	jae	SHORT $LN46@inflate_fa
; Line 153
	mov	eax, DWORD PTR _in$[ebp]
	movzx	edx, BYTE PTR [eax+1]
; Line 155
	add	eax, 2
	mov	ecx, edi
	mov	DWORD PTR _in$[ebp], eax
	movzx	eax, BYTE PTR [eax]
	shl	edx, cl
	lea	ecx, DWORD PTR [edi+8]
	shl	eax, cl
	add	ebx, edx
	add	ebx, eax
; Line 156
	add	edi, 16					; 00000010H
$LN46@inflate_fa:
; Line 158
	mov	ecx, DWORD PTR _dmask$[ebp]
	mov	edx, DWORD PTR _dcode$[ebp]
	and	ecx, ebx
	mov	edx, DWORD PTR [edx+ecx*4]
; Line 160
	mov	eax, edx
	shr	eax, 8
	movzx	ecx, al
; Line 163
	movzx	eax, dl
	shr	ebx, cl
	sub	edi, ecx
	mov	DWORD PTR _here$[ebp], edx
; Line 164
	test	al, 16					; 00000010H
	jne	SHORT $LN74@inflate_fa
	npad	4
$dodist$3859:
; Line 283
	test	al, 64					; 00000040H
	jne	$LN8@inflate_fa
; Line 284
	mov	ecx, eax
	movzx	eax, WORD PTR _here$[ebp+2]
	mov	edx, 1
	shl	edx, cl
	mov	ecx, DWORD PTR _dcode$[ebp]
	dec	edx
	and	edx, ebx
	add	edx, eax
	mov	edx, DWORD PTR [ecx+edx*4]
	mov	eax, edx
	shr	eax, 8
	movzx	ecx, al
	movzx	eax, dl
	shr	ebx, cl
	sub	edi, ecx
	mov	DWORD PTR _here$[ebp], edx
	test	al, 16					; 00000010H
	je	SHORT $dodist$3859
$LN74@inflate_fa:
; Line 165
	shr	edx, 16					; 00000010H
; Line 166
	and	eax, 15					; 0000000fH
	mov	DWORD PTR _dist$[ebp], edx
; Line 167
	cmp	edi, eax
	jae	SHORT $LN43@inflate_fa
; Line 168
	mov	ecx, DWORD PTR _in$[ebp]
	movzx	edx, BYTE PTR [ecx+1]
	inc	ecx
	mov	DWORD PTR _in$[ebp], ecx
	mov	ecx, edi
	shl	edx, cl
; Line 169
	add	edi, 8
	add	ebx, edx
; Line 170
	cmp	edi, eax
	jae	SHORT $LN43@inflate_fa
; Line 171
	mov	ecx, DWORD PTR _in$[ebp]
	movzx	edx, BYTE PTR [ecx+1]
	inc	ecx
	mov	DWORD PTR _in$[ebp], ecx
	mov	ecx, edi
	shl	edx, cl
	add	ebx, edx
; Line 172
	add	edi, 8
$LN43@inflate_fa:
; Line 175
	mov	edx, 1
	mov	ecx, eax
	shl	edx, cl
; Line 184
	sub	edi, eax
	dec	edx
	and	edx, ebx
	shr	ebx, cl
	mov	DWORD PTR tv563[ebp], edx
	mov	edx, DWORD PTR _dist$[ebp]
	add	edx, DWORD PTR tv563[ebp]
; Line 186
	mov	ecx, esi
	sub	ecx, DWORD PTR _beg$[ebp]
	mov	DWORD PTR _dist$[ebp], edx
; Line 187
	cmp	edx, ecx
	jbe	$LN42@inflate_fa
; Line 188
	mov	eax, edx
	sub	eax, ecx
	mov	DWORD PTR _op$[ebp], eax
; Line 189
	cmp	eax, DWORD PTR _whave$[ebp]
	jbe	SHORT $LN79@inflate_fa
; Line 190
	mov	ecx, DWORD PTR _state$[ebp]
	cmp	DWORD PTR [ecx+7104], 0
	jne	$LN75@inflate_fa
$LN79@inflate_fa:
; Line 216
	mov	ecx, DWORD PTR _window$[ebp]
; Line 217
	mov	edx, DWORD PTR _wnext$[ebp]
	dec	ecx
	test	edx, edx
	jne	SHORT $LN39@inflate_fa
; Line 218
	mov	edx, DWORD PTR _wsize$[ebp]
	sub	edx, eax
	add	ecx, edx
; Line 219
	cmp	eax, DWORD PTR _len$[ebp]
	jae	SHORT $LN80@inflate_fa
; Line 220
	sub	DWORD PTR _len$[ebp], eax
	npad	2
$LL37@inflate_fa:
; Line 222
	mov	dl, BYTE PTR [ecx+1]
	inc	ecx
	inc	esi
; Line 223
	dec	eax
	mov	BYTE PTR [esi], dl
	jne	SHORT $LL37@inflate_fa
; Line 225
	jmp	SHORT $LN85@inflate_fa
$LN39@inflate_fa:
; Line 227
	cmp	edx, eax
	jae	SHORT $LN33@inflate_fa
; Line 228
	sub	edx, eax
	add	edx, DWORD PTR _wsize$[ebp]
; Line 229
	mov	eax, DWORD PTR _op$[ebp]
	sub	eax, DWORD PTR _wnext$[ebp]
	add	ecx, edx
; Line 230
	cmp	eax, DWORD PTR _len$[ebp]
	jae	SHORT $LN80@inflate_fa
; Line 231
	sub	DWORD PTR _len$[ebp], eax
; Line 234
	sub	ecx, esi
$LL31@inflate_fa:
; Line 233
	mov	dl, BYTE PTR [ecx+esi+1]
	inc	esi
; Line 234
	dec	eax
	mov	BYTE PTR [esi], dl
	jne	SHORT $LL31@inflate_fa
; Line 235
	mov	ecx, DWORD PTR _window$[ebp]
; Line 236
	mov	eax, DWORD PTR _wnext$[ebp]
	dec	ecx
	cmp	eax, DWORD PTR _len$[ebp]
	jae	SHORT $LN80@inflate_fa
; Line 238
	sub	DWORD PTR _len$[ebp], eax
	mov	DWORD PTR _op$[ebp], eax
$LL27@inflate_fa:
; Line 240
	mov	dl, BYTE PTR [ecx+1]
	inc	ecx
	inc	esi
; Line 241
	dec	eax
	mov	BYTE PTR [esi], dl
	jne	SHORT $LL27@inflate_fa
; Line 246
	jmp	SHORT $LN85@inflate_fa
$LN33@inflate_fa:
; Line 247
	sub	edx, eax
	add	ecx, edx
; Line 248
	cmp	eax, DWORD PTR _len$[ebp]
	jae	SHORT $LN80@inflate_fa
; Line 249
	sub	DWORD PTR _len$[ebp], eax
	npad	5
$LL22@inflate_fa:
; Line 251
	mov	dl, BYTE PTR [ecx+1]
	inc	ecx
	inc	esi
; Line 252
	dec	eax
	mov	BYTE PTR [esi], dl
	jne	SHORT $LL22@inflate_fa
$LN85@inflate_fa:
; Line 253
	mov	ecx, esi
	sub	ecx, DWORD PTR _dist$[ebp]
$LN80@inflate_fa:
; Line 256
	mov	eax, DWORD PTR _len$[ebp]
	cmp	eax, 2
	jbe	SHORT $LN18@inflate_fa
	lea	edx, DWORD PTR [eax-3]
	mov	eax, -1431655765			; aaaaaaabH
	mul	edx
	shr	edx, 1
	inc	edx
$LL19@inflate_fa:
; Line 257
	movzx	eax, BYTE PTR [ecx+1]
; Line 260
	sub	DWORD PTR _len$[ebp], 3
	mov	BYTE PTR [esi+1], al
	movzx	eax, BYTE PTR [ecx+2]
	mov	BYTE PTR [esi+2], al
	movzx	eax, BYTE PTR [ecx+3]
	add	ecx, 3
	add	esi, 3
	dec	edx
	mov	BYTE PTR [esi], al
	jne	SHORT $LL19@inflate_fa
$LN18@inflate_fa:
; Line 262
	mov	eax, DWORD PTR _len$[ebp]
	test	eax, eax
	je	SHORT $LN54@inflate_fa
; Line 263
	mov	dl, BYTE PTR [ecx+1]
	inc	esi
	mov	BYTE PTR [esi], dl
; Line 264
	cmp	eax, 1
	jbe	SHORT $LN54@inflate_fa
; Line 265
	mov	al, BYTE PTR [ecx+2]
; Line 268
	jmp	SHORT $LN86@inflate_fa
$LN42@inflate_fa:
; Line 269
	mov	eax, esi
	sub	eax, edx
$LL14@inflate_fa:
; Line 271
	movzx	ecx, BYTE PTR [eax+1]
	mov	BYTE PTR [esi+1], cl
; Line 272
	mov	dl, BYTE PTR [eax+2]
	mov	BYTE PTR [esi+2], dl
; Line 273
	movzx	ecx, BYTE PTR [eax+3]
	add	eax, 3
	add	esi, 3
	mov	BYTE PTR [esi], cl
; Line 274
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, 3
	mov	DWORD PTR _len$[ebp], ecx
; Line 275
	cmp	ecx, 2
	ja	SHORT $LL14@inflate_fa
; Line 276
	test	ecx, ecx
	je	SHORT $LN54@inflate_fa
; Line 277
	mov	dl, BYTE PTR [eax+1]
	inc	esi
	mov	BYTE PTR [esi], dl
; Line 278
	cmp	ecx, 1
	jbe	SHORT $LN54@inflate_fa
; Line 279
	mov	al, BYTE PTR [eax+2]
$LN86@inflate_fa:
	inc	esi
$LN84@inflate_fa:
	mov	BYTE PTR [esi], al
$LN54@inflate_fa:
; Line 307
	mov	edx, DWORD PTR _last$[ebp]
	cmp	DWORD PTR _in$[ebp], edx
	jae	SHORT $LN53@inflate_fa
	cmp	esi, DWORD PTR _end$[ebp]
	jae	SHORT $LN53@inflate_fa
; Line 320
	mov	edx, DWORD PTR _lmask$[ebp]
	jmp	$LL55@inflate_fa
$LN75@inflate_fa:
; Line 192
	mov	edx, DWORD PTR _strm$[ebp]
	mov	DWORD PTR [edx+24], OFFSET $SG3874
; Line 194
	jmp	SHORT $LN87@inflate_fa
$LN8@inflate_fa:
; Line 288
	mov	eax, DWORD PTR _strm$[ebp]
	mov	DWORD PTR [eax+24], OFFSET $SG3910
; Line 290
	jmp	SHORT $LN88@inflate_fa
$LN5@inflate_fa:
; Line 297
	test	dl, 32					; 00000020H
	je	SHORT $LN3@inflate_fa
; Line 299
	mov	edx, DWORD PTR _state$[ebp]
	mov	DWORD PTR [edx], 11			; 0000000bH
; Line 300
	jmp	SHORT $LN89@inflate_fa
$LN3@inflate_fa:
; Line 303
	mov	eax, DWORD PTR _strm$[ebp]
	mov	DWORD PTR [eax+24], OFFSET $SG3917
$LN88@inflate_fa:
; Line 304
	mov	ecx, DWORD PTR _state$[ebp]
$LN87@inflate_fa:
	mov	DWORD PTR [ecx], 29			; 0000001dH
$LN89@inflate_fa:
	mov	edx, DWORD PTR _last$[ebp]
$LN53@inflate_fa:
; Line 310
	mov	eax, edi
	shr	eax, 3
; Line 311
	sub	DWORD PTR _in$[ebp], eax
; Line 312
	add	eax, eax
	add	eax, eax
	add	eax, eax
	sub	edi, eax
; Line 313
	mov	ecx, edi
	mov	eax, 1
	shl	eax, cl
; Line 316
	mov	ecx, DWORD PTR _strm$[ebp]
	dec	eax
	and	ebx, eax
	mov	eax, DWORD PTR _in$[ebp]
	inc	eax
	mov	DWORD PTR [ecx], eax
; Line 317
	lea	eax, DWORD PTR [esi+1]
	mov	DWORD PTR [ecx+12], eax
; Line 318
	mov	eax, DWORD PTR _in$[ebp]
	sub	edx, eax
; Line 320
	mov	eax, DWORD PTR _end$[ebp]
	sub	eax, esi
	add	edx, 5
	add	eax, 257				; 00000101H
	mov	DWORD PTR [ecx+16], eax
; Line 321
	mov	eax, DWORD PTR _state$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 322
	mov	DWORD PTR [eax+60], edi
	pop	edi
	pop	esi
	mov	DWORD PTR [eax+56], ebx
	pop	ebx
; Line 324
	mov	esp, ebp
	pop	ebp
	ret	0
_inflate_fast ENDP
_TEXT	ENDS
END
