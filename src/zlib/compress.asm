; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\programovani\WoW Editor\Test\src\zlib\compress.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG1493	DB	'1.2.5', 00H
_DATA	ENDS
PUBLIC	_compress2
EXTRN	_deflateEnd:PROC
EXTRN	_deflate:PROC
EXTRN	_deflateInit_:PROC
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_stream$ = -56						; size = 56
_dest$ = 8						; size = 4
_destLen$ = 12						; size = 4
_source$ = 16						; size = 4
_sourceLen$ = 20					; size = 4
_level$ = 24						; size = 4
_compress2 PROC
; File c:\programovani\wow editor\test\src\zlib\compress.c
; Line 28
	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
; Line 33
	mov	ecx, DWORD PTR _sourceLen$[ebp]
; Line 38
	mov	edx, DWORD PTR _dest$[ebp]
	mov	eax, DWORD PTR _source$[ebp]
	push	ebx
; Line 39
	mov	ebx, DWORD PTR _destLen$[ebp]
; Line 46
	push	56					; 00000038H
	mov	DWORD PTR _stream$[ebp+4], ecx
	mov	ecx, DWORD PTR _level$[ebp]
	push	OFFSET $SG1493
	mov	DWORD PTR _stream$[ebp+12], edx
	mov	DWORD PTR _stream$[ebp], eax
	mov	eax, DWORD PTR [ebx]
	push	ecx
	lea	edx, DWORD PTR _stream$[ebp]
	push	edx
	mov	DWORD PTR _stream$[ebp+16], eax
	mov	DWORD PTR _stream$[ebp+32], 0
	mov	DWORD PTR _stream$[ebp+36], 0
	mov	DWORD PTR _stream$[ebp+40], 0
	call	_deflateInit_
	add	esp, 16					; 00000010H
; Line 47
	test	eax, eax
	jne	SHORT $LN4@compress2
; Line 49
	push	esi
	lea	eax, DWORD PTR _stream$[ebp]
	push	4
	push	eax
	call	_deflate
	mov	esi, eax
	add	esp, 8
; Line 50
	cmp	esi, 1
	je	SHORT $LN1@compress2
; Line 51
	lea	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	call	_deflateEnd
	add	esp, 4
; Line 52
	mov	eax, -5					; fffffffbH
	test	esi, esi
	je	SHORT $LN8@compress2
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 58
	mov	esp, ebp
	pop	ebp
	ret	0
$LN1@compress2:
; Line 54
	mov	edx, DWORD PTR _stream$[ebp+20]
; Line 56
	lea	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	DWORD PTR [ebx], edx
	call	_deflateEnd
	add	esp, 4
$LN8@compress2:
	pop	esi
$LN4@compress2:
	pop	ebx
; Line 58
	mov	esp, ebp
	pop	ebp
	ret	0
_compress2 ENDP
_TEXT	ENDS
PUBLIC	_compress
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_dest$ = 8						; size = 4
_destLen$ = 12						; size = 4
_source$ = 16						; size = 4
_sourceLen$ = 20					; size = 4
_compress PROC
; Line 67
	push	ebp
	mov	ebp, esp
; Line 68
	mov	eax, DWORD PTR _sourceLen$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR _destLen$[ebp]
	push	-1
	push	eax
	mov	eax, DWORD PTR _dest$[ebp]
	push	ecx
	push	edx
	push	eax
	call	_compress2
	add	esp, 20					; 00000014H
; Line 69
	pop	ebp
	ret	0
_compress ENDP
_TEXT	ENDS
PUBLIC	_compressBound
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_sourceLen$ = 8						; size = 4
_compressBound PROC
; Line 77
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR _sourceLen$[ebp]
	mov	edx, eax
	mov	ecx, eax
	shr	edx, 14					; 0000000eH
	add	edx, eax
	shr	ecx, 25					; 00000019H
	shr	eax, 12					; 0000000cH
	add	edx, ecx
	lea	eax, DWORD PTR [eax+edx+13]
; Line 80
	pop	ebp
	ret	0
_compressBound ENDP
_TEXT	ENDS
END
