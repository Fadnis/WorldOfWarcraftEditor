; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\programovani\WoW Editor\Test\src\zlib\infback.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

CONST	SEGMENT
?lenfix@?1??fixedtables@@9@9 DB 060H			; `fixedtables'::`2'::lenfix
	DB	07H
	DW	00H
	DB	00H
	DB	08H
	DW	050H
	DB	00H
	DB	08H
	DW	010H
	DB	014H
	DB	08H
	DW	073H
	DB	012H
	DB	07H
	DW	01fH
	DB	00H
	DB	08H
	DW	070H
	DB	00H
	DB	08H
	DW	030H
	DB	00H
	DB	09H
	DW	0c0H
	DB	010H
	DB	07H
	DW	0aH
	DB	00H
	DB	08H
	DW	060H
	DB	00H
	DB	08H
	DW	020H
	DB	00H
	DB	09H
	DW	0a0H
	DB	00H
	DB	08H
	DW	00H
	DB	00H
	DB	08H
	DW	080H
	DB	00H
	DB	08H
	DW	040H
	DB	00H
	DB	09H
	DW	0e0H
	DB	010H
	DB	07H
	DW	06H
	DB	00H
	DB	08H
	DW	058H
	DB	00H
	DB	08H
	DW	018H
	DB	00H
	DB	09H
	DW	090H
	DB	013H
	DB	07H
	DW	03bH
	DB	00H
	DB	08H
	DW	078H
	DB	00H
	DB	08H
	DW	038H
	DB	00H
	DB	09H
	DW	0d0H
	DB	011H
	DB	07H
	DW	011H
	DB	00H
	DB	08H
	DW	068H
	DB	00H
	DB	08H
	DW	028H
	DB	00H
	DB	09H
	DW	0b0H
	DB	00H
	DB	08H
	DW	08H
	DB	00H
	DB	08H
	DW	088H
	DB	00H
	DB	08H
	DW	048H
	DB	00H
	DB	09H
	DW	0f0H
	DB	010H
	DB	07H
	DW	04H
	DB	00H
	DB	08H
	DW	054H
	DB	00H
	DB	08H
	DW	014H
	DB	015H
	DB	08H
	DW	0e3H
	DB	013H
	DB	07H
	DW	02bH
	DB	00H
	DB	08H
	DW	074H
	DB	00H
	DB	08H
	DW	034H
	DB	00H
	DB	09H
	DW	0c8H
	DB	011H
	DB	07H
	DW	0dH
	DB	00H
	DB	08H
	DW	064H
	DB	00H
	DB	08H
	DW	024H
	DB	00H
	DB	09H
	DW	0a8H
	DB	00H
	DB	08H
	DW	04H
	DB	00H
	DB	08H
	DW	084H
	DB	00H
	DB	08H
	DW	044H
	DB	00H
	DB	09H
	DW	0e8H
	DB	010H
	DB	07H
	DW	08H
	DB	00H
	DB	08H
	DW	05cH
	DB	00H
	DB	08H
	DW	01cH
	DB	00H
	DB	09H
	DW	098H
	DB	014H
	DB	07H
	DW	053H
	DB	00H
	DB	08H
	DW	07cH
	DB	00H
	DB	08H
	DW	03cH
	DB	00H
	DB	09H
	DW	0d8H
	DB	012H
	DB	07H
	DW	017H
	DB	00H
	DB	08H
	DW	06cH
	DB	00H
	DB	08H
	DW	02cH
	DB	00H
	DB	09H
	DW	0b8H
	DB	00H
	DB	08H
	DW	0cH
	DB	00H
	DB	08H
	DW	08cH
	DB	00H
	DB	08H
	DW	04cH
	DB	00H
	DB	09H
	DW	0f8H
	DB	010H
	DB	07H
	DW	03H
	DB	00H
	DB	08H
	DW	052H
	DB	00H
	DB	08H
	DW	012H
	DB	015H
	DB	08H
	DW	0a3H
	DB	013H
	DB	07H
	DW	023H
	DB	00H
	DB	08H
	DW	072H
	DB	00H
	DB	08H
	DW	032H
	DB	00H
	DB	09H
	DW	0c4H
	DB	011H
	DB	07H
	DW	0bH
	DB	00H
	DB	08H
	DW	062H
	DB	00H
	DB	08H
	DW	022H
	DB	00H
	DB	09H
	DW	0a4H
	DB	00H
	DB	08H
	DW	02H
	DB	00H
	DB	08H
	DW	082H
	DB	00H
	DB	08H
	DW	042H
	DB	00H
	DB	09H
	DW	0e4H
	DB	010H
	DB	07H
	DW	07H
	DB	00H
	DB	08H
	DW	05aH
	DB	00H
	DB	08H
	DW	01aH
	DB	00H
	DB	09H
	DW	094H
	DB	014H
	DB	07H
	DW	043H
	DB	00H
	DB	08H
	DW	07aH
	DB	00H
	DB	08H
	DW	03aH
	DB	00H
	DB	09H
	DW	0d4H
	DB	012H
	DB	07H
	DW	013H
	DB	00H
	DB	08H
	DW	06aH
	DB	00H
	DB	08H
	DW	02aH
	DB	00H
	DB	09H
	DW	0b4H
	DB	00H
	DB	08H
	DW	0aH
	DB	00H
	DB	08H
	DW	08aH
	DB	00H
	DB	08H
	DW	04aH
	DB	00H
	DB	09H
	DW	0f4H
	DB	010H
	DB	07H
	DW	05H
	DB	00H
	DB	08H
	DW	056H
	DB	00H
	DB	08H
	DW	016H
	DB	040H
	DB	08H
	DW	00H
	DB	013H
	DB	07H
	DW	033H
	DB	00H
	DB	08H
	DW	076H
	DB	00H
	DB	08H
	DW	036H
	DB	00H
	DB	09H
	DW	0ccH
	DB	011H
	DB	07H
	DW	0fH
	DB	00H
	DB	08H
	DW	066H
	DB	00H
	DB	08H
	DW	026H
	DB	00H
	DB	09H
	DW	0acH
	DB	00H
	DB	08H
	DW	06H
	DB	00H
	DB	08H
	DW	086H
	DB	00H
	DB	08H
	DW	046H
	DB	00H
	DB	09H
	DW	0ecH
	DB	010H
	DB	07H
	DW	09H
	DB	00H
	DB	08H
	DW	05eH
	DB	00H
	DB	08H
	DW	01eH
	DB	00H
	DB	09H
	DW	09cH
	DB	014H
	DB	07H
	DW	063H
	DB	00H
	DB	08H
	DW	07eH
	DB	00H
	DB	08H
	DW	03eH
	DB	00H
	DB	09H
	DW	0dcH
	DB	012H
	DB	07H
	DW	01bH
	DB	00H
	DB	08H
	DW	06eH
	DB	00H
	DB	08H
	DW	02eH
	DB	00H
	DB	09H
	DW	0bcH
	DB	00H
	DB	08H
	DW	0eH
	DB	00H
	DB	08H
	DW	08eH
	DB	00H
	DB	08H
	DW	04eH
	DB	00H
	DB	09H
	DW	0fcH
	DB	060H
	DB	07H
	DW	00H
	DB	00H
	DB	08H
	DW	051H
	DB	00H
	DB	08H
	DW	011H
	DB	015H
	DB	08H
	DW	083H
	DB	012H
	DB	07H
	DW	01fH
	DB	00H
	DB	08H
	DW	071H
	DB	00H
	DB	08H
	DW	031H
	DB	00H
	DB	09H
	DW	0c2H
	DB	010H
	DB	07H
	DW	0aH
	DB	00H
	DB	08H
	DW	061H
	DB	00H
	DB	08H
	DW	021H
	DB	00H
	DB	09H
	DW	0a2H
	DB	00H
	DB	08H
	DW	01H
	DB	00H
	DB	08H
	DW	081H
	DB	00H
	DB	08H
	DW	041H
	DB	00H
	DB	09H
	DW	0e2H
	DB	010H
	DB	07H
	DW	06H
	DB	00H
	DB	08H
	DW	059H
	DB	00H
	DB	08H
	DW	019H
	DB	00H
	DB	09H
	DW	092H
	DB	013H
	DB	07H
	DW	03bH
	DB	00H
	DB	08H
	DW	079H
	DB	00H
	DB	08H
	DW	039H
	DB	00H
	DB	09H
	DW	0d2H
	DB	011H
	DB	07H
	DW	011H
	DB	00H
	DB	08H
	DW	069H
	DB	00H
	DB	08H
	DW	029H
	DB	00H
	DB	09H
	DW	0b2H
	DB	00H
	DB	08H
	DW	09H
	DB	00H
	DB	08H
	DW	089H
	DB	00H
	DB	08H
	DW	049H
	DB	00H
	DB	09H
	DW	0f2H
	DB	010H
	DB	07H
	DW	04H
	DB	00H
	DB	08H
	DW	055H
	DB	00H
	DB	08H
	DW	015H
	DB	010H
	DB	08H
	DW	0102H
	DB	013H
	DB	07H
	DW	02bH
	DB	00H
	DB	08H
	DW	075H
	DB	00H
	DB	08H
	DW	035H
	DB	00H
	DB	09H
	DW	0caH
	DB	011H
	DB	07H
	DW	0dH
	DB	00H
	DB	08H
	DW	065H
	DB	00H
	DB	08H
	DW	025H
	DB	00H
	DB	09H
	DW	0aaH
	DB	00H
	DB	08H
	DW	05H
	DB	00H
	DB	08H
	DW	085H
	DB	00H
	DB	08H
	DW	045H
	DB	00H
	DB	09H
	DW	0eaH
	DB	010H
	DB	07H
	DW	08H
	DB	00H
	DB	08H
	DW	05dH
	DB	00H
	DB	08H
	DW	01dH
	DB	00H
	DB	09H
	DW	09aH
	DB	014H
	DB	07H
	DW	053H
	DB	00H
	DB	08H
	DW	07dH
	DB	00H
	DB	08H
	DW	03dH
	DB	00H
	DB	09H
	DW	0daH
	DB	012H
	DB	07H
	DW	017H
	DB	00H
	DB	08H
	DW	06dH
	DB	00H
	DB	08H
	DW	02dH
	DB	00H
	DB	09H
	DW	0baH
	DB	00H
	DB	08H
	DW	0dH
	DB	00H
	DB	08H
	DW	08dH
	DB	00H
	DB	08H
	DW	04dH
	DB	00H
	DB	09H
	DW	0faH
	DB	010H
	DB	07H
	DW	03H
	DB	00H
	DB	08H
	DW	053H
	DB	00H
	DB	08H
	DW	013H
	DB	015H
	DB	08H
	DW	0c3H
	DB	013H
	DB	07H
	DW	023H
	DB	00H
	DB	08H
	DW	073H
	DB	00H
	DB	08H
	DW	033H
	DB	00H
	DB	09H
	DW	0c6H
	DB	011H
	DB	07H
	DW	0bH
	DB	00H
	DB	08H
	DW	063H
	DB	00H
	DB	08H
	DW	023H
	DB	00H
	DB	09H
	DW	0a6H
	DB	00H
	DB	08H
	DW	03H
	DB	00H
	DB	08H
	DW	083H
	DB	00H
	DB	08H
	DW	043H
	DB	00H
	DB	09H
	DW	0e6H
	DB	010H
	DB	07H
	DW	07H
	DB	00H
	DB	08H
	DW	05bH
	DB	00H
	DB	08H
	DW	01bH
	DB	00H
	DB	09H
	DW	096H
	DB	014H
	DB	07H
	DW	043H
	DB	00H
	DB	08H
	DW	07bH
	DB	00H
	DB	08H
	DW	03bH
	DB	00H
	DB	09H
	DW	0d6H
	DB	012H
	DB	07H
	DW	013H
	DB	00H
	DB	08H
	DW	06bH
	DB	00H
	DB	08H
	DW	02bH
	DB	00H
	DB	09H
	DW	0b6H
	DB	00H
	DB	08H
	DW	0bH
	DB	00H
	DB	08H
	DW	08bH
	DB	00H
	DB	08H
	DW	04bH
	DB	00H
	DB	09H
	DW	0f6H
	DB	010H
	DB	07H
	DW	05H
	DB	00H
	DB	08H
	DW	057H
	DB	00H
	DB	08H
	DW	017H
	DB	040H
	DB	08H
	DW	00H
	DB	013H
	DB	07H
	DW	033H
	DB	00H
	DB	08H
	DW	077H
	DB	00H
	DB	08H
	DW	037H
	DB	00H
	DB	09H
	DW	0ceH
	DB	011H
	DB	07H
	DW	0fH
	DB	00H
	DB	08H
	DW	067H
	DB	00H
	DB	08H
	DW	027H
	DB	00H
	DB	09H
	DW	0aeH
	DB	00H
	DB	08H
	DW	07H
	DB	00H
	DB	08H
	DW	087H
	DB	00H
	DB	08H
	DW	047H
	DB	00H
	DB	09H
	DW	0eeH
	DB	010H
	DB	07H
	DW	09H
	DB	00H
	DB	08H
	DW	05fH
	DB	00H
	DB	08H
	DW	01fH
	DB	00H
	DB	09H
	DW	09eH
	DB	014H
	DB	07H
	DW	063H
	DB	00H
	DB	08H
	DW	07fH
	DB	00H
	DB	08H
	DW	03fH
	DB	00H
	DB	09H
	DW	0deH
	DB	012H
	DB	07H
	DW	01bH
	DB	00H
	DB	08H
	DW	06fH
	DB	00H
	DB	08H
	DW	02fH
	DB	00H
	DB	09H
	DW	0beH
	DB	00H
	DB	08H
	DW	0fH
	DB	00H
	DB	08H
	DW	08fH
	DB	00H
	DB	08H
	DW	04fH
	DB	00H
	DB	09H
	DW	0feH
	DB	060H
	DB	07H
	DW	00H
	DB	00H
	DB	08H
	DW	050H
	DB	00H
	DB	08H
	DW	010H
	DB	014H
	DB	08H
	DW	073H
	DB	012H
	DB	07H
	DW	01fH
	DB	00H
	DB	08H
	DW	070H
	DB	00H
	DB	08H
	DW	030H
	DB	00H
	DB	09H
	DW	0c1H
	DB	010H
	DB	07H
	DW	0aH
	DB	00H
	DB	08H
	DW	060H
	DB	00H
	DB	08H
	DW	020H
	DB	00H
	DB	09H
	DW	0a1H
	DB	00H
	DB	08H
	DW	00H
	DB	00H
	DB	08H
	DW	080H
	DB	00H
	DB	08H
	DW	040H
	DB	00H
	DB	09H
	DW	0e1H
	DB	010H
	DB	07H
	DW	06H
	DB	00H
	DB	08H
	DW	058H
	DB	00H
	DB	08H
	DW	018H
	DB	00H
	DB	09H
	DW	091H
	DB	013H
	DB	07H
	DW	03bH
	DB	00H
	DB	08H
	DW	078H
	DB	00H
	DB	08H
	DW	038H
	DB	00H
	DB	09H
	DW	0d1H
	DB	011H
	DB	07H
	DW	011H
	DB	00H
	DB	08H
	DW	068H
	DB	00H
	DB	08H
	DW	028H
	DB	00H
	DB	09H
	DW	0b1H
	DB	00H
	DB	08H
	DW	08H
	DB	00H
	DB	08H
	DW	088H
	DB	00H
	DB	08H
	DW	048H
	DB	00H
	DB	09H
	DW	0f1H
	DB	010H
	DB	07H
	DW	04H
	DB	00H
	DB	08H
	DW	054H
	DB	00H
	DB	08H
	DW	014H
	DB	015H
	DB	08H
	DW	0e3H
	DB	013H
	DB	07H
	DW	02bH
	DB	00H
	DB	08H
	DW	074H
	DB	00H
	DB	08H
	DW	034H
	DB	00H
	DB	09H
	DW	0c9H
	DB	011H
	DB	07H
	DW	0dH
	DB	00H
	DB	08H
	DW	064H
	DB	00H
	DB	08H
	DW	024H
	DB	00H
	DB	09H
	DW	0a9H
	DB	00H
	DB	08H
	DW	04H
	DB	00H
	DB	08H
	DW	084H
	DB	00H
	DB	08H
	DW	044H
	DB	00H
	DB	09H
	DW	0e9H
	DB	010H
	DB	07H
	DW	08H
	DB	00H
	DB	08H
	DW	05cH
	DB	00H
	DB	08H
	DW	01cH
	DB	00H
	DB	09H
	DW	099H
	DB	014H
	DB	07H
	DW	053H
	DB	00H
	DB	08H
	DW	07cH
	DB	00H
	DB	08H
	DW	03cH
	DB	00H
	DB	09H
	DW	0d9H
	DB	012H
	DB	07H
	DW	017H
	DB	00H
	DB	08H
	DW	06cH
	DB	00H
	DB	08H
	DW	02cH
	DB	00H
	DB	09H
	DW	0b9H
	DB	00H
	DB	08H
	DW	0cH
	DB	00H
	DB	08H
	DW	08cH
	DB	00H
	DB	08H
	DW	04cH
	DB	00H
	DB	09H
	DW	0f9H
	DB	010H
	DB	07H
	DW	03H
	DB	00H
	DB	08H
	DW	052H
	DB	00H
	DB	08H
	DW	012H
	DB	015H
	DB	08H
	DW	0a3H
	DB	013H
	DB	07H
	DW	023H
	DB	00H
	DB	08H
	DW	072H
	DB	00H
	DB	08H
	DW	032H
	DB	00H
	DB	09H
	DW	0c5H
	DB	011H
	DB	07H
	DW	0bH
	DB	00H
	DB	08H
	DW	062H
	DB	00H
	DB	08H
	DW	022H
	DB	00H
	DB	09H
	DW	0a5H
	DB	00H
	DB	08H
	DW	02H
	DB	00H
	DB	08H
	DW	082H
	DB	00H
	DB	08H
	DW	042H
	DB	00H
	DB	09H
	DW	0e5H
	DB	010H
	DB	07H
	DW	07H
	DB	00H
	DB	08H
	DW	05aH
	DB	00H
	DB	08H
	DW	01aH
	DB	00H
	DB	09H
	DW	095H
	DB	014H
	DB	07H
	DW	043H
	DB	00H
	DB	08H
	DW	07aH
	DB	00H
	DB	08H
	DW	03aH
	DB	00H
	DB	09H
	DW	0d5H
	DB	012H
	DB	07H
	DW	013H
	DB	00H
	DB	08H
	DW	06aH
	DB	00H
	DB	08H
	DW	02aH
	DB	00H
	DB	09H
	DW	0b5H
	DB	00H
	DB	08H
	DW	0aH
	DB	00H
	DB	08H
	DW	08aH
	DB	00H
	DB	08H
	DW	04aH
	DB	00H
	DB	09H
	DW	0f5H
	DB	010H
	DB	07H
	DW	05H
	DB	00H
	DB	08H
	DW	056H
	DB	00H
	DB	08H
	DW	016H
	DB	040H
	DB	08H
	DW	00H
	DB	013H
	DB	07H
	DW	033H
	DB	00H
	DB	08H
	DW	076H
	DB	00H
	DB	08H
	DW	036H
	DB	00H
	DB	09H
	DW	0cdH
	DB	011H
	DB	07H
	DW	0fH
	DB	00H
	DB	08H
	DW	066H
	DB	00H
	DB	08H
	DW	026H
	DB	00H
	DB	09H
	DW	0adH
	DB	00H
	DB	08H
	DW	06H
	DB	00H
	DB	08H
	DW	086H
	DB	00H
	DB	08H
	DW	046H
	DB	00H
	DB	09H
	DW	0edH
	DB	010H
	DB	07H
	DW	09H
	DB	00H
	DB	08H
	DW	05eH
	DB	00H
	DB	08H
	DW	01eH
	DB	00H
	DB	09H
	DW	09dH
	DB	014H
	DB	07H
	DW	063H
	DB	00H
	DB	08H
	DW	07eH
	DB	00H
	DB	08H
	DW	03eH
	DB	00H
	DB	09H
	DW	0ddH
	DB	012H
	DB	07H
	DW	01bH
	DB	00H
	DB	08H
	DW	06eH
	DB	00H
	DB	08H
	DW	02eH
	DB	00H
	DB	09H
	DW	0bdH
	DB	00H
	DB	08H
	DW	0eH
	DB	00H
	DB	08H
	DW	08eH
	DB	00H
	DB	08H
	DW	04eH
	DB	00H
	DB	09H
	DW	0fdH
	DB	060H
	DB	07H
	DW	00H
	DB	00H
	DB	08H
	DW	051H
	DB	00H
	DB	08H
	DW	011H
	DB	015H
	DB	08H
	DW	083H
	DB	012H
	DB	07H
	DW	01fH
	DB	00H
	DB	08H
	DW	071H
	DB	00H
	DB	08H
	DW	031H
	DB	00H
	DB	09H
	DW	0c3H
	DB	010H
	DB	07H
	DW	0aH
	DB	00H
	DB	08H
	DW	061H
	DB	00H
	DB	08H
	DW	021H
	DB	00H
	DB	09H
	DW	0a3H
	DB	00H
	DB	08H
	DW	01H
	DB	00H
	DB	08H
	DW	081H
	DB	00H
	DB	08H
	DW	041H
	DB	00H
	DB	09H
	DW	0e3H
	DB	010H
	DB	07H
	DW	06H
	DB	00H
	DB	08H
	DW	059H
	DB	00H
	DB	08H
	DW	019H
	DB	00H
	DB	09H
	DW	093H
	DB	013H
	DB	07H
	DW	03bH
	DB	00H
	DB	08H
	DW	079H
	DB	00H
	DB	08H
	DW	039H
	DB	00H
	DB	09H
	DW	0d3H
	DB	011H
	DB	07H
	DW	011H
	DB	00H
	DB	08H
	DW	069H
	DB	00H
	DB	08H
	DW	029H
	DB	00H
	DB	09H
	DW	0b3H
	DB	00H
	DB	08H
	DW	09H
	DB	00H
	DB	08H
	DW	089H
	DB	00H
	DB	08H
	DW	049H
	DB	00H
	DB	09H
	DW	0f3H
	DB	010H
	DB	07H
	DW	04H
	DB	00H
	DB	08H
	DW	055H
	DB	00H
	DB	08H
	DW	015H
	DB	010H
	DB	08H
	DW	0102H
	DB	013H
	DB	07H
	DW	02bH
	DB	00H
	DB	08H
	DW	075H
	DB	00H
	DB	08H
	DW	035H
	DB	00H
	DB	09H
	DW	0cbH
	DB	011H
	DB	07H
	DW	0dH
	DB	00H
	DB	08H
	DW	065H
	DB	00H
	DB	08H
	DW	025H
	DB	00H
	DB	09H
	DW	0abH
	DB	00H
	DB	08H
	DW	05H
	DB	00H
	DB	08H
	DW	085H
	DB	00H
	DB	08H
	DW	045H
	DB	00H
	DB	09H
	DW	0ebH
	DB	010H
	DB	07H
	DW	08H
	DB	00H
	DB	08H
	DW	05dH
	DB	00H
	DB	08H
	DW	01dH
	DB	00H
	DB	09H
	DW	09bH
	DB	014H
	DB	07H
	DW	053H
	DB	00H
	DB	08H
	DW	07dH
	DB	00H
	DB	08H
	DW	03dH
	DB	00H
	DB	09H
	DW	0dbH
	DB	012H
	DB	07H
	DW	017H
	DB	00H
	DB	08H
	DW	06dH
	DB	00H
	DB	08H
	DW	02dH
	DB	00H
	DB	09H
	DW	0bbH
	DB	00H
	DB	08H
	DW	0dH
	DB	00H
	DB	08H
	DW	08dH
	DB	00H
	DB	08H
	DW	04dH
	DB	00H
	DB	09H
	DW	0fbH
	DB	010H
	DB	07H
	DW	03H
	DB	00H
	DB	08H
	DW	053H
	DB	00H
	DB	08H
	DW	013H
	DB	015H
	DB	08H
	DW	0c3H
	DB	013H
	DB	07H
	DW	023H
	DB	00H
	DB	08H
	DW	073H
	DB	00H
	DB	08H
	DW	033H
	DB	00H
	DB	09H
	DW	0c7H
	DB	011H
	DB	07H
	DW	0bH
	DB	00H
	DB	08H
	DW	063H
	DB	00H
	DB	08H
	DW	023H
	DB	00H
	DB	09H
	DW	0a7H
	DB	00H
	DB	08H
	DW	03H
	DB	00H
	DB	08H
	DW	083H
	DB	00H
	DB	08H
	DW	043H
	DB	00H
	DB	09H
	DW	0e7H
	DB	010H
	DB	07H
	DW	07H
	DB	00H
	DB	08H
	DW	05bH
	DB	00H
	DB	08H
	DW	01bH
	DB	00H
	DB	09H
	DW	097H
	DB	014H
	DB	07H
	DW	043H
	DB	00H
	DB	08H
	DW	07bH
	DB	00H
	DB	08H
	DW	03bH
	DB	00H
	DB	09H
	DW	0d7H
	DB	012H
	DB	07H
	DW	013H
	DB	00H
	DB	08H
	DW	06bH
	DB	00H
	DB	08H
	DW	02bH
	DB	00H
	DB	09H
	DW	0b7H
	DB	00H
	DB	08H
	DW	0bH
	DB	00H
	DB	08H
	DW	08bH
	DB	00H
	DB	08H
	DW	04bH
	DB	00H
	DB	09H
	DW	0f7H
	DB	010H
	DB	07H
	DW	05H
	DB	00H
	DB	08H
	DW	057H
	DB	00H
	DB	08H
	DW	017H
	DB	040H
	DB	08H
	DW	00H
	DB	013H
	DB	07H
	DW	033H
	DB	00H
	DB	08H
	DW	077H
	DB	00H
	DB	08H
	DW	037H
	DB	00H
	DB	09H
	DW	0cfH
	DB	011H
	DB	07H
	DW	0fH
	DB	00H
	DB	08H
	DW	067H
	DB	00H
	DB	08H
	DW	027H
	DB	00H
	DB	09H
	DW	0afH
	DB	00H
	DB	08H
	DW	07H
	DB	00H
	DB	08H
	DW	087H
	DB	00H
	DB	08H
	DW	047H
	DB	00H
	DB	09H
	DW	0efH
	DB	010H
	DB	07H
	DW	09H
	DB	00H
	DB	08H
	DW	05fH
	DB	00H
	DB	08H
	DW	01fH
	DB	00H
	DB	09H
	DW	09fH
	DB	014H
	DB	07H
	DW	063H
	DB	00H
	DB	08H
	DW	07fH
	DB	00H
	DB	08H
	DW	03fH
	DB	00H
	DB	09H
	DW	0dfH
	DB	012H
	DB	07H
	DW	01bH
	DB	00H
	DB	08H
	DW	06fH
	DB	00H
	DB	08H
	DW	02fH
	DB	00H
	DB	09H
	DW	0bfH
	DB	00H
	DB	08H
	DW	0fH
	DB	00H
	DB	08H
	DW	08fH
	DB	00H
	DB	08H
	DW	04fH
	DB	00H
	DB	09H
	DW	0ffH
?distfix@?1??fixedtables@@9@9 DB 010H			; `fixedtables'::`2'::distfix
	DB	05H
	DW	01H
	DB	017H
	DB	05H
	DW	0101H
	DB	013H
	DB	05H
	DW	011H
	DB	01bH
	DB	05H
	DW	01001H
	DB	011H
	DB	05H
	DW	05H
	DB	019H
	DB	05H
	DW	0401H
	DB	015H
	DB	05H
	DW	041H
	DB	01dH
	DB	05H
	DW	04001H
	DB	010H
	DB	05H
	DW	03H
	DB	018H
	DB	05H
	DW	0201H
	DB	014H
	DB	05H
	DW	021H
	DB	01cH
	DB	05H
	DW	02001H
	DB	012H
	DB	05H
	DW	09H
	DB	01aH
	DB	05H
	DW	0801H
	DB	016H
	DB	05H
	DW	081H
	DB	040H
	DB	05H
	DW	00H
	DB	010H
	DB	05H
	DW	02H
	DB	017H
	DB	05H
	DW	0181H
	DB	013H
	DB	05H
	DW	019H
	DB	01bH
	DB	05H
	DW	01801H
	DB	011H
	DB	05H
	DW	07H
	DB	019H
	DB	05H
	DW	0601H
	DB	015H
	DB	05H
	DW	061H
	DB	01dH
	DB	05H
	DW	06001H
	DB	010H
	DB	05H
	DW	04H
	DB	018H
	DB	05H
	DW	0301H
	DB	014H
	DB	05H
	DW	031H
	DB	01cH
	DB	05H
	DW	03001H
	DB	012H
	DB	05H
	DW	0dH
	DB	01aH
	DB	05H
	DW	0c01H
	DB	016H
	DB	05H
	DW	0c1H
	DB	040H
	DB	05H
	DW	00H
?order@?1??inflateBack@@9@9 DW 010H			; `inflateBack'::`2'::order
	DW	011H
	DW	012H
	DW	00H
	DW	08H
	DW	07H
	DW	09H
	DW	06H
	DW	0aH
	DW	05H
	DW	0bH
	DW	04H
	DW	0cH
	DW	03H
	DW	0dH
	DW	02H
	DW	0eH
	DW	01H
	DW	0fH
CONST	ENDS
_DATA	SEGMENT
$SG3827	DB	'1.2.5', 00H
	ORG $+2
$SG3916	DB	'invalid block type', 00H
	ORG $+1
$SG3943	DB	'invalid stored block lengths', 00H
	ORG $+3
$SG3998	DB	'too many length or distance symbols', 00H
$SG4030	DB	'invalid code lengths set', 00H
	ORG $+3
$SG4094	DB	'invalid bit length repeat', 00H
	ORG $+2
$SG4156	DB	'invalid bit length repeat', 00H
	ORG $+2
$SG4164	DB	'invalid code -- missing end-of-block', 00H
	ORG $+3
$SG4168	DB	'invalid literal/lengths set', 00H
$SG4172	DB	'invalid distances set', 00H
	ORG $+2
$SG4232	DB	'invalid literal/length code', 00H
$SG4297	DB	'invalid distance code', 00H
	ORG $+2
$SG4324	DB	'invalid distance too far back', 00H
_DATA	ENDS
PUBLIC	_inflateBackInit_
EXTRN	_zcfree:PROC
EXTRN	_zcalloc:PROC
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_strm$ = 8						; size = 4
_windowBits$ = 12					; size = 4
_window$ = 16						; size = 4
_version$ = 20						; size = 4
_stream_size$ = 24					; size = 4
_inflateBackInit_ PROC
; File c:\programovani\wow editor\test\src\zlib\infback.c
; Line 34
	push	ebp
	mov	ebp, esp
; Line 38
	mov	eax, DWORD PTR _version$[ebp]
	push	ebx
	xor	ebx, ebx
	cmp	eax, ebx
	je	$LN6@inflateBac
	mov	al, BYTE PTR [eax]
	cmp	al, BYTE PTR $SG3827
	jne	$LN6@inflateBac
	cmp	DWORD PTR _stream_size$[ebp], 56	; 00000038H
	jne	$LN6@inflateBac
; Line 41
	push	esi
	mov	esi, DWORD PTR _strm$[ebp]
	push	edi
	cmp	esi, ebx
	je	SHORT $LN4@inflateBac
	cmp	DWORD PTR _window$[ebp], ebx
	je	SHORT $LN4@inflateBac
	mov	edi, DWORD PTR _windowBits$[ebp]
	lea	ecx, DWORD PTR [edi-8]
	cmp	ecx, 7
	ja	SHORT $LN4@inflateBac
; Line 43
	mov	DWORD PTR [esi+24], ebx
; Line 44
	cmp	DWORD PTR [esi+32], ebx
	jne	SHORT $LN3@inflateBac
; Line 45
	mov	DWORD PTR [esi+32], OFFSET _zcalloc
; Line 46
	mov	DWORD PTR [esi+40], ebx
$LN3@inflateBac:
; Line 48
	cmp	DWORD PTR [esi+36], ebx
	jne	SHORT $LN2@inflateBac
	mov	DWORD PTR [esi+36], OFFSET _zcfree
$LN2@inflateBac:
; Line 50
	mov	edx, DWORD PTR [esi+40]
	mov	eax, DWORD PTR [esi+32]
	push	7116					; 00001bccH
	push	1
	push	edx
	call	eax
	add	esp, 12					; 0000000cH
; Line 51
	cmp	eax, ebx
	jne	SHORT $LN1@inflateBac
	pop	edi
	pop	esi
	mov	eax, -4					; fffffffcH
	pop	ebx
; Line 61
	pop	ebp
	ret	0
$LN1@inflateBac:
; Line 53
	mov	DWORD PTR [esi+28], eax
; Line 56
	mov	ecx, edi
	mov	edx, 1
	shl	edx, cl
; Line 57
	mov	ecx, DWORD PTR _window$[ebp]
	mov	DWORD PTR [eax+36], edi
	pop	edi
; Line 58
	mov	DWORD PTR [eax+48], ebx
; Line 59
	mov	DWORD PTR [eax+44], ebx
	pop	esi
	mov	DWORD PTR [eax+20], 32768		; 00008000H
	mov	DWORD PTR [eax+40], edx
	mov	DWORD PTR [eax+52], ecx
; Line 60
	xor	eax, eax
	pop	ebx
; Line 61
	pop	ebp
	ret	0
$LN4@inflateBac:
	pop	edi
	pop	esi
; Line 42
	mov	eax, -2					; fffffffeH
	pop	ebx
; Line 61
	pop	ebp
	ret	0
$LN6@inflateBac:
; Line 39
	mov	eax, -6					; fffffffaH
	pop	ebx
; Line 61
	pop	ebp
	ret	0
_inflateBackInit_ ENDP
; Function compile flags: /Ogtp
_fixedtables PROC
; _state$ = eax
; Line 110
	mov	DWORD PTR [eax+76], OFFSET ?lenfix@?1??fixedtables@@9@9
; Line 111
	mov	DWORD PTR [eax+84], 9
; Line 112
	mov	DWORD PTR [eax+80], OFFSET ?distfix@?1??fixedtables@@9@9
; Line 113
	mov	DWORD PTR [eax+88], 5
; Line 114
	ret	0
_fixedtables ENDP
_TEXT	ENDS
PUBLIC	_inflateBack
EXTRN	_inflate_fast:PROC
EXTRN	_inflate_table:PROC
EXTRN	_memcpy:PROC
; Function compile flags: /Ogtp
_TEXT	SEGMENT
tv1915 = -28						; size = 4
tv1534 = -28						; size = 4
tv1445 = -28						; size = 4
tv1443 = -28						; size = 4
tv1441 = -28						; size = 4
tv1439 = -28						; size = 4
tv1436 = -28						; size = 4
tv1420 = -28						; size = 4
tv1309 = -28						; size = 4
tv1303 = -28						; size = 4
_from$ = -28						; size = 4
tv1421 = -24						; size = 4
_len$ = -24						; size = 4
_here$ = -24						; size = 4
_copy$ = -24						; size = 4
tv1438 = -20						; size = 4
_last$ = -20						; size = 4
_put$ = -16						; size = 4
_left$ = -12						; size = 4
_next$ = -8						; size = 4
_hold$ = -4						; size = 4
_strm$ = 8						; size = 4
_in$ = 12						; size = 4
_in_desc$ = 16						; size = 4
_out$ = 20						; size = 4
_out_desc$ = 24						; size = 4
_inflateBack PROC
; Line 247
	push	ebp
	mov	ebp, esp
; Line 264
	mov	eax, DWORD PTR _strm$[ebp]
	sub	esp, 28					; 0000001cH
	xor	edx, edx
	push	edi
	cmp	eax, edx
	je	$LN346@inflateBac@2
	mov	edi, DWORD PTR [eax+28]
	cmp	edi, edx
	je	$LN346@inflateBac@2
; Line 269
	mov	DWORD PTR [eax+24], edx
; Line 270
	mov	DWORD PTR [edi], 11			; 0000000bH
; Line 271
	mov	DWORD PTR [edi+4], edx
; Line 272
	mov	DWORD PTR [edi+44], edx
; Line 273
	mov	ecx, DWORD PTR [eax]
	push	ebx
	push	esi
	mov	DWORD PTR _next$[ebp], ecx
; Line 274
	cmp	ecx, edx
	je	SHORT $LN350@inflateBac@2
	mov	ebx, DWORD PTR [eax+4]
	jmp	SHORT $LN351@inflateBac@2
$LN350@inflateBac@2:
	xor	ebx, ebx
$LN351@inflateBac@2:
; Line 277
	mov	ecx, DWORD PTR [edi+52]
	mov	DWORD PTR _put$[ebp], ecx
; Line 278
	mov	ecx, DWORD PTR [edi+40]
	mov	DWORD PTR _left$[ebp], ecx
; Line 282
	mov	ecx, DWORD PTR [edi]
	sub	ecx, 11					; 0000000bH
	xor	esi, esi
	mov	DWORD PTR _hold$[ebp], edx
	cmp	ecx, 18					; 00000012H
	jbe	SHORT $LN345@inflateBac@2
$LN472@inflateBac@2:
; Line 612
	mov	esi, -2					; fffffffeH
$inf_leave$3899:
; Line 618
	mov	eax, DWORD PTR _strm$[ebp]
	mov	edx, DWORD PTR _next$[ebp]
; Line 619
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax], edx
; Line 620
	mov	eax, esi
	pop	esi
	pop	ebx
	pop	edi
; Line 621
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	12
$LL436@inflateBac@2:
; Line 282
	mov	edx, DWORD PTR _hold$[ebp]
	mov	eax, DWORD PTR _strm$[ebp]
$LN345@inflateBac@2:
	movzx	ecx, BYTE PTR $LN430@inflateBac@2[ecx]
	jmp	DWORD PTR $LN476@inflateBac@2[ecx*4]
$LN341@inflateBac@2:
; Line 285
	cmp	DWORD PTR [edi+4], 0
	je	SHORT $LN336@inflateBac@2
; Line 286
	mov	ecx, esi
	and	ecx, 7
	shr	edx, cl
	sub	esi, ecx
; Line 287
	mov	DWORD PTR [edi], 28			; 0000001cH
	mov	DWORD PTR _hold$[ebp], edx
; Line 288
	jmp	$LN402@inflateBac@2
$LN336@inflateBac@2:
; Line 290
	cmp	esi, 3
	jae	SHORT $LN335@inflateBac@2
$LL333@inflateBac@2:
	test	ebx, ebx
	jne	SHORT $LN327@inflateBac@2
	mov	eax, DWORD PTR _in_desc$[ebp]
	lea	edx, DWORD PTR _next$[ebp]
	push	edx
	push	eax
	call	DWORD PTR _in$[ebp]
	mov	ebx, eax
	add	esp, 8
	test	ebx, ebx
	je	$LN377@inflateBac@2
$LN327@inflateBac@2:
	mov	ecx, DWORD PTR _next$[ebp]
	movzx	edx, BYTE PTR [ecx]
	inc	DWORD PTR _next$[ebp]
	mov	ecx, esi
	shl	edx, cl
	add	esi, 8
	dec	ebx
	add	DWORD PTR _hold$[ebp], edx
	cmp	esi, 3
	jb	SHORT $LL333@inflateBac@2
	mov	edx, DWORD PTR _hold$[ebp]
	mov	eax, DWORD PTR _strm$[ebp]
$LN335@inflateBac@2:
; Line 291
	mov	ecx, edx
	and	ecx, 1
; Line 292
	shr	edx, 1
	mov	DWORD PTR [edi+4], ecx
; Line 293
	mov	ecx, edx
	and	ecx, 3
	cmp	ecx, 3
	ja	SHORT $LN314@inflateBac@2
	jmp	DWORD PTR $LN477@inflateBac@2[ecx*4]
$LN318@inflateBac@2:
; Line 314
	shr	edx, 2
	mov	DWORD PTR [edi], 13			; 0000000dH
	mov	DWORD PTR _hold$[ebp], edx
	sub	esi, 3
; Line 315
	jmp	$LN402@inflateBac@2
$LN317@inflateBac@2:
; Line 300
	mov	eax, edi
	call	_fixedtables
; Line 314
	shr	edx, 2
	mov	DWORD PTR [edi], 20			; 00000014H
	mov	DWORD PTR _hold$[ebp], edx
	sub	esi, 3
; Line 315
	jmp	$LN402@inflateBac@2
$LN316@inflateBac@2:
; Line 314
	shr	edx, 2
	mov	DWORD PTR [edi], 16			; 00000010H
	mov	DWORD PTR _hold$[ebp], edx
	sub	esi, 3
; Line 315
	jmp	$LN402@inflateBac@2
$LN315@inflateBac@2:
; Line 311
	mov	DWORD PTR [eax+24], OFFSET $SG3916
; Line 312
	mov	DWORD PTR [edi], 29			; 0000001dH
$LN314@inflateBac@2:
; Line 314
	shr	edx, 2
	mov	DWORD PTR _hold$[ebp], edx
	sub	esi, 3
; Line 315
	jmp	$LN402@inflateBac@2
$LN310@inflateBac@2:
; Line 319
	mov	ecx, esi
	and	ecx, 7
	shr	edx, cl
	sub	esi, ecx
	mov	DWORD PTR tv1309[ebp], ecx
	mov	DWORD PTR _hold$[ebp], edx
; Line 320
	cmp	esi, 32					; 00000020H
	jae	SHORT $LN306@inflateBac@2
	npad	2
$LL304@inflateBac@2:
	test	ebx, ebx
	jne	SHORT $LN298@inflateBac@2
	mov	eax, DWORD PTR _in_desc$[ebp]
	lea	edx, DWORD PTR _next$[ebp]
	push	edx
	push	eax
	call	DWORD PTR _in$[ebp]
	mov	ebx, eax
	add	esp, 8
	test	ebx, ebx
	je	$LN377@inflateBac@2
$LN298@inflateBac@2:
	mov	eax, DWORD PTR _next$[ebp]
	movzx	edx, BYTE PTR [eax]
	mov	ecx, esi
	shl	edx, cl
	inc	eax
	add	esi, 8
	dec	ebx
	add	DWORD PTR _hold$[ebp], edx
	mov	DWORD PTR _next$[ebp], eax
	cmp	esi, 32					; 00000020H
	jb	SHORT $LL304@inflateBac@2
	mov	edx, DWORD PTR _hold$[ebp]
	mov	eax, DWORD PTR _strm$[ebp]
$LN306@inflateBac@2:
; Line 321
	mov	ecx, edx
	not	edx
	and	ecx, 65535				; 0000ffffH
	shr	edx, 16					; 00000010H
	cmp	ecx, edx
	je	SHORT $LN294@inflateBac@2
; Line 322
	mov	DWORD PTR [eax+24], OFFSET $SG3943
; Line 323
	mov	DWORD PTR [edi], 29			; 0000001dH
; Line 324
	jmp	$LN402@inflateBac@2
$LN294@inflateBac@2:
; Line 329
	xor	esi, esi
	mov	DWORD PTR [edi+64], ecx
	mov	DWORD PTR _hold$[ebp], esi
; Line 332
	cmp	ecx, esi
	je	$LN289@inflateBac@2
	npad	1
$LL290@inflateBac@2:
; Line 333
	mov	eax, DWORD PTR [edi+64]
	mov	DWORD PTR _copy$[ebp], eax
; Line 334
	test	ebx, ebx
	jne	SHORT $LN287@inflateBac@2
	mov	edx, DWORD PTR _in_desc$[ebp]
	lea	ecx, DWORD PTR _next$[ebp]
	push	ecx
	push	edx
	call	DWORD PTR _in$[ebp]
	mov	ebx, eax
	add	esp, 8
	test	ebx, ebx
	je	$LN379@inflateBac@2
$LN287@inflateBac@2:
; Line 335
	cmp	DWORD PTR _left$[ebp], esi
	jne	SHORT $LN282@inflateBac@2
	mov	eax, DWORD PTR [edi+40]
	mov	ecx, DWORD PTR [edi+52]
	push	eax
	mov	DWORD PTR _left$[ebp], eax
	mov	DWORD PTR [edi+44], eax
	mov	eax, DWORD PTR _out_desc$[ebp]
	push	ecx
	push	eax
	mov	DWORD PTR _put$[ebp], ecx
	call	DWORD PTR _out$[ebp]
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN380@inflateBac@2
$LN282@inflateBac@2:
; Line 336
	mov	eax, DWORD PTR _copy$[ebp]
	cmp	eax, ebx
	jbe	SHORT $LN278@inflateBac@2
	mov	eax, ebx
	mov	DWORD PTR _copy$[ebp], ebx
$LN278@inflateBac@2:
; Line 337
	mov	ecx, DWORD PTR _left$[ebp]
	cmp	eax, ecx
	jbe	SHORT $LN277@inflateBac@2
	mov	DWORD PTR _copy$[ebp], ecx
$LN277@inflateBac@2:
; Line 338
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR _next$[ebp]
	mov	eax, DWORD PTR _put$[ebp]
	push	ecx
	push	edx
	push	eax
	call	_memcpy
; Line 339
	mov	eax, DWORD PTR _copy$[ebp]
; Line 340
	add	DWORD PTR _next$[ebp], eax
; Line 341
	sub	DWORD PTR _left$[ebp], eax
; Line 342
	add	DWORD PTR _put$[ebp], eax
; Line 343
	sub	DWORD PTR [edi+64], eax
	add	esp, 12					; 0000000cH
	sub	ebx, eax
	cmp	DWORD PTR [edi+64], esi
	jne	$LL290@inflateBac@2
$LN289@inflateBac@2:
; Line 346
	mov	DWORD PTR [edi], 11			; 0000000bH
; Line 347
	jmp	$LN402@inflateBac@2
$LN275@inflateBac@2:
; Line 351
	cmp	esi, 14					; 0000000eH
	jae	SHORT $LN274@inflateBac@2
	npad	2
$LL272@inflateBac@2:
	test	ebx, ebx
	jne	SHORT $LN266@inflateBac@2
	mov	edx, DWORD PTR _in_desc$[ebp]
	lea	ecx, DWORD PTR _next$[ebp]
	push	ecx
	push	edx
	call	DWORD PTR _in$[ebp]
	mov	ebx, eax
	add	esp, 8
	test	ebx, ebx
	je	$LN377@inflateBac@2
$LN266@inflateBac@2:
	mov	eax, DWORD PTR _next$[ebp]
	movzx	edx, BYTE PTR [eax]
	inc	DWORD PTR _next$[ebp]
	mov	ecx, esi
	shl	edx, cl
	add	esi, 8
	dec	ebx
	add	DWORD PTR _hold$[ebp], edx
	cmp	esi, 14					; 0000000eH
	jb	SHORT $LL272@inflateBac@2
	mov	edx, DWORD PTR _hold$[ebp]
	mov	eax, DWORD PTR _strm$[ebp]
$LN274@inflateBac@2:
; Line 352
	mov	ecx, edx
	and	ecx, 31					; 0000001fH
	add	ecx, 257				; 00000101H
	mov	DWORD PTR [edi+96], ecx
; Line 353
	shr	edx, 5
; Line 354
	mov	ecx, edx
	and	ecx, 31					; 0000001fH
	inc	ecx
; Line 355
	shr	edx, 5
	mov	DWORD PTR [edi+100], ecx
; Line 356
	mov	ecx, edx
	and	ecx, 15					; 0000000fH
	add	ecx, 4
; Line 357
	shr	edx, 4
	sub	esi, 14					; 0000000eH
; Line 359
	cmp	DWORD PTR [edi+96], 286			; 0000011eH
	mov	DWORD PTR [edi+92], ecx
	mov	DWORD PTR _hold$[ebp], edx
	ja	$LN252@inflateBac@2
	cmp	DWORD PTR [edi+100], 30			; 0000001eH
	ja	$LN252@inflateBac@2
; Line 368
	mov	DWORD PTR [edi+104], 0
; Line 369
	test	ecx, ecx
	jbe	SHORT $LN469@inflateBac@2
	npad	2
$LL251@inflateBac@2:
; Line 370
	cmp	esi, 3
	jae	SHORT $LN248@inflateBac@2
$LL246@inflateBac@2:
	test	ebx, ebx
	jne	SHORT $LN240@inflateBac@2
	mov	eax, DWORD PTR _in_desc$[ebp]
	lea	edx, DWORD PTR _next$[ebp]
	push	edx
	push	eax
	call	DWORD PTR _in$[ebp]
	mov	ebx, eax
	add	esp, 8
	test	ebx, ebx
	je	$LN377@inflateBac@2
$LN240@inflateBac@2:
	mov	eax, DWORD PTR _next$[ebp]
	movzx	edx, BYTE PTR [eax]
	mov	ecx, esi
	shl	edx, cl
	inc	eax
	add	esi, 8
	dec	ebx
	add	DWORD PTR _hold$[ebp], edx
	mov	DWORD PTR _next$[ebp], eax
	cmp	esi, 3
	jb	SHORT $LL246@inflateBac@2
	mov	edx, DWORD PTR _hold$[ebp]
$LN248@inflateBac@2:
; Line 371
	mov	ecx, DWORD PTR [edi+104]
	movzx	ecx, WORD PTR ?order@?1??inflateBack@@9@9[ecx*2]
	mov	eax, edx
	and	eax, 7
	mov	WORD PTR [edi+ecx*2+112], ax
	mov	eax, 1
	add	DWORD PTR [edi+104], eax
	mov	ecx, DWORD PTR [edi+104]
; Line 372
	shr	edx, 3
	sub	esi, 3
	mov	DWORD PTR _hold$[ebp], edx
	cmp	ecx, DWORD PTR [edi+92]
	jb	SHORT $LL251@inflateBac@2
; Line 369
	jmp	SHORT $LN359@inflateBac@2
$LN469@inflateBac@2:
	mov	eax, 1
$LN359@inflateBac@2:
; Line 374
	cmp	DWORD PTR [edi+104], 19			; 00000013H
	jae	SHORT $LN232@inflateBac@2
	npad	7
$LL233@inflateBac@2:
; Line 375
	mov	edx, DWORD PTR [edi+104]
	movzx	ecx, WORD PTR ?order@?1??inflateBack@@9@9[edx*2]
	xor	edx, edx
	mov	WORD PTR [edi+ecx*2+112], dx
	add	DWORD PTR [edi+104], eax
	cmp	DWORD PTR [edi+104], 19			; 00000013H
	jb	SHORT $LL233@inflateBac@2
$LN232@inflateBac@2:
; Line 376
	lea	eax, DWORD PTR [edi+1328]
	lea	ecx, DWORD PTR [edi+108]
	mov	DWORD PTR [ecx], eax
; Line 377
	mov	DWORD PTR [edi+76], eax
; Line 380
	lea	edx, DWORD PTR [edi+752]
	push	edx
	lea	eax, DWORD PTR [edi+84]
	push	eax
	push	ecx
	mov	DWORD PTR [eax], 7
	push	19					; 00000013H
	lea	eax, DWORD PTR [edi+112]
	push	eax
	push	0
	call	_inflate_table
	add	esp, 24					; 00000018H
; Line 381
	test	eax, eax
	je	SHORT $LN231@inflateBac@2
; Line 382
	mov	eax, DWORD PTR _strm$[ebp]
	mov	DWORD PTR [eax+24], OFFSET $SG4030
; Line 383
	mov	DWORD PTR [edi], 29			; 0000001dH
; Line 384
	jmp	$LN402@inflateBac@2
$LN231@inflateBac@2:
; Line 390
	mov	ecx, DWORD PTR [edi+100]
	add	ecx, DWORD PTR [edi+96]
	mov	DWORD PTR [edi+104], 0
	je	$LN433@inflateBac@2
	npad	9
$LL230@inflateBac@2:
; Line 392
	mov	ecx, DWORD PTR [edi+84]
	mov	eax, DWORD PTR [edi+76]
	mov	edx, 1
	shl	edx, cl
	dec	edx
	and	edx, DWORD PTR _hold$[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
; Line 393
	mov	ecx, eax
	shr	ecx, 8
	movzx	edx, cl
	mov	DWORD PTR _here$[ebp], eax
	cmp	edx, esi
	jbe	SHORT $LN383@inflateBac@2
$LL228@inflateBac@2:
; Line 394
	test	ebx, ebx
	jne	SHORT $LN221@inflateBac@2
	mov	ecx, DWORD PTR _in_desc$[ebp]
	lea	eax, DWORD PTR _next$[ebp]
	push	eax
	push	ecx
	call	DWORD PTR _in$[ebp]
	mov	ebx, eax
	add	esp, 8
	test	ebx, ebx
	je	$LN377@inflateBac@2
$LN221@inflateBac@2:
	mov	eax, DWORD PTR _next$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, ecx
	inc	eax
	mov	DWORD PTR _next$[ebp], eax
	mov	ecx, esi
	shl	edx, cl
	mov	ecx, DWORD PTR [edi+84]
	mov	eax, 1
	shl	eax, cl
	mov	ecx, DWORD PTR [edi+76]
	mov	DWORD PTR tv1443[ebp], edx
	mov	edx, DWORD PTR _hold$[ebp]
	add	edx, DWORD PTR tv1443[ebp]
	dec	eax
	and	eax, edx
	mov	eax, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _here$[ebp], eax
	shr	eax, 8
	mov	DWORD PTR _hold$[ebp], edx
	movzx	edx, al
	add	esi, 8
	dec	ebx
	cmp	edx, esi
	ja	SHORT $LL228@inflateBac@2
; Line 393
	mov	eax, DWORD PTR _here$[ebp]
$LN383@inflateBac@2:
; Line 396
	mov	ecx, eax
	shr	ecx, 16					; 00000010H
	cmp	ecx, 16					; 00000010H
	jae	SHORT $LN217@inflateBac@2
; Line 397
	mov	edx, eax
	shr	edx, 8
	movzx	ecx, dl
	cmp	esi, ecx
	jae	SHORT $LN215@inflateBac@2
$LL213@inflateBac@2:
	test	ebx, ebx
	jne	SHORT $LN207@inflateBac@2
	mov	eax, DWORD PTR _in_desc$[ebp]
	lea	edx, DWORD PTR _next$[ebp]
	push	edx
	push	eax
	call	DWORD PTR _in$[ebp]
	mov	ebx, eax
	add	esp, 8
	test	ebx, ebx
	je	$LN377@inflateBac@2
$LN207@inflateBac@2:
	mov	eax, DWORD PTR _next$[ebp]
	movzx	edx, BYTE PTR [eax]
	mov	ecx, esi
	inc	eax
	shl	edx, cl
	mov	DWORD PTR _next$[ebp], eax
	movzx	eax, BYTE PTR _here$[ebp+1]
	add	DWORD PTR _hold$[ebp], edx
	add	esi, 8
	dec	ebx
	cmp	esi, eax
	jb	SHORT $LL213@inflateBac@2
	mov	eax, DWORD PTR _here$[ebp]
$LN215@inflateBac@2:
; Line 399
	mov	dx, WORD PTR _here$[ebp+2]
	movzx	ecx, ah
	shr	DWORD PTR _hold$[ebp], cl
	sub	esi, ecx
	mov	ecx, DWORD PTR [edi+104]
	mov	WORD PTR [edi+ecx*2+112], dx
	inc	DWORD PTR [edi+104]
; Line 401
	jmp	$LN447@inflateBac@2
$LN217@inflateBac@2:
; Line 402
	mov	cx, WORD PTR _here$[ebp+2]
	cmp	cx, 16					; 00000010H
	jne	$LN199@inflateBac@2
; Line 403
	movzx	ecx, ah
	lea	eax, DWORD PTR [ecx+2]
	mov	DWORD PTR tv1438[ebp], ecx
	cmp	esi, eax
	jae	SHORT $LN197@inflateBac@2
	npad	5
$LL195@inflateBac@2:
	test	ebx, ebx
	jne	SHORT $LN189@inflateBac@2
	mov	ecx, DWORD PTR _in_desc$[ebp]
	lea	eax, DWORD PTR _next$[ebp]
	push	eax
	push	ecx
	call	DWORD PTR _in$[ebp]
	mov	ebx, eax
	add	esp, 8
	test	ebx, ebx
	je	$LN377@inflateBac@2
$LN189@inflateBac@2:
	mov	eax, DWORD PTR _next$[ebp]
	movzx	edx, BYTE PTR [eax]
	inc	eax
	mov	ecx, esi
	shl	edx, cl
	mov	DWORD PTR _next$[ebp], eax
	mov	eax, DWORD PTR tv1438[ebp]
	add	esi, 8
	add	DWORD PTR _hold$[ebp], edx
	add	eax, 2
	dec	ebx
	cmp	esi, eax
	jb	SHORT $LL195@inflateBac@2
	mov	ecx, DWORD PTR tv1438[ebp]
$LN197@inflateBac@2:
; Line 405
	mov	eax, DWORD PTR [edi+104]
	shr	DWORD PTR _hold$[ebp], cl
	sub	esi, ecx
	test	eax, eax
	je	$LN389@inflateBac@2
; Line 410
	movzx	eax, WORD PTR [edi+eax*2+110]
; Line 411
	mov	ecx, DWORD PTR _hold$[ebp]
	mov	DWORD PTR _len$[ebp], eax
	mov	eax, ecx
	and	eax, 3
; Line 412
	shr	ecx, 2
	add	eax, 3
	mov	DWORD PTR _hold$[ebp], ecx
	sub	esi, 2
; Line 414
	jmp	$LN138@inflateBac@2
$LN199@inflateBac@2:
	cmp	cx, 17					; 00000011H
; Line 415
	movzx	ecx, ah
	mov	DWORD PTR tv1438[ebp], ecx
	jne	SHORT $LN156@inflateBac@2
	lea	eax, DWORD PTR [ecx+3]
	cmp	esi, eax
	jae	SHORT $LN175@inflateBac@2
$LL173@inflateBac@2:
	test	ebx, ebx
	jne	SHORT $LN167@inflateBac@2
	mov	edx, DWORD PTR _in_desc$[ebp]
	lea	ecx, DWORD PTR _next$[ebp]
	push	ecx
	push	edx
	call	DWORD PTR _in$[ebp]
	mov	ebx, eax
	add	esp, 8
	test	ebx, ebx
	je	$LN377@inflateBac@2
$LN167@inflateBac@2:
	mov	eax, DWORD PTR _next$[ebp]
	movzx	edx, BYTE PTR [eax]
	inc	eax
	mov	ecx, esi
	shl	edx, cl
	mov	DWORD PTR _next$[ebp], eax
	mov	eax, DWORD PTR tv1438[ebp]
	add	esi, 8
	add	DWORD PTR _hold$[ebp], edx
	add	eax, 3
	dec	ebx
	cmp	esi, eax
	jb	SHORT $LL173@inflateBac@2
	mov	ecx, DWORD PTR tv1438[ebp]
$LN175@inflateBac@2:
; Line 416
	mov	edx, DWORD PTR _hold$[ebp]
	shr	edx, cl
; Line 418
	mov	eax, edx
	and	eax, 7
	add	eax, 3
; Line 419
	shr	edx, 3
	mov	DWORD PTR _hold$[ebp], edx
	mov	edx, -3					; fffffffdH
; Line 421
	jmp	SHORT $LN475@inflateBac@2
$LN156@inflateBac@2:
; Line 422
	lea	eax, DWORD PTR [ecx+7]
	cmp	esi, eax
	jae	SHORT $LN155@inflateBac@2
$LL153@inflateBac@2:
	test	ebx, ebx
	jne	SHORT $LN147@inflateBac@2
	mov	ecx, DWORD PTR _in_desc$[ebp]
	lea	eax, DWORD PTR _next$[ebp]
	push	eax
	push	ecx
	call	DWORD PTR _in$[ebp]
	mov	ebx, eax
	add	esp, 8
	test	ebx, ebx
	je	$LN377@inflateBac@2
$LN147@inflateBac@2:
	mov	eax, DWORD PTR _next$[ebp]
	movzx	edx, BYTE PTR [eax]
	inc	eax
	mov	ecx, esi
	shl	edx, cl
	mov	DWORD PTR _next$[ebp], eax
	mov	eax, DWORD PTR tv1438[ebp]
	add	esi, 8
	add	DWORD PTR _hold$[ebp], edx
	add	eax, 7
	dec	ebx
	cmp	esi, eax
	jb	SHORT $LL153@inflateBac@2
	mov	ecx, DWORD PTR tv1438[ebp]
$LN155@inflateBac@2:
; Line 423
	mov	edx, DWORD PTR _hold$[ebp]
	shr	edx, cl
; Line 425
	mov	eax, edx
	and	eax, 127				; 0000007fH
	add	eax, 11					; 0000000bH
; Line 426
	shr	edx, 7
	mov	DWORD PTR _hold$[ebp], edx
	mov	edx, -7					; fffffff9H
$LN475@inflateBac@2:
	sub	edx, ecx
	add	esi, edx
	mov	DWORD PTR _len$[ebp], 0
$LN138@inflateBac@2:
; Line 428
	mov	ecx, DWORD PTR [edi+100]
	mov	edx, DWORD PTR [edi+104]
	add	ecx, DWORD PTR [edi+96]
	add	edx, eax
	cmp	edx, ecx
	ja	SHORT $LN390@inflateBac@2
; Line 433
	test	eax, eax
	je	SHORT $LN447@inflateBac@2
	mov	ecx, DWORD PTR _len$[ebp]
	npad	8
$LL136@inflateBac@2:
; Line 434
	mov	edx, DWORD PTR [edi+104]
	mov	WORD PTR [edi+edx*2+112], cx
	inc	DWORD PTR [edi+104]
	dec	eax
	jne	SHORT $LL136@inflateBac@2
$LN447@inflateBac@2:
; Line 390
	mov	eax, DWORD PTR [edi+100]
	add	eax, DWORD PTR [edi+96]
	cmp	DWORD PTR [edi+104], eax
	jb	$LL230@inflateBac@2
$LN433@inflateBac@2:
; Line 439
	cmp	DWORD PTR [edi], 29			; 0000001dH
	je	$LN402@inflateBac@2
; Line 442
	cmp	WORD PTR [edi+624], 0
	jne	SHORT $LN133@inflateBac@2
; Line 443
	mov	eax, DWORD PTR _strm$[ebp]
	mov	DWORD PTR [eax+24], OFFSET $SG4164
; Line 444
	mov	DWORD PTR [edi], 29			; 0000001dH
; Line 445
	jmp	$LN402@inflateBac@2
$LN389@inflateBac@2:
; Line 406
	mov	ecx, DWORD PTR _strm$[ebp]
	mov	DWORD PTR [ecx+24], OFFSET $SG4094
; Line 407
	mov	DWORD PTR [edi], 29			; 0000001dH
; Line 408
	jmp	$LN402@inflateBac@2
$LN390@inflateBac@2:
; Line 429
	mov	edx, DWORD PTR _strm$[ebp]
	mov	DWORD PTR [edx+24], OFFSET $SG4156
; Line 430
	mov	DWORD PTR [edi], 29			; 0000001dH
; Line 439
	jmp	$LN402@inflateBac@2
$LN133@inflateBac@2:
; Line 451
	lea	eax, DWORD PTR [edi+1328]
	lea	ecx, DWORD PTR [edi+108]
	mov	DWORD PTR [ecx], eax
; Line 452
	mov	DWORD PTR [edi+76], eax
; Line 455
	lea	edx, DWORD PTR [edi+752]
	push	edx
	lea	eax, DWORD PTR [edi+84]
	push	eax
	push	ecx
	mov	ecx, DWORD PTR [edi+96]
	mov	DWORD PTR [eax], 9
	push	ecx
	lea	eax, DWORD PTR [edi+112]
	push	eax
	push	1
	call	_inflate_table
	add	esp, 24					; 00000018H
; Line 456
	test	eax, eax
	je	SHORT $LN132@inflateBac@2
; Line 457
	mov	edx, DWORD PTR _strm$[ebp]
	mov	DWORD PTR [edx+24], OFFSET $SG4168
; Line 458
	mov	DWORD PTR [edi], 29			; 0000001dH
; Line 459
	jmp	$LN402@inflateBac@2
$LN132@inflateBac@2:
; Line 461
	mov	eax, DWORD PTR [edi+108]
	lea	ecx, DWORD PTR [edi+108]
	mov	DWORD PTR [edi+80], eax
; Line 464
	lea	edx, DWORD PTR [edi+752]
	push	edx
	mov	edx, DWORD PTR [edi+96]
	lea	eax, DWORD PTR [edi+88]
	push	eax
	push	ecx
	mov	ecx, DWORD PTR [edi+100]
	mov	DWORD PTR [eax], 6
	push	ecx
	lea	eax, DWORD PTR [edi+edx*2+112]
	push	eax
	push	2
	call	_inflate_table
	add	esp, 24					; 00000018H
; Line 465
	test	eax, eax
	je	SHORT $LN131@inflateBac@2
; Line 466
	mov	ecx, DWORD PTR _strm$[ebp]
	mov	DWORD PTR [ecx+24], OFFSET $SG4172
; Line 467
	mov	DWORD PTR [edi], 29			; 0000001dH
; Line 468
	jmp	$LN402@inflateBac@2
$LN131@inflateBac@2:
; Line 471
	mov	edx, DWORD PTR _hold$[ebp]
	mov	eax, DWORD PTR _strm$[ebp]
	mov	DWORD PTR [edi], 20			; 00000014H
$LN470@inflateBac@2:
; Line 475
	cmp	ebx, 6
	jb	SHORT $LN471@inflateBac@2
	cmp	DWORD PTR _left$[ebp], 258		; 00000102H
	jb	SHORT $LN471@inflateBac@2
; Line 476
	mov	ecx, DWORD PTR _put$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR _left$[ebp]
	mov	DWORD PTR [eax+16], ecx
	mov	ecx, DWORD PTR _next$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], ebx
; Line 477
	mov	eax, DWORD PTR [edi+40]
	mov	DWORD PTR [edi+56], edx
	mov	DWORD PTR [edi+60], esi
	cmp	DWORD PTR [edi+44], eax
	jae	SHORT $LN125@inflateBac@2
; Line 478
	mov	edx, eax
	sub	edx, DWORD PTR _left$[ebp]
	mov	DWORD PTR [edi+44], edx
$LN125@inflateBac@2:
; Line 479
	mov	esi, DWORD PTR _strm$[ebp]
	push	eax
	push	esi
	call	_inflate_fast
; Line 480
	mov	eax, DWORD PTR [esi+12]
	mov	edx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [esi+16]
	mov	ebx, DWORD PTR [esi+4]
	mov	DWORD PTR _next$[ebp], edx
	mov	esi, DWORD PTR [edi+60]
	mov	DWORD PTR _put$[ebp], eax
	mov	eax, DWORD PTR [edi+56]
	add	esp, 8
	mov	DWORD PTR _left$[ebp], ecx
	mov	DWORD PTR _hold$[ebp], eax
; Line 481
	jmp	$LN402@inflateBac@2
$LN252@inflateBac@2:
; Line 360
	mov	DWORD PTR [eax+24], OFFSET $SG3998
; Line 361
	mov	DWORD PTR [edi], 29			; 0000001dH
; Line 362
	jmp	$LN402@inflateBac@2
$LN471@inflateBac@2:
; Line 486
	mov	ecx, DWORD PTR [edi+84]
	mov	eax, 1
	shl	eax, cl
	mov	ecx, DWORD PTR [edi+76]
	dec	eax
	and	eax, edx
	mov	eax, DWORD PTR [ecx+eax*4]
; Line 487
	mov	ecx, eax
	shr	ecx, 8
	movzx	ecx, cl
	cmp	ecx, esi
	jbe	SHORT $LN391@inflateBac@2
$LL121@inflateBac@2:
; Line 488
	test	ebx, ebx
	jne	SHORT $LN114@inflateBac@2
	mov	eax, DWORD PTR _in_desc$[ebp]
	lea	edx, DWORD PTR _next$[ebp]
	push	edx
	push	eax
	call	DWORD PTR _in$[ebp]
	mov	ebx, eax
	add	esp, 8
	test	ebx, ebx
	je	$LN377@inflateBac@2
$LN114@inflateBac@2:
	mov	eax, DWORD PTR _next$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, ecx
	inc	eax
	mov	DWORD PTR _next$[ebp], eax
	mov	ecx, esi
	shl	edx, cl
	mov	ecx, DWORD PTR [edi+84]
	mov	eax, 1
	shl	eax, cl
	mov	ecx, DWORD PTR [edi+76]
	mov	DWORD PTR tv1439[ebp], edx
	mov	edx, DWORD PTR _hold$[ebp]
	add	edx, DWORD PTR tv1439[ebp]
	dec	eax
	and	eax, edx
	mov	eax, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _hold$[ebp], edx
	mov	edx, eax
	shr	edx, 8
	movzx	ecx, dl
	add	esi, 8
	dec	ebx
	cmp	ecx, esi
	ja	SHORT $LL121@inflateBac@2
; Line 487
	mov	edx, DWORD PTR _hold$[ebp]
$LN391@inflateBac@2:
; Line 490
	test	al, al
	je	$LN96@inflateBac@2
	test	al, 240					; 000000f0H
	jne	$LN96@inflateBac@2
; Line 494
	mov	ecx, eax
	shr	ecx, 8
	movzx	edx, cl
	mov	DWORD PTR tv1420[ebp], ecx
	mov	DWORD PTR tv1421[ebp], edx
	movzx	ecx, al
	add	ecx, edx
	mov	edx, 1
	shl	edx, cl
	mov	ecx, DWORD PTR tv1421[ebp]
	mov	DWORD PTR _last$[ebp], eax
	shr	eax, 16					; 00000010H
	dec	edx
	and	edx, DWORD PTR _hold$[ebp]
	shr	edx, cl
	add	edx, eax
	mov	eax, DWORD PTR [edi+76]
	mov	eax, DWORD PTR [eax+edx*4]
; Line 495
	mov	ecx, eax
	shr	ecx, 8
	movzx	edx, cl
	movzx	ecx, BYTE PTR tv1420[ebp]
	add	edx, ecx
	cmp	edx, esi
	jbe	SHORT $LN456@inflateBac@2
	npad	7
$LL109@inflateBac@2:
; Line 496
	test	ebx, ebx
	jne	SHORT $LN102@inflateBac@2
	mov	eax, DWORD PTR _in_desc$[ebp]
	lea	edx, DWORD PTR _next$[ebp]
	push	edx
	push	eax
	call	DWORD PTR _in$[ebp]
	mov	ebx, eax
	add	esp, 8
	test	ebx, ebx
	je	$LN377@inflateBac@2
$LN102@inflateBac@2:
	mov	eax, DWORD PTR _next$[ebp]
	movzx	edx, BYTE PTR [eax]
	inc	eax
	mov	DWORD PTR _next$[ebp], eax
	mov	eax, DWORD PTR _last$[ebp]
	mov	ecx, esi
	shl	edx, cl
	movzx	ecx, al
	add	DWORD PTR _hold$[ebp], edx
	movzx	edx, ah
	add	ecx, edx
	mov	eax, 1
	shl	eax, cl
	mov	ecx, edx
	add	esi, 8
	dec	ebx
	dec	eax
	and	eax, DWORD PTR _hold$[ebp]
	shr	eax, cl
	movzx	ecx, WORD PTR _last$[ebp+2]
	add	eax, ecx
	mov	ecx, DWORD PTR [edi+76]
	mov	eax, DWORD PTR [ecx+eax*4]
	mov	ecx, eax
	shr	ecx, 8
	movzx	ecx, cl
	add	ecx, edx
	cmp	ecx, esi
	ja	SHORT $LL109@inflateBac@2
$LN456@inflateBac@2:
; Line 498
	movzx	ecx, BYTE PTR _last$[ebp+1]
	mov	edx, DWORD PTR _hold$[ebp]
	shr	edx, cl
	sub	esi, ecx
$LN96@inflateBac@2:
; Line 500
	mov	ecx, eax
	shr	ecx, 8
	movzx	ecx, cl
	shr	edx, cl
	sub	esi, ecx
	mov	DWORD PTR tv1421[ebp], ecx
; Line 501
	mov	ecx, eax
	shr	ecx, 16					; 00000010H
	mov	DWORD PTR _hold$[ebp], edx
	mov	DWORD PTR [edi+64], ecx
; Line 504
	test	al, al
	jne	SHORT $LN92@inflateBac@2
; Line 508
	cmp	DWORD PTR _left$[ebp], 0
	jne	SHORT $LN90@inflateBac@2
	mov	eax, DWORD PTR [edi+40]
	mov	ecx, DWORD PTR [edi+52]
	mov	edx, DWORD PTR _out_desc$[ebp]
	push	eax
	push	ecx
	push	edx
	mov	DWORD PTR _put$[ebp], ecx
	mov	DWORD PTR _left$[ebp], eax
	mov	DWORD PTR [edi+44], eax
	call	DWORD PTR _out$[ebp]
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN380@inflateBac@2
$LN90@inflateBac@2:
; Line 509
	mov	eax, DWORD PTR _put$[ebp]
	mov	cl, BYTE PTR [edi+64]
	mov	BYTE PTR [eax], cl
	inc	eax
; Line 510
	dec	DWORD PTR _left$[ebp]
	mov	DWORD PTR _put$[ebp], eax
; Line 511
	mov	DWORD PTR [edi], 20			; 00000014H
; Line 512
	jmp	$LN402@inflateBac@2
$LN92@inflateBac@2:
; Line 516
	test	al, 32					; 00000020H
	je	SHORT $LN86@inflateBac@2
; Line 518
	mov	DWORD PTR [edi], 11			; 0000000bH
; Line 519
	jmp	$LN402@inflateBac@2
$LN86@inflateBac@2:
; Line 523
	test	al, 64					; 00000040H
	je	SHORT $LN85@inflateBac@2
; Line 524
	mov	edx, DWORD PTR _strm$[ebp]
	mov	DWORD PTR [edx+24], OFFSET $SG4232
; Line 525
	mov	DWORD PTR [edi], 29			; 0000001dH
; Line 526
	jmp	$LN402@inflateBac@2
$LN85@inflateBac@2:
; Line 530
	movzx	eax, al
	and	eax, 15					; 0000000fH
	mov	DWORD PTR [edi+72], eax
; Line 531
	je	SHORT $LN68@inflateBac@2
; Line 532
	cmp	esi, eax
	jae	SHORT $LN82@inflateBac@2
$LL80@inflateBac@2:
	test	ebx, ebx
	jne	SHORT $LN74@inflateBac@2
	mov	ecx, DWORD PTR _in_desc$[ebp]
	lea	eax, DWORD PTR _next$[ebp]
	push	eax
	push	ecx
	call	DWORD PTR _in$[ebp]
	mov	ebx, eax
	add	esp, 8
	test	ebx, ebx
	je	$LN377@inflateBac@2
$LN74@inflateBac@2:
	mov	eax, DWORD PTR _next$[ebp]
	movzx	edx, BYTE PTR [eax]
	mov	ecx, esi
	shl	edx, cl
	inc	eax
	add	esi, 8
	dec	ebx
	add	DWORD PTR _hold$[ebp], edx
	mov	DWORD PTR _next$[ebp], eax
	cmp	esi, DWORD PTR [edi+72]
	jb	SHORT $LL80@inflateBac@2
	mov	edx, DWORD PTR _hold$[ebp]
$LN82@inflateBac@2:
; Line 533
	mov	ecx, DWORD PTR [edi+72]
	mov	eax, 1
	shl	eax, cl
	dec	eax
	and	eax, edx
	add	DWORD PTR [edi+64], eax
; Line 534
	shr	edx, cl
	sub	esi, ecx
	mov	DWORD PTR _hold$[ebp], edx
$LN68@inflateBac@2:
; Line 540
	mov	ecx, DWORD PTR [edi+88]
	mov	eax, 1
	shl	eax, cl
	mov	ecx, DWORD PTR [edi+80]
	dec	eax
	and	eax, edx
	mov	eax, DWORD PTR [ecx+eax*4]
; Line 541
	mov	ecx, eax
	shr	ecx, 8
	movzx	ecx, cl
	cmp	ecx, esi
	jbe	SHORT $LN396@inflateBac@2
$LL67@inflateBac@2:
; Line 542
	test	ebx, ebx
	jne	SHORT $LN60@inflateBac@2
	mov	eax, DWORD PTR _in_desc$[ebp]
	lea	edx, DWORD PTR _next$[ebp]
	push	edx
	push	eax
	call	DWORD PTR _in$[ebp]
	mov	ebx, eax
	add	esp, 8
	test	ebx, ebx
	je	$LN377@inflateBac@2
$LN60@inflateBac@2:
	mov	edx, DWORD PTR _next$[ebp]
	movzx	eax, BYTE PTR [edx]
	inc	edx
	mov	DWORD PTR _next$[ebp], edx
	mov	ecx, esi
	shl	eax, cl
	mov	ecx, DWORD PTR [edi+88]
	mov	edx, 1
	shl	edx, cl
	mov	DWORD PTR tv1436[ebp], eax
	mov	eax, DWORD PTR _hold$[ebp]
	add	eax, DWORD PTR tv1436[ebp]
	dec	edx
	and	edx, eax
	mov	DWORD PTR _hold$[ebp], eax
	mov	eax, DWORD PTR [edi+80]
	mov	eax, DWORD PTR [eax+edx*4]
	mov	ecx, eax
	shr	ecx, 8
	movzx	edx, cl
	add	esi, 8
	dec	ebx
	cmp	edx, esi
	ja	SHORT $LL67@inflateBac@2
; Line 541
	mov	edx, DWORD PTR _hold$[ebp]
$LN396@inflateBac@2:
; Line 544
	test	al, 240					; 000000f0H
	jne	$LN42@inflateBac@2
; Line 548
	mov	ecx, eax
	shr	ecx, 8
	movzx	edx, cl
	mov	DWORD PTR tv1420[ebp], ecx
	mov	DWORD PTR tv1421[ebp], edx
	movzx	ecx, al
	add	ecx, edx
	mov	edx, 1
	shl	edx, cl
	mov	ecx, DWORD PTR tv1421[ebp]
	mov	DWORD PTR _last$[ebp], eax
	shr	eax, 16					; 00000010H
	dec	edx
	and	edx, DWORD PTR _hold$[ebp]
	shr	edx, cl
	add	edx, eax
	mov	eax, DWORD PTR [edi+80]
	mov	eax, DWORD PTR [eax+edx*4]
; Line 549
	mov	ecx, eax
	shr	ecx, 8
	movzx	edx, cl
	movzx	ecx, BYTE PTR tv1420[ebp]
	add	edx, ecx
	cmp	edx, esi
	jbe	SHORT $LN461@inflateBac@2
	npad	2
$LL55@inflateBac@2:
; Line 550
	test	ebx, ebx
	jne	SHORT $LN48@inflateBac@2
	mov	eax, DWORD PTR _in_desc$[ebp]
	lea	edx, DWORD PTR _next$[ebp]
	push	edx
	push	eax
	call	DWORD PTR _in$[ebp]
	mov	ebx, eax
	add	esp, 8
	test	ebx, ebx
	je	$LN377@inflateBac@2
$LN48@inflateBac@2:
	mov	eax, DWORD PTR _next$[ebp]
	movzx	edx, BYTE PTR [eax]
	inc	eax
	mov	DWORD PTR _next$[ebp], eax
	mov	eax, DWORD PTR _last$[ebp]
	mov	ecx, esi
	shl	edx, cl
	movzx	ecx, al
	add	DWORD PTR _hold$[ebp], edx
	movzx	edx, ah
	add	ecx, edx
	mov	eax, 1
	shl	eax, cl
	mov	ecx, edx
	add	esi, 8
	dec	ebx
	dec	eax
	and	eax, DWORD PTR _hold$[ebp]
	shr	eax, cl
	movzx	ecx, WORD PTR _last$[ebp+2]
	add	eax, ecx
	mov	ecx, DWORD PTR [edi+80]
	mov	eax, DWORD PTR [ecx+eax*4]
	mov	ecx, eax
	shr	ecx, 8
	movzx	ecx, cl
	add	ecx, edx
	cmp	ecx, esi
	ja	SHORT $LL55@inflateBac@2
$LN461@inflateBac@2:
; Line 552
	movzx	ecx, BYTE PTR _last$[ebp+1]
	mov	edx, DWORD PTR _hold$[ebp]
	shr	edx, cl
	sub	esi, ecx
$LN42@inflateBac@2:
; Line 554
	mov	ecx, eax
	shr	ecx, 8
	movzx	ecx, cl
	shr	edx, cl
	sub	esi, ecx
	mov	DWORD PTR tv1421[ebp], ecx
	mov	DWORD PTR _hold$[ebp], edx
; Line 555
	test	al, 64					; 00000040H
	je	SHORT $LN38@inflateBac@2
; Line 556
	mov	edx, DWORD PTR _strm$[ebp]
	mov	DWORD PTR [edx+24], OFFSET $SG4297
; Line 557
	mov	DWORD PTR [edi], 29			; 0000001dH
; Line 558
	jmp	$LN402@inflateBac@2
$LN38@inflateBac@2:
; Line 560
	mov	ecx, eax
; Line 563
	movzx	eax, al
	shr	ecx, 16					; 00000010H
	and	eax, 15					; 0000000fH
	mov	DWORD PTR [edi+68], ecx
	mov	DWORD PTR [edi+72], eax
; Line 564
	je	SHORT $LN463@inflateBac@2
; Line 565
	cmp	esi, eax
	jae	SHORT $LN35@inflateBac@2
$LL33@inflateBac@2:
	test	ebx, ebx
	jne	SHORT $LN27@inflateBac@2
	mov	eax, DWORD PTR _in_desc$[ebp]
	lea	edx, DWORD PTR _next$[ebp]
	push	edx
	push	eax
	call	DWORD PTR _in$[ebp]
	mov	ebx, eax
	add	esp, 8
	test	ebx, ebx
	je	$LN377@inflateBac@2
$LN27@inflateBac@2:
	mov	eax, DWORD PTR _next$[ebp]
	movzx	edx, BYTE PTR [eax]
	mov	ecx, esi
	shl	edx, cl
	inc	eax
	add	esi, 8
	dec	ebx
	add	DWORD PTR _hold$[ebp], edx
	mov	DWORD PTR _next$[ebp], eax
	cmp	esi, DWORD PTR [edi+72]
	jb	SHORT $LL33@inflateBac@2
	mov	edx, DWORD PTR _hold$[ebp]
$LN35@inflateBac@2:
; Line 566
	mov	ecx, DWORD PTR [edi+72]
	mov	eax, 1
	shl	eax, cl
	dec	eax
	and	eax, edx
	add	DWORD PTR [edi+68], eax
; Line 567
	shr	edx, cl
	sub	esi, ecx
	mov	DWORD PTR _hold$[ebp], edx
$LN463@inflateBac@2:
; Line 570
	mov	eax, DWORD PTR [edi+40]
	cmp	DWORD PTR [edi+44], eax
	mov	ecx, DWORD PTR _put$[ebp]
	sbb	edx, edx
	and	edx, DWORD PTR _left$[ebp]
	sub	eax, edx
	cmp	DWORD PTR [edi+68], eax
	jbe	SHORT $LL19@inflateBac@2
; Line 571
	mov	eax, DWORD PTR _strm$[ebp]
	mov	DWORD PTR [eax+24], OFFSET $SG4324
; Line 572
	mov	DWORD PTR [edi], 29			; 0000001dH
; Line 573
	jmp	$LN402@inflateBac@2
	npad	4
$LL19@inflateBac@2:
; Line 579
	cmp	DWORD PTR _left$[ebp], 0
	jne	SHORT $LN15@inflateBac@2
	mov	eax, DWORD PTR [edi+40]
	mov	ecx, DWORD PTR [edi+52]
	push	eax
	push	ecx
	mov	DWORD PTR _put$[ebp], ecx
	mov	ecx, DWORD PTR _out_desc$[ebp]
	push	ecx
	mov	DWORD PTR _left$[ebp], eax
	mov	DWORD PTR [edi+44], eax
	call	DWORD PTR _out$[ebp]
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN380@inflateBac@2
	mov	ecx, DWORD PTR _put$[ebp]
$LN15@inflateBac@2:
; Line 580
	mov	edx, DWORD PTR [edi+40]
	sub	edx, DWORD PTR [edi+68]
; Line 581
	cmp	edx, DWORD PTR _left$[ebp]
	jae	SHORT $LN11@inflateBac@2
; Line 582
	lea	eax, DWORD PTR [edx+ecx]
	mov	DWORD PTR _from$[ebp], eax
; Line 583
	mov	eax, DWORD PTR _left$[ebp]
	sub	eax, edx
; Line 585
	jmp	SHORT $LN10@inflateBac@2
$LN11@inflateBac@2:
; Line 586
	mov	eax, ecx
	sub	eax, DWORD PTR [edi+68]
	mov	DWORD PTR _from$[ebp], eax
; Line 587
	mov	eax, DWORD PTR _left$[ebp]
$LN10@inflateBac@2:
; Line 589
	mov	edx, DWORD PTR [edi+64]
	cmp	eax, edx
	jbe	SHORT $LN9@inflateBac@2
	mov	eax, edx
$LN9@inflateBac@2:
; Line 591
	sub	DWORD PTR _left$[ebp], eax
	sub	edx, eax
	mov	DWORD PTR [edi+64], edx
; Line 594
	mov	edx, DWORD PTR _from$[ebp]
	sub	edx, ecx
	mov	DWORD PTR tv1915[ebp], edx
	jmp	SHORT $LN8@inflateBac@2
$LL466@inflateBac@2:
	mov	edx, DWORD PTR tv1915[ebp]
$LN8@inflateBac@2:
; Line 593
	mov	dl, BYTE PTR [edx+ecx]
	mov	BYTE PTR [ecx], dl
	inc	ecx
; Line 594
	dec	eax
	jne	SHORT $LL466@inflateBac@2
; Line 595
	mov	DWORD PTR _put$[ebp], ecx
	cmp	DWORD PTR [edi+64], eax
	jne	SHORT $LL19@inflateBac@2
$LN402@inflateBac@2:
; Line 282
	mov	ecx, DWORD PTR [edi]
	sub	ecx, 11					; 0000000bH
	cmp	ecx, 18					; 00000012H
	jbe	$LL436@inflateBac@2
; Line 508
	jmp	$LN472@inflateBac@2
$LN377@inflateBac@2:
; Line 290
	mov	DWORD PTR _next$[ebp], 0
$LN380@inflateBac@2:
; Line 618
	mov	eax, DWORD PTR _strm$[ebp]
	mov	edx, DWORD PTR _next$[ebp]
	mov	esi, -5					; fffffffbH
; Line 619
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax], edx
; Line 620
	mov	eax, esi
	pop	esi
	pop	ebx
	pop	edi
; Line 621
	mov	esp, ebp
	pop	ebp
	ret	0
$LN379@inflateBac@2:
; Line 618
	mov	eax, DWORD PTR _strm$[ebp]
	mov	DWORD PTR _next$[ebp], esi
	mov	edx, DWORD PTR _next$[ebp]
	mov	esi, -5					; fffffffbH
; Line 619
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax], edx
; Line 620
	mov	eax, esi
	pop	esi
	pop	ebx
	pop	edi
; Line 621
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@inflateBac@2:
; Line 601
	mov	eax, DWORD PTR [edi+40]
	mov	esi, 1
	cmp	DWORD PTR _left$[ebp], eax
	jae	$inf_leave$3899
; Line 602
	sub	eax, DWORD PTR _left$[ebp]
	mov	ecx, DWORD PTR _out_desc$[ebp]
	push	eax
	mov	eax, DWORD PTR [edi+52]
	push	eax
	push	ecx
	call	DWORD PTR _out$[ebp]
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$inf_leave$3899
; Line 618
	mov	eax, DWORD PTR _strm$[ebp]
	mov	edx, DWORD PTR _next$[ebp]
	mov	esi, -5					; fffffffbH
; Line 619
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax], edx
; Line 620
	mov	eax, esi
	pop	esi
	pop	ebx
	pop	edi
; Line 621
	mov	esp, ebp
	pop	ebp
	ret	0
$LN2@inflateBac@2:
; Line 618
	mov	eax, DWORD PTR _strm$[ebp]
	mov	edx, DWORD PTR _next$[ebp]
	mov	esi, -3					; fffffffdH
; Line 619
	mov	DWORD PTR [eax+4], ebx
	mov	DWORD PTR [eax], edx
; Line 620
	mov	eax, esi
	pop	esi
	pop	ebx
	pop	edi
; Line 621
	mov	esp, ebp
	pop	ebp
	ret	0
$LN346@inflateBac@2:
; Line 265
	mov	eax, -2					; fffffffeH
	pop	edi
; Line 621
	mov	esp, ebp
	pop	ebp
	ret	0
$LN476@inflateBac@2:
	DD	$LN341@inflateBac@2
	DD	$LN310@inflateBac@2
	DD	$LN275@inflateBac@2
	DD	$LN470@inflateBac@2
	DD	$LN5@inflateBac@2
	DD	$LN2@inflateBac@2
	DD	$LN472@inflateBac@2
$LN430@inflateBac@2:
	DB	0
	DB	6
	DB	1
	DB	6
	DB	6
	DB	2
	DB	6
	DB	6
	DB	6
	DB	3
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	4
	DB	5
	npad	1
$LN477@inflateBac@2:
	DD	$LN318@inflateBac@2
	DD	$LN317@inflateBac@2
	DD	$LN316@inflateBac@2
	DD	$LN315@inflateBac@2
_inflateBack ENDP
_TEXT	ENDS
PUBLIC	_inflateBackEnd
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_strm$ = 8						; size = 4
_inflateBackEnd PROC
; Line 625
	push	ebp
	mov	ebp, esp
	push	esi
; Line 626
	mov	esi, DWORD PTR _strm$[ebp]
	test	esi, esi
	je	SHORT $LN1@inflateBac@3
	mov	ecx, DWORD PTR [esi+28]
	test	ecx, ecx
	je	SHORT $LN1@inflateBac@3
	mov	eax, DWORD PTR [esi+36]
	test	eax, eax
	je	SHORT $LN1@inflateBac@3
; Line 628
	push	ecx
	mov	ecx, DWORD PTR [esi+40]
	push	ecx
	call	eax
	add	esp, 8
; Line 629
	mov	DWORD PTR [esi+28], 0
; Line 631
	xor	eax, eax
	pop	esi
; Line 632
	pop	ebp
	ret	0
$LN1@inflateBac@3:
; Line 627
	mov	eax, -2					; fffffffeH
	pop	esi
; Line 632
	pop	ebp
	ret	0
_inflateBackEnd ENDP
_TEXT	ENDS
END
