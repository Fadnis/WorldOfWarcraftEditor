; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\programovani\WoW Editor\Test\src\zlib\uncompr.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG1493	DB	'1.2.5', 00H
_DATA	ENDS
PUBLIC	_uncompress
EXTRN	_inflateEnd:PROC
EXTRN	_inflate:PROC
EXTRN	_inflateInit_:PROC
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_stream$ = -56						; size = 56
_dest$ = 8						; size = 4
_destLen$ = 12						; size = 4
_source$ = 16						; size = 4
_sourceLen$ = 20					; size = 4
_uncompress PROC
; File c:\programovani\wow editor\test\src\zlib\uncompr.c
; Line 29
	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
; Line 34
	mov	ecx, DWORD PTR _sourceLen$[ebp]
	mov	eax, DWORD PTR _source$[ebp]
; Line 38
	mov	edx, DWORD PTR _dest$[ebp]
	push	edi
; Line 39
	mov	edi, DWORD PTR _destLen$[ebp]
; Line 45
	push	56					; 00000038H
	mov	DWORD PTR _stream$[ebp+4], ecx
	mov	DWORD PTR _stream$[ebp], eax
	mov	eax, DWORD PTR [edi]
	lea	ecx, DWORD PTR _stream$[ebp]
	push	OFFSET $SG1493
	push	ecx
	mov	DWORD PTR _stream$[ebp+12], edx
	mov	DWORD PTR _stream$[ebp+16], eax
	mov	DWORD PTR _stream$[ebp+32], 0
	mov	DWORD PTR _stream$[ebp+36], 0
	call	_inflateInit_
	add	esp, 12					; 0000000cH
; Line 46
	test	eax, eax
	jne	SHORT $LN7@uncompress
; Line 48
	push	esi
	lea	edx, DWORD PTR _stream$[ebp]
	push	4
	push	edx
	call	_inflate
	mov	esi, eax
	add	esp, 8
; Line 49
	cmp	esi, 1
	je	SHORT $LN3@uncompress
; Line 50
	lea	eax, DWORD PTR _stream$[ebp]
	push	eax
	call	_inflateEnd
	add	esp, 4
; Line 51
	cmp	esi, 2
	je	SHORT $LN1@uncompress
	cmp	esi, -5					; fffffffbH
	jne	SHORT $LN2@uncompress
	cmp	DWORD PTR _stream$[ebp+4], 0
	je	SHORT $LN1@uncompress
$LN2@uncompress:
; Line 53
	mov	eax, esi
	pop	esi
	pop	edi
; Line 59
	mov	esp, ebp
	pop	ebp
	ret	0
$LN1@uncompress:
	pop	esi
; Line 52
	mov	eax, -3					; fffffffdH
	pop	edi
; Line 59
	mov	esp, ebp
	pop	ebp
	ret	0
$LN3@uncompress:
; Line 55
	mov	ecx, DWORD PTR _stream$[ebp+20]
; Line 57
	lea	edx, DWORD PTR _stream$[ebp]
	push	edx
	mov	DWORD PTR [edi], ecx
	call	_inflateEnd
	add	esp, 4
	pop	esi
$LN7@uncompress:
	pop	edi
; Line 59
	mov	esp, ebp
	pop	ebp
	ret	0
_uncompress ENDP
_TEXT	ENDS
END
